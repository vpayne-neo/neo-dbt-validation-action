require('./sourcemap-register.js');/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 3577:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const read_yaml_file_1 = __importDefault(__nccwpck_require__(2920));
const getYmlDetails = (filePath) => {
    return (0, read_yaml_file_1.default)(filePath).then((data) => {
        let tables;
        if (data.models != undefined) {
            // checks to see if yml file is using sources or models
            tables = data.models[data.models.length - 1];
            const ymlColumnNames = tables.columns // models
                .map((column) => column.name)
                .sort();
            return ymlColumnNames;
        }
        else {
            tables = data.sources[data.sources.length - 1].tables.map((table) => table);
            const ymlColumnNames = tables // sources
                .flatMap((table) => table.columns)
                .map((column) => column.name)
                .sort();
            return ymlColumnNames;
        }
    });
};
exports.default = getYmlDetails;


/***/ }),

/***/ 3109:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const core = __importStar(__nccwpck_require__(2186));
const { Parser } = __nccwpck_require__(2047);
const util_1 = __nccwpck_require__(1669);
const getYmlDetails_1 = __importDefault(__nccwpck_require__(3577));
const lodash_1 = __nccwpck_require__(250);
const fs = __importStar(__nccwpck_require__(5747));
const parseDbtasNativeSql_1 = __importDefault(__nccwpck_require__(6941));
const core_1 = __nccwpck_require__(2186);
function run() {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            const paths = (0, core_1.getInput)('files');
            core.debug(paths);
            const sqlFilePaths = paths.split(' ').filter(sql => sql.includes('.sql'));
            const ymlFilePaths = paths.split(' ').filter(yml => yml.includes('.yml'));
            const filePairs = sqlFilePaths.map(sqlFile => {
                const yml = ymlFilePaths.find(yml => yml.includes(sqlFile.replace('.sql', '')));
                return {
                    sqlAsString: fs.readFileSync(sqlFile, 'utf-8'),
                    ymlFilePath: yml !== null && yml !== void 0 ? yml : ''
                };
            });
            filePairs.map((pair) => __awaiter(this, void 0, void 0, function* () {
                var _a, _b;
                const parser = new Parser();
                const sqlToObject = parser.astify((0, parseDbtasNativeSql_1.default)(pair.sqlAsString));
                core.debug(sqlToObject);
                const columnNames = (_b = (_a = sqlToObject.columns) === null || _a === void 0 ? void 0 : _a.map((col) => { var _a; return `${(_a = col.as) !== null && _a !== void 0 ? _a : col.expr.column}`; }).sort()) !== null && _b !== void 0 ? _b : [];
                const ymlColumnNames = yield (0, getYmlDetails_1.default)(pair.ymlFilePath);
                core.debug(`${pair.sqlAsString} \n ${pair.ymlFilePath}`);
                const ymlColumnCount = ymlColumnNames.length;
                const sqlColumnCount = columnNames.length;
                core.debug(` Column names equal? : ${(0, util_1.isDeepStrictEqual)(ymlColumnNames, columnNames)}`);
                if ((0, util_1.isDeepStrictEqual)(ymlColumnNames, columnNames) == false) {
                    const difference = (0, lodash_1.differenceBy)(columnNames, ymlColumnNames).map(diff => ` ${diff}`);
                    const errorMsg = `Columns do not match =>> ${difference}`;
                    throw new Error(errorMsg);
                }
                core.debug(` Column count equal? : ${(0, util_1.isDeepStrictEqual)(ymlColumnCount, sqlColumnCount)}`);
                core.debug(pair.ymlFilePath);
            }));
        }
        catch (err) {
            console.error(err);
            process.exit();
        }
    });
}
run();


/***/ }),

/***/ 6941:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const parseDbtAsNativeSql = (dbtSQL) => {
    var _a, _b;
    // This funtion reads a string and removes dbt patterns from it
    let sql = dbtSQL;
    sql = sql.replace(/^.*{%-.*$/gm, ''); // --
    sql = sql.replace(/^.*{%.*$/gm, ''); //   |
    sql = sql.replace(/^.*{%+.*$/gm, ''); //  --- Remove jinja from sql
    sql = sql.replace(/^.*--+.*$/gm, ''); //--|
    const cteCount = (sql.match(/ as\s\(/g) || []).length; // gets the count of how many cte's are in the sql
    if (cteCount > 1 && cteCount !== 0) {
        for (let i = 0; i < cteCount; i++) {
            sql = sql.replace(/\sas\s/, ' as').replace(/\n/g, ' ');
            // remove space after as for each cte and places string on one line
            const matchedCte = (_a = sql.match(/as\(.*?[^\)]from/)) === null || _a === void 0 ? void 0 : _a.map(cte => cte)[0]; // assigns current cte to variable
            sql = sql.replace(matchedCte !== null && matchedCte !== void 0 ? matchedCte : '', '');
            if (i == cteCount - 1) {
                // on the last cte we assign out matched cte to the sql variable
                sql = matchedCte !== null && matchedCte !== void 0 ? matchedCte : '';
                sql = sql === null || sql === void 0 ? void 0 : sql.replace('as(', '');
                const columnJinja = sql === null || sql === void 0 ? void 0 : sql.match(/{{.*?[^]}}\sas/g);
                columnJinja === null || columnJinja === void 0 ? void 0 : columnJinja.map(jinja => (sql = sql === null || sql === void 0 ? void 0 : sql.replace(jinja, '')));
                sql = sql.concat(' '); //adds white space to end of string to make sure final "from " is matched
                sql = sql.replace('from ', '');
                return sql;
            }
        }
    }
    else {
        sql = sql.replace(/\sas\s/, ' as').replace(/\n/g, ' '); // remove space after as and formats string on one line
        const selectStatement = sql.match(/as\(.*?[^\)]from\s/); //matches everythin between as( - from
        const selectWithoutAs = (_b = selectStatement === null || selectStatement === void 0 ? void 0 : selectStatement.map(select => select)[0]) === null || _b === void 0 ? void 0 : _b.replace('as(', ''); // removes string from regex array and store in variable, then removes as(
        sql = selectWithoutAs !== null && selectWithoutAs !== void 0 ? selectWithoutAs : '';
        const columnJinja = sql === null || sql === void 0 ? void 0 : sql.match(/{{.*?[^]}}\sas/g); // finds all occurences of column jinja and removes it while leaving column name
        columnJinja === null || columnJinja === void 0 ? void 0 : columnJinja.map(jinja => (sql = sql === null || sql === void 0 ? void 0 : sql.replace(jinja, '')));
        sql = sql === null || sql === void 0 ? void 0 : sql.replace('from ', ''); //removes 'from' from the string
        return sql;
    }
    return "No CTE's found";
};
exports.default = parseDbtAsNativeSql;


/***/ }),

/***/ 7351:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issue = exports.issueCommand = void 0;
const os = __importStar(__nccwpck_require__(2087));
const utils_1 = __nccwpck_require__(5278);
/**
 * Commands
 *
 * Command Format:
 *   ::name key=value,key=value::message
 *
 * Examples:
 *   ::warning::This is the message
 *   ::set-env name=MY_VAR::some value
 */
function issueCommand(command, properties, message) {
    const cmd = new Command(command, properties, message);
    process.stdout.write(cmd.toString() + os.EOL);
}
exports.issueCommand = issueCommand;
function issue(name, message = '') {
    issueCommand(name, {}, message);
}
exports.issue = issue;
const CMD_STRING = '::';
class Command {
    constructor(command, properties, message) {
        if (!command) {
            command = 'missing.command';
        }
        this.command = command;
        this.properties = properties;
        this.message = message;
    }
    toString() {
        let cmdStr = CMD_STRING + this.command;
        if (this.properties && Object.keys(this.properties).length > 0) {
            cmdStr += ' ';
            let first = true;
            for (const key in this.properties) {
                if (this.properties.hasOwnProperty(key)) {
                    const val = this.properties[key];
                    if (val) {
                        if (first) {
                            first = false;
                        }
                        else {
                            cmdStr += ',';
                        }
                        cmdStr += `${key}=${escapeProperty(val)}`;
                    }
                }
            }
        }
        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;
        return cmdStr;
    }
}
function escapeData(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A');
}
function escapeProperty(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A')
        .replace(/:/g, '%3A')
        .replace(/,/g, '%2C');
}
//# sourceMappingURL=command.js.map

/***/ }),

/***/ 2186:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;
const command_1 = __nccwpck_require__(7351);
const file_command_1 = __nccwpck_require__(717);
const utils_1 = __nccwpck_require__(5278);
const os = __importStar(__nccwpck_require__(2087));
const path = __importStar(__nccwpck_require__(5622));
const oidc_utils_1 = __nccwpck_require__(8041);
/**
 * The code to exit an action
 */
var ExitCode;
(function (ExitCode) {
    /**
     * A code indicating that the action was successful
     */
    ExitCode[ExitCode["Success"] = 0] = "Success";
    /**
     * A code indicating that the action was a failure
     */
    ExitCode[ExitCode["Failure"] = 1] = "Failure";
})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));
//-----------------------------------------------------------------------
// Variables
//-----------------------------------------------------------------------
/**
 * Sets env variable for this action and future actions in the job
 * @param name the name of the variable to set
 * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function exportVariable(name, val) {
    const convertedVal = utils_1.toCommandValue(val);
    process.env[name] = convertedVal;
    const filePath = process.env['GITHUB_ENV'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('ENV', file_command_1.prepareKeyValueMessage(name, val));
    }
    command_1.issueCommand('set-env', { name }, convertedVal);
}
exports.exportVariable = exportVariable;
/**
 * Registers a secret which will get masked from logs
 * @param secret value of the secret
 */
function setSecret(secret) {
    command_1.issueCommand('add-mask', {}, secret);
}
exports.setSecret = setSecret;
/**
 * Prepends inputPath to the PATH (for this action and future actions)
 * @param inputPath
 */
function addPath(inputPath) {
    const filePath = process.env['GITHUB_PATH'] || '';
    if (filePath) {
        file_command_1.issueFileCommand('PATH', inputPath);
    }
    else {
        command_1.issueCommand('add-path', {}, inputPath);
    }
    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;
}
exports.addPath = addPath;
/**
 * Gets the value of an input.
 * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.
 * Returns an empty string if the value is not defined.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string
 */
function getInput(name, options) {
    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';
    if (options && options.required && !val) {
        throw new Error(`Input required and not supplied: ${name}`);
    }
    if (options && options.trimWhitespace === false) {
        return val;
    }
    return val.trim();
}
exports.getInput = getInput;
/**
 * Gets the values of an multiline input.  Each value is also trimmed.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string[]
 *
 */
function getMultilineInput(name, options) {
    const inputs = getInput(name, options)
        .split('\n')
        .filter(x => x !== '');
    if (options && options.trimWhitespace === false) {
        return inputs;
    }
    return inputs.map(input => input.trim());
}
exports.getMultilineInput = getMultilineInput;
/**
 * Gets the input value of the boolean type in the YAML 1.2 "core schema" specification.
 * Support boolean input list: `true | True | TRUE | false | False | FALSE` .
 * The return value is also in boolean type.
 * ref: https://yaml.org/spec/1.2/spec.html#id2804923
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   boolean
 */
function getBooleanInput(name, options) {
    const trueValue = ['true', 'True', 'TRUE'];
    const falseValue = ['false', 'False', 'FALSE'];
    const val = getInput(name, options);
    if (trueValue.includes(val))
        return true;
    if (falseValue.includes(val))
        return false;
    throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${name}\n` +
        `Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
}
exports.getBooleanInput = getBooleanInput;
/**
 * Sets the value of an output.
 *
 * @param     name     name of the output to set
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function setOutput(name, value) {
    const filePath = process.env['GITHUB_OUTPUT'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('OUTPUT', file_command_1.prepareKeyValueMessage(name, value));
    }
    process.stdout.write(os.EOL);
    command_1.issueCommand('set-output', { name }, utils_1.toCommandValue(value));
}
exports.setOutput = setOutput;
/**
 * Enables or disables the echoing of commands into stdout for the rest of the step.
 * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.
 *
 */
function setCommandEcho(enabled) {
    command_1.issue('echo', enabled ? 'on' : 'off');
}
exports.setCommandEcho = setCommandEcho;
//-----------------------------------------------------------------------
// Results
//-----------------------------------------------------------------------
/**
 * Sets the action status to failed.
 * When the action exits it will be with an exit code of 1
 * @param message add error issue message
 */
function setFailed(message) {
    process.exitCode = ExitCode.Failure;
    error(message);
}
exports.setFailed = setFailed;
//-----------------------------------------------------------------------
// Logging Commands
//-----------------------------------------------------------------------
/**
 * Gets whether Actions Step Debug is on or not
 */
function isDebug() {
    return process.env['RUNNER_DEBUG'] === '1';
}
exports.isDebug = isDebug;
/**
 * Writes debug message to user log
 * @param message debug message
 */
function debug(message) {
    command_1.issueCommand('debug', {}, message);
}
exports.debug = debug;
/**
 * Adds an error issue
 * @param message error issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function error(message, properties = {}) {
    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.error = error;
/**
 * Adds a warning issue
 * @param message warning issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function warning(message, properties = {}) {
    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.warning = warning;
/**
 * Adds a notice issue
 * @param message notice issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function notice(message, properties = {}) {
    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.notice = notice;
/**
 * Writes info to log with console.log.
 * @param message info message
 */
function info(message) {
    process.stdout.write(message + os.EOL);
}
exports.info = info;
/**
 * Begin an output group.
 *
 * Output until the next `groupEnd` will be foldable in this group
 *
 * @param name The name of the output group
 */
function startGroup(name) {
    command_1.issue('group', name);
}
exports.startGroup = startGroup;
/**
 * End an output group.
 */
function endGroup() {
    command_1.issue('endgroup');
}
exports.endGroup = endGroup;
/**
 * Wrap an asynchronous function call in a group.
 *
 * Returns the same type as the function itself.
 *
 * @param name The name of the group
 * @param fn The function to wrap in the group
 */
function group(name, fn) {
    return __awaiter(this, void 0, void 0, function* () {
        startGroup(name);
        let result;
        try {
            result = yield fn();
        }
        finally {
            endGroup();
        }
        return result;
    });
}
exports.group = group;
//-----------------------------------------------------------------------
// Wrapper action state
//-----------------------------------------------------------------------
/**
 * Saves state for current action, the state can only be retrieved by this action's post job execution.
 *
 * @param     name     name of the state to store
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function saveState(name, value) {
    const filePath = process.env['GITHUB_STATE'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('STATE', file_command_1.prepareKeyValueMessage(name, value));
    }
    command_1.issueCommand('save-state', { name }, utils_1.toCommandValue(value));
}
exports.saveState = saveState;
/**
 * Gets the value of an state set by this action's main execution.
 *
 * @param     name     name of the state to get
 * @returns   string
 */
function getState(name) {
    return process.env[`STATE_${name}`] || '';
}
exports.getState = getState;
function getIDToken(aud) {
    return __awaiter(this, void 0, void 0, function* () {
        return yield oidc_utils_1.OidcClient.getIDToken(aud);
    });
}
exports.getIDToken = getIDToken;
/**
 * Summary exports
 */
var summary_1 = __nccwpck_require__(1327);
Object.defineProperty(exports, "summary", ({ enumerable: true, get: function () { return summary_1.summary; } }));
/**
 * @deprecated use core.summary
 */
var summary_2 = __nccwpck_require__(1327);
Object.defineProperty(exports, "markdownSummary", ({ enumerable: true, get: function () { return summary_2.markdownSummary; } }));
/**
 * Path exports
 */
var path_utils_1 = __nccwpck_require__(2981);
Object.defineProperty(exports, "toPosixPath", ({ enumerable: true, get: function () { return path_utils_1.toPosixPath; } }));
Object.defineProperty(exports, "toWin32Path", ({ enumerable: true, get: function () { return path_utils_1.toWin32Path; } }));
Object.defineProperty(exports, "toPlatformPath", ({ enumerable: true, get: function () { return path_utils_1.toPlatformPath; } }));
//# sourceMappingURL=core.js.map

/***/ }),

/***/ 717:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// For internal use, subject to change.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.prepareKeyValueMessage = exports.issueFileCommand = void 0;
// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
const fs = __importStar(__nccwpck_require__(5747));
const os = __importStar(__nccwpck_require__(2087));
const uuid_1 = __nccwpck_require__(5840);
const utils_1 = __nccwpck_require__(5278);
function issueFileCommand(command, message) {
    const filePath = process.env[`GITHUB_${command}`];
    if (!filePath) {
        throw new Error(`Unable to find environment variable for file command ${command}`);
    }
    if (!fs.existsSync(filePath)) {
        throw new Error(`Missing file at path: ${filePath}`);
    }
    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {
        encoding: 'utf8'
    });
}
exports.issueFileCommand = issueFileCommand;
function prepareKeyValueMessage(key, value) {
    const delimiter = `ghadelimiter_${uuid_1.v4()}`;
    const convertedValue = utils_1.toCommandValue(value);
    // These should realistically never happen, but just in case someone finds a
    // way to exploit uuid generation let's not allow keys or values that contain
    // the delimiter.
    if (key.includes(delimiter)) {
        throw new Error(`Unexpected input: name should not contain the delimiter "${delimiter}"`);
    }
    if (convertedValue.includes(delimiter)) {
        throw new Error(`Unexpected input: value should not contain the delimiter "${delimiter}"`);
    }
    return `${key}<<${delimiter}${os.EOL}${convertedValue}${os.EOL}${delimiter}`;
}
exports.prepareKeyValueMessage = prepareKeyValueMessage;
//# sourceMappingURL=file-command.js.map

/***/ }),

/***/ 8041:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OidcClient = void 0;
const http_client_1 = __nccwpck_require__(6255);
const auth_1 = __nccwpck_require__(5526);
const core_1 = __nccwpck_require__(2186);
class OidcClient {
    static createHttpClient(allowRetry = true, maxRetry = 10) {
        const requestOptions = {
            allowRetries: allowRetry,
            maxRetries: maxRetry
        };
        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);
    }
    static getRequestToken() {
        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];
        if (!token) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');
        }
        return token;
    }
    static getIDTokenUrl() {
        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];
        if (!runtimeUrl) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');
        }
        return runtimeUrl;
    }
    static getCall(id_token_url) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const httpclient = OidcClient.createHttpClient();
            const res = yield httpclient
                .getJson(id_token_url)
                .catch(error => {
                throw new Error(`Failed to get ID Token. \n 
        Error Code : ${error.statusCode}\n 
        Error Message: ${error.result.message}`);
            });
            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;
            if (!id_token) {
                throw new Error('Response json body do not have ID Token field');
            }
            return id_token;
        });
    }
    static getIDToken(audience) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                // New ID Token is requested from action service
                let id_token_url = OidcClient.getIDTokenUrl();
                if (audience) {
                    const encodedAudience = encodeURIComponent(audience);
                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;
                }
                core_1.debug(`ID token url is ${id_token_url}`);
                const id_token = yield OidcClient.getCall(id_token_url);
                core_1.setSecret(id_token);
                return id_token;
            }
            catch (error) {
                throw new Error(`Error message: ${error.message}`);
            }
        });
    }
}
exports.OidcClient = OidcClient;
//# sourceMappingURL=oidc-utils.js.map

/***/ }),

/***/ 2981:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = void 0;
const path = __importStar(__nccwpck_require__(5622));
/**
 * toPosixPath converts the given path to the posix form. On Windows, \\ will be
 * replaced with /.
 *
 * @param pth. Path to transform.
 * @return string Posix path.
 */
function toPosixPath(pth) {
    return pth.replace(/[\\]/g, '/');
}
exports.toPosixPath = toPosixPath;
/**
 * toWin32Path converts the given path to the win32 form. On Linux, / will be
 * replaced with \\.
 *
 * @param pth. Path to transform.
 * @return string Win32 path.
 */
function toWin32Path(pth) {
    return pth.replace(/[/]/g, '\\');
}
exports.toWin32Path = toWin32Path;
/**
 * toPlatformPath converts the given path to a platform-specific path. It does
 * this by replacing instances of / and \ with the platform-specific path
 * separator.
 *
 * @param pth The path to platformize.
 * @return string The platform-specific path.
 */
function toPlatformPath(pth) {
    return pth.replace(/[/\\]/g, path.sep);
}
exports.toPlatformPath = toPlatformPath;
//# sourceMappingURL=path-utils.js.map

/***/ }),

/***/ 1327:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;
const os_1 = __nccwpck_require__(2087);
const fs_1 = __nccwpck_require__(5747);
const { access, appendFile, writeFile } = fs_1.promises;
exports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';
exports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';
class Summary {
    constructor() {
        this._buffer = '';
    }
    /**
     * Finds the summary file path from the environment, rejects if env var is not found or file does not exist
     * Also checks r/w permissions.
     *
     * @returns step summary file path
     */
    filePath() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this._filePath) {
                return this._filePath;
            }
            const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];
            if (!pathFromEnv) {
                throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);
            }
            try {
                yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);
            }
            catch (_a) {
                throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);
            }
            this._filePath = pathFromEnv;
            return this._filePath;
        });
    }
    /**
     * Wraps content in an HTML tag, adding any HTML attributes
     *
     * @param {string} tag HTML tag to wrap
     * @param {string | null} content content within the tag
     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add
     *
     * @returns {string} content wrapped in HTML element
     */
    wrap(tag, content, attrs = {}) {
        const htmlAttrs = Object.entries(attrs)
            .map(([key, value]) => ` ${key}="${value}"`)
            .join('');
        if (!content) {
            return `<${tag}${htmlAttrs}>`;
        }
        return `<${tag}${htmlAttrs}>${content}</${tag}>`;
    }
    /**
     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.
     *
     * @param {SummaryWriteOptions} [options] (optional) options for write operation
     *
     * @returns {Promise<Summary>} summary instance
     */
    write(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);
            const filePath = yield this.filePath();
            const writeFunc = overwrite ? writeFile : appendFile;
            yield writeFunc(filePath, this._buffer, { encoding: 'utf8' });
            return this.emptyBuffer();
        });
    }
    /**
     * Clears the summary buffer and wipes the summary file
     *
     * @returns {Summary} summary instance
     */
    clear() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.emptyBuffer().write({ overwrite: true });
        });
    }
    /**
     * Returns the current summary buffer as a string
     *
     * @returns {string} string of summary buffer
     */
    stringify() {
        return this._buffer;
    }
    /**
     * If the summary buffer is empty
     *
     * @returns {boolen} true if the buffer is empty
     */
    isEmptyBuffer() {
        return this._buffer.length === 0;
    }
    /**
     * Resets the summary buffer without writing to summary file
     *
     * @returns {Summary} summary instance
     */
    emptyBuffer() {
        this._buffer = '';
        return this;
    }
    /**
     * Adds raw text to the summary buffer
     *
     * @param {string} text content to add
     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)
     *
     * @returns {Summary} summary instance
     */
    addRaw(text, addEOL = false) {
        this._buffer += text;
        return addEOL ? this.addEOL() : this;
    }
    /**
     * Adds the operating system-specific end-of-line marker to the buffer
     *
     * @returns {Summary} summary instance
     */
    addEOL() {
        return this.addRaw(os_1.EOL);
    }
    /**
     * Adds an HTML codeblock to the summary buffer
     *
     * @param {string} code content to render within fenced code block
     * @param {string} lang (optional) language to syntax highlight code
     *
     * @returns {Summary} summary instance
     */
    addCodeBlock(code, lang) {
        const attrs = Object.assign({}, (lang && { lang }));
        const element = this.wrap('pre', this.wrap('code', code), attrs);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML list to the summary buffer
     *
     * @param {string[]} items list of items to render
     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)
     *
     * @returns {Summary} summary instance
     */
    addList(items, ordered = false) {
        const tag = ordered ? 'ol' : 'ul';
        const listItems = items.map(item => this.wrap('li', item)).join('');
        const element = this.wrap(tag, listItems);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML table to the summary buffer
     *
     * @param {SummaryTableCell[]} rows table rows
     *
     * @returns {Summary} summary instance
     */
    addTable(rows) {
        const tableBody = rows
            .map(row => {
            const cells = row
                .map(cell => {
                if (typeof cell === 'string') {
                    return this.wrap('td', cell);
                }
                const { header, data, colspan, rowspan } = cell;
                const tag = header ? 'th' : 'td';
                const attrs = Object.assign(Object.assign({}, (colspan && { colspan })), (rowspan && { rowspan }));
                return this.wrap(tag, data, attrs);
            })
                .join('');
            return this.wrap('tr', cells);
        })
            .join('');
        const element = this.wrap('table', tableBody);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds a collapsable HTML details element to the summary buffer
     *
     * @param {string} label text for the closed state
     * @param {string} content collapsable content
     *
     * @returns {Summary} summary instance
     */
    addDetails(label, content) {
        const element = this.wrap('details', this.wrap('summary', label) + content);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML image tag to the summary buffer
     *
     * @param {string} src path to the image you to embed
     * @param {string} alt text description of the image
     * @param {SummaryImageOptions} options (optional) addition image attributes
     *
     * @returns {Summary} summary instance
     */
    addImage(src, alt, options) {
        const { width, height } = options || {};
        const attrs = Object.assign(Object.assign({}, (width && { width })), (height && { height }));
        const element = this.wrap('img', null, Object.assign({ src, alt }, attrs));
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML section heading element
     *
     * @param {string} text heading text
     * @param {number | string} [level=1] (optional) the heading level, default: 1
     *
     * @returns {Summary} summary instance
     */
    addHeading(text, level) {
        const tag = `h${level}`;
        const allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag)
            ? tag
            : 'h1';
        const element = this.wrap(allowedTag, text);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML thematic break (<hr>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
    addSeparator() {
        const element = this.wrap('hr', null);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML line break (<br>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
    addBreak() {
        const element = this.wrap('br', null);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML blockquote to the summary buffer
     *
     * @param {string} text quote text
     * @param {string} cite (optional) citation url
     *
     * @returns {Summary} summary instance
     */
    addQuote(text, cite) {
        const attrs = Object.assign({}, (cite && { cite }));
        const element = this.wrap('blockquote', text, attrs);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML anchor tag to the summary buffer
     *
     * @param {string} text link text/content
     * @param {string} href hyperlink
     *
     * @returns {Summary} summary instance
     */
    addLink(text, href) {
        const element = this.wrap('a', text, { href });
        return this.addRaw(element).addEOL();
    }
}
const _summary = new Summary();
/**
 * @deprecated use `core.summary`
 */
exports.markdownSummary = _summary;
exports.summary = _summary;
//# sourceMappingURL=summary.js.map

/***/ }),

/***/ 5278:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toCommandProperties = exports.toCommandValue = void 0;
/**
 * Sanitizes an input into a string so it can be passed into issueCommand safely
 * @param input input to sanitize into a string
 */
function toCommandValue(input) {
    if (input === null || input === undefined) {
        return '';
    }
    else if (typeof input === 'string' || input instanceof String) {
        return input;
    }
    return JSON.stringify(input);
}
exports.toCommandValue = toCommandValue;
/**
 *
 * @param annotationProperties
 * @returns The command properties to send with the actual annotation command
 * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646
 */
function toCommandProperties(annotationProperties) {
    if (!Object.keys(annotationProperties).length) {
        return {};
    }
    return {
        title: annotationProperties.title,
        file: annotationProperties.file,
        line: annotationProperties.startLine,
        endLine: annotationProperties.endLine,
        col: annotationProperties.startColumn,
        endColumn: annotationProperties.endColumn
    };
}
exports.toCommandProperties = toCommandProperties;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 5526:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = void 0;
class BasicCredentialHandler {
    constructor(username, password) {
        this.username = username;
        this.password = password;
    }
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString('base64')}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.BasicCredentialHandler = BasicCredentialHandler;
class BearerCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Bearer ${this.token}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.BearerCredentialHandler = BearerCredentialHandler;
class PersonalAccessTokenCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Basic ${Buffer.from(`PAT:${this.token}`).toString('base64')}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;
//# sourceMappingURL=auth.js.map

/***/ }),

/***/ 6255:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/* eslint-disable @typescript-eslint/no-explicit-any */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = void 0;
const http = __importStar(__nccwpck_require__(8605));
const https = __importStar(__nccwpck_require__(7211));
const pm = __importStar(__nccwpck_require__(9835));
const tunnel = __importStar(__nccwpck_require__(4294));
var HttpCodes;
(function (HttpCodes) {
    HttpCodes[HttpCodes["OK"] = 200] = "OK";
    HttpCodes[HttpCodes["MultipleChoices"] = 300] = "MultipleChoices";
    HttpCodes[HttpCodes["MovedPermanently"] = 301] = "MovedPermanently";
    HttpCodes[HttpCodes["ResourceMoved"] = 302] = "ResourceMoved";
    HttpCodes[HttpCodes["SeeOther"] = 303] = "SeeOther";
    HttpCodes[HttpCodes["NotModified"] = 304] = "NotModified";
    HttpCodes[HttpCodes["UseProxy"] = 305] = "UseProxy";
    HttpCodes[HttpCodes["SwitchProxy"] = 306] = "SwitchProxy";
    HttpCodes[HttpCodes["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    HttpCodes[HttpCodes["PermanentRedirect"] = 308] = "PermanentRedirect";
    HttpCodes[HttpCodes["BadRequest"] = 400] = "BadRequest";
    HttpCodes[HttpCodes["Unauthorized"] = 401] = "Unauthorized";
    HttpCodes[HttpCodes["PaymentRequired"] = 402] = "PaymentRequired";
    HttpCodes[HttpCodes["Forbidden"] = 403] = "Forbidden";
    HttpCodes[HttpCodes["NotFound"] = 404] = "NotFound";
    HttpCodes[HttpCodes["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    HttpCodes[HttpCodes["NotAcceptable"] = 406] = "NotAcceptable";
    HttpCodes[HttpCodes["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    HttpCodes[HttpCodes["RequestTimeout"] = 408] = "RequestTimeout";
    HttpCodes[HttpCodes["Conflict"] = 409] = "Conflict";
    HttpCodes[HttpCodes["Gone"] = 410] = "Gone";
    HttpCodes[HttpCodes["TooManyRequests"] = 429] = "TooManyRequests";
    HttpCodes[HttpCodes["InternalServerError"] = 500] = "InternalServerError";
    HttpCodes[HttpCodes["NotImplemented"] = 501] = "NotImplemented";
    HttpCodes[HttpCodes["BadGateway"] = 502] = "BadGateway";
    HttpCodes[HttpCodes["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    HttpCodes[HttpCodes["GatewayTimeout"] = 504] = "GatewayTimeout";
})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));
var Headers;
(function (Headers) {
    Headers["Accept"] = "accept";
    Headers["ContentType"] = "content-type";
})(Headers = exports.Headers || (exports.Headers = {}));
var MediaTypes;
(function (MediaTypes) {
    MediaTypes["ApplicationJson"] = "application/json";
})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));
/**
 * Returns the proxy URL, depending upon the supplied url and proxy environment variables.
 * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
 */
function getProxyUrl(serverUrl) {
    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));
    return proxyUrl ? proxyUrl.href : '';
}
exports.getProxyUrl = getProxyUrl;
const HttpRedirectCodes = [
    HttpCodes.MovedPermanently,
    HttpCodes.ResourceMoved,
    HttpCodes.SeeOther,
    HttpCodes.TemporaryRedirect,
    HttpCodes.PermanentRedirect
];
const HttpResponseRetryCodes = [
    HttpCodes.BadGateway,
    HttpCodes.ServiceUnavailable,
    HttpCodes.GatewayTimeout
];
const RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];
const ExponentialBackoffCeiling = 10;
const ExponentialBackoffTimeSlice = 5;
class HttpClientError extends Error {
    constructor(message, statusCode) {
        super(message);
        this.name = 'HttpClientError';
        this.statusCode = statusCode;
        Object.setPrototypeOf(this, HttpClientError.prototype);
    }
}
exports.HttpClientError = HttpClientError;
class HttpClientResponse {
    constructor(message) {
        this.message = message;
    }
    readBody() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
                let output = Buffer.alloc(0);
                this.message.on('data', (chunk) => {
                    output = Buffer.concat([output, chunk]);
                });
                this.message.on('end', () => {
                    resolve(output.toString());
                });
            }));
        });
    }
}
exports.HttpClientResponse = HttpClientResponse;
function isHttps(requestUrl) {
    const parsedUrl = new URL(requestUrl);
    return parsedUrl.protocol === 'https:';
}
exports.isHttps = isHttps;
class HttpClient {
    constructor(userAgent, handlers, requestOptions) {
        this._ignoreSslError = false;
        this._allowRedirects = true;
        this._allowRedirectDowngrade = false;
        this._maxRedirects = 50;
        this._allowRetries = false;
        this._maxRetries = 1;
        this._keepAlive = false;
        this._disposed = false;
        this.userAgent = userAgent;
        this.handlers = handlers || [];
        this.requestOptions = requestOptions;
        if (requestOptions) {
            if (requestOptions.ignoreSslError != null) {
                this._ignoreSslError = requestOptions.ignoreSslError;
            }
            this._socketTimeout = requestOptions.socketTimeout;
            if (requestOptions.allowRedirects != null) {
                this._allowRedirects = requestOptions.allowRedirects;
            }
            if (requestOptions.allowRedirectDowngrade != null) {
                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;
            }
            if (requestOptions.maxRedirects != null) {
                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);
            }
            if (requestOptions.keepAlive != null) {
                this._keepAlive = requestOptions.keepAlive;
            }
            if (requestOptions.allowRetries != null) {
                this._allowRetries = requestOptions.allowRetries;
            }
            if (requestOptions.maxRetries != null) {
                this._maxRetries = requestOptions.maxRetries;
            }
        }
    }
    options(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});
        });
    }
    get(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('GET', requestUrl, null, additionalHeaders || {});
        });
    }
    del(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('DELETE', requestUrl, null, additionalHeaders || {});
        });
    }
    post(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('POST', requestUrl, data, additionalHeaders || {});
        });
    }
    patch(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('PATCH', requestUrl, data, additionalHeaders || {});
        });
    }
    put(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('PUT', requestUrl, data, additionalHeaders || {});
        });
    }
    head(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('HEAD', requestUrl, null, additionalHeaders || {});
        });
    }
    sendStream(verb, requestUrl, stream, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request(verb, requestUrl, stream, additionalHeaders);
        });
    }
    /**
     * Gets a typed object from an endpoint
     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise
     */
    getJson(requestUrl, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            const res = yield this.get(requestUrl, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    postJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.post(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    putJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.put(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    patchJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.patch(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    /**
     * Makes a raw http request.
     * All other methods such as get, post, patch, and request ultimately call this.
     * Prefer get, del, post and patch
     */
    request(verb, requestUrl, data, headers) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this._disposed) {
                throw new Error('Client has already been disposed.');
            }
            const parsedUrl = new URL(requestUrl);
            let info = this._prepareRequest(verb, parsedUrl, headers);
            // Only perform retries on reads since writes may not be idempotent.
            const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb)
                ? this._maxRetries + 1
                : 1;
            let numTries = 0;
            let response;
            do {
                response = yield this.requestRaw(info, data);
                // Check if it's an authentication challenge
                if (response &&
                    response.message &&
                    response.message.statusCode === HttpCodes.Unauthorized) {
                    let authenticationHandler;
                    for (const handler of this.handlers) {
                        if (handler.canHandleAuthentication(response)) {
                            authenticationHandler = handler;
                            break;
                        }
                    }
                    if (authenticationHandler) {
                        return authenticationHandler.handleAuthentication(this, info, data);
                    }
                    else {
                        // We have received an unauthorized response but have no handlers to handle it.
                        // Let the response return to the caller.
                        return response;
                    }
                }
                let redirectsRemaining = this._maxRedirects;
                while (response.message.statusCode &&
                    HttpRedirectCodes.includes(response.message.statusCode) &&
                    this._allowRedirects &&
                    redirectsRemaining > 0) {
                    const redirectUrl = response.message.headers['location'];
                    if (!redirectUrl) {
                        // if there's no location to redirect to, we won't
                        break;
                    }
                    const parsedRedirectUrl = new URL(redirectUrl);
                    if (parsedUrl.protocol === 'https:' &&
                        parsedUrl.protocol !== parsedRedirectUrl.protocol &&
                        !this._allowRedirectDowngrade) {
                        throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');
                    }
                    // we need to finish reading the response before reassigning response
                    // which will leak the open socket.
                    yield response.readBody();
                    // strip authorization header if redirected to a different hostname
                    if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {
                        for (const header in headers) {
                            // header names are case insensitive
                            if (header.toLowerCase() === 'authorization') {
                                delete headers[header];
                            }
                        }
                    }
                    // let's make the request with the new redirectUrl
                    info = this._prepareRequest(verb, parsedRedirectUrl, headers);
                    response = yield this.requestRaw(info, data);
                    redirectsRemaining--;
                }
                if (!response.message.statusCode ||
                    !HttpResponseRetryCodes.includes(response.message.statusCode)) {
                    // If not a retry code, return immediately instead of retrying
                    return response;
                }
                numTries += 1;
                if (numTries < maxTries) {
                    yield response.readBody();
                    yield this._performExponentialBackoff(numTries);
                }
            } while (numTries < maxTries);
            return response;
        });
    }
    /**
     * Needs to be called if keepAlive is set to true in request options.
     */
    dispose() {
        if (this._agent) {
            this._agent.destroy();
        }
        this._disposed = true;
    }
    /**
     * Raw request.
     * @param info
     * @param data
     */
    requestRaw(info, data) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                function callbackForResult(err, res) {
                    if (err) {
                        reject(err);
                    }
                    else if (!res) {
                        // If `err` is not passed, then `res` must be passed.
                        reject(new Error('Unknown error'));
                    }
                    else {
                        resolve(res);
                    }
                }
                this.requestRawWithCallback(info, data, callbackForResult);
            });
        });
    }
    /**
     * Raw request with callback.
     * @param info
     * @param data
     * @param onResult
     */
    requestRawWithCallback(info, data, onResult) {
        if (typeof data === 'string') {
            if (!info.options.headers) {
                info.options.headers = {};
            }
            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');
        }
        let callbackCalled = false;
        function handleResult(err, res) {
            if (!callbackCalled) {
                callbackCalled = true;
                onResult(err, res);
            }
        }
        const req = info.httpModule.request(info.options, (msg) => {
            const res = new HttpClientResponse(msg);
            handleResult(undefined, res);
        });
        let socket;
        req.on('socket', sock => {
            socket = sock;
        });
        // If we ever get disconnected, we want the socket to timeout eventually
        req.setTimeout(this._socketTimeout || 3 * 60000, () => {
            if (socket) {
                socket.end();
            }
            handleResult(new Error(`Request timeout: ${info.options.path}`));
        });
        req.on('error', function (err) {
            // err has statusCode property
            // res should have headers
            handleResult(err);
        });
        if (data && typeof data === 'string') {
            req.write(data, 'utf8');
        }
        if (data && typeof data !== 'string') {
            data.on('close', function () {
                req.end();
            });
            data.pipe(req);
        }
        else {
            req.end();
        }
    }
    /**
     * Gets an http agent. This function is useful when you need an http agent that handles
     * routing through a proxy server - depending upon the url and proxy environment variables.
     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
     */
    getAgent(serverUrl) {
        const parsedUrl = new URL(serverUrl);
        return this._getAgent(parsedUrl);
    }
    _prepareRequest(method, requestUrl, headers) {
        const info = {};
        info.parsedUrl = requestUrl;
        const usingSsl = info.parsedUrl.protocol === 'https:';
        info.httpModule = usingSsl ? https : http;
        const defaultPort = usingSsl ? 443 : 80;
        info.options = {};
        info.options.host = info.parsedUrl.hostname;
        info.options.port = info.parsedUrl.port
            ? parseInt(info.parsedUrl.port)
            : defaultPort;
        info.options.path =
            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');
        info.options.method = method;
        info.options.headers = this._mergeHeaders(headers);
        if (this.userAgent != null) {
            info.options.headers['user-agent'] = this.userAgent;
        }
        info.options.agent = this._getAgent(info.parsedUrl);
        // gives handlers an opportunity to participate
        if (this.handlers) {
            for (const handler of this.handlers) {
                handler.prepareRequest(info.options);
            }
        }
        return info;
    }
    _mergeHeaders(headers) {
        if (this.requestOptions && this.requestOptions.headers) {
            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));
        }
        return lowercaseKeys(headers || {});
    }
    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {
        let clientHeader;
        if (this.requestOptions && this.requestOptions.headers) {
            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];
        }
        return additionalHeaders[header] || clientHeader || _default;
    }
    _getAgent(parsedUrl) {
        let agent;
        const proxyUrl = pm.getProxyUrl(parsedUrl);
        const useProxy = proxyUrl && proxyUrl.hostname;
        if (this._keepAlive && useProxy) {
            agent = this._proxyAgent;
        }
        if (this._keepAlive && !useProxy) {
            agent = this._agent;
        }
        // if agent is already assigned use that agent.
        if (agent) {
            return agent;
        }
        const usingSsl = parsedUrl.protocol === 'https:';
        let maxSockets = 100;
        if (this.requestOptions) {
            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;
        }
        // This is `useProxy` again, but we need to check `proxyURl` directly for TypeScripts's flow analysis.
        if (proxyUrl && proxyUrl.hostname) {
            const agentOptions = {
                maxSockets,
                keepAlive: this._keepAlive,
                proxy: Object.assign(Object.assign({}, ((proxyUrl.username || proxyUrl.password) && {
                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`
                })), { host: proxyUrl.hostname, port: proxyUrl.port })
            };
            let tunnelAgent;
            const overHttps = proxyUrl.protocol === 'https:';
            if (usingSsl) {
                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;
            }
            else {
                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;
            }
            agent = tunnelAgent(agentOptions);
            this._proxyAgent = agent;
        }
        // if reusing agent across request and tunneling agent isn't assigned create a new agent
        if (this._keepAlive && !agent) {
            const options = { keepAlive: this._keepAlive, maxSockets };
            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);
            this._agent = agent;
        }
        // if not using private agent and tunnel agent isn't setup then use global agent
        if (!agent) {
            agent = usingSsl ? https.globalAgent : http.globalAgent;
        }
        if (usingSsl && this._ignoreSslError) {
            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process
            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options
            // we have to cast it to any and change it directly
            agent.options = Object.assign(agent.options || {}, {
                rejectUnauthorized: false
            });
        }
        return agent;
    }
    _performExponentialBackoff(retryNumber) {
        return __awaiter(this, void 0, void 0, function* () {
            retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);
            const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);
            return new Promise(resolve => setTimeout(() => resolve(), ms));
        });
    }
    _processResponse(res, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
                const statusCode = res.message.statusCode || 0;
                const response = {
                    statusCode,
                    result: null,
                    headers: {}
                };
                // not found leads to null obj returned
                if (statusCode === HttpCodes.NotFound) {
                    resolve(response);
                }
                // get the result from the body
                function dateTimeDeserializer(key, value) {
                    if (typeof value === 'string') {
                        const a = new Date(value);
                        if (!isNaN(a.valueOf())) {
                            return a;
                        }
                    }
                    return value;
                }
                let obj;
                let contents;
                try {
                    contents = yield res.readBody();
                    if (contents && contents.length > 0) {
                        if (options && options.deserializeDates) {
                            obj = JSON.parse(contents, dateTimeDeserializer);
                        }
                        else {
                            obj = JSON.parse(contents);
                        }
                        response.result = obj;
                    }
                    response.headers = res.message.headers;
                }
                catch (err) {
                    // Invalid resource (contents not json);  leaving result obj null
                }
                // note that 3xx redirects are handled by the http layer.
                if (statusCode > 299) {
                    let msg;
                    // if exception/error in body, attempt to get better error
                    if (obj && obj.message) {
                        msg = obj.message;
                    }
                    else if (contents && contents.length > 0) {
                        // it may be the case that the exception is in the body message as string
                        msg = contents;
                    }
                    else {
                        msg = `Failed request: (${statusCode})`;
                    }
                    const err = new HttpClientError(msg, statusCode);
                    err.result = response.result;
                    reject(err);
                }
                else {
                    resolve(response);
                }
            }));
        });
    }
}
exports.HttpClient = HttpClient;
const lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 9835:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkBypass = exports.getProxyUrl = void 0;
function getProxyUrl(reqUrl) {
    const usingSsl = reqUrl.protocol === 'https:';
    if (checkBypass(reqUrl)) {
        return undefined;
    }
    const proxyVar = (() => {
        if (usingSsl) {
            return process.env['https_proxy'] || process.env['HTTPS_PROXY'];
        }
        else {
            return process.env['http_proxy'] || process.env['HTTP_PROXY'];
        }
    })();
    if (proxyVar) {
        return new URL(proxyVar);
    }
    else {
        return undefined;
    }
}
exports.getProxyUrl = getProxyUrl;
function checkBypass(reqUrl) {
    if (!reqUrl.hostname) {
        return false;
    }
    const noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';
    if (!noProxy) {
        return false;
    }
    // Determine the request port
    let reqPort;
    if (reqUrl.port) {
        reqPort = Number(reqUrl.port);
    }
    else if (reqUrl.protocol === 'http:') {
        reqPort = 80;
    }
    else if (reqUrl.protocol === 'https:') {
        reqPort = 443;
    }
    // Format the request hostname and hostname with port
    const upperReqHosts = [reqUrl.hostname.toUpperCase()];
    if (typeof reqPort === 'number') {
        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);
    }
    // Compare request host against noproxy
    for (const upperNoProxyItem of noProxy
        .split(',')
        .map(x => x.trim().toUpperCase())
        .filter(x => x)) {
        if (upperReqHosts.some(x => x === upperNoProxyItem)) {
            return true;
        }
    }
    return false;
}
exports.checkBypass = checkBypass;
//# sourceMappingURL=proxy.js.map

/***/ }),

/***/ 1575:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/* module decorator */ module = __nccwpck_require__.nmd(module);
var bigInt = (function (undefined) {
    "use strict";

    var BASE = 1e7,
        LOG_BASE = 7,
        MAX_INT = 9007199254740992,
        MAX_INT_ARR = smallToArray(MAX_INT),
        DEFAULT_ALPHABET = "0123456789abcdefghijklmnopqrstuvwxyz";

    var supportsNativeBigInt = typeof BigInt === "function";

    function Integer(v, radix, alphabet, caseSensitive) {
        if (typeof v === "undefined") return Integer[0];
        if (typeof radix !== "undefined") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);
        return parseValue(v);
    }

    function BigInteger(value, sign) {
        this.value = value;
        this.sign = sign;
        this.isSmall = false;
    }
    BigInteger.prototype = Object.create(Integer.prototype);

    function SmallInteger(value) {
        this.value = value;
        this.sign = value < 0;
        this.isSmall = true;
    }
    SmallInteger.prototype = Object.create(Integer.prototype);

    function NativeBigInt(value) {
        this.value = value;
    }
    NativeBigInt.prototype = Object.create(Integer.prototype);

    function isPrecise(n) {
        return -MAX_INT < n && n < MAX_INT;
    }

    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes
        if (n < 1e7)
            return [n];
        if (n < 1e14)
            return [n % 1e7, Math.floor(n / 1e7)];
        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];
    }

    function arrayToSmall(arr) { // If BASE changes this function may need to change
        trim(arr);
        var length = arr.length;
        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {
            switch (length) {
                case 0: return 0;
                case 1: return arr[0];
                case 2: return arr[0] + arr[1] * BASE;
                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;
            }
        }
        return arr;
    }

    function trim(v) {
        var i = v.length;
        while (v[--i] === 0);
        v.length = i + 1;
    }

    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger
        var x = new Array(length);
        var i = -1;
        while (++i < length) {
            x[i] = 0;
        }
        return x;
    }

    function truncate(n) {
        if (n > 0) return Math.floor(n);
        return Math.ceil(n);
    }

    function add(a, b) { // assumes a and b are arrays with a.length >= b.length
        var l_a = a.length,
            l_b = b.length,
            r = new Array(l_a),
            carry = 0,
            base = BASE,
            sum, i;
        for (i = 0; i < l_b; i++) {
            sum = a[i] + b[i] + carry;
            carry = sum >= base ? 1 : 0;
            r[i] = sum - carry * base;
        }
        while (i < l_a) {
            sum = a[i] + carry;
            carry = sum === base ? 1 : 0;
            r[i++] = sum - carry * base;
        }
        if (carry > 0) r.push(carry);
        return r;
    }

    function addAny(a, b) {
        if (a.length >= b.length) return add(a, b);
        return add(b, a);
    }

    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT
        var l = a.length,
            r = new Array(l),
            base = BASE,
            sum, i;
        for (i = 0; i < l; i++) {
            sum = a[i] - base + carry;
            carry = Math.floor(sum / base);
            r[i] = sum - carry * base;
            carry += 1;
        }
        while (carry > 0) {
            r[i++] = carry % base;
            carry = Math.floor(carry / base);
        }
        return r;
    }

    BigInteger.prototype.add = function (v) {
        var n = parseValue(v);
        if (this.sign !== n.sign) {
            return this.subtract(n.negate());
        }
        var a = this.value, b = n.value;
        if (n.isSmall) {
            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);
        }
        return new BigInteger(addAny(a, b), this.sign);
    };
    BigInteger.prototype.plus = BigInteger.prototype.add;

    SmallInteger.prototype.add = function (v) {
        var n = parseValue(v);
        var a = this.value;
        if (a < 0 !== n.sign) {
            return this.subtract(n.negate());
        }
        var b = n.value;
        if (n.isSmall) {
            if (isPrecise(a + b)) return new SmallInteger(a + b);
            b = smallToArray(Math.abs(b));
        }
        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);
    };
    SmallInteger.prototype.plus = SmallInteger.prototype.add;

    NativeBigInt.prototype.add = function (v) {
        return new NativeBigInt(this.value + parseValue(v).value);
    }
    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;

    function subtract(a, b) { // assumes a and b are arrays with a >= b
        var a_l = a.length,
            b_l = b.length,
            r = new Array(a_l),
            borrow = 0,
            base = BASE,
            i, difference;
        for (i = 0; i < b_l; i++) {
            difference = a[i] - borrow - b[i];
            if (difference < 0) {
                difference += base;
                borrow = 1;
            } else borrow = 0;
            r[i] = difference;
        }
        for (i = b_l; i < a_l; i++) {
            difference = a[i] - borrow;
            if (difference < 0) difference += base;
            else {
                r[i++] = difference;
                break;
            }
            r[i] = difference;
        }
        for (; i < a_l; i++) {
            r[i] = a[i];
        }
        trim(r);
        return r;
    }

    function subtractAny(a, b, sign) {
        var value;
        if (compareAbs(a, b) >= 0) {
            value = subtract(a, b);
        } else {
            value = subtract(b, a);
            sign = !sign;
        }
        value = arrayToSmall(value);
        if (typeof value === "number") {
            if (sign) value = -value;
            return new SmallInteger(value);
        }
        return new BigInteger(value, sign);
    }

    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT
        var l = a.length,
            r = new Array(l),
            carry = -b,
            base = BASE,
            i, difference;
        for (i = 0; i < l; i++) {
            difference = a[i] + carry;
            carry = Math.floor(difference / base);
            difference %= base;
            r[i] = difference < 0 ? difference + base : difference;
        }
        r = arrayToSmall(r);
        if (typeof r === "number") {
            if (sign) r = -r;
            return new SmallInteger(r);
        } return new BigInteger(r, sign);
    }

    BigInteger.prototype.subtract = function (v) {
        var n = parseValue(v);
        if (this.sign !== n.sign) {
            return this.add(n.negate());
        }
        var a = this.value, b = n.value;
        if (n.isSmall)
            return subtractSmall(a, Math.abs(b), this.sign);
        return subtractAny(a, b, this.sign);
    };
    BigInteger.prototype.minus = BigInteger.prototype.subtract;

    SmallInteger.prototype.subtract = function (v) {
        var n = parseValue(v);
        var a = this.value;
        if (a < 0 !== n.sign) {
            return this.add(n.negate());
        }
        var b = n.value;
        if (n.isSmall) {
            return new SmallInteger(a - b);
        }
        return subtractSmall(b, Math.abs(a), a >= 0);
    };
    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;

    NativeBigInt.prototype.subtract = function (v) {
        return new NativeBigInt(this.value - parseValue(v).value);
    }
    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;

    BigInteger.prototype.negate = function () {
        return new BigInteger(this.value, !this.sign);
    };
    SmallInteger.prototype.negate = function () {
        var sign = this.sign;
        var small = new SmallInteger(-this.value);
        small.sign = !sign;
        return small;
    };
    NativeBigInt.prototype.negate = function () {
        return new NativeBigInt(-this.value);
    }

    BigInteger.prototype.abs = function () {
        return new BigInteger(this.value, false);
    };
    SmallInteger.prototype.abs = function () {
        return new SmallInteger(Math.abs(this.value));
    };
    NativeBigInt.prototype.abs = function () {
        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);
    }


    function multiplyLong(a, b) {
        var a_l = a.length,
            b_l = b.length,
            l = a_l + b_l,
            r = createArray(l),
            base = BASE,
            product, carry, i, a_i, b_j;
        for (i = 0; i < a_l; ++i) {
            a_i = a[i];
            for (var j = 0; j < b_l; ++j) {
                b_j = b[j];
                product = a_i * b_j + r[i + j];
                carry = Math.floor(product / base);
                r[i + j] = product - carry * base;
                r[i + j + 1] += carry;
            }
        }
        trim(r);
        return r;
    }

    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE
        var l = a.length,
            r = new Array(l),
            base = BASE,
            carry = 0,
            product, i;
        for (i = 0; i < l; i++) {
            product = a[i] * b + carry;
            carry = Math.floor(product / base);
            r[i] = product - carry * base;
        }
        while (carry > 0) {
            r[i++] = carry % base;
            carry = Math.floor(carry / base);
        }
        return r;
    }

    function shiftLeft(x, n) {
        var r = [];
        while (n-- > 0) r.push(0);
        return r.concat(x);
    }

    function multiplyKaratsuba(x, y) {
        var n = Math.max(x.length, y.length);

        if (n <= 30) return multiplyLong(x, y);
        n = Math.ceil(n / 2);

        var b = x.slice(n),
            a = x.slice(0, n),
            d = y.slice(n),
            c = y.slice(0, n);

        var ac = multiplyKaratsuba(a, c),
            bd = multiplyKaratsuba(b, d),
            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));

        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));
        trim(product);
        return product;
    }

    // The following function is derived from a surface fit of a graph plotting the performance difference
    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.
    function useKaratsuba(l1, l2) {
        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;
    }

    BigInteger.prototype.multiply = function (v) {
        var n = parseValue(v),
            a = this.value, b = n.value,
            sign = this.sign !== n.sign,
            abs;
        if (n.isSmall) {
            if (b === 0) return Integer[0];
            if (b === 1) return this;
            if (b === -1) return this.negate();
            abs = Math.abs(b);
            if (abs < BASE) {
                return new BigInteger(multiplySmall(a, abs), sign);
            }
            b = smallToArray(abs);
        }
        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes
            return new BigInteger(multiplyKaratsuba(a, b), sign);
        return new BigInteger(multiplyLong(a, b), sign);
    };

    BigInteger.prototype.times = BigInteger.prototype.multiply;

    function multiplySmallAndArray(a, b, sign) { // a >= 0
        if (a < BASE) {
            return new BigInteger(multiplySmall(b, a), sign);
        }
        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);
    }
    SmallInteger.prototype._multiplyBySmall = function (a) {
        if (isPrecise(a.value * this.value)) {
            return new SmallInteger(a.value * this.value);
        }
        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);
    };
    BigInteger.prototype._multiplyBySmall = function (a) {
        if (a.value === 0) return Integer[0];
        if (a.value === 1) return this;
        if (a.value === -1) return this.negate();
        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);
    };
    SmallInteger.prototype.multiply = function (v) {
        return parseValue(v)._multiplyBySmall(this);
    };
    SmallInteger.prototype.times = SmallInteger.prototype.multiply;

    NativeBigInt.prototype.multiply = function (v) {
        return new NativeBigInt(this.value * parseValue(v).value);
    }
    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;

    function square(a) {
        //console.assert(2 * BASE * BASE < MAX_INT);
        var l = a.length,
            r = createArray(l + l),
            base = BASE,
            product, carry, i, a_i, a_j;
        for (i = 0; i < l; i++) {
            a_i = a[i];
            carry = 0 - a_i * a_i;
            for (var j = i; j < l; j++) {
                a_j = a[j];
                product = 2 * (a_i * a_j) + r[i + j] + carry;
                carry = Math.floor(product / base);
                r[i + j] = product - carry * base;
            }
            r[i + l] = carry;
        }
        trim(r);
        return r;
    }

    BigInteger.prototype.square = function () {
        return new BigInteger(square(this.value), false);
    };

    SmallInteger.prototype.square = function () {
        var value = this.value * this.value;
        if (isPrecise(value)) return new SmallInteger(value);
        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);
    };

    NativeBigInt.prototype.square = function (v) {
        return new NativeBigInt(this.value * this.value);
    }

    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.
        var a_l = a.length,
            b_l = b.length,
            base = BASE,
            result = createArray(b.length),
            divisorMostSignificantDigit = b[b_l - 1],
            // normalization
            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),
            remainder = multiplySmall(a, lambda),
            divisor = multiplySmall(b, lambda),
            quotientDigit, shift, carry, borrow, i, l, q;
        if (remainder.length <= a_l) remainder.push(0);
        divisor.push(0);
        divisorMostSignificantDigit = divisor[b_l - 1];
        for (shift = a_l - b_l; shift >= 0; shift--) {
            quotientDigit = base - 1;
            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {
                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);
            }
            // quotientDigit <= base - 1
            carry = 0;
            borrow = 0;
            l = divisor.length;
            for (i = 0; i < l; i++) {
                carry += quotientDigit * divisor[i];
                q = Math.floor(carry / base);
                borrow += remainder[shift + i] - (carry - q * base);
                carry = q;
                if (borrow < 0) {
                    remainder[shift + i] = borrow + base;
                    borrow = -1;
                } else {
                    remainder[shift + i] = borrow;
                    borrow = 0;
                }
            }
            while (borrow !== 0) {
                quotientDigit -= 1;
                carry = 0;
                for (i = 0; i < l; i++) {
                    carry += remainder[shift + i] - base + divisor[i];
                    if (carry < 0) {
                        remainder[shift + i] = carry + base;
                        carry = 0;
                    } else {
                        remainder[shift + i] = carry;
                        carry = 1;
                    }
                }
                borrow += carry;
            }
            result[shift] = quotientDigit;
        }
        // denormalization
        remainder = divModSmall(remainder, lambda)[0];
        return [arrayToSmall(result), arrayToSmall(remainder)];
    }

    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/
        // Performs faster than divMod1 on larger input sizes.
        var a_l = a.length,
            b_l = b.length,
            result = [],
            part = [],
            base = BASE,
            guess, xlen, highx, highy, check;
        while (a_l) {
            part.unshift(a[--a_l]);
            trim(part);
            if (compareAbs(part, b) < 0) {
                result.push(0);
                continue;
            }
            xlen = part.length;
            highx = part[xlen - 1] * base + part[xlen - 2];
            highy = b[b_l - 1] * base + b[b_l - 2];
            if (xlen > b_l) {
                highx = (highx + 1) * base;
            }
            guess = Math.ceil(highx / highy);
            do {
                check = multiplySmall(b, guess);
                if (compareAbs(check, part) <= 0) break;
                guess--;
            } while (guess);
            result.push(guess);
            part = subtract(part, check);
        }
        result.reverse();
        return [arrayToSmall(result), arrayToSmall(part)];
    }

    function divModSmall(value, lambda) {
        var length = value.length,
            quotient = createArray(length),
            base = BASE,
            i, q, remainder, divisor;
        remainder = 0;
        for (i = length - 1; i >= 0; --i) {
            divisor = remainder * base + value[i];
            q = truncate(divisor / lambda);
            remainder = divisor - q * lambda;
            quotient[i] = q | 0;
        }
        return [quotient, remainder | 0];
    }

    function divModAny(self, v) {
        var value, n = parseValue(v);
        if (supportsNativeBigInt) {
            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];
        }
        var a = self.value, b = n.value;
        var quotient;
        if (b === 0) throw new Error("Cannot divide by zero");
        if (self.isSmall) {
            if (n.isSmall) {
                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];
            }
            return [Integer[0], self];
        }
        if (n.isSmall) {
            if (b === 1) return [self, Integer[0]];
            if (b == -1) return [self.negate(), Integer[0]];
            var abs = Math.abs(b);
            if (abs < BASE) {
                value = divModSmall(a, abs);
                quotient = arrayToSmall(value[0]);
                var remainder = value[1];
                if (self.sign) remainder = -remainder;
                if (typeof quotient === "number") {
                    if (self.sign !== n.sign) quotient = -quotient;
                    return [new SmallInteger(quotient), new SmallInteger(remainder)];
                }
                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];
            }
            b = smallToArray(abs);
        }
        var comparison = compareAbs(a, b);
        if (comparison === -1) return [Integer[0], self];
        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];

        // divMod1 is faster on smaller input sizes
        if (a.length + b.length <= 200)
            value = divMod1(a, b);
        else value = divMod2(a, b);

        quotient = value[0];
        var qSign = self.sign !== n.sign,
            mod = value[1],
            mSign = self.sign;
        if (typeof quotient === "number") {
            if (qSign) quotient = -quotient;
            quotient = new SmallInteger(quotient);
        } else quotient = new BigInteger(quotient, qSign);
        if (typeof mod === "number") {
            if (mSign) mod = -mod;
            mod = new SmallInteger(mod);
        } else mod = new BigInteger(mod, mSign);
        return [quotient, mod];
    }

    BigInteger.prototype.divmod = function (v) {
        var result = divModAny(this, v);
        return {
            quotient: result[0],
            remainder: result[1]
        };
    };
    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;


    BigInteger.prototype.divide = function (v) {
        return divModAny(this, v)[0];
    };
    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {
        return new NativeBigInt(this.value / parseValue(v).value);
    };
    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;

    BigInteger.prototype.mod = function (v) {
        return divModAny(this, v)[1];
    };
    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {
        return new NativeBigInt(this.value % parseValue(v).value);
    };
    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;

    BigInteger.prototype.pow = function (v) {
        var n = parseValue(v),
            a = this.value,
            b = n.value,
            value, x, y;
        if (b === 0) return Integer[1];
        if (a === 0) return Integer[0];
        if (a === 1) return Integer[1];
        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];
        if (n.sign) {
            return Integer[0];
        }
        if (!n.isSmall) throw new Error("The exponent " + n.toString() + " is too large.");
        if (this.isSmall) {
            if (isPrecise(value = Math.pow(a, b)))
                return new SmallInteger(truncate(value));
        }
        x = this;
        y = Integer[1];
        while (true) {
            if (b & 1 === 1) {
                y = y.times(x);
                --b;
            }
            if (b === 0) break;
            b /= 2;
            x = x.square();
        }
        return y;
    };
    SmallInteger.prototype.pow = BigInteger.prototype.pow;

    NativeBigInt.prototype.pow = function (v) {
        var n = parseValue(v);
        var a = this.value, b = n.value;
        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);
        if (b === _0) return Integer[1];
        if (a === _0) return Integer[0];
        if (a === _1) return Integer[1];
        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];
        if (n.isNegative()) return new NativeBigInt(_0);
        var x = this;
        var y = Integer[1];
        while (true) {
            if ((b & _1) === _1) {
                y = y.times(x);
                --b;
            }
            if (b === _0) break;
            b /= _2;
            x = x.square();
        }
        return y;
    }

    BigInteger.prototype.modPow = function (exp, mod) {
        exp = parseValue(exp);
        mod = parseValue(mod);
        if (mod.isZero()) throw new Error("Cannot take modPow with modulus 0");
        var r = Integer[1],
            base = this.mod(mod);
        if (exp.isNegative()) {
            exp = exp.multiply(Integer[-1]);
            base = base.modInv(mod);
        }
        while (exp.isPositive()) {
            if (base.isZero()) return Integer[0];
            if (exp.isOdd()) r = r.multiply(base).mod(mod);
            exp = exp.divide(2);
            base = base.square().mod(mod);
        }
        return r;
    };
    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;

    function compareAbs(a, b) {
        if (a.length !== b.length) {
            return a.length > b.length ? 1 : -1;
        }
        for (var i = a.length - 1; i >= 0; i--) {
            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;
        }
        return 0;
    }

    BigInteger.prototype.compareAbs = function (v) {
        var n = parseValue(v),
            a = this.value,
            b = n.value;
        if (n.isSmall) return 1;
        return compareAbs(a, b);
    };
    SmallInteger.prototype.compareAbs = function (v) {
        var n = parseValue(v),
            a = Math.abs(this.value),
            b = n.value;
        if (n.isSmall) {
            b = Math.abs(b);
            return a === b ? 0 : a > b ? 1 : -1;
        }
        return -1;
    };
    NativeBigInt.prototype.compareAbs = function (v) {
        var a = this.value;
        var b = parseValue(v).value;
        a = a >= 0 ? a : -a;
        b = b >= 0 ? b : -b;
        return a === b ? 0 : a > b ? 1 : -1;
    }

    BigInteger.prototype.compare = function (v) {
        // See discussion about comparison with Infinity:
        // https://github.com/peterolson/BigInteger.js/issues/61
        if (v === Infinity) {
            return -1;
        }
        if (v === -Infinity) {
            return 1;
        }

        var n = parseValue(v),
            a = this.value,
            b = n.value;
        if (this.sign !== n.sign) {
            return n.sign ? 1 : -1;
        }
        if (n.isSmall) {
            return this.sign ? -1 : 1;
        }
        return compareAbs(a, b) * (this.sign ? -1 : 1);
    };
    BigInteger.prototype.compareTo = BigInteger.prototype.compare;

    SmallInteger.prototype.compare = function (v) {
        if (v === Infinity) {
            return -1;
        }
        if (v === -Infinity) {
            return 1;
        }

        var n = parseValue(v),
            a = this.value,
            b = n.value;
        if (n.isSmall) {
            return a == b ? 0 : a > b ? 1 : -1;
        }
        if (a < 0 !== n.sign) {
            return a < 0 ? -1 : 1;
        }
        return a < 0 ? 1 : -1;
    };
    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;

    NativeBigInt.prototype.compare = function (v) {
        if (v === Infinity) {
            return -1;
        }
        if (v === -Infinity) {
            return 1;
        }
        var a = this.value;
        var b = parseValue(v).value;
        return a === b ? 0 : a > b ? 1 : -1;
    }
    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;

    BigInteger.prototype.equals = function (v) {
        return this.compare(v) === 0;
    };
    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;

    BigInteger.prototype.notEquals = function (v) {
        return this.compare(v) !== 0;
    };
    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;

    BigInteger.prototype.greater = function (v) {
        return this.compare(v) > 0;
    };
    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;

    BigInteger.prototype.lesser = function (v) {
        return this.compare(v) < 0;
    };
    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;

    BigInteger.prototype.greaterOrEquals = function (v) {
        return this.compare(v) >= 0;
    };
    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;

    BigInteger.prototype.lesserOrEquals = function (v) {
        return this.compare(v) <= 0;
    };
    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;

    BigInteger.prototype.isEven = function () {
        return (this.value[0] & 1) === 0;
    };
    SmallInteger.prototype.isEven = function () {
        return (this.value & 1) === 0;
    };
    NativeBigInt.prototype.isEven = function () {
        return (this.value & BigInt(1)) === BigInt(0);
    }

    BigInteger.prototype.isOdd = function () {
        return (this.value[0] & 1) === 1;
    };
    SmallInteger.prototype.isOdd = function () {
        return (this.value & 1) === 1;
    };
    NativeBigInt.prototype.isOdd = function () {
        return (this.value & BigInt(1)) === BigInt(1);
    }

    BigInteger.prototype.isPositive = function () {
        return !this.sign;
    };
    SmallInteger.prototype.isPositive = function () {
        return this.value > 0;
    };
    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;

    BigInteger.prototype.isNegative = function () {
        return this.sign;
    };
    SmallInteger.prototype.isNegative = function () {
        return this.value < 0;
    };
    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;

    BigInteger.prototype.isUnit = function () {
        return false;
    };
    SmallInteger.prototype.isUnit = function () {
        return Math.abs(this.value) === 1;
    };
    NativeBigInt.prototype.isUnit = function () {
        return this.abs().value === BigInt(1);
    }

    BigInteger.prototype.isZero = function () {
        return false;
    };
    SmallInteger.prototype.isZero = function () {
        return this.value === 0;
    };
    NativeBigInt.prototype.isZero = function () {
        return this.value === BigInt(0);
    }

    BigInteger.prototype.isDivisibleBy = function (v) {
        var n = parseValue(v);
        if (n.isZero()) return false;
        if (n.isUnit()) return true;
        if (n.compareAbs(2) === 0) return this.isEven();
        return this.mod(n).isZero();
    };
    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;

    function isBasicPrime(v) {
        var n = v.abs();
        if (n.isUnit()) return false;
        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;
        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;
        if (n.lesser(49)) return true;
        // we don't know if it's prime: let the other functions figure it out
    }

    function millerRabinTest(n, a) {
        var nPrev = n.prev(),
            b = nPrev,
            r = 0,
            d, t, i, x;
        while (b.isEven()) b = b.divide(2), r++;
        next: for (i = 0; i < a.length; i++) {
            if (n.lesser(a[i])) continue;
            x = bigInt(a[i]).modPow(b, n);
            if (x.isUnit() || x.equals(nPrev)) continue;
            for (d = r - 1; d != 0; d--) {
                x = x.square().mod(n);
                if (x.isUnit()) return false;
                if (x.equals(nPrev)) continue next;
            }
            return false;
        }
        return true;
    }

    // Set "strict" to true to force GRH-supported lower bound of 2*log(N)^2
    BigInteger.prototype.isPrime = function (strict) {
        var isPrime = isBasicPrime(this);
        if (isPrime !== undefined) return isPrime;
        var n = this.abs();
        var bits = n.bitLength();
        if (bits <= 64)
            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);
        var logN = Math.log(2) * bits.toJSNumber();
        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);
        for (var a = [], i = 0; i < t; i++) {
            a.push(bigInt(i + 2));
        }
        return millerRabinTest(n, a);
    };
    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;

    BigInteger.prototype.isProbablePrime = function (iterations, rng) {
        var isPrime = isBasicPrime(this);
        if (isPrime !== undefined) return isPrime;
        var n = this.abs();
        var t = iterations === undefined ? 5 : iterations;
        for (var a = [], i = 0; i < t; i++) {
            a.push(bigInt.randBetween(2, n.minus(2), rng));
        }
        return millerRabinTest(n, a);
    };
    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;

    BigInteger.prototype.modInv = function (n) {
        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;
        while (!newR.isZero()) {
            q = r.divide(newR);
            lastT = t;
            lastR = r;
            t = newT;
            r = newR;
            newT = lastT.subtract(q.multiply(newT));
            newR = lastR.subtract(q.multiply(newR));
        }
        if (!r.isUnit()) throw new Error(this.toString() + " and " + n.toString() + " are not co-prime");
        if (t.compare(0) === -1) {
            t = t.add(n);
        }
        if (this.isNegative()) {
            return t.negate();
        }
        return t;
    };

    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;

    BigInteger.prototype.next = function () {
        var value = this.value;
        if (this.sign) {
            return subtractSmall(value, 1, this.sign);
        }
        return new BigInteger(addSmall(value, 1), this.sign);
    };
    SmallInteger.prototype.next = function () {
        var value = this.value;
        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);
        return new BigInteger(MAX_INT_ARR, false);
    };
    NativeBigInt.prototype.next = function () {
        return new NativeBigInt(this.value + BigInt(1));
    }

    BigInteger.prototype.prev = function () {
        var value = this.value;
        if (this.sign) {
            return new BigInteger(addSmall(value, 1), true);
        }
        return subtractSmall(value, 1, this.sign);
    };
    SmallInteger.prototype.prev = function () {
        var value = this.value;
        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);
        return new BigInteger(MAX_INT_ARR, true);
    };
    NativeBigInt.prototype.prev = function () {
        return new NativeBigInt(this.value - BigInt(1));
    }

    var powersOfTwo = [1];
    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);
    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];

    function shift_isSmall(n) {
        return Math.abs(n) <= BASE;
    }

    BigInteger.prototype.shiftLeft = function (v) {
        var n = parseValue(v).toJSNumber();
        if (!shift_isSmall(n)) {
            throw new Error(String(n) + " is too large for shifting.");
        }
        if (n < 0) return this.shiftRight(-n);
        var result = this;
        if (result.isZero()) return result;
        while (n >= powers2Length) {
            result = result.multiply(highestPower2);
            n -= powers2Length - 1;
        }
        return result.multiply(powersOfTwo[n]);
    };
    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;

    BigInteger.prototype.shiftRight = function (v) {
        var remQuo;
        var n = parseValue(v).toJSNumber();
        if (!shift_isSmall(n)) {
            throw new Error(String(n) + " is too large for shifting.");
        }
        if (n < 0) return this.shiftLeft(-n);
        var result = this;
        while (n >= powers2Length) {
            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;
            remQuo = divModAny(result, highestPower2);
            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];
            n -= powers2Length - 1;
        }
        remQuo = divModAny(result, powersOfTwo[n]);
        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];
    };
    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;

    function bitwise(x, y, fn) {
        y = parseValue(y);
        var xSign = x.isNegative(), ySign = y.isNegative();
        var xRem = xSign ? x.not() : x,
            yRem = ySign ? y.not() : y;
        var xDigit = 0, yDigit = 0;
        var xDivMod = null, yDivMod = null;
        var result = [];
        while (!xRem.isZero() || !yRem.isZero()) {
            xDivMod = divModAny(xRem, highestPower2);
            xDigit = xDivMod[1].toJSNumber();
            if (xSign) {
                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers
            }

            yDivMod = divModAny(yRem, highestPower2);
            yDigit = yDivMod[1].toJSNumber();
            if (ySign) {
                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers
            }

            xRem = xDivMod[0];
            yRem = yDivMod[0];
            result.push(fn(xDigit, yDigit));
        }
        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);
        for (var i = result.length - 1; i >= 0; i -= 1) {
            sum = sum.multiply(highestPower2).add(bigInt(result[i]));
        }
        return sum;
    }

    BigInteger.prototype.not = function () {
        return this.negate().prev();
    };
    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;

    BigInteger.prototype.and = function (n) {
        return bitwise(this, n, function (a, b) { return a & b; });
    };
    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;

    BigInteger.prototype.or = function (n) {
        return bitwise(this, n, function (a, b) { return a | b; });
    };
    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;

    BigInteger.prototype.xor = function (n) {
        return bitwise(this, n, function (a, b) { return a ^ b; });
    };
    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;

    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;
    function roughLOB(n) { // get lowestOneBit (rough)
        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)
        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]
        var v = n.value,
            x = typeof v === "number" ? v | LOBMASK_I :
                typeof v === "bigint" ? v | BigInt(LOBMASK_I) :
                    v[0] + v[1] * BASE | LOBMASK_BI;
        return x & -x;
    }

    function integerLogarithm(value, base) {
        if (base.compareTo(value) <= 0) {
            var tmp = integerLogarithm(value, base.square(base));
            var p = tmp.p;
            var e = tmp.e;
            var t = p.multiply(base);
            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };
        }
        return { p: bigInt(1), e: 0 };
    }

    BigInteger.prototype.bitLength = function () {
        var n = this;
        if (n.compareTo(bigInt(0)) < 0) {
            n = n.negate().subtract(bigInt(1));
        }
        if (n.compareTo(bigInt(0)) === 0) {
            return bigInt(0);
        }
        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));
    }
    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;

    function max(a, b) {
        a = parseValue(a);
        b = parseValue(b);
        return a.greater(b) ? a : b;
    }
    function min(a, b) {
        a = parseValue(a);
        b = parseValue(b);
        return a.lesser(b) ? a : b;
    }
    function gcd(a, b) {
        a = parseValue(a).abs();
        b = parseValue(b).abs();
        if (a.equals(b)) return a;
        if (a.isZero()) return b;
        if (b.isZero()) return a;
        var c = Integer[1], d, t;
        while (a.isEven() && b.isEven()) {
            d = min(roughLOB(a), roughLOB(b));
            a = a.divide(d);
            b = b.divide(d);
            c = c.multiply(d);
        }
        while (a.isEven()) {
            a = a.divide(roughLOB(a));
        }
        do {
            while (b.isEven()) {
                b = b.divide(roughLOB(b));
            }
            if (a.greater(b)) {
                t = b; b = a; a = t;
            }
            b = b.subtract(a);
        } while (!b.isZero());
        return c.isUnit() ? a : a.multiply(c);
    }
    function lcm(a, b) {
        a = parseValue(a).abs();
        b = parseValue(b).abs();
        return a.divide(gcd(a, b)).multiply(b);
    }
    function randBetween(a, b, rng) {
        a = parseValue(a);
        b = parseValue(b);
        var usedRNG = rng || Math.random;
        var low = min(a, b), high = max(a, b);
        var range = high.subtract(low).add(1);
        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));
        var digits = toBase(range, BASE).value;
        var result = [], restricted = true;
        for (var i = 0; i < digits.length; i++) {
            var top = restricted ? digits[i] + (i + 1 < digits.length ? digits[i + 1] / BASE : 0) : BASE;
            var digit = truncate(usedRNG() * top);
            result.push(digit);
            if (digit < digits[i]) restricted = false;
        }
        return low.add(Integer.fromArray(result, BASE, false));
    }

    var parseBase = function (text, base, alphabet, caseSensitive) {
        alphabet = alphabet || DEFAULT_ALPHABET;
        text = String(text);
        if (!caseSensitive) {
            text = text.toLowerCase();
            alphabet = alphabet.toLowerCase();
        }
        var length = text.length;
        var i;
        var absBase = Math.abs(base);
        var alphabetValues = {};
        for (i = 0; i < alphabet.length; i++) {
            alphabetValues[alphabet[i]] = i;
        }
        for (i = 0; i < length; i++) {
            var c = text[i];
            if (c === "-") continue;
            if (c in alphabetValues) {
                if (alphabetValues[c] >= absBase) {
                    if (c === "1" && absBase === 1) continue;
                    throw new Error(c + " is not a valid digit in base " + base + ".");
                }
            }
        }
        base = parseValue(base);
        var digits = [];
        var isNegative = text[0] === "-";
        for (i = isNegative ? 1 : 0; i < text.length; i++) {
            var c = text[i];
            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));
            else if (c === "<") {
                var start = i;
                do { i++; } while (text[i] !== ">" && i < text.length);
                digits.push(parseValue(text.slice(start + 1, i)));
            }
            else throw new Error(c + " is not a valid character");
        }
        return parseBaseFromArray(digits, base, isNegative);
    };

    function parseBaseFromArray(digits, base, isNegative) {
        var val = Integer[0], pow = Integer[1], i;
        for (i = digits.length - 1; i >= 0; i--) {
            val = val.add(digits[i].times(pow));
            pow = pow.times(base);
        }
        return isNegative ? val.negate() : val;
    }

    function stringify(digit, alphabet) {
        alphabet = alphabet || DEFAULT_ALPHABET;
        if (digit < alphabet.length) {
            return alphabet[digit];
        }
        return "<" + digit + ">";
    }

    function toBase(n, base) {
        base = bigInt(base);
        if (base.isZero()) {
            if (n.isZero()) return { value: [0], isNegative: false };
            throw new Error("Cannot convert nonzero numbers to base 0.");
        }
        if (base.equals(-1)) {
            if (n.isZero()) return { value: [0], isNegative: false };
            if (n.isNegative())
                return {
                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))
                        .map(Array.prototype.valueOf, [1, 0])
                    ),
                    isNegative: false
                };

            var arr = Array.apply(null, Array(n.toJSNumber() - 1))
                .map(Array.prototype.valueOf, [0, 1]);
            arr.unshift([1]);
            return {
                value: [].concat.apply([], arr),
                isNegative: false
            };
        }

        var neg = false;
        if (n.isNegative() && base.isPositive()) {
            neg = true;
            n = n.abs();
        }
        if (base.isUnit()) {
            if (n.isZero()) return { value: [0], isNegative: false };

            return {
                value: Array.apply(null, Array(n.toJSNumber()))
                    .map(Number.prototype.valueOf, 1),
                isNegative: neg
            };
        }
        var out = [];
        var left = n, divmod;
        while (left.isNegative() || left.compareAbs(base) >= 0) {
            divmod = left.divmod(base);
            left = divmod.quotient;
            var digit = divmod.remainder;
            if (digit.isNegative()) {
                digit = base.minus(digit).abs();
                left = left.next();
            }
            out.push(digit.toJSNumber());
        }
        out.push(left.toJSNumber());
        return { value: out.reverse(), isNegative: neg };
    }

    function toBaseString(n, base, alphabet) {
        var arr = toBase(n, base);
        return (arr.isNegative ? "-" : "") + arr.value.map(function (x) {
            return stringify(x, alphabet);
        }).join('');
    }

    BigInteger.prototype.toArray = function (radix) {
        return toBase(this, radix);
    };

    SmallInteger.prototype.toArray = function (radix) {
        return toBase(this, radix);
    };

    NativeBigInt.prototype.toArray = function (radix) {
        return toBase(this, radix);
    };

    BigInteger.prototype.toString = function (radix, alphabet) {
        if (radix === undefined) radix = 10;
        if (radix !== 10) return toBaseString(this, radix, alphabet);
        var v = this.value, l = v.length, str = String(v[--l]), zeros = "0000000", digit;
        while (--l >= 0) {
            digit = String(v[l]);
            str += zeros.slice(digit.length) + digit;
        }
        var sign = this.sign ? "-" : "";
        return sign + str;
    };

    SmallInteger.prototype.toString = function (radix, alphabet) {
        if (radix === undefined) radix = 10;
        if (radix != 10) return toBaseString(this, radix, alphabet);
        return String(this.value);
    };

    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;

    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }

    BigInteger.prototype.valueOf = function () {
        return parseInt(this.toString(), 10);
    };
    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;

    SmallInteger.prototype.valueOf = function () {
        return this.value;
    };
    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;
    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {
        return parseInt(this.toString(), 10);
    }

    function parseStringValue(v) {
        if (isPrecise(+v)) {
            var x = +v;
            if (x === truncate(x))
                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);
            throw new Error("Invalid integer: " + v);
        }
        var sign = v[0] === "-";
        if (sign) v = v.slice(1);
        var split = v.split(/e/i);
        if (split.length > 2) throw new Error("Invalid integer: " + split.join("e"));
        if (split.length === 2) {
            var exp = split[1];
            if (exp[0] === "+") exp = exp.slice(1);
            exp = +exp;
            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error("Invalid integer: " + exp + " is not a valid exponent.");
            var text = split[0];
            var decimalPlace = text.indexOf(".");
            if (decimalPlace >= 0) {
                exp -= text.length - decimalPlace - 1;
                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);
            }
            if (exp < 0) throw new Error("Cannot include negative exponent part for integers");
            text += (new Array(exp + 1)).join("0");
            v = text;
        }
        var isValid = /^([0-9][0-9]*)$/.test(v);
        if (!isValid) throw new Error("Invalid integer: " + v);
        if (supportsNativeBigInt) {
            return new NativeBigInt(BigInt(sign ? "-" + v : v));
        }
        var r = [], max = v.length, l = LOG_BASE, min = max - l;
        while (max > 0) {
            r.push(+v.slice(min, max));
            min -= l;
            if (min < 0) min = 0;
            max -= l;
        }
        trim(r);
        return new BigInteger(r, sign);
    }

    function parseNumberValue(v) {
        if (supportsNativeBigInt) {
            return new NativeBigInt(BigInt(v));
        }
        if (isPrecise(v)) {
            if (v !== truncate(v)) throw new Error(v + " is not an integer.");
            return new SmallInteger(v);
        }
        return parseStringValue(v.toString());
    }

    function parseValue(v) {
        if (typeof v === "number") {
            return parseNumberValue(v);
        }
        if (typeof v === "string") {
            return parseStringValue(v);
        }
        if (typeof v === "bigint") {
            return new NativeBigInt(v);
        }
        return v;
    }
    // Pre-define numbers in range [-999,999]
    for (var i = 0; i < 1000; i++) {
        Integer[i] = parseValue(i);
        if (i > 0) Integer[-i] = parseValue(-i);
    }
    // Backwards compatibility
    Integer.one = Integer[1];
    Integer.zero = Integer[0];
    Integer.minusOne = Integer[-1];
    Integer.max = max;
    Integer.min = min;
    Integer.gcd = gcd;
    Integer.lcm = lcm;
    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };
    Integer.randBetween = randBetween;

    Integer.fromArray = function (digits, base, isNegative) {
        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);
    };

    return Integer;
})();

// Node.js check
if ( true && module.hasOwnProperty("exports")) {
    module.exports = bigInt;
}

//amd check
if (typeof define === "function" && define.amd) {
    define( function () {
        return bigInt;
    });
}


/***/ }),

/***/ 1917:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";



var loader = __nccwpck_require__(1161);
var dumper = __nccwpck_require__(8866);


function renamed(from, to) {
  return function () {
    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +
      'Use yaml.' + to + ' instead, which is now safe by default.');
  };
}


module.exports.Type = __nccwpck_require__(6073);
module.exports.Schema = __nccwpck_require__(1082);
module.exports.FAILSAFE_SCHEMA = __nccwpck_require__(8562);
module.exports.JSON_SCHEMA = __nccwpck_require__(1035);
module.exports.CORE_SCHEMA = __nccwpck_require__(2011);
module.exports.DEFAULT_SCHEMA = __nccwpck_require__(8759);
module.exports.load                = loader.load;
module.exports.loadAll             = loader.loadAll;
module.exports.dump                = dumper.dump;
module.exports.YAMLException = __nccwpck_require__(8179);

// Re-export all types in case user wants to create custom schema
module.exports.types = {
  binary:    __nccwpck_require__(7900),
  float:     __nccwpck_require__(2705),
  map:       __nccwpck_require__(6150),
  null:      __nccwpck_require__(721),
  pairs:     __nccwpck_require__(6860),
  set:       __nccwpck_require__(9548),
  timestamp: __nccwpck_require__(9212),
  bool:      __nccwpck_require__(4993),
  int:       __nccwpck_require__(1615),
  merge:     __nccwpck_require__(6104),
  omap:      __nccwpck_require__(9046),
  seq:       __nccwpck_require__(7283),
  str:       __nccwpck_require__(3619)
};

// Removed functions from JS-YAML 3.0.x
module.exports.safeLoad            = renamed('safeLoad', 'load');
module.exports.safeLoadAll         = renamed('safeLoadAll', 'loadAll');
module.exports.safeDump            = renamed('safeDump', 'dump');


/***/ }),

/***/ 6829:
/***/ ((module) => {

"use strict";



function isNothing(subject) {
  return (typeof subject === 'undefined') || (subject === null);
}


function isObject(subject) {
  return (typeof subject === 'object') && (subject !== null);
}


function toArray(sequence) {
  if (Array.isArray(sequence)) return sequence;
  else if (isNothing(sequence)) return [];

  return [ sequence ];
}


function extend(target, source) {
  var index, length, key, sourceKeys;

  if (source) {
    sourceKeys = Object.keys(source);

    for (index = 0, length = sourceKeys.length; index < length; index += 1) {
      key = sourceKeys[index];
      target[key] = source[key];
    }
  }

  return target;
}


function repeat(string, count) {
  var result = '', cycle;

  for (cycle = 0; cycle < count; cycle += 1) {
    result += string;
  }

  return result;
}


function isNegativeZero(number) {
  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);
}


module.exports.isNothing      = isNothing;
module.exports.isObject       = isObject;
module.exports.toArray        = toArray;
module.exports.repeat         = repeat;
module.exports.isNegativeZero = isNegativeZero;
module.exports.extend         = extend;


/***/ }),

/***/ 8866:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


/*eslint-disable no-use-before-define*/

var common              = __nccwpck_require__(6829);
var YAMLException       = __nccwpck_require__(8179);
var DEFAULT_SCHEMA      = __nccwpck_require__(8759);

var _toString       = Object.prototype.toString;
var _hasOwnProperty = Object.prototype.hasOwnProperty;

var CHAR_BOM                  = 0xFEFF;
var CHAR_TAB                  = 0x09; /* Tab */
var CHAR_LINE_FEED            = 0x0A; /* LF */
var CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */
var CHAR_SPACE                = 0x20; /* Space */
var CHAR_EXCLAMATION          = 0x21; /* ! */
var CHAR_DOUBLE_QUOTE         = 0x22; /* " */
var CHAR_SHARP                = 0x23; /* # */
var CHAR_PERCENT              = 0x25; /* % */
var CHAR_AMPERSAND            = 0x26; /* & */
var CHAR_SINGLE_QUOTE         = 0x27; /* ' */
var CHAR_ASTERISK             = 0x2A; /* * */
var CHAR_COMMA                = 0x2C; /* , */
var CHAR_MINUS                = 0x2D; /* - */
var CHAR_COLON                = 0x3A; /* : */
var CHAR_EQUALS               = 0x3D; /* = */
var CHAR_GREATER_THAN         = 0x3E; /* > */
var CHAR_QUESTION             = 0x3F; /* ? */
var CHAR_COMMERCIAL_AT        = 0x40; /* @ */
var CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */
var CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */
var CHAR_GRAVE_ACCENT         = 0x60; /* ` */
var CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */
var CHAR_VERTICAL_LINE        = 0x7C; /* | */
var CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */

var ESCAPE_SEQUENCES = {};

ESCAPE_SEQUENCES[0x00]   = '\\0';
ESCAPE_SEQUENCES[0x07]   = '\\a';
ESCAPE_SEQUENCES[0x08]   = '\\b';
ESCAPE_SEQUENCES[0x09]   = '\\t';
ESCAPE_SEQUENCES[0x0A]   = '\\n';
ESCAPE_SEQUENCES[0x0B]   = '\\v';
ESCAPE_SEQUENCES[0x0C]   = '\\f';
ESCAPE_SEQUENCES[0x0D]   = '\\r';
ESCAPE_SEQUENCES[0x1B]   = '\\e';
ESCAPE_SEQUENCES[0x22]   = '\\"';
ESCAPE_SEQUENCES[0x5C]   = '\\\\';
ESCAPE_SEQUENCES[0x85]   = '\\N';
ESCAPE_SEQUENCES[0xA0]   = '\\_';
ESCAPE_SEQUENCES[0x2028] = '\\L';
ESCAPE_SEQUENCES[0x2029] = '\\P';

var DEPRECATED_BOOLEANS_SYNTAX = [
  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',
  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'
];

var DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\.[0-9_]*)?$/;

function compileStyleMap(schema, map) {
  var result, keys, index, length, tag, style, type;

  if (map === null) return {};

  result = {};
  keys = Object.keys(map);

  for (index = 0, length = keys.length; index < length; index += 1) {
    tag = keys[index];
    style = String(map[tag]);

    if (tag.slice(0, 2) === '!!') {
      tag = 'tag:yaml.org,2002:' + tag.slice(2);
    }
    type = schema.compiledTypeMap['fallback'][tag];

    if (type && _hasOwnProperty.call(type.styleAliases, style)) {
      style = type.styleAliases[style];
    }

    result[tag] = style;
  }

  return result;
}

function encodeHex(character) {
  var string, handle, length;

  string = character.toString(16).toUpperCase();

  if (character <= 0xFF) {
    handle = 'x';
    length = 2;
  } else if (character <= 0xFFFF) {
    handle = 'u';
    length = 4;
  } else if (character <= 0xFFFFFFFF) {
    handle = 'U';
    length = 8;
  } else {
    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');
  }

  return '\\' + handle + common.repeat('0', length - string.length) + string;
}


var QUOTING_TYPE_SINGLE = 1,
    QUOTING_TYPE_DOUBLE = 2;

function State(options) {
  this.schema        = options['schema'] || DEFAULT_SCHEMA;
  this.indent        = Math.max(1, (options['indent'] || 2));
  this.noArrayIndent = options['noArrayIndent'] || false;
  this.skipInvalid   = options['skipInvalid'] || false;
  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);
  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);
  this.sortKeys      = options['sortKeys'] || false;
  this.lineWidth     = options['lineWidth'] || 80;
  this.noRefs        = options['noRefs'] || false;
  this.noCompatMode  = options['noCompatMode'] || false;
  this.condenseFlow  = options['condenseFlow'] || false;
  this.quotingType   = options['quotingType'] === '"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;
  this.forceQuotes   = options['forceQuotes'] || false;
  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;

  this.implicitTypes = this.schema.compiledImplicit;
  this.explicitTypes = this.schema.compiledExplicit;

  this.tag = null;
  this.result = '';

  this.duplicates = [];
  this.usedDuplicates = null;
}

// Indents every line in a string. Empty lines (\n only) are not indented.
function indentString(string, spaces) {
  var ind = common.repeat(' ', spaces),
      position = 0,
      next = -1,
      result = '',
      line,
      length = string.length;

  while (position < length) {
    next = string.indexOf('\n', position);
    if (next === -1) {
      line = string.slice(position);
      position = length;
    } else {
      line = string.slice(position, next + 1);
      position = next + 1;
    }

    if (line.length && line !== '\n') result += ind;

    result += line;
  }

  return result;
}

function generateNextLine(state, level) {
  return '\n' + common.repeat(' ', state.indent * level);
}

function testImplicitResolving(state, str) {
  var index, length, type;

  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {
    type = state.implicitTypes[index];

    if (type.resolve(str)) {
      return true;
    }
  }

  return false;
}

// [33] s-white ::= s-space | s-tab
function isWhitespace(c) {
  return c === CHAR_SPACE || c === CHAR_TAB;
}

// Returns true if the character can be printed without escaping.
// From YAML 1.2: "any allowed characters known to be non-printable
// should also be escaped. [However,] This isn’t mandatory"
// Derived from nb-char - \t - #x85 - #xA0 - #x2028 - #x2029.
function isPrintable(c) {
  return  (0x00020 <= c && c <= 0x00007E)
      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)
      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)
      ||  (0x10000 <= c && c <= 0x10FFFF);
}

// [34] ns-char ::= nb-char - s-white
// [27] nb-char ::= c-printable - b-char - c-byte-order-mark
// [26] b-char  ::= b-line-feed | b-carriage-return
// Including s-white (for some reason, examples doesn't match specs in this aspect)
// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark
function isNsCharOrWhitespace(c) {
  return isPrintable(c)
    && c !== CHAR_BOM
    // - b-char
    && c !== CHAR_CARRIAGE_RETURN
    && c !== CHAR_LINE_FEED;
}

// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out
//                             c = flow-in   ⇒ ns-plain-safe-in
//                             c = block-key ⇒ ns-plain-safe-out
//                             c = flow-key  ⇒ ns-plain-safe-in
// [128] ns-plain-safe-out ::= ns-char
// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator
// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )
//                            | ( /* An ns-char preceding */ “#” )
//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )
function isPlainSafe(c, prev, inblock) {
  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);
  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);
  return (
    // ns-plain-safe
    inblock ? // c = flow-in
      cIsNsCharOrWhitespace
      : cIsNsCharOrWhitespace
        // - c-flow-indicator
        && c !== CHAR_COMMA
        && c !== CHAR_LEFT_SQUARE_BRACKET
        && c !== CHAR_RIGHT_SQUARE_BRACKET
        && c !== CHAR_LEFT_CURLY_BRACKET
        && c !== CHAR_RIGHT_CURLY_BRACKET
  )
    // ns-plain-char
    && c !== CHAR_SHARP // false on '#'
    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '
    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'
    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'
}

// Simplified test for values allowed as the first character in plain style.
function isPlainSafeFirst(c) {
  // Uses a subset of ns-char - c-indicator
  // where ns-char = nb-char - s-white.
  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part
  return isPrintable(c) && c !== CHAR_BOM
    && !isWhitespace(c) // - s-white
    // - (c-indicator ::=
    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”
    && c !== CHAR_MINUS
    && c !== CHAR_QUESTION
    && c !== CHAR_COLON
    && c !== CHAR_COMMA
    && c !== CHAR_LEFT_SQUARE_BRACKET
    && c !== CHAR_RIGHT_SQUARE_BRACKET
    && c !== CHAR_LEFT_CURLY_BRACKET
    && c !== CHAR_RIGHT_CURLY_BRACKET
    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “"”
    && c !== CHAR_SHARP
    && c !== CHAR_AMPERSAND
    && c !== CHAR_ASTERISK
    && c !== CHAR_EXCLAMATION
    && c !== CHAR_VERTICAL_LINE
    && c !== CHAR_EQUALS
    && c !== CHAR_GREATER_THAN
    && c !== CHAR_SINGLE_QUOTE
    && c !== CHAR_DOUBLE_QUOTE
    // | “%” | “@” | “`”)
    && c !== CHAR_PERCENT
    && c !== CHAR_COMMERCIAL_AT
    && c !== CHAR_GRAVE_ACCENT;
}

// Simplified test for values allowed as the last character in plain style.
function isPlainSafeLast(c) {
  // just not whitespace or colon, it will be checked to be plain character later
  return !isWhitespace(c) && c !== CHAR_COLON;
}

// Same as 'string'.codePointAt(pos), but works in older browsers.
function codePointAt(string, pos) {
  var first = string.charCodeAt(pos), second;
  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {
    second = string.charCodeAt(pos + 1);
    if (second >= 0xDC00 && second <= 0xDFFF) {
      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
    }
  }
  return first;
}

// Determines whether block indentation indicator is required.
function needIndentIndicator(string) {
  var leadingSpaceRe = /^\n* /;
  return leadingSpaceRe.test(string);
}

var STYLE_PLAIN   = 1,
    STYLE_SINGLE  = 2,
    STYLE_LITERAL = 3,
    STYLE_FOLDED  = 4,
    STYLE_DOUBLE  = 5;

// Determines which scalar styles are possible and returns the preferred style.
// lineWidth = -1 => no limit.
// Pre-conditions: str.length > 0.
// Post-conditions:
//    STYLE_PLAIN or STYLE_SINGLE => no \n are in the string.
//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).
//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).
function chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,
  testAmbiguousType, quotingType, forceQuotes, inblock) {

  var i;
  var char = 0;
  var prevChar = null;
  var hasLineBreak = false;
  var hasFoldableLine = false; // only checked if shouldTrackWidth
  var shouldTrackWidth = lineWidth !== -1;
  var previousLineBreak = -1; // count the first line correctly
  var plain = isPlainSafeFirst(codePointAt(string, 0))
          && isPlainSafeLast(codePointAt(string, string.length - 1));

  if (singleLineOnly || forceQuotes) {
    // Case: no block styles.
    // Check for disallowed characters to rule out plain and single.
    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {
      char = codePointAt(string, i);
      if (!isPrintable(char)) {
        return STYLE_DOUBLE;
      }
      plain = plain && isPlainSafe(char, prevChar, inblock);
      prevChar = char;
    }
  } else {
    // Case: block styles permitted.
    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {
      char = codePointAt(string, i);
      if (char === CHAR_LINE_FEED) {
        hasLineBreak = true;
        // Check if any line can be folded.
        if (shouldTrackWidth) {
          hasFoldableLine = hasFoldableLine ||
            // Foldable line = too long, and not more-indented.
            (i - previousLineBreak - 1 > lineWidth &&
             string[previousLineBreak + 1] !== ' ');
          previousLineBreak = i;
        }
      } else if (!isPrintable(char)) {
        return STYLE_DOUBLE;
      }
      plain = plain && isPlainSafe(char, prevChar, inblock);
      prevChar = char;
    }
    // in case the end is missing a \n
    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&
      (i - previousLineBreak - 1 > lineWidth &&
       string[previousLineBreak + 1] !== ' '));
  }
  // Although every style can represent \n without escaping, prefer block styles
  // for multiline, since they're more readable and they don't add empty lines.
  // Also prefer folding a super-long line.
  if (!hasLineBreak && !hasFoldableLine) {
    // Strings interpretable as another type have to be quoted;
    // e.g. the string 'true' vs. the boolean true.
    if (plain && !forceQuotes && !testAmbiguousType(string)) {
      return STYLE_PLAIN;
    }
    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;
  }
  // Edge case: block indentation indicator can only have one digit.
  if (indentPerLevel > 9 && needIndentIndicator(string)) {
    return STYLE_DOUBLE;
  }
  // At this point we know block styles are valid.
  // Prefer literal style unless we want to fold.
  if (!forceQuotes) {
    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;
  }
  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;
}

// Note: line breaking/folding is implemented for only the folded style.
// NB. We drop the last trailing newline (if any) of a returned block scalar
//  since the dumper adds its own newline. This always works:
//    • No ending newline => unaffected; already using strip "-" chomping.
//    • Ending newline    => removed then restored.
//  Importantly, this keeps the "+" chomp indicator from gaining an extra line.
function writeScalar(state, string, level, iskey, inblock) {
  state.dump = (function () {
    if (string.length === 0) {
      return state.quotingType === QUOTING_TYPE_DOUBLE ? '""' : "''";
    }
    if (!state.noCompatMode) {
      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {
        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('"' + string + '"') : ("'" + string + "'");
      }
    }

    var indent = state.indent * Math.max(1, level); // no 0-indent scalars
    // As indentation gets deeper, let the width decrease monotonically
    // to the lower bound min(state.lineWidth, 40).
    // Note that this implies
    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.
    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.
    // This behaves better than a constant minimum width which disallows narrower options,
    // or an indent threshold which causes the width to suddenly increase.
    var lineWidth = state.lineWidth === -1
      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);

    // Without knowing if keys are implicit/explicit, assume implicit for safety.
    var singleLineOnly = iskey
      // No block styles in flow mode.
      || (state.flowLevel > -1 && level >= state.flowLevel);
    function testAmbiguity(string) {
      return testImplicitResolving(state, string);
    }

    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,
      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {

      case STYLE_PLAIN:
        return string;
      case STYLE_SINGLE:
        return "'" + string.replace(/'/g, "''") + "'";
      case STYLE_LITERAL:
        return '|' + blockHeader(string, state.indent)
          + dropEndingNewline(indentString(string, indent));
      case STYLE_FOLDED:
        return '>' + blockHeader(string, state.indent)
          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));
      case STYLE_DOUBLE:
        return '"' + escapeString(string, lineWidth) + '"';
      default:
        throw new YAMLException('impossible error: invalid scalar style');
    }
  }());
}

// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.
function blockHeader(string, indentPerLevel) {
  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';

  // note the special case: the string '\n' counts as a "trailing" empty line.
  var clip =          string[string.length - 1] === '\n';
  var keep = clip && (string[string.length - 2] === '\n' || string === '\n');
  var chomp = keep ? '+' : (clip ? '' : '-');

  return indentIndicator + chomp + '\n';
}

// (See the note for writeScalar.)
function dropEndingNewline(string) {
  return string[string.length - 1] === '\n' ? string.slice(0, -1) : string;
}

// Note: a long line without a suitable break point will exceed the width limit.
// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.
function foldString(string, width) {
  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—
  // unless they're before or after a more-indented line, or at the very
  // beginning or end, in which case $k$ maps to $k$.
  // Therefore, parse each chunk as newline(s) followed by a content line.
  var lineRe = /(\n+)([^\n]*)/g;

  // first line (possibly an empty line)
  var result = (function () {
    var nextLF = string.indexOf('\n');
    nextLF = nextLF !== -1 ? nextLF : string.length;
    lineRe.lastIndex = nextLF;
    return foldLine(string.slice(0, nextLF), width);
  }());
  // If we haven't reached the first content line yet, don't add an extra \n.
  var prevMoreIndented = string[0] === '\n' || string[0] === ' ';
  var moreIndented;

  // rest of the lines
  var match;
  while ((match = lineRe.exec(string))) {
    var prefix = match[1], line = match[2];
    moreIndented = (line[0] === ' ');
    result += prefix
      + (!prevMoreIndented && !moreIndented && line !== ''
        ? '\n' : '')
      + foldLine(line, width);
    prevMoreIndented = moreIndented;
  }

  return result;
}

// Greedy line breaking.
// Picks the longest line under the limit each time,
// otherwise settles for the shortest line over the limit.
// NB. More-indented lines *cannot* be folded, as that would add an extra \n.
function foldLine(line, width) {
  if (line === '' || line[0] === ' ') return line;

  // Since a more-indented line adds a \n, breaks can't be followed by a space.
  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.
  var match;
  // start is an inclusive index. end, curr, and next are exclusive.
  var start = 0, end, curr = 0, next = 0;
  var result = '';

  // Invariants: 0 <= start <= length-1.
  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.
  // Inside the loop:
  //   A match implies length >= 2, so curr and next are <= length-2.
  while ((match = breakRe.exec(line))) {
    next = match.index;
    // maintain invariant: curr - start <= width
    if (next - start > width) {
      end = (curr > start) ? curr : next; // derive end <= length-2
      result += '\n' + line.slice(start, end);
      // skip the space that was output as \n
      start = end + 1;                    // derive start <= length-1
    }
    curr = next;
  }

  // By the invariants, start <= length-1, so there is something left over.
  // It is either the whole string or a part starting from non-whitespace.
  result += '\n';
  // Insert a break if the remainder is too long and there is a break available.
  if (line.length - start > width && curr > start) {
    result += line.slice(start, curr) + '\n' + line.slice(curr + 1);
  } else {
    result += line.slice(start);
  }

  return result.slice(1); // drop extra \n joiner
}

// Escapes a double-quoted string.
function escapeString(string) {
  var result = '';
  var char = 0;
  var escapeSeq;

  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {
    char = codePointAt(string, i);
    escapeSeq = ESCAPE_SEQUENCES[char];

    if (!escapeSeq && isPrintable(char)) {
      result += string[i];
      if (char >= 0x10000) result += string[i + 1];
    } else {
      result += escapeSeq || encodeHex(char);
    }
  }

  return result;
}

function writeFlowSequence(state, level, object) {
  var _result = '',
      _tag    = state.tag,
      index,
      length,
      value;

  for (index = 0, length = object.length; index < length; index += 1) {
    value = object[index];

    if (state.replacer) {
      value = state.replacer.call(object, String(index), value);
    }

    // Write only valid elements, put null instead of invalid elements.
    if (writeNode(state, level, value, false, false) ||
        (typeof value === 'undefined' &&
         writeNode(state, level, null, false, false))) {

      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');
      _result += state.dump;
    }
  }

  state.tag = _tag;
  state.dump = '[' + _result + ']';
}

function writeBlockSequence(state, level, object, compact) {
  var _result = '',
      _tag    = state.tag,
      index,
      length,
      value;

  for (index = 0, length = object.length; index < length; index += 1) {
    value = object[index];

    if (state.replacer) {
      value = state.replacer.call(object, String(index), value);
    }

    // Write only valid elements, put null instead of invalid elements.
    if (writeNode(state, level + 1, value, true, true, false, true) ||
        (typeof value === 'undefined' &&
         writeNode(state, level + 1, null, true, true, false, true))) {

      if (!compact || _result !== '') {
        _result += generateNextLine(state, level);
      }

      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
        _result += '-';
      } else {
        _result += '- ';
      }

      _result += state.dump;
    }
  }

  state.tag = _tag;
  state.dump = _result || '[]'; // Empty sequence if no valid values.
}

function writeFlowMapping(state, level, object) {
  var _result       = '',
      _tag          = state.tag,
      objectKeyList = Object.keys(object),
      index,
      length,
      objectKey,
      objectValue,
      pairBuffer;

  for (index = 0, length = objectKeyList.length; index < length; index += 1) {

    pairBuffer = '';
    if (_result !== '') pairBuffer += ', ';

    if (state.condenseFlow) pairBuffer += '"';

    objectKey = objectKeyList[index];
    objectValue = object[objectKey];

    if (state.replacer) {
      objectValue = state.replacer.call(object, objectKey, objectValue);
    }

    if (!writeNode(state, level, objectKey, false, false)) {
      continue; // Skip this pair because of invalid key;
    }

    if (state.dump.length > 1024) pairBuffer += '? ';

    pairBuffer += state.dump + (state.condenseFlow ? '"' : '') + ':' + (state.condenseFlow ? '' : ' ');

    if (!writeNode(state, level, objectValue, false, false)) {
      continue; // Skip this pair because of invalid value.
    }

    pairBuffer += state.dump;

    // Both key and value are valid.
    _result += pairBuffer;
  }

  state.tag = _tag;
  state.dump = '{' + _result + '}';
}

function writeBlockMapping(state, level, object, compact) {
  var _result       = '',
      _tag          = state.tag,
      objectKeyList = Object.keys(object),
      index,
      length,
      objectKey,
      objectValue,
      explicitPair,
      pairBuffer;

  // Allow sorting keys so that the output file is deterministic
  if (state.sortKeys === true) {
    // Default sorting
    objectKeyList.sort();
  } else if (typeof state.sortKeys === 'function') {
    // Custom sort function
    objectKeyList.sort(state.sortKeys);
  } else if (state.sortKeys) {
    // Something is wrong
    throw new YAMLException('sortKeys must be a boolean or a function');
  }

  for (index = 0, length = objectKeyList.length; index < length; index += 1) {
    pairBuffer = '';

    if (!compact || _result !== '') {
      pairBuffer += generateNextLine(state, level);
    }

    objectKey = objectKeyList[index];
    objectValue = object[objectKey];

    if (state.replacer) {
      objectValue = state.replacer.call(object, objectKey, objectValue);
    }

    if (!writeNode(state, level + 1, objectKey, true, true, true)) {
      continue; // Skip this pair because of invalid key.
    }

    explicitPair = (state.tag !== null && state.tag !== '?') ||
                   (state.dump && state.dump.length > 1024);

    if (explicitPair) {
      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
        pairBuffer += '?';
      } else {
        pairBuffer += '? ';
      }
    }

    pairBuffer += state.dump;

    if (explicitPair) {
      pairBuffer += generateNextLine(state, level);
    }

    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {
      continue; // Skip this pair because of invalid value.
    }

    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
      pairBuffer += ':';
    } else {
      pairBuffer += ': ';
    }

    pairBuffer += state.dump;

    // Both key and value are valid.
    _result += pairBuffer;
  }

  state.tag = _tag;
  state.dump = _result || '{}'; // Empty mapping if no valid pairs.
}

function detectType(state, object, explicit) {
  var _result, typeList, index, length, type, style;

  typeList = explicit ? state.explicitTypes : state.implicitTypes;

  for (index = 0, length = typeList.length; index < length; index += 1) {
    type = typeList[index];

    if ((type.instanceOf  || type.predicate) &&
        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&
        (!type.predicate  || type.predicate(object))) {

      if (explicit) {
        if (type.multi && type.representName) {
          state.tag = type.representName(object);
        } else {
          state.tag = type.tag;
        }
      } else {
        state.tag = '?';
      }

      if (type.represent) {
        style = state.styleMap[type.tag] || type.defaultStyle;

        if (_toString.call(type.represent) === '[object Function]') {
          _result = type.represent(object, style);
        } else if (_hasOwnProperty.call(type.represent, style)) {
          _result = type.represent[style](object, style);
        } else {
          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not "' + style + '" style');
        }

        state.dump = _result;
      }

      return true;
    }
  }

  return false;
}

// Serializes `object` and writes it to global `result`.
// Returns true on success, or false on invalid object.
//
function writeNode(state, level, object, block, compact, iskey, isblockseq) {
  state.tag = null;
  state.dump = object;

  if (!detectType(state, object, false)) {
    detectType(state, object, true);
  }

  var type = _toString.call(state.dump);
  var inblock = block;
  var tagStr;

  if (block) {
    block = (state.flowLevel < 0 || state.flowLevel > level);
  }

  var objectOrArray = type === '[object Object]' || type === '[object Array]',
      duplicateIndex,
      duplicate;

  if (objectOrArray) {
    duplicateIndex = state.duplicates.indexOf(object);
    duplicate = duplicateIndex !== -1;
  }

  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {
    compact = false;
  }

  if (duplicate && state.usedDuplicates[duplicateIndex]) {
    state.dump = '*ref_' + duplicateIndex;
  } else {
    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {
      state.usedDuplicates[duplicateIndex] = true;
    }
    if (type === '[object Object]') {
      if (block && (Object.keys(state.dump).length !== 0)) {
        writeBlockMapping(state, level, state.dump, compact);
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + state.dump;
        }
      } else {
        writeFlowMapping(state, level, state.dump);
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;
        }
      }
    } else if (type === '[object Array]') {
      if (block && (state.dump.length !== 0)) {
        if (state.noArrayIndent && !isblockseq && level > 0) {
          writeBlockSequence(state, level - 1, state.dump, compact);
        } else {
          writeBlockSequence(state, level, state.dump, compact);
        }
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + state.dump;
        }
      } else {
        writeFlowSequence(state, level, state.dump);
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;
        }
      }
    } else if (type === '[object String]') {
      if (state.tag !== '?') {
        writeScalar(state, state.dump, level, iskey, inblock);
      }
    } else if (type === '[object Undefined]') {
      return false;
    } else {
      if (state.skipInvalid) return false;
      throw new YAMLException('unacceptable kind of an object to dump ' + type);
    }

    if (state.tag !== null && state.tag !== '?') {
      // Need to encode all characters except those allowed by the spec:
      //
      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */
      // [36] ns-hex-digit    ::=  ns-dec-digit
      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */
      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */
      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”
      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”
      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”
      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”
      //
      // Also need to encode '!' because it has special meaning (end of tag prefix).
      //
      tagStr = encodeURI(
        state.tag[0] === '!' ? state.tag.slice(1) : state.tag
      ).replace(/!/g, '%21');

      if (state.tag[0] === '!') {
        tagStr = '!' + tagStr;
      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {
        tagStr = '!!' + tagStr.slice(18);
      } else {
        tagStr = '!<' + tagStr + '>';
      }

      state.dump = tagStr + ' ' + state.dump;
    }
  }

  return true;
}

function getDuplicateReferences(object, state) {
  var objects = [],
      duplicatesIndexes = [],
      index,
      length;

  inspectNode(object, objects, duplicatesIndexes);

  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {
    state.duplicates.push(objects[duplicatesIndexes[index]]);
  }
  state.usedDuplicates = new Array(length);
}

function inspectNode(object, objects, duplicatesIndexes) {
  var objectKeyList,
      index,
      length;

  if (object !== null && typeof object === 'object') {
    index = objects.indexOf(object);
    if (index !== -1) {
      if (duplicatesIndexes.indexOf(index) === -1) {
        duplicatesIndexes.push(index);
      }
    } else {
      objects.push(object);

      if (Array.isArray(object)) {
        for (index = 0, length = object.length; index < length; index += 1) {
          inspectNode(object[index], objects, duplicatesIndexes);
        }
      } else {
        objectKeyList = Object.keys(object);

        for (index = 0, length = objectKeyList.length; index < length; index += 1) {
          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);
        }
      }
    }
  }
}

function dump(input, options) {
  options = options || {};

  var state = new State(options);

  if (!state.noRefs) getDuplicateReferences(input, state);

  var value = input;

  if (state.replacer) {
    value = state.replacer.call({ '': value }, '', value);
  }

  if (writeNode(state, 0, value, true, true)) return state.dump + '\n';

  return '';
}

module.exports.dump = dump;


/***/ }),

/***/ 8179:
/***/ ((module) => {

"use strict";
// YAML error class. http://stackoverflow.com/questions/8458984
//



function formatError(exception, compact) {
  var where = '', message = exception.reason || '(unknown reason)';

  if (!exception.mark) return message;

  if (exception.mark.name) {
    where += 'in "' + exception.mark.name + '" ';
  }

  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';

  if (!compact && exception.mark.snippet) {
    where += '\n\n' + exception.mark.snippet;
  }

  return message + ' ' + where;
}


function YAMLException(reason, mark) {
  // Super constructor
  Error.call(this);

  this.name = 'YAMLException';
  this.reason = reason;
  this.mark = mark;
  this.message = formatError(this, false);

  // Include stack trace in error object
  if (Error.captureStackTrace) {
    // Chrome and NodeJS
    Error.captureStackTrace(this, this.constructor);
  } else {
    // FF, IE 10+ and Safari 6+. Fallback for others
    this.stack = (new Error()).stack || '';
  }
}


// Inherit from Error
YAMLException.prototype = Object.create(Error.prototype);
YAMLException.prototype.constructor = YAMLException;


YAMLException.prototype.toString = function toString(compact) {
  return this.name + ': ' + formatError(this, compact);
};


module.exports = YAMLException;


/***/ }),

/***/ 1161:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


/*eslint-disable max-len,no-use-before-define*/

var common              = __nccwpck_require__(6829);
var YAMLException       = __nccwpck_require__(8179);
var makeSnippet         = __nccwpck_require__(6975);
var DEFAULT_SCHEMA      = __nccwpck_require__(8759);


var _hasOwnProperty = Object.prototype.hasOwnProperty;


var CONTEXT_FLOW_IN   = 1;
var CONTEXT_FLOW_OUT  = 2;
var CONTEXT_BLOCK_IN  = 3;
var CONTEXT_BLOCK_OUT = 4;


var CHOMPING_CLIP  = 1;
var CHOMPING_STRIP = 2;
var CHOMPING_KEEP  = 3;


var PATTERN_NON_PRINTABLE         = /[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
var PATTERN_NON_ASCII_LINE_BREAKS = /[\x85\u2028\u2029]/;
var PATTERN_FLOW_INDICATORS       = /[,\[\]\{\}]/;
var PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\-]+!)$/i;
var PATTERN_TAG_URI               = /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;


function _class(obj) { return Object.prototype.toString.call(obj); }

function is_EOL(c) {
  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);
}

function is_WHITE_SPACE(c) {
  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);
}

function is_WS_OR_EOL(c) {
  return (c === 0x09/* Tab */) ||
         (c === 0x20/* Space */) ||
         (c === 0x0A/* LF */) ||
         (c === 0x0D/* CR */);
}

function is_FLOW_INDICATOR(c) {
  return c === 0x2C/* , */ ||
         c === 0x5B/* [ */ ||
         c === 0x5D/* ] */ ||
         c === 0x7B/* { */ ||
         c === 0x7D/* } */;
}

function fromHexCode(c) {
  var lc;

  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {
    return c - 0x30;
  }

  /*eslint-disable no-bitwise*/
  lc = c | 0x20;

  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {
    return lc - 0x61 + 10;
  }

  return -1;
}

function escapedHexLen(c) {
  if (c === 0x78/* x */) { return 2; }
  if (c === 0x75/* u */) { return 4; }
  if (c === 0x55/* U */) { return 8; }
  return 0;
}

function fromDecimalCode(c) {
  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {
    return c - 0x30;
  }

  return -1;
}

function simpleEscapeSequence(c) {
  /* eslint-disable indent */
  return (c === 0x30/* 0 */) ? '\x00' :
        (c === 0x61/* a */) ? '\x07' :
        (c === 0x62/* b */) ? '\x08' :
        (c === 0x74/* t */) ? '\x09' :
        (c === 0x09/* Tab */) ? '\x09' :
        (c === 0x6E/* n */) ? '\x0A' :
        (c === 0x76/* v */) ? '\x0B' :
        (c === 0x66/* f */) ? '\x0C' :
        (c === 0x72/* r */) ? '\x0D' :
        (c === 0x65/* e */) ? '\x1B' :
        (c === 0x20/* Space */) ? ' ' :
        (c === 0x22/* " */) ? '\x22' :
        (c === 0x2F/* / */) ? '/' :
        (c === 0x5C/* \ */) ? '\x5C' :
        (c === 0x4E/* N */) ? '\x85' :
        (c === 0x5F/* _ */) ? '\xA0' :
        (c === 0x4C/* L */) ? '\u2028' :
        (c === 0x50/* P */) ? '\u2029' : '';
}

function charFromCodepoint(c) {
  if (c <= 0xFFFF) {
    return String.fromCharCode(c);
  }
  // Encode UTF-16 surrogate pair
  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF
  return String.fromCharCode(
    ((c - 0x010000) >> 10) + 0xD800,
    ((c - 0x010000) & 0x03FF) + 0xDC00
  );
}

var simpleEscapeCheck = new Array(256); // integer, for fast access
var simpleEscapeMap = new Array(256);
for (var i = 0; i < 256; i++) {
  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;
  simpleEscapeMap[i] = simpleEscapeSequence(i);
}


function State(input, options) {
  this.input = input;

  this.filename  = options['filename']  || null;
  this.schema    = options['schema']    || DEFAULT_SCHEMA;
  this.onWarning = options['onWarning'] || null;
  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents
  // if such documents have no explicit %YAML directive
  this.legacy    = options['legacy']    || false;

  this.json      = options['json']      || false;
  this.listener  = options['listener']  || null;

  this.implicitTypes = this.schema.compiledImplicit;
  this.typeMap       = this.schema.compiledTypeMap;

  this.length     = input.length;
  this.position   = 0;
  this.line       = 0;
  this.lineStart  = 0;
  this.lineIndent = 0;

  // position of first leading tab in the current line,
  // used to make sure there are no tabs in the indentation
  this.firstTabInLine = -1;

  this.documents = [];

  /*
  this.version;
  this.checkLineBreaks;
  this.tagMap;
  this.anchorMap;
  this.tag;
  this.anchor;
  this.kind;
  this.result;*/

}


function generateError(state, message) {
  var mark = {
    name:     state.filename,
    buffer:   state.input.slice(0, -1), // omit trailing \0
    position: state.position,
    line:     state.line,
    column:   state.position - state.lineStart
  };

  mark.snippet = makeSnippet(mark);

  return new YAMLException(message, mark);
}

function throwError(state, message) {
  throw generateError(state, message);
}

function throwWarning(state, message) {
  if (state.onWarning) {
    state.onWarning.call(null, generateError(state, message));
  }
}


var directiveHandlers = {

  YAML: function handleYamlDirective(state, name, args) {

    var match, major, minor;

    if (state.version !== null) {
      throwError(state, 'duplication of %YAML directive');
    }

    if (args.length !== 1) {
      throwError(state, 'YAML directive accepts exactly one argument');
    }

    match = /^([0-9]+)\.([0-9]+)$/.exec(args[0]);

    if (match === null) {
      throwError(state, 'ill-formed argument of the YAML directive');
    }

    major = parseInt(match[1], 10);
    minor = parseInt(match[2], 10);

    if (major !== 1) {
      throwError(state, 'unacceptable YAML version of the document');
    }

    state.version = args[0];
    state.checkLineBreaks = (minor < 2);

    if (minor !== 1 && minor !== 2) {
      throwWarning(state, 'unsupported YAML version of the document');
    }
  },

  TAG: function handleTagDirective(state, name, args) {

    var handle, prefix;

    if (args.length !== 2) {
      throwError(state, 'TAG directive accepts exactly two arguments');
    }

    handle = args[0];
    prefix = args[1];

    if (!PATTERN_TAG_HANDLE.test(handle)) {
      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');
    }

    if (_hasOwnProperty.call(state.tagMap, handle)) {
      throwError(state, 'there is a previously declared suffix for "' + handle + '" tag handle');
    }

    if (!PATTERN_TAG_URI.test(prefix)) {
      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');
    }

    try {
      prefix = decodeURIComponent(prefix);
    } catch (err) {
      throwError(state, 'tag prefix is malformed: ' + prefix);
    }

    state.tagMap[handle] = prefix;
  }
};


function captureSegment(state, start, end, checkJson) {
  var _position, _length, _character, _result;

  if (start < end) {
    _result = state.input.slice(start, end);

    if (checkJson) {
      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {
        _character = _result.charCodeAt(_position);
        if (!(_character === 0x09 ||
              (0x20 <= _character && _character <= 0x10FFFF))) {
          throwError(state, 'expected valid JSON character');
        }
      }
    } else if (PATTERN_NON_PRINTABLE.test(_result)) {
      throwError(state, 'the stream contains non-printable characters');
    }

    state.result += _result;
  }
}

function mergeMappings(state, destination, source, overridableKeys) {
  var sourceKeys, key, index, quantity;

  if (!common.isObject(source)) {
    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');
  }

  sourceKeys = Object.keys(source);

  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {
    key = sourceKeys[index];

    if (!_hasOwnProperty.call(destination, key)) {
      destination[key] = source[key];
      overridableKeys[key] = true;
    }
  }
}

function storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,
  startLine, startLineStart, startPos) {

  var index, quantity;

  // The output is a plain object here, so keys can only be strings.
  // We need to convert keyNode to a string, but doing so can hang the process
  // (deeply nested arrays that explode exponentially using aliases).
  if (Array.isArray(keyNode)) {
    keyNode = Array.prototype.slice.call(keyNode);

    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {
      if (Array.isArray(keyNode[index])) {
        throwError(state, 'nested arrays are not supported inside keys');
      }

      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {
        keyNode[index] = '[object Object]';
      }
    }
  }

  // Avoid code execution in load() via toString property
  // (still use its own toString for arrays, timestamps,
  // and whatever user schema extensions happen to have @@toStringTag)
  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {
    keyNode = '[object Object]';
  }


  keyNode = String(keyNode);

  if (_result === null) {
    _result = {};
  }

  if (keyTag === 'tag:yaml.org,2002:merge') {
    if (Array.isArray(valueNode)) {
      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {
        mergeMappings(state, _result, valueNode[index], overridableKeys);
      }
    } else {
      mergeMappings(state, _result, valueNode, overridableKeys);
    }
  } else {
    if (!state.json &&
        !_hasOwnProperty.call(overridableKeys, keyNode) &&
        _hasOwnProperty.call(_result, keyNode)) {
      state.line = startLine || state.line;
      state.lineStart = startLineStart || state.lineStart;
      state.position = startPos || state.position;
      throwError(state, 'duplicated mapping key');
    }

    // used for this specific key only because Object.defineProperty is slow
    if (keyNode === '__proto__') {
      Object.defineProperty(_result, keyNode, {
        configurable: true,
        enumerable: true,
        writable: true,
        value: valueNode
      });
    } else {
      _result[keyNode] = valueNode;
    }
    delete overridableKeys[keyNode];
  }

  return _result;
}

function readLineBreak(state) {
  var ch;

  ch = state.input.charCodeAt(state.position);

  if (ch === 0x0A/* LF */) {
    state.position++;
  } else if (ch === 0x0D/* CR */) {
    state.position++;
    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {
      state.position++;
    }
  } else {
    throwError(state, 'a line break is expected');
  }

  state.line += 1;
  state.lineStart = state.position;
  state.firstTabInLine = -1;
}

function skipSeparationSpace(state, allowComments, checkIndent) {
  var lineBreaks = 0,
      ch = state.input.charCodeAt(state.position);

  while (ch !== 0) {
    while (is_WHITE_SPACE(ch)) {
      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {
        state.firstTabInLine = state.position;
      }
      ch = state.input.charCodeAt(++state.position);
    }

    if (allowComments && ch === 0x23/* # */) {
      do {
        ch = state.input.charCodeAt(++state.position);
      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);
    }

    if (is_EOL(ch)) {
      readLineBreak(state);

      ch = state.input.charCodeAt(state.position);
      lineBreaks++;
      state.lineIndent = 0;

      while (ch === 0x20/* Space */) {
        state.lineIndent++;
        ch = state.input.charCodeAt(++state.position);
      }
    } else {
      break;
    }
  }

  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {
    throwWarning(state, 'deficient indentation');
  }

  return lineBreaks;
}

function testDocumentSeparator(state) {
  var _position = state.position,
      ch;

  ch = state.input.charCodeAt(_position);

  // Condition state.position === state.lineStart is tested
  // in parent on each call, for efficiency. No needs to test here again.
  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&
      ch === state.input.charCodeAt(_position + 1) &&
      ch === state.input.charCodeAt(_position + 2)) {

    _position += 3;

    ch = state.input.charCodeAt(_position);

    if (ch === 0 || is_WS_OR_EOL(ch)) {
      return true;
    }
  }

  return false;
}

function writeFoldedLines(state, count) {
  if (count === 1) {
    state.result += ' ';
  } else if (count > 1) {
    state.result += common.repeat('\n', count - 1);
  }
}


function readPlainScalar(state, nodeIndent, withinFlowCollection) {
  var preceding,
      following,
      captureStart,
      captureEnd,
      hasPendingContent,
      _line,
      _lineStart,
      _lineIndent,
      _kind = state.kind,
      _result = state.result,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (is_WS_OR_EOL(ch)      ||
      is_FLOW_INDICATOR(ch) ||
      ch === 0x23/* # */    ||
      ch === 0x26/* & */    ||
      ch === 0x2A/* * */    ||
      ch === 0x21/* ! */    ||
      ch === 0x7C/* | */    ||
      ch === 0x3E/* > */    ||
      ch === 0x27/* ' */    ||
      ch === 0x22/* " */    ||
      ch === 0x25/* % */    ||
      ch === 0x40/* @ */    ||
      ch === 0x60/* ` */) {
    return false;
  }

  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {
    following = state.input.charCodeAt(state.position + 1);

    if (is_WS_OR_EOL(following) ||
        withinFlowCollection && is_FLOW_INDICATOR(following)) {
      return false;
    }
  }

  state.kind = 'scalar';
  state.result = '';
  captureStart = captureEnd = state.position;
  hasPendingContent = false;

  while (ch !== 0) {
    if (ch === 0x3A/* : */) {
      following = state.input.charCodeAt(state.position + 1);

      if (is_WS_OR_EOL(following) ||
          withinFlowCollection && is_FLOW_INDICATOR(following)) {
        break;
      }

    } else if (ch === 0x23/* # */) {
      preceding = state.input.charCodeAt(state.position - 1);

      if (is_WS_OR_EOL(preceding)) {
        break;
      }

    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||
               withinFlowCollection && is_FLOW_INDICATOR(ch)) {
      break;

    } else if (is_EOL(ch)) {
      _line = state.line;
      _lineStart = state.lineStart;
      _lineIndent = state.lineIndent;
      skipSeparationSpace(state, false, -1);

      if (state.lineIndent >= nodeIndent) {
        hasPendingContent = true;
        ch = state.input.charCodeAt(state.position);
        continue;
      } else {
        state.position = captureEnd;
        state.line = _line;
        state.lineStart = _lineStart;
        state.lineIndent = _lineIndent;
        break;
      }
    }

    if (hasPendingContent) {
      captureSegment(state, captureStart, captureEnd, false);
      writeFoldedLines(state, state.line - _line);
      captureStart = captureEnd = state.position;
      hasPendingContent = false;
    }

    if (!is_WHITE_SPACE(ch)) {
      captureEnd = state.position + 1;
    }

    ch = state.input.charCodeAt(++state.position);
  }

  captureSegment(state, captureStart, captureEnd, false);

  if (state.result) {
    return true;
  }

  state.kind = _kind;
  state.result = _result;
  return false;
}

function readSingleQuotedScalar(state, nodeIndent) {
  var ch,
      captureStart, captureEnd;

  ch = state.input.charCodeAt(state.position);

  if (ch !== 0x27/* ' */) {
    return false;
  }

  state.kind = 'scalar';
  state.result = '';
  state.position++;
  captureStart = captureEnd = state.position;

  while ((ch = state.input.charCodeAt(state.position)) !== 0) {
    if (ch === 0x27/* ' */) {
      captureSegment(state, captureStart, state.position, true);
      ch = state.input.charCodeAt(++state.position);

      if (ch === 0x27/* ' */) {
        captureStart = state.position;
        state.position++;
        captureEnd = state.position;
      } else {
        return true;
      }

    } else if (is_EOL(ch)) {
      captureSegment(state, captureStart, captureEnd, true);
      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
      captureStart = captureEnd = state.position;

    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
      throwError(state, 'unexpected end of the document within a single quoted scalar');

    } else {
      state.position++;
      captureEnd = state.position;
    }
  }

  throwError(state, 'unexpected end of the stream within a single quoted scalar');
}

function readDoubleQuotedScalar(state, nodeIndent) {
  var captureStart,
      captureEnd,
      hexLength,
      hexResult,
      tmp,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch !== 0x22/* " */) {
    return false;
  }

  state.kind = 'scalar';
  state.result = '';
  state.position++;
  captureStart = captureEnd = state.position;

  while ((ch = state.input.charCodeAt(state.position)) !== 0) {
    if (ch === 0x22/* " */) {
      captureSegment(state, captureStart, state.position, true);
      state.position++;
      return true;

    } else if (ch === 0x5C/* \ */) {
      captureSegment(state, captureStart, state.position, true);
      ch = state.input.charCodeAt(++state.position);

      if (is_EOL(ch)) {
        skipSeparationSpace(state, false, nodeIndent);

        // TODO: rework to inline fn with no type cast?
      } else if (ch < 256 && simpleEscapeCheck[ch]) {
        state.result += simpleEscapeMap[ch];
        state.position++;

      } else if ((tmp = escapedHexLen(ch)) > 0) {
        hexLength = tmp;
        hexResult = 0;

        for (; hexLength > 0; hexLength--) {
          ch = state.input.charCodeAt(++state.position);

          if ((tmp = fromHexCode(ch)) >= 0) {
            hexResult = (hexResult << 4) + tmp;

          } else {
            throwError(state, 'expected hexadecimal character');
          }
        }

        state.result += charFromCodepoint(hexResult);

        state.position++;

      } else {
        throwError(state, 'unknown escape sequence');
      }

      captureStart = captureEnd = state.position;

    } else if (is_EOL(ch)) {
      captureSegment(state, captureStart, captureEnd, true);
      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
      captureStart = captureEnd = state.position;

    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
      throwError(state, 'unexpected end of the document within a double quoted scalar');

    } else {
      state.position++;
      captureEnd = state.position;
    }
  }

  throwError(state, 'unexpected end of the stream within a double quoted scalar');
}

function readFlowCollection(state, nodeIndent) {
  var readNext = true,
      _line,
      _lineStart,
      _pos,
      _tag     = state.tag,
      _result,
      _anchor  = state.anchor,
      following,
      terminator,
      isPair,
      isExplicitPair,
      isMapping,
      overridableKeys = Object.create(null),
      keyNode,
      keyTag,
      valueNode,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch === 0x5B/* [ */) {
    terminator = 0x5D;/* ] */
    isMapping = false;
    _result = [];
  } else if (ch === 0x7B/* { */) {
    terminator = 0x7D;/* } */
    isMapping = true;
    _result = {};
  } else {
    return false;
  }

  if (state.anchor !== null) {
    state.anchorMap[state.anchor] = _result;
  }

  ch = state.input.charCodeAt(++state.position);

  while (ch !== 0) {
    skipSeparationSpace(state, true, nodeIndent);

    ch = state.input.charCodeAt(state.position);

    if (ch === terminator) {
      state.position++;
      state.tag = _tag;
      state.anchor = _anchor;
      state.kind = isMapping ? 'mapping' : 'sequence';
      state.result = _result;
      return true;
    } else if (!readNext) {
      throwError(state, 'missed comma between flow collection entries');
    } else if (ch === 0x2C/* , */) {
      // "flow collection entries can never be completely empty", as per YAML 1.2, section 7.4
      throwError(state, "expected the node content, but found ','");
    }

    keyTag = keyNode = valueNode = null;
    isPair = isExplicitPair = false;

    if (ch === 0x3F/* ? */) {
      following = state.input.charCodeAt(state.position + 1);

      if (is_WS_OR_EOL(following)) {
        isPair = isExplicitPair = true;
        state.position++;
        skipSeparationSpace(state, true, nodeIndent);
      }
    }

    _line = state.line; // Save the current line.
    _lineStart = state.lineStart;
    _pos = state.position;
    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
    keyTag = state.tag;
    keyNode = state.result;
    skipSeparationSpace(state, true, nodeIndent);

    ch = state.input.charCodeAt(state.position);

    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {
      isPair = true;
      ch = state.input.charCodeAt(++state.position);
      skipSeparationSpace(state, true, nodeIndent);
      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
      valueNode = state.result;
    }

    if (isMapping) {
      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);
    } else if (isPair) {
      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));
    } else {
      _result.push(keyNode);
    }

    skipSeparationSpace(state, true, nodeIndent);

    ch = state.input.charCodeAt(state.position);

    if (ch === 0x2C/* , */) {
      readNext = true;
      ch = state.input.charCodeAt(++state.position);
    } else {
      readNext = false;
    }
  }

  throwError(state, 'unexpected end of the stream within a flow collection');
}

function readBlockScalar(state, nodeIndent) {
  var captureStart,
      folding,
      chomping       = CHOMPING_CLIP,
      didReadContent = false,
      detectedIndent = false,
      textIndent     = nodeIndent,
      emptyLines     = 0,
      atMoreIndented = false,
      tmp,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch === 0x7C/* | */) {
    folding = false;
  } else if (ch === 0x3E/* > */) {
    folding = true;
  } else {
    return false;
  }

  state.kind = 'scalar';
  state.result = '';

  while (ch !== 0) {
    ch = state.input.charCodeAt(++state.position);

    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {
      if (CHOMPING_CLIP === chomping) {
        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;
      } else {
        throwError(state, 'repeat of a chomping mode identifier');
      }

    } else if ((tmp = fromDecimalCode(ch)) >= 0) {
      if (tmp === 0) {
        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');
      } else if (!detectedIndent) {
        textIndent = nodeIndent + tmp - 1;
        detectedIndent = true;
      } else {
        throwError(state, 'repeat of an indentation width identifier');
      }

    } else {
      break;
    }
  }

  if (is_WHITE_SPACE(ch)) {
    do { ch = state.input.charCodeAt(++state.position); }
    while (is_WHITE_SPACE(ch));

    if (ch === 0x23/* # */) {
      do { ch = state.input.charCodeAt(++state.position); }
      while (!is_EOL(ch) && (ch !== 0));
    }
  }

  while (ch !== 0) {
    readLineBreak(state);
    state.lineIndent = 0;

    ch = state.input.charCodeAt(state.position);

    while ((!detectedIndent || state.lineIndent < textIndent) &&
           (ch === 0x20/* Space */)) {
      state.lineIndent++;
      ch = state.input.charCodeAt(++state.position);
    }

    if (!detectedIndent && state.lineIndent > textIndent) {
      textIndent = state.lineIndent;
    }

    if (is_EOL(ch)) {
      emptyLines++;
      continue;
    }

    // End of the scalar.
    if (state.lineIndent < textIndent) {

      // Perform the chomping.
      if (chomping === CHOMPING_KEEP) {
        state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);
      } else if (chomping === CHOMPING_CLIP) {
        if (didReadContent) { // i.e. only if the scalar is not empty.
          state.result += '\n';
        }
      }

      // Break this `while` cycle and go to the funciton's epilogue.
      break;
    }

    // Folded style: use fancy rules to handle line breaks.
    if (folding) {

      // Lines starting with white space characters (more-indented lines) are not folded.
      if (is_WHITE_SPACE(ch)) {
        atMoreIndented = true;
        // except for the first content line (cf. Example 8.1)
        state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);

      // End of more-indented block.
      } else if (atMoreIndented) {
        atMoreIndented = false;
        state.result += common.repeat('\n', emptyLines + 1);

      // Just one line break - perceive as the same line.
      } else if (emptyLines === 0) {
        if (didReadContent) { // i.e. only if we have already read some scalar content.
          state.result += ' ';
        }

      // Several line breaks - perceive as different lines.
      } else {
        state.result += common.repeat('\n', emptyLines);
      }

    // Literal style: just add exact number of line breaks between content lines.
    } else {
      // Keep all line breaks except the header line break.
      state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);
    }

    didReadContent = true;
    detectedIndent = true;
    emptyLines = 0;
    captureStart = state.position;

    while (!is_EOL(ch) && (ch !== 0)) {
      ch = state.input.charCodeAt(++state.position);
    }

    captureSegment(state, captureStart, state.position, false);
  }

  return true;
}

function readBlockSequence(state, nodeIndent) {
  var _line,
      _tag      = state.tag,
      _anchor   = state.anchor,
      _result   = [],
      following,
      detected  = false,
      ch;

  // there is a leading tab before this token, so it can't be a block sequence/mapping;
  // it can still be flow sequence/mapping or a scalar
  if (state.firstTabInLine !== -1) return false;

  if (state.anchor !== null) {
    state.anchorMap[state.anchor] = _result;
  }

  ch = state.input.charCodeAt(state.position);

  while (ch !== 0) {
    if (state.firstTabInLine !== -1) {
      state.position = state.firstTabInLine;
      throwError(state, 'tab characters must not be used in indentation');
    }

    if (ch !== 0x2D/* - */) {
      break;
    }

    following = state.input.charCodeAt(state.position + 1);

    if (!is_WS_OR_EOL(following)) {
      break;
    }

    detected = true;
    state.position++;

    if (skipSeparationSpace(state, true, -1)) {
      if (state.lineIndent <= nodeIndent) {
        _result.push(null);
        ch = state.input.charCodeAt(state.position);
        continue;
      }
    }

    _line = state.line;
    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);
    _result.push(state.result);
    skipSeparationSpace(state, true, -1);

    ch = state.input.charCodeAt(state.position);

    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {
      throwError(state, 'bad indentation of a sequence entry');
    } else if (state.lineIndent < nodeIndent) {
      break;
    }
  }

  if (detected) {
    state.tag = _tag;
    state.anchor = _anchor;
    state.kind = 'sequence';
    state.result = _result;
    return true;
  }
  return false;
}

function readBlockMapping(state, nodeIndent, flowIndent) {
  var following,
      allowCompact,
      _line,
      _keyLine,
      _keyLineStart,
      _keyPos,
      _tag          = state.tag,
      _anchor       = state.anchor,
      _result       = {},
      overridableKeys = Object.create(null),
      keyTag        = null,
      keyNode       = null,
      valueNode     = null,
      atExplicitKey = false,
      detected      = false,
      ch;

  // there is a leading tab before this token, so it can't be a block sequence/mapping;
  // it can still be flow sequence/mapping or a scalar
  if (state.firstTabInLine !== -1) return false;

  if (state.anchor !== null) {
    state.anchorMap[state.anchor] = _result;
  }

  ch = state.input.charCodeAt(state.position);

  while (ch !== 0) {
    if (!atExplicitKey && state.firstTabInLine !== -1) {
      state.position = state.firstTabInLine;
      throwError(state, 'tab characters must not be used in indentation');
    }

    following = state.input.charCodeAt(state.position + 1);
    _line = state.line; // Save the current line.

    //
    // Explicit notation case. There are two separate blocks:
    // first for the key (denoted by "?") and second for the value (denoted by ":")
    //
    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {

      if (ch === 0x3F/* ? */) {
        if (atExplicitKey) {
          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);
          keyTag = keyNode = valueNode = null;
        }

        detected = true;
        atExplicitKey = true;
        allowCompact = true;

      } else if (atExplicitKey) {
        // i.e. 0x3A/* : */ === character after the explicit key.
        atExplicitKey = false;
        allowCompact = true;

      } else {
        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');
      }

      state.position += 1;
      ch = following;

    //
    // Implicit notation case. Flow-style node as the key first, then ":", and the value.
    //
    } else {
      _keyLine = state.line;
      _keyLineStart = state.lineStart;
      _keyPos = state.position;

      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {
        // Neither implicit nor explicit notation.
        // Reading is done. Go to the epilogue.
        break;
      }

      if (state.line === _line) {
        ch = state.input.charCodeAt(state.position);

        while (is_WHITE_SPACE(ch)) {
          ch = state.input.charCodeAt(++state.position);
        }

        if (ch === 0x3A/* : */) {
          ch = state.input.charCodeAt(++state.position);

          if (!is_WS_OR_EOL(ch)) {
            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');
          }

          if (atExplicitKey) {
            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);
            keyTag = keyNode = valueNode = null;
          }

          detected = true;
          atExplicitKey = false;
          allowCompact = false;
          keyTag = state.tag;
          keyNode = state.result;

        } else if (detected) {
          throwError(state, 'can not read an implicit mapping pair; a colon is missed');

        } else {
          state.tag = _tag;
          state.anchor = _anchor;
          return true; // Keep the result of `composeNode`.
        }

      } else if (detected) {
        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');

      } else {
        state.tag = _tag;
        state.anchor = _anchor;
        return true; // Keep the result of `composeNode`.
      }
    }

    //
    // Common reading code for both explicit and implicit notations.
    //
    if (state.line === _line || state.lineIndent > nodeIndent) {
      if (atExplicitKey) {
        _keyLine = state.line;
        _keyLineStart = state.lineStart;
        _keyPos = state.position;
      }

      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {
        if (atExplicitKey) {
          keyNode = state.result;
        } else {
          valueNode = state.result;
        }
      }

      if (!atExplicitKey) {
        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);
        keyTag = keyNode = valueNode = null;
      }

      skipSeparationSpace(state, true, -1);
      ch = state.input.charCodeAt(state.position);
    }

    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {
      throwError(state, 'bad indentation of a mapping entry');
    } else if (state.lineIndent < nodeIndent) {
      break;
    }
  }

  //
  // Epilogue.
  //

  // Special case: last mapping's node contains only the key in explicit notation.
  if (atExplicitKey) {
    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);
  }

  // Expose the resulting mapping.
  if (detected) {
    state.tag = _tag;
    state.anchor = _anchor;
    state.kind = 'mapping';
    state.result = _result;
  }

  return detected;
}

function readTagProperty(state) {
  var _position,
      isVerbatim = false,
      isNamed    = false,
      tagHandle,
      tagName,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch !== 0x21/* ! */) return false;

  if (state.tag !== null) {
    throwError(state, 'duplication of a tag property');
  }

  ch = state.input.charCodeAt(++state.position);

  if (ch === 0x3C/* < */) {
    isVerbatim = true;
    ch = state.input.charCodeAt(++state.position);

  } else if (ch === 0x21/* ! */) {
    isNamed = true;
    tagHandle = '!!';
    ch = state.input.charCodeAt(++state.position);

  } else {
    tagHandle = '!';
  }

  _position = state.position;

  if (isVerbatim) {
    do { ch = state.input.charCodeAt(++state.position); }
    while (ch !== 0 && ch !== 0x3E/* > */);

    if (state.position < state.length) {
      tagName = state.input.slice(_position, state.position);
      ch = state.input.charCodeAt(++state.position);
    } else {
      throwError(state, 'unexpected end of the stream within a verbatim tag');
    }
  } else {
    while (ch !== 0 && !is_WS_OR_EOL(ch)) {

      if (ch === 0x21/* ! */) {
        if (!isNamed) {
          tagHandle = state.input.slice(_position - 1, state.position + 1);

          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {
            throwError(state, 'named tag handle cannot contain such characters');
          }

          isNamed = true;
          _position = state.position + 1;
        } else {
          throwError(state, 'tag suffix cannot contain exclamation marks');
        }
      }

      ch = state.input.charCodeAt(++state.position);
    }

    tagName = state.input.slice(_position, state.position);

    if (PATTERN_FLOW_INDICATORS.test(tagName)) {
      throwError(state, 'tag suffix cannot contain flow indicator characters');
    }
  }

  if (tagName && !PATTERN_TAG_URI.test(tagName)) {
    throwError(state, 'tag name cannot contain such characters: ' + tagName);
  }

  try {
    tagName = decodeURIComponent(tagName);
  } catch (err) {
    throwError(state, 'tag name is malformed: ' + tagName);
  }

  if (isVerbatim) {
    state.tag = tagName;

  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {
    state.tag = state.tagMap[tagHandle] + tagName;

  } else if (tagHandle === '!') {
    state.tag = '!' + tagName;

  } else if (tagHandle === '!!') {
    state.tag = 'tag:yaml.org,2002:' + tagName;

  } else {
    throwError(state, 'undeclared tag handle "' + tagHandle + '"');
  }

  return true;
}

function readAnchorProperty(state) {
  var _position,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch !== 0x26/* & */) return false;

  if (state.anchor !== null) {
    throwError(state, 'duplication of an anchor property');
  }

  ch = state.input.charCodeAt(++state.position);
  _position = state.position;

  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {
    ch = state.input.charCodeAt(++state.position);
  }

  if (state.position === _position) {
    throwError(state, 'name of an anchor node must contain at least one character');
  }

  state.anchor = state.input.slice(_position, state.position);
  return true;
}

function readAlias(state) {
  var _position, alias,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch !== 0x2A/* * */) return false;

  ch = state.input.charCodeAt(++state.position);
  _position = state.position;

  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {
    ch = state.input.charCodeAt(++state.position);
  }

  if (state.position === _position) {
    throwError(state, 'name of an alias node must contain at least one character');
  }

  alias = state.input.slice(_position, state.position);

  if (!_hasOwnProperty.call(state.anchorMap, alias)) {
    throwError(state, 'unidentified alias "' + alias + '"');
  }

  state.result = state.anchorMap[alias];
  skipSeparationSpace(state, true, -1);
  return true;
}

function composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {
  var allowBlockStyles,
      allowBlockScalars,
      allowBlockCollections,
      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent
      atNewLine  = false,
      hasContent = false,
      typeIndex,
      typeQuantity,
      typeList,
      type,
      flowIndent,
      blockIndent;

  if (state.listener !== null) {
    state.listener('open', state);
  }

  state.tag    = null;
  state.anchor = null;
  state.kind   = null;
  state.result = null;

  allowBlockStyles = allowBlockScalars = allowBlockCollections =
    CONTEXT_BLOCK_OUT === nodeContext ||
    CONTEXT_BLOCK_IN  === nodeContext;

  if (allowToSeek) {
    if (skipSeparationSpace(state, true, -1)) {
      atNewLine = true;

      if (state.lineIndent > parentIndent) {
        indentStatus = 1;
      } else if (state.lineIndent === parentIndent) {
        indentStatus = 0;
      } else if (state.lineIndent < parentIndent) {
        indentStatus = -1;
      }
    }
  }

  if (indentStatus === 1) {
    while (readTagProperty(state) || readAnchorProperty(state)) {
      if (skipSeparationSpace(state, true, -1)) {
        atNewLine = true;
        allowBlockCollections = allowBlockStyles;

        if (state.lineIndent > parentIndent) {
          indentStatus = 1;
        } else if (state.lineIndent === parentIndent) {
          indentStatus = 0;
        } else if (state.lineIndent < parentIndent) {
          indentStatus = -1;
        }
      } else {
        allowBlockCollections = false;
      }
    }
  }

  if (allowBlockCollections) {
    allowBlockCollections = atNewLine || allowCompact;
  }

  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {
    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {
      flowIndent = parentIndent;
    } else {
      flowIndent = parentIndent + 1;
    }

    blockIndent = state.position - state.lineStart;

    if (indentStatus === 1) {
      if (allowBlockCollections &&
          (readBlockSequence(state, blockIndent) ||
           readBlockMapping(state, blockIndent, flowIndent)) ||
          readFlowCollection(state, flowIndent)) {
        hasContent = true;
      } else {
        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||
            readSingleQuotedScalar(state, flowIndent) ||
            readDoubleQuotedScalar(state, flowIndent)) {
          hasContent = true;

        } else if (readAlias(state)) {
          hasContent = true;

          if (state.tag !== null || state.anchor !== null) {
            throwError(state, 'alias node should not have any properties');
          }

        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {
          hasContent = true;

          if (state.tag === null) {
            state.tag = '?';
          }
        }

        if (state.anchor !== null) {
          state.anchorMap[state.anchor] = state.result;
        }
      }
    } else if (indentStatus === 0) {
      // Special case: block sequences are allowed to have same indentation level as the parent.
      // http://www.yaml.org/spec/1.2/spec.html#id2799784
      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);
    }
  }

  if (state.tag === null) {
    if (state.anchor !== null) {
      state.anchorMap[state.anchor] = state.result;
    }

  } else if (state.tag === '?') {
    // Implicit resolving is not allowed for non-scalar types, and '?'
    // non-specific tag is only automatically assigned to plain scalars.
    //
    // We only need to check kind conformity in case user explicitly assigns '?'
    // tag, for example like this: "!<?> [0]"
    //
    if (state.result !== null && state.kind !== 'scalar') {
      throwError(state, 'unacceptable node kind for !<?> tag; it should be "scalar", not "' + state.kind + '"');
    }

    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {
      type = state.implicitTypes[typeIndex];

      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched
        state.result = type.construct(state.result);
        state.tag = type.tag;
        if (state.anchor !== null) {
          state.anchorMap[state.anchor] = state.result;
        }
        break;
      }
    }
  } else if (state.tag !== '!') {
    if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {
      type = state.typeMap[state.kind || 'fallback'][state.tag];
    } else {
      // looking for multi type
      type = null;
      typeList = state.typeMap.multi[state.kind || 'fallback'];

      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {
        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {
          type = typeList[typeIndex];
          break;
        }
      }
    }

    if (!type) {
      throwError(state, 'unknown tag !<' + state.tag + '>');
    }

    if (state.result !== null && type.kind !== state.kind) {
      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be "' + type.kind + '", not "' + state.kind + '"');
    }

    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched
      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');
    } else {
      state.result = type.construct(state.result, state.tag);
      if (state.anchor !== null) {
        state.anchorMap[state.anchor] = state.result;
      }
    }
  }

  if (state.listener !== null) {
    state.listener('close', state);
  }
  return state.tag !== null ||  state.anchor !== null || hasContent;
}

function readDocument(state) {
  var documentStart = state.position,
      _position,
      directiveName,
      directiveArgs,
      hasDirectives = false,
      ch;

  state.version = null;
  state.checkLineBreaks = state.legacy;
  state.tagMap = Object.create(null);
  state.anchorMap = Object.create(null);

  while ((ch = state.input.charCodeAt(state.position)) !== 0) {
    skipSeparationSpace(state, true, -1);

    ch = state.input.charCodeAt(state.position);

    if (state.lineIndent > 0 || ch !== 0x25/* % */) {
      break;
    }

    hasDirectives = true;
    ch = state.input.charCodeAt(++state.position);
    _position = state.position;

    while (ch !== 0 && !is_WS_OR_EOL(ch)) {
      ch = state.input.charCodeAt(++state.position);
    }

    directiveName = state.input.slice(_position, state.position);
    directiveArgs = [];

    if (directiveName.length < 1) {
      throwError(state, 'directive name must not be less than one character in length');
    }

    while (ch !== 0) {
      while (is_WHITE_SPACE(ch)) {
        ch = state.input.charCodeAt(++state.position);
      }

      if (ch === 0x23/* # */) {
        do { ch = state.input.charCodeAt(++state.position); }
        while (ch !== 0 && !is_EOL(ch));
        break;
      }

      if (is_EOL(ch)) break;

      _position = state.position;

      while (ch !== 0 && !is_WS_OR_EOL(ch)) {
        ch = state.input.charCodeAt(++state.position);
      }

      directiveArgs.push(state.input.slice(_position, state.position));
    }

    if (ch !== 0) readLineBreak(state);

    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {
      directiveHandlers[directiveName](state, directiveName, directiveArgs);
    } else {
      throwWarning(state, 'unknown document directive "' + directiveName + '"');
    }
  }

  skipSeparationSpace(state, true, -1);

  if (state.lineIndent === 0 &&
      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&
      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&
      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {
    state.position += 3;
    skipSeparationSpace(state, true, -1);

  } else if (hasDirectives) {
    throwError(state, 'directives end mark is expected');
  }

  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);
  skipSeparationSpace(state, true, -1);

  if (state.checkLineBreaks &&
      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {
    throwWarning(state, 'non-ASCII line breaks are interpreted as content');
  }

  state.documents.push(state.result);

  if (state.position === state.lineStart && testDocumentSeparator(state)) {

    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {
      state.position += 3;
      skipSeparationSpace(state, true, -1);
    }
    return;
  }

  if (state.position < (state.length - 1)) {
    throwError(state, 'end of the stream or a document separator is expected');
  } else {
    return;
  }
}


function loadDocuments(input, options) {
  input = String(input);
  options = options || {};

  if (input.length !== 0) {

    // Add tailing `\n` if not exists
    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&
        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {
      input += '\n';
    }

    // Strip BOM
    if (input.charCodeAt(0) === 0xFEFF) {
      input = input.slice(1);
    }
  }

  var state = new State(input, options);

  var nullpos = input.indexOf('\0');

  if (nullpos !== -1) {
    state.position = nullpos;
    throwError(state, 'null byte is not allowed in input');
  }

  // Use 0 as string terminator. That significantly simplifies bounds check.
  state.input += '\0';

  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {
    state.lineIndent += 1;
    state.position += 1;
  }

  while (state.position < (state.length - 1)) {
    readDocument(state);
  }

  return state.documents;
}


function loadAll(input, iterator, options) {
  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {
    options = iterator;
    iterator = null;
  }

  var documents = loadDocuments(input, options);

  if (typeof iterator !== 'function') {
    return documents;
  }

  for (var index = 0, length = documents.length; index < length; index += 1) {
    iterator(documents[index]);
  }
}


function load(input, options) {
  var documents = loadDocuments(input, options);

  if (documents.length === 0) {
    /*eslint-disable no-undefined*/
    return undefined;
  } else if (documents.length === 1) {
    return documents[0];
  }
  throw new YAMLException('expected a single document in the stream, but found more');
}


module.exports.loadAll = loadAll;
module.exports.load    = load;


/***/ }),

/***/ 1082:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


/*eslint-disable max-len*/

var YAMLException = __nccwpck_require__(8179);
var Type          = __nccwpck_require__(6073);


function compileList(schema, name) {
  var result = [];

  schema[name].forEach(function (currentType) {
    var newIndex = result.length;

    result.forEach(function (previousType, previousIndex) {
      if (previousType.tag === currentType.tag &&
          previousType.kind === currentType.kind &&
          previousType.multi === currentType.multi) {

        newIndex = previousIndex;
      }
    });

    result[newIndex] = currentType;
  });

  return result;
}


function compileMap(/* lists... */) {
  var result = {
        scalar: {},
        sequence: {},
        mapping: {},
        fallback: {},
        multi: {
          scalar: [],
          sequence: [],
          mapping: [],
          fallback: []
        }
      }, index, length;

  function collectType(type) {
    if (type.multi) {
      result.multi[type.kind].push(type);
      result.multi['fallback'].push(type);
    } else {
      result[type.kind][type.tag] = result['fallback'][type.tag] = type;
    }
  }

  for (index = 0, length = arguments.length; index < length; index += 1) {
    arguments[index].forEach(collectType);
  }
  return result;
}


function Schema(definition) {
  return this.extend(definition);
}


Schema.prototype.extend = function extend(definition) {
  var implicit = [];
  var explicit = [];

  if (definition instanceof Type) {
    // Schema.extend(type)
    explicit.push(definition);

  } else if (Array.isArray(definition)) {
    // Schema.extend([ type1, type2, ... ])
    explicit = explicit.concat(definition);

  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {
    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })
    if (definition.implicit) implicit = implicit.concat(definition.implicit);
    if (definition.explicit) explicit = explicit.concat(definition.explicit);

  } else {
    throw new YAMLException('Schema.extend argument should be a Type, [ Type ], ' +
      'or a schema definition ({ implicit: [...], explicit: [...] })');
  }

  implicit.forEach(function (type) {
    if (!(type instanceof Type)) {
      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');
    }

    if (type.loadKind && type.loadKind !== 'scalar') {
      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');
    }

    if (type.multi) {
      throw new YAMLException('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');
    }
  });

  explicit.forEach(function (type) {
    if (!(type instanceof Type)) {
      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');
    }
  });

  var result = Object.create(Schema.prototype);

  result.implicit = (this.implicit || []).concat(implicit);
  result.explicit = (this.explicit || []).concat(explicit);

  result.compiledImplicit = compileList(result, 'implicit');
  result.compiledExplicit = compileList(result, 'explicit');
  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);

  return result;
};


module.exports = Schema;


/***/ }),

/***/ 2011:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
// Standard YAML's Core schema.
// http://www.yaml.org/spec/1.2/spec.html#id2804923
//
// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.
// So, Core schema has no distinctions from JSON schema is JS-YAML.





module.exports = __nccwpck_require__(1035);


/***/ }),

/***/ 8759:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
// JS-YAML's default schema for `safeLoad` function.
// It is not described in the YAML specification.
//
// This schema is based on standard YAML's Core schema and includes most of
// extra types described at YAML tag repository. (http://yaml.org/type/)





module.exports = __nccwpck_require__(2011).extend({
  implicit: [
    __nccwpck_require__(9212),
    __nccwpck_require__(6104)
  ],
  explicit: [
    __nccwpck_require__(7900),
    __nccwpck_require__(9046),
    __nccwpck_require__(6860),
    __nccwpck_require__(9548)
  ]
});


/***/ }),

/***/ 8562:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
// Standard YAML's Failsafe schema.
// http://www.yaml.org/spec/1.2/spec.html#id2802346





var Schema = __nccwpck_require__(1082);


module.exports = new Schema({
  explicit: [
    __nccwpck_require__(3619),
    __nccwpck_require__(7283),
    __nccwpck_require__(6150)
  ]
});


/***/ }),

/***/ 1035:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
// Standard YAML's JSON schema.
// http://www.yaml.org/spec/1.2/spec.html#id2803231
//
// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.
// So, this schema is not such strict as defined in the YAML specification.
// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.





module.exports = __nccwpck_require__(8562).extend({
  implicit: [
    __nccwpck_require__(721),
    __nccwpck_require__(4993),
    __nccwpck_require__(1615),
    __nccwpck_require__(2705)
  ]
});


/***/ }),

/***/ 6975:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";



var common = __nccwpck_require__(6829);


// get snippet for a single line, respecting maxLength
function getLine(buffer, lineStart, lineEnd, position, maxLineLength) {
  var head = '';
  var tail = '';
  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;

  if (position - lineStart > maxHalfLength) {
    head = ' ... ';
    lineStart = position - maxHalfLength + head.length;
  }

  if (lineEnd - position > maxHalfLength) {
    tail = ' ...';
    lineEnd = position + maxHalfLength - tail.length;
  }

  return {
    str: head + buffer.slice(lineStart, lineEnd).replace(/\t/g, '→') + tail,
    pos: position - lineStart + head.length // relative position
  };
}


function padStart(string, max) {
  return common.repeat(' ', max - string.length) + string;
}


function makeSnippet(mark, options) {
  options = Object.create(options || null);

  if (!mark.buffer) return null;

  if (!options.maxLength) options.maxLength = 79;
  if (typeof options.indent      !== 'number') options.indent      = 1;
  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;
  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;

  var re = /\r?\n|\r|\0/g;
  var lineStarts = [ 0 ];
  var lineEnds = [];
  var match;
  var foundLineNo = -1;

  while ((match = re.exec(mark.buffer))) {
    lineEnds.push(match.index);
    lineStarts.push(match.index + match[0].length);

    if (mark.position <= match.index && foundLineNo < 0) {
      foundLineNo = lineStarts.length - 2;
    }
  }

  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;

  var result = '', i, line;
  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;
  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);

  for (i = 1; i <= options.linesBefore; i++) {
    if (foundLineNo - i < 0) break;
    line = getLine(
      mark.buffer,
      lineStarts[foundLineNo - i],
      lineEnds[foundLineNo - i],
      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),
      maxLineLength
    );
    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +
      ' | ' + line.str + '\n' + result;
  }

  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);
  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +
    ' | ' + line.str + '\n';
  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\n';

  for (i = 1; i <= options.linesAfter; i++) {
    if (foundLineNo + i >= lineEnds.length) break;
    line = getLine(
      mark.buffer,
      lineStarts[foundLineNo + i],
      lineEnds[foundLineNo + i],
      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),
      maxLineLength
    );
    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +
      ' | ' + line.str + '\n';
  }

  return result.replace(/\n$/, '');
}


module.exports = makeSnippet;


/***/ }),

/***/ 6073:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var YAMLException = __nccwpck_require__(8179);

var TYPE_CONSTRUCTOR_OPTIONS = [
  'kind',
  'multi',
  'resolve',
  'construct',
  'instanceOf',
  'predicate',
  'represent',
  'representName',
  'defaultStyle',
  'styleAliases'
];

var YAML_NODE_KINDS = [
  'scalar',
  'sequence',
  'mapping'
];

function compileStyleAliases(map) {
  var result = {};

  if (map !== null) {
    Object.keys(map).forEach(function (style) {
      map[style].forEach(function (alias) {
        result[String(alias)] = style;
      });
    });
  }

  return result;
}

function Type(tag, options) {
  options = options || {};

  Object.keys(options).forEach(function (name) {
    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {
      throw new YAMLException('Unknown option "' + name + '" is met in definition of "' + tag + '" YAML type.');
    }
  });

  // TODO: Add tag format check.
  this.options       = options; // keep original options in case user wants to extend this type later
  this.tag           = tag;
  this.kind          = options['kind']          || null;
  this.resolve       = options['resolve']       || function () { return true; };
  this.construct     = options['construct']     || function (data) { return data; };
  this.instanceOf    = options['instanceOf']    || null;
  this.predicate     = options['predicate']     || null;
  this.represent     = options['represent']     || null;
  this.representName = options['representName'] || null;
  this.defaultStyle  = options['defaultStyle']  || null;
  this.multi         = options['multi']         || false;
  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);

  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {
    throw new YAMLException('Unknown kind "' + this.kind + '" is specified for "' + tag + '" YAML type.');
  }
}

module.exports = Type;


/***/ }),

/***/ 7900:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


/*eslint-disable no-bitwise*/


var Type = __nccwpck_require__(6073);


// [ 64, 65, 66 ] -> [ padding, CR, LF ]
var BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r';


function resolveYamlBinary(data) {
  if (data === null) return false;

  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;

  // Convert one by one.
  for (idx = 0; idx < max; idx++) {
    code = map.indexOf(data.charAt(idx));

    // Skip CR/LF
    if (code > 64) continue;

    // Fail on illegal characters
    if (code < 0) return false;

    bitlen += 6;
  }

  // If there are any bits left, source was corrupted
  return (bitlen % 8) === 0;
}

function constructYamlBinary(data) {
  var idx, tailbits,
      input = data.replace(/[\r\n=]/g, ''), // remove CR/LF & padding to simplify scan
      max = input.length,
      map = BASE64_MAP,
      bits = 0,
      result = [];

  // Collect by 6*4 bits (3 bytes)

  for (idx = 0; idx < max; idx++) {
    if ((idx % 4 === 0) && idx) {
      result.push((bits >> 16) & 0xFF);
      result.push((bits >> 8) & 0xFF);
      result.push(bits & 0xFF);
    }

    bits = (bits << 6) | map.indexOf(input.charAt(idx));
  }

  // Dump tail

  tailbits = (max % 4) * 6;

  if (tailbits === 0) {
    result.push((bits >> 16) & 0xFF);
    result.push((bits >> 8) & 0xFF);
    result.push(bits & 0xFF);
  } else if (tailbits === 18) {
    result.push((bits >> 10) & 0xFF);
    result.push((bits >> 2) & 0xFF);
  } else if (tailbits === 12) {
    result.push((bits >> 4) & 0xFF);
  }

  return new Uint8Array(result);
}

function representYamlBinary(object /*, style*/) {
  var result = '', bits = 0, idx, tail,
      max = object.length,
      map = BASE64_MAP;

  // Convert every three bytes to 4 ASCII characters.

  for (idx = 0; idx < max; idx++) {
    if ((idx % 3 === 0) && idx) {
      result += map[(bits >> 18) & 0x3F];
      result += map[(bits >> 12) & 0x3F];
      result += map[(bits >> 6) & 0x3F];
      result += map[bits & 0x3F];
    }

    bits = (bits << 8) + object[idx];
  }

  // Dump tail

  tail = max % 3;

  if (tail === 0) {
    result += map[(bits >> 18) & 0x3F];
    result += map[(bits >> 12) & 0x3F];
    result += map[(bits >> 6) & 0x3F];
    result += map[bits & 0x3F];
  } else if (tail === 2) {
    result += map[(bits >> 10) & 0x3F];
    result += map[(bits >> 4) & 0x3F];
    result += map[(bits << 2) & 0x3F];
    result += map[64];
  } else if (tail === 1) {
    result += map[(bits >> 2) & 0x3F];
    result += map[(bits << 4) & 0x3F];
    result += map[64];
    result += map[64];
  }

  return result;
}

function isBinary(obj) {
  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';
}

module.exports = new Type('tag:yaml.org,2002:binary', {
  kind: 'scalar',
  resolve: resolveYamlBinary,
  construct: constructYamlBinary,
  predicate: isBinary,
  represent: representYamlBinary
});


/***/ }),

/***/ 4993:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var Type = __nccwpck_require__(6073);

function resolveYamlBoolean(data) {
  if (data === null) return false;

  var max = data.length;

  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||
         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));
}

function constructYamlBoolean(data) {
  return data === 'true' ||
         data === 'True' ||
         data === 'TRUE';
}

function isBoolean(object) {
  return Object.prototype.toString.call(object) === '[object Boolean]';
}

module.exports = new Type('tag:yaml.org,2002:bool', {
  kind: 'scalar',
  resolve: resolveYamlBoolean,
  construct: constructYamlBoolean,
  predicate: isBoolean,
  represent: {
    lowercase: function (object) { return object ? 'true' : 'false'; },
    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },
    camelcase: function (object) { return object ? 'True' : 'False'; }
  },
  defaultStyle: 'lowercase'
});


/***/ }),

/***/ 2705:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var common = __nccwpck_require__(6829);
var Type   = __nccwpck_require__(6073);

var YAML_FLOAT_PATTERN = new RegExp(
  // 2.5e4, 2.5 and integers
  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +
  // .2e4, .2
  // special case, seems not from spec
  '|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +
  // .inf
  '|[-+]?\\.(?:inf|Inf|INF)' +
  // .nan
  '|\\.(?:nan|NaN|NAN))$');

function resolveYamlFloat(data) {
  if (data === null) return false;

  if (!YAML_FLOAT_PATTERN.test(data) ||
      // Quick hack to not allow integers end with `_`
      // Probably should update regexp & check speed
      data[data.length - 1] === '_') {
    return false;
  }

  return true;
}

function constructYamlFloat(data) {
  var value, sign;

  value  = data.replace(/_/g, '').toLowerCase();
  sign   = value[0] === '-' ? -1 : 1;

  if ('+-'.indexOf(value[0]) >= 0) {
    value = value.slice(1);
  }

  if (value === '.inf') {
    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;

  } else if (value === '.nan') {
    return NaN;
  }
  return sign * parseFloat(value, 10);
}


var SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;

function representYamlFloat(object, style) {
  var res;

  if (isNaN(object)) {
    switch (style) {
      case 'lowercase': return '.nan';
      case 'uppercase': return '.NAN';
      case 'camelcase': return '.NaN';
    }
  } else if (Number.POSITIVE_INFINITY === object) {
    switch (style) {
      case 'lowercase': return '.inf';
      case 'uppercase': return '.INF';
      case 'camelcase': return '.Inf';
    }
  } else if (Number.NEGATIVE_INFINITY === object) {
    switch (style) {
      case 'lowercase': return '-.inf';
      case 'uppercase': return '-.INF';
      case 'camelcase': return '-.Inf';
    }
  } else if (common.isNegativeZero(object)) {
    return '-0.0';
  }

  res = object.toString(10);

  // JS stringifier can build scientific format without dots: 5e-100,
  // while YAML requres dot: 5.e-100. Fix it with simple hack

  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;
}

function isFloat(object) {
  return (Object.prototype.toString.call(object) === '[object Number]') &&
         (object % 1 !== 0 || common.isNegativeZero(object));
}

module.exports = new Type('tag:yaml.org,2002:float', {
  kind: 'scalar',
  resolve: resolveYamlFloat,
  construct: constructYamlFloat,
  predicate: isFloat,
  represent: representYamlFloat,
  defaultStyle: 'lowercase'
});


/***/ }),

/***/ 1615:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var common = __nccwpck_require__(6829);
var Type   = __nccwpck_require__(6073);

function isHexCode(c) {
  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||
         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||
         ((0x61/* a */ <= c) && (c <= 0x66/* f */));
}

function isOctCode(c) {
  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));
}

function isDecCode(c) {
  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));
}

function resolveYamlInteger(data) {
  if (data === null) return false;

  var max = data.length,
      index = 0,
      hasDigits = false,
      ch;

  if (!max) return false;

  ch = data[index];

  // sign
  if (ch === '-' || ch === '+') {
    ch = data[++index];
  }

  if (ch === '0') {
    // 0
    if (index + 1 === max) return true;
    ch = data[++index];

    // base 2, base 8, base 16

    if (ch === 'b') {
      // base 2
      index++;

      for (; index < max; index++) {
        ch = data[index];
        if (ch === '_') continue;
        if (ch !== '0' && ch !== '1') return false;
        hasDigits = true;
      }
      return hasDigits && ch !== '_';
    }


    if (ch === 'x') {
      // base 16
      index++;

      for (; index < max; index++) {
        ch = data[index];
        if (ch === '_') continue;
        if (!isHexCode(data.charCodeAt(index))) return false;
        hasDigits = true;
      }
      return hasDigits && ch !== '_';
    }


    if (ch === 'o') {
      // base 8
      index++;

      for (; index < max; index++) {
        ch = data[index];
        if (ch === '_') continue;
        if (!isOctCode(data.charCodeAt(index))) return false;
        hasDigits = true;
      }
      return hasDigits && ch !== '_';
    }
  }

  // base 10 (except 0)

  // value should not start with `_`;
  if (ch === '_') return false;

  for (; index < max; index++) {
    ch = data[index];
    if (ch === '_') continue;
    if (!isDecCode(data.charCodeAt(index))) {
      return false;
    }
    hasDigits = true;
  }

  // Should have digits and should not end with `_`
  if (!hasDigits || ch === '_') return false;

  return true;
}

function constructYamlInteger(data) {
  var value = data, sign = 1, ch;

  if (value.indexOf('_') !== -1) {
    value = value.replace(/_/g, '');
  }

  ch = value[0];

  if (ch === '-' || ch === '+') {
    if (ch === '-') sign = -1;
    value = value.slice(1);
    ch = value[0];
  }

  if (value === '0') return 0;

  if (ch === '0') {
    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);
    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);
    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);
  }

  return sign * parseInt(value, 10);
}

function isInteger(object) {
  return (Object.prototype.toString.call(object)) === '[object Number]' &&
         (object % 1 === 0 && !common.isNegativeZero(object));
}

module.exports = new Type('tag:yaml.org,2002:int', {
  kind: 'scalar',
  resolve: resolveYamlInteger,
  construct: constructYamlInteger,
  predicate: isInteger,
  represent: {
    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },
    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },
    decimal:     function (obj) { return obj.toString(10); },
    /* eslint-disable max-len */
    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }
  },
  defaultStyle: 'decimal',
  styleAliases: {
    binary:      [ 2,  'bin' ],
    octal:       [ 8,  'oct' ],
    decimal:     [ 10, 'dec' ],
    hexadecimal: [ 16, 'hex' ]
  }
});


/***/ }),

/***/ 6150:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var Type = __nccwpck_require__(6073);

module.exports = new Type('tag:yaml.org,2002:map', {
  kind: 'mapping',
  construct: function (data) { return data !== null ? data : {}; }
});


/***/ }),

/***/ 6104:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var Type = __nccwpck_require__(6073);

function resolveYamlMerge(data) {
  return data === '<<' || data === null;
}

module.exports = new Type('tag:yaml.org,2002:merge', {
  kind: 'scalar',
  resolve: resolveYamlMerge
});


/***/ }),

/***/ 721:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var Type = __nccwpck_require__(6073);

function resolveYamlNull(data) {
  if (data === null) return true;

  var max = data.length;

  return (max === 1 && data === '~') ||
         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));
}

function constructYamlNull() {
  return null;
}

function isNull(object) {
  return object === null;
}

module.exports = new Type('tag:yaml.org,2002:null', {
  kind: 'scalar',
  resolve: resolveYamlNull,
  construct: constructYamlNull,
  predicate: isNull,
  represent: {
    canonical: function () { return '~';    },
    lowercase: function () { return 'null'; },
    uppercase: function () { return 'NULL'; },
    camelcase: function () { return 'Null'; },
    empty:     function () { return '';     }
  },
  defaultStyle: 'lowercase'
});


/***/ }),

/***/ 9046:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var Type = __nccwpck_require__(6073);

var _hasOwnProperty = Object.prototype.hasOwnProperty;
var _toString       = Object.prototype.toString;

function resolveYamlOmap(data) {
  if (data === null) return true;

  var objectKeys = [], index, length, pair, pairKey, pairHasKey,
      object = data;

  for (index = 0, length = object.length; index < length; index += 1) {
    pair = object[index];
    pairHasKey = false;

    if (_toString.call(pair) !== '[object Object]') return false;

    for (pairKey in pair) {
      if (_hasOwnProperty.call(pair, pairKey)) {
        if (!pairHasKey) pairHasKey = true;
        else return false;
      }
    }

    if (!pairHasKey) return false;

    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);
    else return false;
  }

  return true;
}

function constructYamlOmap(data) {
  return data !== null ? data : [];
}

module.exports = new Type('tag:yaml.org,2002:omap', {
  kind: 'sequence',
  resolve: resolveYamlOmap,
  construct: constructYamlOmap
});


/***/ }),

/***/ 6860:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var Type = __nccwpck_require__(6073);

var _toString = Object.prototype.toString;

function resolveYamlPairs(data) {
  if (data === null) return true;

  var index, length, pair, keys, result,
      object = data;

  result = new Array(object.length);

  for (index = 0, length = object.length; index < length; index += 1) {
    pair = object[index];

    if (_toString.call(pair) !== '[object Object]') return false;

    keys = Object.keys(pair);

    if (keys.length !== 1) return false;

    result[index] = [ keys[0], pair[keys[0]] ];
  }

  return true;
}

function constructYamlPairs(data) {
  if (data === null) return [];

  var index, length, pair, keys, result,
      object = data;

  result = new Array(object.length);

  for (index = 0, length = object.length; index < length; index += 1) {
    pair = object[index];

    keys = Object.keys(pair);

    result[index] = [ keys[0], pair[keys[0]] ];
  }

  return result;
}

module.exports = new Type('tag:yaml.org,2002:pairs', {
  kind: 'sequence',
  resolve: resolveYamlPairs,
  construct: constructYamlPairs
});


/***/ }),

/***/ 7283:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var Type = __nccwpck_require__(6073);

module.exports = new Type('tag:yaml.org,2002:seq', {
  kind: 'sequence',
  construct: function (data) { return data !== null ? data : []; }
});


/***/ }),

/***/ 9548:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var Type = __nccwpck_require__(6073);

var _hasOwnProperty = Object.prototype.hasOwnProperty;

function resolveYamlSet(data) {
  if (data === null) return true;

  var key, object = data;

  for (key in object) {
    if (_hasOwnProperty.call(object, key)) {
      if (object[key] !== null) return false;
    }
  }

  return true;
}

function constructYamlSet(data) {
  return data !== null ? data : {};
}

module.exports = new Type('tag:yaml.org,2002:set', {
  kind: 'mapping',
  resolve: resolveYamlSet,
  construct: constructYamlSet
});


/***/ }),

/***/ 3619:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var Type = __nccwpck_require__(6073);

module.exports = new Type('tag:yaml.org,2002:str', {
  kind: 'scalar',
  construct: function (data) { return data !== null ? data : ''; }
});


/***/ }),

/***/ 9212:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var Type = __nccwpck_require__(6073);

var YAML_DATE_REGEXP = new RegExp(
  '^([0-9][0-9][0-9][0-9])'          + // [1] year
  '-([0-9][0-9])'                    + // [2] month
  '-([0-9][0-9])$');                   // [3] day

var YAML_TIMESTAMP_REGEXP = new RegExp(
  '^([0-9][0-9][0-9][0-9])'          + // [1] year
  '-([0-9][0-9]?)'                   + // [2] month
  '-([0-9][0-9]?)'                   + // [3] day
  '(?:[Tt]|[ \\t]+)'                 + // ...
  '([0-9][0-9]?)'                    + // [4] hour
  ':([0-9][0-9])'                    + // [5] minute
  ':([0-9][0-9])'                    + // [6] second
  '(?:\\.([0-9]*))?'                 + // [7] fraction
  '(?:[ \\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour
  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute

function resolveYamlTimestamp(data) {
  if (data === null) return false;
  if (YAML_DATE_REGEXP.exec(data) !== null) return true;
  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;
  return false;
}

function constructYamlTimestamp(data) {
  var match, year, month, day, hour, minute, second, fraction = 0,
      delta = null, tz_hour, tz_minute, date;

  match = YAML_DATE_REGEXP.exec(data);
  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);

  if (match === null) throw new Error('Date resolve error');

  // match: [1] year [2] month [3] day

  year = +(match[1]);
  month = +(match[2]) - 1; // JS month starts with 0
  day = +(match[3]);

  if (!match[4]) { // no hour
    return new Date(Date.UTC(year, month, day));
  }

  // match: [4] hour [5] minute [6] second [7] fraction

  hour = +(match[4]);
  minute = +(match[5]);
  second = +(match[6]);

  if (match[7]) {
    fraction = match[7].slice(0, 3);
    while (fraction.length < 3) { // milli-seconds
      fraction += '0';
    }
    fraction = +fraction;
  }

  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute

  if (match[9]) {
    tz_hour = +(match[10]);
    tz_minute = +(match[11] || 0);
    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds
    if (match[9] === '-') delta = -delta;
  }

  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));

  if (delta) date.setTime(date.getTime() - delta);

  return date;
}

function representYamlTimestamp(object /*, style*/) {
  return object.toISOString();
}

module.exports = new Type('tag:yaml.org,2002:timestamp', {
  kind: 'scalar',
  resolve: resolveYamlTimestamp,
  construct: constructYamlTimestamp,
  instanceOf: Date,
  represent: representYamlTimestamp
});


/***/ }),

/***/ 250:
/***/ (function(module, exports, __nccwpck_require__) {

/* module decorator */ module = __nccwpck_require__.nmd(module);
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.21';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function',
      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading whitespace. */
  var reTrimStart = /^\s+/;

  /** Used to match a single whitespace character. */
  var reWhitespace = /\s/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /**
   * Used to validate the `validate` option in `_.template` variable.
   *
   * Forbids characters which could potentially change the meaning of the function argument definition:
   * - "()," (modification of function parameters)
   * - "=" (default value)
   * - "[]{}" (destructuring of function parameters)
   * - "/" (beginning of a comment)
   * - whitespace
   */
  var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports =  true && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */
  function baseTrim(string) {
    return string
      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
      : string;
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */
  function trimmedEndIndex(string) {
    var index = string.length;

    while (index-- && reWhitespace.test(string.charAt(index))) {}
    return index;
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            }
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }

      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
          return object;
        }

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      var low = 0,
          high = array == null ? 0 : array.length;
      if (high === 0) {
        return 0;
      }

      value = iteratee(value);
      var valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Check that cyclic values are equal.
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Check that cyclic values are equal.
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
      // and escape the comment, thus injecting code that gets evaled.
      var sourceURL = '//# sourceURL=' +
        (hasOwnProperty.call(options, 'sourceURL')
          ? (options.sourceURL + '').replace(/\s/g, ' ')
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = hasOwnProperty.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Throw an error if a forbidden character was found in `variable`, to prevent
      // potential command injection attacks.
      else if (reForbiddenIdentifierChars.test(variable)) {
        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
      }

      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return baseTrim(string);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.slice(0, trimmedEndIndex(string) + 1);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    define(function() {
      return _;
    });
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));


/***/ }),

/***/ 2047:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

!function(r,t){for(var e in t)r[e]=t[e]}(exports,function(r){var t={};function e(n){if(t[n])return t[n].exports;var s=t[n]={i:n,l:!1,exports:{}};return r[n].call(s.exports,s,s.exports,e),s.l=!0,s.exports}return e.m=r,e.c=t,e.d=function(r,t,n){e.o(r,t)||Object.defineProperty(r,t,{enumerable:!0,get:n})},e.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},e.t=function(r,t){if(1&t&&(r=e(r)),8&t)return r;if(4&t&&"object"==typeof r&&r&&r.__esModule)return r;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:r}),2&t&&"string"!=typeof r)for(var s in r)e.d(n,s,function(t){return r[t]}.bind(null,s));return n},e.n=function(r){var t=r&&r.__esModule?function(){return r.default}:function(){return r};return e.d(t,"a",t),t},e.o=function(r,t){return Object.prototype.hasOwnProperty.call(r,t)},e.p="",e(e.s=10)}([function(r,t){r.exports=__nccwpck_require__(1575)},function(r,t,e){"use strict";var n=e(0);function s(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,s)}!function(r,t){function e(){this.constructor=r}e.prototype=t.prototype,r.prototype=new e}(s,Error),s.buildMessage=function(r,t){var e={literal:function(r){return'"'+s(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?u(r.parts[t][0])+"-"+u(r.parts[t][1]):u(r.parts[t]);return"["+(r.inverted?"^":"")+e+"]"},any:function(r){return"any character"},end:function(r){return"end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function s(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}function u(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}return"Expected "+function(r){var t,n,s,u=new Array(r.length);for(t=0;t<r.length;t++)u[t]=(s=r[t],e[s.type](s));if(u.sort(),u.length>0){for(t=1,n=1;t<u.length;t++)u[t-1]!==u[t]&&(u[n]=u[t],n++);u.length=n}switch(u.length){case 1:return u[0];case 2:return u[0]+" or "+u[1];default:return u.slice(0,-1).join(", ")+", or "+u[u.length-1]}}(r)+" but "+function(r){return r?'"'+s(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:s,parse:function(r,t){t=void 0!==t?t:{};var e,u={},o={start:wu},a=wu,i=function(r,t){return Al(r,t)},l=function(r,t){return El(r,t)},c=bu("=",!1),f=bu("DUPLICATE",!0),b=bu("BINARY",!0),v=bu("MASTER",!0),L=bu("LOGS",!0),C=bu("BINLOG",!0),d=bu("EVENTS",!0),p=bu("CHARACTER",!0),w=bu("SET",!0),E=bu("COLLATION",!0),A=function(r,t){return El(r,t,1)},h=bu("IF",!0),y=function(r,t){return El(r,t)},T=bu("GRANTS",!0),m=bu(".",!1),I=bu("ALGORITHM",!0),N=bu("DEFAULT",!0),R=bu("INSTANT",!0),S=bu("INPLACE",!0),_=bu("COPY",!0),O=bu("LOCK",!0),g=bu("NONE",!0),x=bu("SHARED",!0),U=bu("EXCLUSIVE",!0),M=bu("AUTO_INCREMENT",!0),k=bu("UNIQUE",!0),D=bu("PRIMARY",!0),$=bu("KEY",!0),P=bu("FOR",!0),F=bu("COLUMN_FORMAT",!0),G=bu("FIXED",!0),H=bu("DYNAMIC",!0),j=bu("STORAGE",!0),Y=bu("DISK",!0),B=bu("MEMORY",!0),W=bu("MATCH FULL",!0),X=bu("MATCH PARTIAL",!0),V=bu("MATCH SIMPLE",!0),K=bu("AVG_ROW_LENGTH",!0),q=bu("KEY_BLOCK_SIZE",!0),Z=bu("MAX_ROWS",!0),z=bu("MIN_ROWS",!0),Q=bu("STATS_SAMPLE_PAGES",!0),J=bu("CONNECTION",!0),rr=bu("COMPRESSION",!0),tr=bu("'",!1),er=bu("ZLIB",!0),nr=bu("LZ4",!0),sr=bu("ENGINE",!0),ur=bu("CHARSET",!0),or=bu("COLLATE",!0),ar=bu("READ",!0),ir=bu("LOCAL",!0),lr=bu("LOW_PRIORITY",!0),cr=bu("WRITE",!0),fr=bu("FOREIGN KEY",!0),br=bu("CHECK",!0),vr=bu("NOT",!0),Lr=bu("REPLICATION",!0),Cr=bu("BTREE",!0),dr=bu("HASH",!0),pr=bu("WITH",!0),wr=bu("PARSER",!0),Er=bu("VISIBLE",!0),Ar=bu("INVISIBLE",!0),hr=bu("ON",!0),yr=bu("DELETE",!0),Tr=bu("UPDATE",!0),mr=bu("RESTRICT",!0),Ir=bu("CASCADE",!0),Nr=bu("SET NULL",!0),Rr=bu("NO ACTION",!0),Sr=bu("SET DEFAULT",!0),_r=bu("CREATE",!0),Or=bu("INSERT",!0),gr=bu(":=",!1),xr=bu("return",!0),Ur=bu("REPLACE",!0),Mr=bu("ANALYZE",!0),kr=bu("ATTACH",!0),Dr=bu("DATABASE",!0),$r=bu("RENAME",!0),Pr=bu("SHOW",!0),Fr=bu("DESCRIBE",!0),Gr=bu("@",!1),Hr=bu("@@",!1),jr=bu("$",!1),Yr=bu("TEMPORARY",!0),Br=bu("SCHEMA",!0),Wr=bu("ALTER",!0),Xr=bu("SPATIAL",!0),Vr=bu("(",!1),Kr=bu(")",!1),qr=bu("INTERSECT",!0),Zr=bu("EXCEPT",!0),zr=bu("SYSTEM_TIME",!0),Qr=bu("AS",!0),Jr=bu("OF",!0),rt=bu("UNNEST",!0),tt=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;Nl[t]=t,e&&(Nl[e]=t),function(r){const t=yl(r);r.clear(),t.forEach(t=>r.add(t))}(Il)}),t},et=/^[@]/,nt=vu(["@"],!1,!1),st=/^[{]/,ut=vu(["{"],!1,!1),ot=/^[=]/,at=vu(["="],!1,!1),it=/^[}]/,lt=vu(["}"],!1,!1),ct=bu("TABLESAMPLE",!0),ft=bu("BERNOULLI",!0),bt=bu("RESERVOIR",!0),vt=bu("PERCENT",!0),Lt=bu("ROWS",!0),Ct=bu("RANGE",!0),dt=bu("UNBOUNDED",!0),pt=bu("PRECEDING",!0),wt=bu("CURRENT",!0),Et=bu("ROW",!1),At=bu("FOLLOWING",!0),ht=bu("ROW",!0),yt=bu("!",!1),Tt=function(r){return r[0]+" "+r[2]},mt=bu(">=",!1),It=bu(">",!1),Nt=bu("<=",!1),Rt=bu("<>",!1),St=bu("<",!1),_t=bu("!=",!1),Ot=bu("+",!1),gt=bu("-",!1),xt=bu("*",!1),Ut=bu("/",!1),Mt=bu("%",!1),kt=bu('"',!1),Dt=/^[^"]/,$t=vu(['"'],!0,!1),Pt=function(r){return r.join("")},Ft=/^[^']/,Gt=vu(["'"],!0,!1),Ht=bu("`",!1),jt=/^[^`]/,Yt=vu(["`"],!0,!1),Bt=function(r,t){return r+t.join("")},Wt=/^[A-Za-z_]/,Xt=vu([["A","Z"],["a","z"],"_"],!1,!1),Vt=/^[A-Za-z0-9_\-]/,Kt=vu([["A","Z"],["a","z"],["0","9"],"_","-"],!1,!1),qt=/^[A-Za-z0-9_:\-]/,Zt=vu([["A","Z"],["a","z"],["0","9"],"_",":","-"],!1,!1),zt=bu(":",!1),Qt=bu("ANY_VALUE",!0),Jt=bu("CENTURY",!0),re=bu("DAY",!0),te=bu("DATE",!0),ee=bu("DECADE",!0),ne=bu("DOW",!0),se=bu("DOY",!0),ue=bu("EPOCH",!0),oe=bu("HOUR",!0),ae=bu("ISODOW",!0),ie=bu("ISOWEEK",!0),le=bu("ISOYEAR",!0),ce=bu("MICROSECONDS",!0),fe=bu("MILLENNIUM",!0),be=bu("MILLISECONDS",!0),ve=bu("MINUTE",!0),Le=bu("MONTH",!0),Ce=bu("QUARTER",!0),de=bu("SECOND",!0),pe=bu("TIME",!0),we=bu("TIMEZONE",!0),Ee=bu("TIMEZONE_HOUR",!0),Ae=bu("TIMEZONE_MINUTE",!0),he=bu("WEEK",!0),ye=bu("YEAR",!0),Te=bu("DATE_TRUNC",!0),me=bu("R",!0),Ie=function(r,t){return{type:r.toLowerCase(),value:t[1].join("")}},Ne=/^[^"\\\0-\x1F\x7F]/,Re=vu(['"',"\\",["\0",""],""],!0,!1),Se=/^[^'\\]/,_e=vu(["'","\\"],!0,!1),Oe=bu("\\'",!1),ge=bu('\\"',!1),xe=bu("\\\\",!1),Ue=bu("\\/",!1),Me=bu("\\b",!1),ke=bu("\\f",!1),De=bu("\\n",!1),$e=bu("\\r",!1),Pe=bu("\\t",!1),Fe=bu("\\u",!1),Ge=bu("\\",!1),He=bu("''",!1),je=bu('""',!1),Ye=bu("``",!1),Be=/^[\n\r]/,We=vu(["\n","\r"],!1,!1),Xe=/^[0-9]/,Ve=vu([["0","9"]],!1,!1),Ke=/^[0-9a-fA-F]/,qe=vu([["0","9"],["a","f"],["A","F"]],!1,!1),Ze=/^[eE]/,ze=vu(["e","E"],!1,!1),Qe=/^[+\-]/,Je=vu(["+","-"],!1,!1),rn=bu("NULL",!0),tn=bu("NOT NULL",!0),en=bu("TRUE",!0),nn=bu("TO",!0),sn=bu("FALSE",!0),un=bu("DROP",!0),on=bu("USE",!0),an=bu("SELECT",!0),ln=(bu("RECURSIVE",!1),bu("IGNORE",!0)),cn=(bu("EXPLAIN",!0),bu("PARTITION",!0)),fn=bu("INTO",!0),bn=bu("FROM",!0),vn=bu("UNLOCK",!0),Ln=bu("TABLE",!0),Cn=bu("TABLES",!0),dn=bu("LEFT",!0),pn=bu("RIGHT",!0),wn=bu("FULL",!0),En=bu("INNER",!0),An=bu("CROSS",!0),hn=bu("JOIN",!0),yn=bu("OUTER",!0),Tn=bu("OVER",!0),mn=bu("UNION",!0),In=bu("VALUE",!0),Nn=bu("VALUES",!0),Rn=bu("USING",!0),Sn=bu("WHERE",!0),_n=bu("GROUP",!0),On=bu("BY",!0),gn=bu("ORDER",!0),xn=bu("HAVING",!0),Un=bu("QUALIFY",!0),Mn=bu("WINDOW",!0),kn=bu("ORDINAL",!0),Dn=bu("SAFE_ORDINAL",!0),$n=bu("LIMIT",!0),Pn=bu("OFFSET",!0),Fn=bu("SAFE_OFFSET",!0),Gn=bu("ASC",!0),Hn=bu("DESC",!0),jn=bu("ALL",!0),Yn=bu("DISTINCT",!0),Bn=bu("BETWEEN",!0),Wn=bu("IN",!0),Xn=bu("IS",!0),Vn=bu("LIKE",!0),Kn=bu("EXISTS",!0),qn=bu("AND",!0),Zn=bu("OR",!0),zn=bu("COUNT",!0),Qn=bu("MAX",!0),Jn=bu("MIN",!0),rs=bu("SUM",!0),ts=bu("AVG",!0),es=bu("EXTRACT",!0),ns=bu("CALL",!0),ss=bu("CASE",!0),us=bu("WHEN",!0),os=bu("THEN",!0),as=bu("ELSE",!0),is=bu("END",!0),ls=bu("CAST",!0),cs=bu("SAFE_CAST",!0),fs=bu("ARRAY",!0),bs=bu("BYTES",!0),vs=bu("BOOL",!0),Ls=(bu("CHAR",!0),bu("GEOGRAPHY",!0)),Cs=(bu("VARCHAR",!0),bu("NUMERIC",!0)),ds=bu("DECIMAL",!0),ps=bu("SIGNED",!0),ws=bu("UNSIGNED",!0),Es=bu("INT64",!0),As=(bu("ZEROFILL",!0),bu("INTEGER",!0)),hs=(bu("JSON",!0),bu("SMALLINT",!0),bu("STRING",!0)),ys=bu("STRUCT",!0),Ts=(bu("TINYINT",!0),bu("TINYTEXT",!0),bu("TEXT",!0),bu("MEDIUMTEXT",!0),bu("LONGTEXT",!0),bu("BIGINT",!0),bu("FLOAT64",!0)),ms=(bu("DOUBLE",!0),bu("DATETIME",!0)),Is=bu("TIMESTAMP",!0),Ns=bu("TRUNCATE",!0),Rs=(bu("USER",!0),bu("CURRENT_DATE",!0)),Ss=(bu("ADDDATE",!0),bu("INTERVAL",!0)),_s=bu("CURRENT_TIME",!0),Os=bu("CURRENT_TIMESTAMP",!0),gs=bu("SESSION_USER",!0),xs=bu("GLOBAL",!0),Us=bu("SESSION",!0),Ms=bu("PIVOT",!0),ks=bu("PERSIST",!0),Ds=bu("PERSIST_ONLY",!0),$s=bu("ADD",!0),Ps=bu("COLUMN",!0),Fs=bu("INDEX",!0),Gs=bu("FULLTEXT",!0),Hs=bu("COMMENT",!0),js=bu("CONSTRAINT",!0),Ys=bu("REFERENCES",!0),Bs=bu(",",!1),Ws=bu("[",!1),Xs=bu("]",!1),Vs=bu(";",!1),Ks=bu("||",!1),qs=bu("&&",!1),Zs=bu("/*",!1),zs=bu("*/",!1),Qs=bu("--",!1),Js=bu("#",!1),ru={type:"any"},tu=/^[ \t\n\r]/,eu=vu([" ","\t","\n","\r"],!1,!1),nu=function(r){return{dataType:r}},su=bu("MAX",!1),uu=bu("max",!1),ou=function(r,t){return{dataType:r,definition:t,anglebracket:!0}},au=0,iu=[{line:1,column:1}],lu=0,cu=[],fu=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule]}function bu(r,t){return{type:"literal",text:r,ignoreCase:t}}function vu(r,t,e){return{type:"class",parts:r,inverted:t,ignoreCase:e}}function Lu(t){var e,n=iu[t];if(n)return n;for(e=t-1;!iu[e];)e--;for(n={line:(n=iu[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return iu[t]=n,n}function Cu(r,t){var e=Lu(r),n=Lu(t);return{start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function du(r){au<lu||(au>lu&&(lu=au,cu=[]),cu.push(r))}function pu(r,t,e){return new s(s.buildMessage(r,t),r,t,e)}function wu(){var r,t;return r=au,nl()!==u?((t=function(){var r,t,e,n,s,o,a,i;if(r=au,(t=Eu())!==u){if(e=[],n=au,(s=nl())!==u&&(o=tl())!==u&&(a=nl())!==u&&(i=Eu())!==u?n=s=[s,o,a,i]:(au=n,n=u),n!==u)for(;n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=tl())!==u&&(a=nl())!==u&&(i=Eu())!==u?n=s=[s,o,a,i]:(au=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return{tableList:Array.from(ml),columnList:yl(Il),ast:e}}(t,e),r=t):(au=r,r=u)}else au=r,r=u;return r}())===u&&(t=Eu()),t!==u?(r,r=t):(au=r,r=u)):(au=r,r=u),r}function Eu(){var t;return(t=function(){var t,e,n,s,o,a,i;(t=function(){var r,t,e,n,s;r=au,(t=Lo())===u&&(t=null);t!==u&&nl()!==u&&(e=fo())!==u&&nl()!==u?((n=jo())===u&&(n=null),n!==u&&nl()!==u?((s=Wo())===u&&(s=null),s!==u&&nl()!==u?(r,o=t,a=e,i=n,l=s,t={tableList:Array.from(ml),columnList:yl(Il),ast:{type:"bigquery",with:o,select:a&&a.ast,orderby:i,limit:l,parentheses:a&&a.parentheses||!1}},r=t):(au=r,r=u)):(au=r,r=u)):(au=r,r=u);var o,a,i,l;return r}())===u&&(t=au,e=au,40===r.charCodeAt(au)?(n="(",au++):(n=u,0===fu&&du(Vr)),n!==u&&(s=nl())!==u&&(o=vo())!==u&&(a=nl())!==u?(41===r.charCodeAt(au)?(i=")",au++):(i=u,0===fu&&du(Kr)),i!==u?e=n=[n,s,o,a,i]:(au=e,e=u)):(au=e,e=u),e!==u&&(t,e={...e[2],parentheses:!0}),t=e);return t}())===u&&(t=function(){var t;(t=fo())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=au,(t=to())!==u&&nl()!==u&&(e=Ro())!==u&&nl()!==u&&ti()!==u&&nl()!==u&&(n=Su())!==u&&nl()!==u?((s=Io())===u&&(s=null),s!==u&&nl()!==u?((o=Mo())===u&&(o=null),o!==u&&nl()!==u?((a=jo())===u&&(a=null),a!==u&&nl()!==u?((i=Wo())===u&&(i=null),i!==u?(r,c=n,f=s,b=o,v=a,L=i,(l=e)&&l.forEach(r=>{const{db:t,as:e,table:n,join:s}=r,u=s?"select":"update";ml.add(`${u}::${t}::${n}`)}),f&&f.forEach(r=>{r.table&&ml.add(`update::${r.db}::${r.table}`)}),c&&c.forEach(r=>Il.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(ml),columnList:yl(Il),ast:{type:"update",table:l,set:c,where:b,orderby:v,limit:L}},r=t):(au=r,r=u)):(au=r,r=u)):(au=r,r=u)):(au=r,r=u)):(au=r,r=u);var l,c,f,b,v,L;return r}())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=au,(t=Ou())!==u&&nl()!==u?((e=Ja())===u&&(e=null),e!==u&&nl()!==u&&(n=xo())!==u&&nl()!==u?((s=gu())===u&&(s=null),s!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(o=function(){var r,t,e,n,s,o,a,i;if(r=au,(t=Aa())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Aa())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Aa())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,t=l(t,e),r=t):(au=r,r=u)}else au=r,r=u;return r}())!==u&&nl()!==u&&Zi()!==u&&nl()!==u&&(a=xu())!==u&&nl()!==u?((i=Uu())===u&&(i=null),i!==u?(r,t=function(r,t,e,n,s,u){if(t&&(ml.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(s)&&s.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>Il.add(`insert::${r}::${t}`))}return{tableList:Array.from(ml),columnList:yl(Il),ast:{type:r,table:[t],columns:n,values:s,partition:e,on_duplicate_update:u}}}(t,n,s,o,a,i),r=t):(au=r,r=u)):(au=r,r=u)):(au=r,r=u)):(au=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=au,(t=Ou())!==u&&nl()!==u?((e=za())===u&&(e=null),e!==u&&nl()!==u?((n=Ja())===u&&(n=null),n!==u&&nl()!==u&&(s=xo())!==u&&nl()!==u?((o=gu())===u&&(o=null),o!==u&&nl()!==u&&(a=xu())!==u&&nl()!==u?((i=Uu())===u&&(i=null),i!==u?(r,t=function(r,t,e,n,s,u,o){n&&(ml.add(`insert::${n.db}::${n.table}`),Il.add(`insert::${n.table}::(.*)`),n.as=null);const a=[t,e].filter(r=>r).map(r=>r[0]&&r[0].toLowerCase()).join(" ");return{tableList:Array.from(ml),columnList:yl(Il),ast:{type:r,table:[n],columns:null,values:u,partition:s,prefix:a,on_duplicate_update:o}}}(t,e,n,s,o,a,i),r=t):(au=r,r=u)):(au=r,r=u)):(au=r,r=u)):(au=r,r=u)):(au=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a;r=au,(t=Ou())!==u&&nl()!==u?((e=Ja())===u&&(e=null),e!==u&&nl()!==u&&(n=xo())!==u&&nl()!==u?((s=gu())===u&&(s=null),s!==u&&nl()!==u&&ti()!==u&&nl()!==u&&(o=Su())!==u&&nl()!==u?((a=Uu())===u&&(a=null),a!==u?(r,i=t,c=s,f=o,b=a,(l=n)&&(ml.add(`insert::${l.db}::${l.table}`),Il.add(`insert::${l.table}::(.*)`),l.as=null),t={tableList:Array.from(ml),columnList:yl(Il),ast:{type:i,table:[l],columns:null,partition:c,set:f,on_duplicate_update:b}},r=t):(au=r,r=u)):(au=r,r=u)):(au=r,r=u)):(au=r,r=u);var i,l,c,f,b;return r}())===u&&(t=function(){var t,e,n,s,o,a,i;t=au,(e=function(){var t,e,n,s;t=au,"delete"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(yr));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u?((n=Ro())===u&&(n=null),n!==u&&nl()!==u?((s=Io())===u&&(s=null),s!==u&&nl()!==u?((o=Mo())===u&&(o=null),o!==u&&nl()!==u?((a=jo())===u&&(a=null),a!==u&&nl()!==u?((i=Wo())===u&&(i=null),i!==u?(t,e=function(r,t,e,n,s){if(r&&r.forEach(r=>ml.add(`delete::${r.db}::${r.table}`)),t&&t.forEach(r=>{const{db:t,as:e,table:n,join:s}=r,u=s?"select":"delete";n&&ml.add(`${u}::${t}::${n}`),s||Il.add(`delete::${n}::(.*)`)}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}]}return{tableList:Array.from(ml),columnList:yl(Il),ast:{type:"delete",table:r,from:t,where:e,orderby:n,limit:s}}}(n,s,o,a,i),t=e):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u);return t}())===u&&(t=function(){var t;(t=function(){var t,e,n;t=au,(e=function(){var t,e,n,s;t=au,"analyze"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(Mr));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u&&(n=xo())!==u&&nl()!==u?(t,s=e,o=n,ml.add(`${s}::${o.db}::${o.table}`),e={tableList:Array.from(ml),columnList:yl(Il),ast:{type:s.toLowerCase(),table:o}},t=e):(au=t,t=u);var s,o;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=au,(e=function(){var t,e,n,s;t=au,"attach"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(kr));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u&&(n=uo())!==u&&nl()!==u&&(s=Vo())!==u&&nl()!==u&&(o=ei())!==u&&nl()!==u&&(a=da())!==u&&nl()!==u?(t,i=e,l=n,c=s,f=o,b=a,e={tableList:Array.from(ml),columnList:yl(Il),ast:{type:i.toLowerCase(),database:l,expr:c,as:f&&f[0].toLowerCase(),schema:b}},t=e):(au=t,t=u);var i,l,c,f,b;return t}())===u&&(t=function(){var r,t,e,n,s,o;r=au,(t=Za())!==u&&nl()!==u&&(e=ni())!==u&&nl()!==u&&(n=Ro())!==u?(r,a=t,i=e,(l=n)&&l.forEach(r=>ml.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(ml),columnList:yl(Il),ast:{type:a.toLowerCase(),keyword:i.toLowerCase(),name:l}},r=t):(au=r,r=u);var a,i,l;r===u&&(r=au,(t=Za())!==u&&nl()!==u&&(e=Yi())!==u&&nl()!==u&&(n=Ca())!==u&&nl()!==u&&ui()!==u&&nl()!==u&&(s=xo())!==u&&nl()!==u?((o=function(){var r,t,e,n,s,o;r=au,(t=Pu())===u&&(t=Fu());if(t!==u){for(e=[],n=au,(s=nl())!==u?((o=Pu())===u&&(o=Fu()),o!==u?n=s=[s,o]:(au=n,n=u)):(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u?((o=Pu())===u&&(o=Fu()),o!==u?n=s=[s,o]:(au=n,n=u)):(au=n,n=u);e!==u?(r,t=A(t,e),r=t):(au=r,r=u)}else au=r,r=u;return r}())===u&&(o=null),o!==u&&nl()!==u?(r,t=function(r,t,e,n,s){return{tableList:Array.from(ml),columnList:yl(Il),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:s}}}(t,e,n,s,o),r=t):(au=r,r=u)):(au=r,r=u));return r}())===u&&(t=function(){var t;(t=function(){var r,t,e,n,s,o,a,i,c,f,b,v;if(r=au,(t=eo())!==u)if(nl()!==u)if((e=lo())===u&&(e=null),e!==u)if(nl()!==u)if(ni()!==u)if(nl()!==u)if((n=$u())===u&&(n=null),n!==u)if(nl()!==u)if((s=Ro())!==u)if(nl()!==u)if((o=function(){var r,t,e,n,s,o,a,i,c;if(r=au,(t=qi())!==u)if(nl()!==u)if((e=Gu())!==u){for(n=[],s=au,(o=nl())!==u&&(a=Vi())!==u&&(i=nl())!==u&&(c=Gu())!==u?s=o=[o,a,i,c]:(au=s,s=u);s!==u;)n.push(s),s=au,(o=nl())!==u&&(a=Vi())!==u&&(i=nl())!==u&&(c=Gu())!==u?s=o=[o,a,i,c]:(au=s,s=u);n!==u&&(s=nl())!==u&&(o=Zi())!==u?(r,t=l(e,n),r=t):(au=r,r=u)}else au=r,r=u;else au=r,r=u;else au=r,r=u;return r}())!==u)if(nl()!==u){for(a=[],i=Yu();i!==u;)a.push(i),i=Yu();a!==u&&(i=nl())!==u?((c=function(){var r,t,e,n,s,o,a,i;if(r=au,(t=Xu())!==u){for(e=[],n=au,(s=nl())!==u?((o=Vi())===u&&(o=null),o!==u&&(a=nl())!==u&&(i=Xu())!==u?n=s=[s,o,a,i]:(au=n,n=u)):(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u?((o=Vi())===u&&(o=null),o!==u&&(a=nl())!==u&&(i=Xu())!==u?n=s=[s,o,a,i]:(au=n,n=u)):(au=n,n=u);e!==u?(r,t=El(t,e),r=t):(au=r,r=u)}else au=r,r=u;return r}())===u&&(c=null),c!==u&&nl()!==u?((f=za())===u&&(f=so()),f===u&&(f=null),f!==u&&nl()!==u?((b=ei())===u&&(b=null),b!==u&&nl()!==u?((v=fo())===u&&(v=null),v!==u?(r,L=t,C=e,d=n,w=o,E=a,A=c,h=f,y=b,T=v,(p=s)&&p.forEach(r=>ml.add(`create::${r.db}::${r.table}`)),t={tableList:Array.from(ml),columnList:yl(Il),ast:{type:L[0].toLowerCase(),keyword:"table",temporary:C&&C[0].toLowerCase(),if_not_exists:d,table:p,ignore_replace:h&&h[0].toLowerCase(),as:y&&y[0].toLowerCase(),query_expr:T&&T.ast,create_definitions:w,constraint:E,table_options:A}},r=t):(au=r,r=u)):(au=r,r=u)):(au=r,r=u)):(au=r,r=u)):(au=r,r=u)}else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;var L,C,d,p,w,E,A,h,y,T;r===u&&(r=au,(t=eo())!==u&&nl()!==u?((e=lo())===u&&(e=null),e!==u&&nl()!==u&&ni()!==u&&nl()!==u?((n=$u())===u&&(n=null),n!==u&&nl()!==u&&(s=Ro())!==u&&nl()!==u&&(o=function r(){var t,e;(t=function(){var r,t;r=au,hi()!==u&&nl()!==u&&(t=Ro())!==u?(r,r={type:"like",table:t}):(au=r,r=u);return r}())===u&&(t=au,qi()!==u&&nl()!==u&&(e=r())!==u&&nl()!==u&&Zi()!==u?(t,(n=e).parentheses=!0,t=n):(au=t,t=u));var n;return t}())!==u?(r,t=function(r,t,e,n,s){return n&&n.forEach(r=>ml.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(ml),columnList:yl(Il),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e,table:n,like:s}}}(t,e,n,s,o),r=t):(au=r,r=u)):(au=r,r=u)):(au=r,r=u));return r}())===u&&(t=function(){var t,e,n,s,o,a;t=au,(e=eo())!==u&&nl()!==u?((n=uo())===u&&(n=function(){var t,e,n,s;t=au,"schema"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(Br));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}()),n!==u&&nl()!==u?((s=$u())===u&&(s=null),s!==u&&nl()!==u&&(o=ya())!==u&&nl()!==u?((a=function(){var r,t,e,n,s,o;if(r=au,(t=Vu())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vu())!==u?n=s=[s,o]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vu())!==u?n=s=[s,o]:(au=n,n=u);e!==u?(r,t=A(t,e),r=t):(au=r,r=u)}else au=r,r=u;return r}())===u&&(a=null),a!==u?(t,i=e,l=s,c=o,f=a,e={tableList:Array.from(ml),columnList:yl(Il),ast:{type:i[0].toLowerCase(),keyword:"database",if_not_exists:l,database:c,create_definitions:f}},t=e):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u);var i,l,c,f;return t}());return t}())===u&&(t=function(){var t,e,n,s;t=au,(e=function(){var t,e,n,s;t=au,"truncate"===r.substr(au,8).toLowerCase()?(e=r.substr(au,8),au+=8):(e=u,0===fu&&du(Ns));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="TRUNCATE"):(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u?((n=ni())===u&&(n=null),n!==u&&nl()!==u&&(s=Ro())!==u?(t,o=e,a=n,(i=s)&&i.forEach(r=>ml.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(ml),columnList:yl(Il),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(au=t,t=u)):(au=t,t=u);var o,a,i;return t}())===u&&(t=function(){var r,t,e;r=au,(t=oo())!==u&&nl()!==u&&ni()!==u&&nl()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=au,(t=No())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=No())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=No())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,t=l(t,e),r=t):(au=r,r=u)}else au=r,r=u;return r}())!==u?(r,(n=e).forEach(r=>r.forEach(r=>r.table&&ml.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(ml),columnList:yl(Il),ast:{type:"rename",table:n}},r=t):(au=r,r=u);var n;return r}())===u&&(t=function(){var t,e,n;t=au,(e=function(){var t,e,n,s;t=au,"call"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(ns));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="CALL"):(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u&&(n=Nu())!==u?(t,s=n,e={tableList:Array.from(ml),columnList:yl(Il),ast:{type:"call",expr:s}},t=e):(au=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n;t=au,(e=function(){var t,e,n,s;t=au,"use"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(on));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u&&(n=da())!==u?(t,s=n,ml.add(`use::${s}::null`),e={tableList:Array.from(ml),columnList:yl(Il),ast:{type:"use",db:s}},t=e):(au=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n,s;t=au,(e=function(){var t,e,n,s;t=au,"alter"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(Wr));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u&&ni()!==u&&nl()!==u&&(n=Ro())!==u&&nl()!==u&&(s=function(){var r,t,e,n,s,o,a,i;if(r=au,(t=Ku())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Ku())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Ku())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,t=l(t,e),r=t):(au=r,r=u)}else au=r,r=u;return r}())!==u?(t,a=s,(o=n)&&o.length>0&&o.forEach(r=>ml.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(ml),columnList:yl(Il),ast:{type:"alter",table:o,expr:a}},t=e):(au=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n,s;t=au,(e=ti())!==u&&nl()!==u?((n=function(){var t,e,n,s;t=au,"global"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(xs));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="GLOBAL"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=au,"session"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(Us));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="SESSION"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=au,"local"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(ir));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="LOCAL"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=au,"persist"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(ks));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="PERSIST"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=au,"persist_only"===r.substr(au,12).toLowerCase()?(e=r.substr(au,12),au+=12):(e=u,0===fu&&du(Ds));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="PERSIST_ONLY"):(au=t,t=u)):(au=t,t=u);return t}()),n===u&&(n=null),n!==u&&nl()!==u&&(s=hu())!==u?(t,o=n,(a=s).keyword=o,e={tableList:Array.from(ml),columnList:yl(Il),ast:{type:"set",expr:a}},t=e):(au=t,t=u)):(au=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n;t=au,(e=function(){var t,e,n,s;t=au,"lock"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(O));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u&&si()!==u&&nl()!==u&&(n=function(){var r,t,e,n,s,o,a,i;if(r=au,(t=ju())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=ju())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=ju())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,t=y(t,e),r=t):(au=r,r=u)}else au=r,r=u;return r}())!==u?(t,s=n,e={tableList:Array.from(ml),columnList:yl(Il),ast:{type:"lock",keyword:"tables",tables:s}},t=e):(au=t,t=u);var s;return t}())===u&&(t=function(){var t,e;t=au,(e=function(){var t,e,n,s;t=au,"unlock"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(vn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u&&si()!==u?(t,e={tableList:Array.from(ml),columnList:yl(Il),ast:{type:"unlock",keyword:"tables"}},t=e):(au=t,t=u);return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c;t=au,(e=ao())!==u&&nl()!==u?("binary"===r.substr(au,6).toLowerCase()?(n=r.substr(au,6),au+=6):(n=u,0===fu&&du(b)),n===u&&("master"===r.substr(au,6).toLowerCase()?(n=r.substr(au,6),au+=6):(n=u,0===fu&&du(v))),n!==u&&(s=nl())!==u?("logs"===r.substr(au,4).toLowerCase()?(o=r.substr(au,4),au+=4):(o=u,0===fu&&du(L)),o!==u?(t,f=n,e={tableList:Array.from(ml),columnList:yl(Il),ast:{type:"show",suffix:"logs",keyword:f.toLowerCase()}},t=e):(au=t,t=u)):(au=t,t=u)):(au=t,t=u);var f;t===u&&(t=au,(e=ao())!==u&&nl()!==u?("binlog"===r.substr(au,6).toLowerCase()?(n=r.substr(au,6),au+=6):(n=u,0===fu&&du(C)),n!==u&&(s=nl())!==u?("events"===r.substr(au,6).toLowerCase()?(o=r.substr(au,6),au+=6):(o=u,0===fu&&du(d)),o!==u&&(a=nl())!==u?((i=oa())===u&&(i=null),i!==u&&nl()!==u?((l=Io())===u&&(l=null),l!==u&&nl()!==u?((c=Wo())===u&&(c=null),c!==u?(t,A=i,h=l,m=c,e={tableList:Array.from(ml),columnList:yl(Il),ast:{type:"show",suffix:"events",keyword:"binlog",in:A,from:h,limit:m}},t=e):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t===u&&(t=au,(e=ao())!==u&&nl()!==u?(n=au,"character"===r.substr(au,9).toLowerCase()?(s=r.substr(au,9),au+=9):(s=u,0===fu&&du(p)),s!==u&&(o=nl())!==u?("set"===r.substr(au,3).toLowerCase()?(a=r.substr(au,3),au+=3):(a=u,0===fu&&du(w)),a!==u?n=s=[s,o,a]:(au=n,n=u)):(au=n,n=u),n===u&&("collation"===r.substr(au,9).toLowerCase()?(n=r.substr(au,9),au+=9):(n=u,0===fu&&du(E))),n!==u&&(s=nl())!==u?((o=ua())===u&&(o=Mo()),o===u&&(o=null),o!==u?(t,e=function(r,t){let e=Array.isArray(r)&&r||[r];return{tableList:Array.from(ml),columnList:yl(Il),ast:{type:"show",suffix:e[2]&&e[2].toLowerCase(),keyword:e[0].toLowerCase(),expr:t}}}(n,o),t=e):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t===u&&(t=function(){var t,e,n,s;t=au,(e=ao())!==u&&nl()!==u?("grants"===r.substr(au,6).toLowerCase()?(n=r.substr(au,6),au+=6):(n=u,0===fu&&du(T)),n!==u&&nl()!==u?((s=function(){var t,e,n,s,o,a,i;t=au,"for"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(P));e!==u&&nl()!==u&&(n=da())!==u&&nl()!==u?(s=au,(o=io())!==u&&(a=nl())!==u&&(i=da())!==u?s=o=[o,a,i]:(au=s,s=u),s===u&&(s=null),s!==u&&(o=nl())!==u?((a=function(){var r,t;r=au,ci()!==u&&nl()!==u&&(t=function(){var r,t,e,n,s,o,a,i;if(r=au,(t=da())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=da())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=da())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,t=y(t,e),r=t):(au=r,r=u)}else au=r,r=u;return r}())!==u?(r,r=t):(au=r,r=u);return r}())===u&&(a=null),a!==u?(t,c=a,e={user:n,host:(l=s)&&l[2],role_list:c},t=e):(au=t,t=u)):(au=t,t=u)):(au=t,t=u);var l,c;return t}())===u&&(s=null),s!==u?(t,o=s,e={tableList:Array.from(ml),columnList:yl(Il),ast:{type:"show",keyword:"grants",for:o}},t=e):(au=t,t=u)):(au=t,t=u)):(au=t,t=u);var o;return t}())));var A,h,m;return t}())===u&&(t=function(){var t,e,n;t=au,(e=Ci())===u&&(e=function(){var t,e,n,s;t=au,"describe"===r.substr(au,8).toLowerCase()?(e=r.substr(au,8),au+=8):(e=u,0===fu&&du(Fr));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}());e!==u&&nl()!==u&&(n=da())!==u?(t,s=n,e={tableList:Array.from(ml),columnList:yl(Il),ast:{type:"desc",table:s}},t=e):(au=t,t=u);var s;return t}());return t}())===u&&(t=function(){var r,t;r=[],t=Au();for(;t!==u;)r.push(t),t=Au();return r}());return t}()),t}function Au(){var t,e;return t=au,au,Tl=[],( true?void 0:0)!==u&&nl()!==u?((e=hu())===u&&(e=function(){var t,e;t=au,function(){var t;"return"===r.substr(au,6).toLowerCase()?(t=r.substr(au,6),au+=6):(t=u,0===fu&&du(xr));return t}()!==u&&nl()!==u&&(e=yu())!==u?(t,t={type:"return",expr:e}):(au=t,t=u);return t}()),e!==u?(t,t={stmt:e,vars:Tl}):(au=t,t=u)):(au=t,t=u),t}function hu(){var t,e,n,s;return t=au,(e=Mu())===u&&(e=ku()),e!==u&&nl()!==u?((n=function(){var t;":="===r.substr(au,2)?(t=":=",au+=2):(t=u,0===fu&&du(gr));return t}())===u&&(n=no()),n!==u&&nl()!==u&&(s=yu())!==u?(t,t=e={type:"assign",left:e,symbol:n,right:s}):(au=t,t=u)):(au=t,t=u),t}function yu(){var r;return(r=vo())===u&&(r=function(){var r,t,e,n,s;r=au,(t=Mu())!==u&&nl()!==u&&(e=go())!==u&&nl()!==u&&(n=Mu())!==u&&nl()!==u&&(s=Uo())!==u?(r,r=t={type:"join",ltable:t,rtable:n,op:e,on:s}):(au=r,r=u);return r}())===u&&(r=Tu())===u&&(r=function(){var r,t;r=au,Ji()!==u&&nl()!==u&&(t=Ru())!==u&&nl()!==u&&rl()!==u?(r,r={type:"array",value:t}):(au=r,r=u);return r}()),r}function Tu(){var r,t,e,n,s,o,a,l;if(r=au,(t=mu())!==u){for(e=[],n=au,(s=nl())!==u&&(o=ia())!==u&&(a=nl())!==u&&(l=mu())!==u?n=s=[s,o,a,l]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=ia())!==u&&(a=nl())!==u&&(l=mu())!==u?n=s=[s,o,a,l]:(au=n,n=u);e!==u?(r,r=t=i(t,e)):(au=r,r=u)}else au=r,r=u;return r}function mu(){var r,t,e,n,s,o,a,l;if(r=au,(t=Iu())!==u){for(e=[],n=au,(s=nl())!==u&&(o=ca())!==u&&(a=nl())!==u&&(l=Iu())!==u?n=s=[s,o,a,l]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=ca())!==u&&(a=nl())!==u&&(l=Iu())!==u?n=s=[s,o,a,l]:(au=n,n=u);e!==u?(r,r=t=i(t,e)):(au=r,r=u)}else au=r,r=u;return r}function Iu(){var r,t,e;return(r=Ma())===u&&(r=Mu())===u&&(r=Nu())===u&&(r=Na())===u&&(r=au,qi()!==u&&nl()!==u&&(t=Tu())!==u&&nl()!==u&&Zi()!==u?(r,(e=t).parentheses=!0,r=e):(au=r,r=u)),r}function Nu(){var r,t,e;return r=au,(t=Oa())!==u&&nl()!==u&&qi()!==u&&nl()!==u?((e=Ru())===u&&(e=null),e!==u&&nl()!==u&&Zi()!==u?(r,r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(au=r,r=u)):(au=r,r=u),r===u&&(r=au,(t=Oa())!==u&&(r,t=function(r){return{type:"function",name:r,args:null}}(t)),r=t),r}function Ru(){var r,t,e,n,s,o,a,i;if(r=au,(t=Iu())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Iu())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Iu())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,r=t=l(t,e)):(au=r,r=u)}else au=r,r=u;return r}function Su(){var r,t,e,n,s,o,a,i;if(r=au,(t=_u())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=_u())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=_u())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,r=t=l(t,e)):(au=r,r=u)}else au=r,r=u;return r}function _u(){var t,e,n,s,o,a,i,l,f;return t=au,e=au,(n=da())!==u&&(s=nl())!==u&&(o=Xi())!==u?e=n=[n,s,o]:(au=e,e=u),e===u&&(e=null),e!==u&&(n=nl())!==u&&(s=Aa())!==u&&(o=nl())!==u?(61===r.charCodeAt(au)?(a="=",au++):(a=u,0===fu&&du(c)),a!==u&&nl()!==u&&(i=aa())!==u?(t,t=e={column:s,value:i,table:(f=e)&&f[0]}):(au=t,t=u)):(au=t,t=u),t===u&&(t=au,e=au,(n=da())!==u&&(s=nl())!==u&&(o=Xi())!==u?e=n=[n,s,o]:(au=e,e=u),e===u&&(e=null),e!==u&&(n=nl())!==u&&(s=Aa())!==u&&(o=nl())!==u?(61===r.charCodeAt(au)?(a="=",au++):(a=u,0===fu&&du(c)),a!==u&&nl()!==u&&(i=li())!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(l=Ca())!==u&&nl()!==u&&Zi()!==u?(t,t=e=function(r,t,e){return{column:t,value:e,table:r&&r[0],keyword:"values"}}(e,s,l)):(au=t,t=u)):(au=t,t=u)),t}function Ou(){var t,e;return t=au,(e=function(){var t,e,n,s;t=au,"insert"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(Or));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&(t,e="insert"),(t=e)===u&&(t=au,(e=so())!==u&&(t,e="replace"),t=e),t}function gu(){var r,t,e,n,s,o,a,i,l;if(r=au,Qa()!==u)if(nl()!==u)if((t=qi())!==u)if(nl()!==u)if((e=ya())!==u){for(n=[],s=au,(o=nl())!==u&&(a=Vi())!==u&&(i=nl())!==u&&(l=ya())!==u?s=o=[o,a,i,l]:(au=s,s=u);s!==u;)n.push(s),s=au,(o=nl())!==u&&(a=Vi())!==u&&(i=nl())!==u&&(l=ya())!==u?s=o=[o,a,i,l]:(au=s,s=u);n!==u&&(s=nl())!==u&&(o=Zi())!==u?(r,r=El(e,n)):(au=r,r=u)}else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;return r===u&&(r=au,Qa()!==u&&nl()!==u&&(t=Du())!==u?(r,r=t):(au=r,r=u)),r}function xu(){var r;return(r=function(){var r,t;r=au,li()!==u&&nl()!==u&&(t=function(){var r,t,e,n,s,o,a,i;if(r=au,(t=Du())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Du())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Du())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,t=l(t,e),r=t):(au=r,r=u)}else au=r,r=u;return r}())!==u?(r,r=t):(au=r,r=u);return r}())===u&&(r=po()),r}function Uu(){var t,e,n;return t=au,ui()!==u&&nl()!==u?("duplicate"===r.substr(au,9).toLowerCase()?(e=r.substr(au,9),au+=9):(e=u,0===fu&&du(f)),e!==u&&nl()!==u&&Bi()!==u&&nl()!==u&&to()!==u&&nl()!==u&&(n=Su())!==u?(t,t={keyword:"on duplicate key update",set:n}):(au=t,t=u)):(au=t,t=u),t}function Mu(){var t,e,n,s,o;return t=au,(e=function(){var t;(t=function(){var t;"@@"===r.substr(au,2)?(t="@@",au+=2):(t=u,0===fu&&du(Hr));return t}())===u&&(t=io())===u&&(t=function(){var t;36===r.charCodeAt(au)?(t="$",au++):(t=u,0===fu&&du(jr));return t}());return t}())!==u&&(n=ku())!==u?(t,s=e,o=n,t=e={type:"var",...o,prefix:s}):(au=t,t=u),t}function ku(){var t,e,n,s,o;return t=au,(e=ya())!==u&&(n=function(){var t,e,n,s,o;t=au,e=[],n=au,46===r.charCodeAt(au)?(s=".",au++):(s=u,0===fu&&du(m));s!==u&&(o=ya())!==u?n=s=[s,o]:(au=n,n=u);for(;n!==u;)e.push(n),n=au,46===r.charCodeAt(au)?(s=".",au++):(s=u,0===fu&&du(m)),s!==u&&(o=ya())!==u?n=s=[s,o]:(au=n,n=u);e!==u&&(t,e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==u?(t,s=e,o=n,Tl.push(s),t=e={type:"var",name:s,members:o,prefix:null}):(au=t,t=u),t===u&&(t=au,(e=Ga())!==u&&(t,e={type:"var",name:e.value,members:[],quoted:null,prefix:null}),t=e),t}function Du(){var r,t;return r=au,qi()!==u&&nl()!==u&&(t=Xo())!==u&&nl()!==u&&Zi()!==u?(r,r=t):(au=r,r=u),r}function $u(){var t,e;return t=au,"if"===r.substr(au,2).toLowerCase()?(e=r.substr(au,2),au+=2):(e=u,0===fu&&du(h)),e!==u&&nl()!==u&&Ti()!==u&&nl()!==u&&yi()!==u?(t,t=e="IF NOT EXISTS"):(au=t,t=u),t}function Pu(){var t,e,n,s;return t=au,"algorithm"===r.substr(au,9).toLowerCase()?(e=r.substr(au,9),au+=9):(e=u,0===fu&&du(I)),e!==u&&nl()!==u?((n=no())===u&&(n=null),n!==u&&nl()!==u?("default"===r.substr(au,7).toLowerCase()?(s=r.substr(au,7),au+=7):(s=u,0===fu&&du(N)),s===u&&("instant"===r.substr(au,7).toLowerCase()?(s=r.substr(au,7),au+=7):(s=u,0===fu&&du(R)),s===u&&("inplace"===r.substr(au,7).toLowerCase()?(s=r.substr(au,7),au+=7):(s=u,0===fu&&du(S)),s===u&&("copy"===r.substr(au,4).toLowerCase()?(s=r.substr(au,4),au+=4):(s=u,0===fu&&du(_))))),s!==u?(t,t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:s}):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t}function Fu(){var t,e,n,s;return t=au,"lock"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(O)),e!==u&&nl()!==u?((n=no())===u&&(n=null),n!==u&&nl()!==u?("default"===r.substr(au,7).toLowerCase()?(s=r.substr(au,7),au+=7):(s=u,0===fu&&du(N)),s===u&&("none"===r.substr(au,4).toLowerCase()?(s=r.substr(au,4),au+=4):(s=u,0===fu&&du(g)),s===u&&("shared"===r.substr(au,6).toLowerCase()?(s=r.substr(au,6),au+=6):(s=u,0===fu&&du(x)),s===u&&("exclusive"===r.substr(au,9).toLowerCase()?(s=r.substr(au,9),au+=9):(s=u,0===fu&&du(U))))),s!==u?(t,t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:s}):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t}function Gu(){var t;return(t=Hu())===u&&(t=function(){var r,t,e,n,s,o;r=au,(t=Yi())===u&&(t=Bi());t!==u&&nl()!==u?((e=Aa())===u&&(e=null),e!==u&&nl()!==u?((n=qu())===u&&(n=null),n!==u&&nl()!==u&&(s=Zu())!==u&&nl()!==u?((o=zu())===u&&(o=null),o!==u&&nl()!==u?(r,a=n,i=o,t={index:e,definition:s,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i},r=t):(au=r,r=u)):(au=r,r=u)):(au=r,r=u)):(au=r,r=u);var a,i;return r}())===u&&(t=function(){var t,e,n,s,o,a;t=au,(e=function(){var t,e,n,s;t=au,"fulltext"===r.substr(au,8).toLowerCase()?(e=r.substr(au,8),au+=8):(e=u,0===fu&&du(Gs));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="FULLTEXT"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(e=function(){var t,e,n,s;t=au,"spatial"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(Xr));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}());e!==u&&nl()!==u?((n=Yi())===u&&(n=Bi()),n===u&&(n=null),n!==u&&nl()!==u?((s=Aa())===u&&(s=null),s!==u&&nl()!==u&&(o=Zu())!==u&&nl()!==u?((a=zu())===u&&(a=null),a!==u&&nl()!==u?(t,i=e,c=a,e={index:s,definition:o,keyword:(l=n)&&`${i.toLowerCase()} ${l.toLowerCase()}`||i.toLowerCase(),index_options:c,resource:"index"},t=e):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u);var i,l,c;return t}()),t}function Hu(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C,d,p,w,E,A,h,y,T,m,I,R;return t=au,(e=Ca())!==u&&nl()!==u&&(n=fl())!==u&&nl()!==u?((s=function(){var t,e;t=au,(e=function(){var t,e,n,s;t=au,"not null"===r.substr(au,8).toLowerCase()?(e=r.substr(au,8),au+=8):(e=u,0===fu&&du(tn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&(t,e={type:"not null",value:"not null"});return t=e}())===u&&(s=ka()),s===u&&(s=null),s!==u&&nl()!==u?((o=function(){var r,t;r=au,Ka()!==u&&nl()!==u?((t=Ma())===u&&(t=Vo()),t!==u?(r,r={type:"default",value:t}):(au=r,r=u)):(au=r,r=u);return r}())===u&&(o=null),o!==u&&nl()!==u?("auto_increment"===r.substr(au,14).toLowerCase()?(a=r.substr(au,14),au+=14):(a=u,0===fu&&du(M)),a===u&&(a=null),a!==u&&nl()!==u?(i=au,"unique"===r.substr(au,6).toLowerCase()?(l=r.substr(au,6),au+=6):(l=u,0===fu&&du(k)),l===u&&("primary"===r.substr(au,7).toLowerCase()?(l=r.substr(au,7),au+=7):(l=u,0===fu&&du(D))),l===u&&(l=null),l!==u&&(c=nl())!==u?("key"===r.substr(au,3).toLowerCase()?(f=r.substr(au,3),au+=3):(f=u,0===fu&&du($)),f!==u?i=l=[l,c,f]:(au=i,i=u)):(au=i,i=u),i===u&&(i=null),i!==u&&(l=nl())!==u?((c=Bu())===u&&(c=null),c!==u&&(f=nl())!==u?((b=function(){var t,e,n;t=au,function(){var t,e,n,s;t=au,"collate"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(or));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="COLLATE"):(au=t,t=u)):(au=t,t=u);return t}()!==u&&nl()!==u?((e=no())===u&&(e=null),e!==u&&nl()!==u&&(n=ya())!==u?(t,t={type:"collate",symbol:e,value:n}):(au=t,t=u)):(au=t,t=u);return t}())===u&&(b=null),b!==u&&nl()!==u?((v=function(){var t,e,n;t=au,"column_format"===r.substr(au,13).toLowerCase()?(e=r.substr(au,13),au+=13):(e=u,0===fu&&du(F));e!==u&&nl()!==u?("fixed"===r.substr(au,5).toLowerCase()?(n=r.substr(au,5),au+=5):(n=u,0===fu&&du(G)),n===u&&("dynamic"===r.substr(au,7).toLowerCase()?(n=r.substr(au,7),au+=7):(n=u,0===fu&&du(H)),n===u&&("default"===r.substr(au,7).toLowerCase()?(n=r.substr(au,7),au+=7):(n=u,0===fu&&du(N)))),n!==u?(t,e={type:"column_format",value:n.toLowerCase()},t=e):(au=t,t=u)):(au=t,t=u);return t}())===u&&(v=null),v!==u&&nl()!==u?((L=function(){var t,e,n;t=au,"storage"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(j));e!==u&&nl()!==u?("disk"===r.substr(au,4).toLowerCase()?(n=r.substr(au,4),au+=4):(n=u,0===fu&&du(Y)),n===u&&("memory"===r.substr(au,6).toLowerCase()?(n=r.substr(au,6),au+=6):(n=u,0===fu&&du(B))),n!==u?(t,e={type:"storage",value:n.toLowerCase()},t=e):(au=t,t=u)):(au=t,t=u);return t}())===u&&(L=null),L!==u&&nl()!==u?((C=Wu())===u&&(C=null),C!==u?(t,d=e,p=n,w=s,E=o,A=a,h=i,y=c,T=b,m=v,I=L,R=C,Il.add(`create::${d.table}::${d.column}`),w&&!w.value&&(w.value="null"),t=e={column:d,definition:p,nullable:w,default_val:E,auto_increment:A&&A.toLowerCase(),unique_or_primary:h&&`${h[0].toLowerCase()} ${h[2].toLowerCase()}`,comment:y,collate:T,column_format:m,storage:I,reference_definition:R,resource:"column"}):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t}function ju(){var t,e,n,s,o;return t=au,(e=Oo())!==u&&nl()!==u&&(n=function(){var t,e,n;t=au,"read"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(ar));e!==u&&nl()!==u?("local"===r.substr(au,5).toLowerCase()?(n=r.substr(au,5),au+=5):(n=u,0===fu&&du(ir)),n===u&&(n=null),n!==u?(t,t=e={type:"read",suffix:n&&"local"}):(au=t,t=u)):(au=t,t=u);t===u&&(t=au,"low_priority"===r.substr(au,12).toLowerCase()?(e=r.substr(au,12),au+=12):(e=u,0===fu&&du(lr)),e===u&&(e=null),e!==u&&nl()!==u?("write"===r.substr(au,5).toLowerCase()?(n=r.substr(au,5),au+=5):(n=u,0===fu&&du(cr)),n!==u?(t,t=e={type:"write",prefix:e&&"low_priority"}):(au=t,t=u)):(au=t,t=u));return t}())!==u?(t,s=e,o=n,ml.add(`lock::${s.db}::${s.table}`),t=e={table:s,lock_type:o}):(au=t,t=u),t}function Yu(){var t;return(t=function(){var t,e,n,s,o,a,i,l;t=au,(e=ro())===u&&(e=null);e!==u&&nl()!==u?(n=au,"primary"===r.substr(au,7).toLowerCase()?(s=r.substr(au,7),au+=7):(s=u,0===fu&&du(D)),s!==u&&(o=nl())!==u?("key"===r.substr(au,3).toLowerCase()?(a=r.substr(au,3),au+=3):(a=u,0===fu&&du($)),a!==u?n=s=[s,o,a]:(au=n,n=u)):(au=n,n=u),n!==u&&(s=nl())!==u?((o=qu())===u&&(o=null),o!==u&&(a=nl())!==u&&(i=Zu())!==u&&nl()!==u?((l=zu())===u&&(l=null),l!==u?(t,f=n,b=o,v=i,L=l,e={constraint:(c=e)&&c.constraint,definition:v,constraint_type:`${f[0].toLowerCase()} ${f[2].toLowerCase()}`,keyword:c&&c.keyword,index_type:b,resource:"constraint",index_options:L},t=e):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u);var c,f,b,v,L;return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l;t=au,(e=ro())===u&&(e=null);e!==u&&nl()!==u&&(n=function(){var t,e,n,s;t=au,"unique"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(k));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="UNIQUE"):(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u?((s=Yi())===u&&(s=Bi()),s===u&&(s=null),s!==u&&nl()!==u?((o=Aa())===u&&(o=null),o!==u&&nl()!==u?((a=qu())===u&&(a=null),a!==u&&nl()!==u&&(i=Zu())!==u&&nl()!==u?((l=zu())===u&&(l=null),l!==u?(t,f=n,b=s,v=o,L=a,C=i,d=l,e={constraint:(c=e)&&c.constraint,definition:C,constraint_type:b&&`${f.toLowerCase()} ${b.toLowerCase()}`||f.toLowerCase(),keyword:c&&c.keyword,index_type:L,index:v,resource:"constraint",index_options:d},t=e):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u);var c,f,b,v,L,C,d;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=au,(e=ro())===u&&(e=null);e!==u&&nl()!==u?("foreign key"===r.substr(au,11).toLowerCase()?(n=r.substr(au,11),au+=11):(n=u,0===fu&&du(fr)),n!==u&&nl()!==u?((s=Aa())===u&&(s=null),s!==u&&nl()!==u&&(o=Zu())!==u&&nl()!==u?((a=Wu())===u&&(a=null),a!==u?(t,l=n,c=s,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:l,keyword:i&&i.keyword,index:c,resource:"constraint",reference_definition:b},t=e):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u);var i,l,c,f,b;return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f;t=au,(e=ro())===u&&(e=null);e!==u&&nl()!==u?("check"===r.substr(au,5).toLowerCase()?(n=r.substr(au,5),au+=5):(n=u,0===fu&&du(br)),n!==u&&nl()!==u?(s=au,"not"===r.substr(au,3).toLowerCase()?(o=r.substr(au,3),au+=3):(o=u,0===fu&&du(vr)),o!==u&&(a=nl())!==u?("for"===r.substr(au,3).toLowerCase()?(i=r.substr(au,3),au+=3):(i=u,0===fu&&du(P)),i!==u&&(l=nl())!==u?("replication"===r.substr(au,11).toLowerCase()?(c=r.substr(au,11),au+=11):(c=u,0===fu&&du(Lr)),c!==u&&(f=nl())!==u?s=o=[o,a,i,l,c,f]:(au=s,s=u)):(au=s,s=u)):(au=s,s=u),s===u&&(s=null),s!==u&&(o=qi())!==u&&(a=nl())!==u&&(i=Vo())!==u&&(l=nl())!==u&&(c=Zi())!==u?(t,b=e,v=s,L=i,e={constraint_type:n.toLowerCase(),keyword:b&&b.keyword,constraint:b&&b.constraint,index_type:v&&{keyword:"not for replication"},definition:[L],resource:"constraint"},t=e):(au=t,t=u)):(au=t,t=u)):(au=t,t=u);var b,v,L;return t}()),t}function Bu(){var r,t,e,n,s,o,a;return r=au,(t=Wi())!==u&&nl()!==u?((e=no())===u&&(e=null),e!==u&&nl()!==u&&(n=Da())!==u?(r,o=e,a=n,r=t={type:(s=t).toLowerCase(),keyword:s.toLowerCase(),symbol:o,value:a}):(au=r,r=u)):(au=r,r=u),r}function Wu(){var t,e,n,s,o,a,i,l,c,f;return t=au,(e=function(){var t,e,n,s;t=au,"references"===r.substr(au,10).toLowerCase()?(e=r.substr(au,10),au+=10):(e=u,0===fu&&du(Ys));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="REFERENCES"):(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u&&(n=Ro())!==u&&nl()!==u&&(s=Zu())!==u&&nl()!==u?("match full"===r.substr(au,10).toLowerCase()?(o=r.substr(au,10),au+=10):(o=u,0===fu&&du(W)),o===u&&("match partial"===r.substr(au,13).toLowerCase()?(o=r.substr(au,13),au+=13):(o=u,0===fu&&du(X)),o===u&&("match simple"===r.substr(au,12).toLowerCase()?(o=r.substr(au,12),au+=12):(o=u,0===fu&&du(V)))),o===u&&(o=null),o!==u&&nl()!==u?((a=Ju())===u&&(a=null),a!==u&&nl()!==u?((i=Ju())===u&&(i=null),i!==u?(t,l=o,c=a,f=i,t=e={definition:s,table:n,keyword:e.toLowerCase(),match:l&&l.toLowerCase(),on_delete:c,on_update:f}):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t}function Xu(){var t,e,n,s,o,a,i,l,c;return t=au,"auto_increment"===r.substr(au,14).toLowerCase()?(e=r.substr(au,14),au+=14):(e=u,0===fu&&du(M)),e===u&&("avg_row_length"===r.substr(au,14).toLowerCase()?(e=r.substr(au,14),au+=14):(e=u,0===fu&&du(K)),e===u&&("key_block_size"===r.substr(au,14).toLowerCase()?(e=r.substr(au,14),au+=14):(e=u,0===fu&&du(q)),e===u&&("max_rows"===r.substr(au,8).toLowerCase()?(e=r.substr(au,8),au+=8):(e=u,0===fu&&du(Z)),e===u&&("min_rows"===r.substr(au,8).toLowerCase()?(e=r.substr(au,8),au+=8):(e=u,0===fu&&du(z)),e===u&&("stats_sample_pages"===r.substr(au,18).toLowerCase()?(e=r.substr(au,18),au+=18):(e=u,0===fu&&du(Q))))))),e!==u&&nl()!==u?((n=no())===u&&(n=null),n!==u&&nl()!==u&&(s=Ga())!==u?(t,l=n,c=s,t=e={keyword:e.toLowerCase(),symbol:l,value:c.value}):(au=t,t=u)):(au=t,t=u),t===u&&(t=Vu())===u&&(t=au,(e=Wi())===u&&("connection"===r.substr(au,10).toLowerCase()?(e=r.substr(au,10),au+=10):(e=u,0===fu&&du(J))),e!==u&&nl()!==u?((n=no())===u&&(n=null),n!==u&&nl()!==u&&(s=Da())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,s)):(au=t,t=u)):(au=t,t=u),t===u&&(t=au,"compression"===r.substr(au,11).toLowerCase()?(e=r.substr(au,11),au+=11):(e=u,0===fu&&du(rr)),e!==u&&nl()!==u?((n=no())===u&&(n=null),n!==u&&nl()!==u?(s=au,39===r.charCodeAt(au)?(o="'",au++):(o=u,0===fu&&du(tr)),o!==u?("zlib"===r.substr(au,4).toLowerCase()?(a=r.substr(au,4),au+=4):(a=u,0===fu&&du(er)),a===u&&("lz4"===r.substr(au,3).toLowerCase()?(a=r.substr(au,3),au+=3):(a=u,0===fu&&du(nr)),a===u&&("none"===r.substr(au,4).toLowerCase()?(a=r.substr(au,4),au+=4):(a=u,0===fu&&du(g)))),a!==u?(39===r.charCodeAt(au)?(i="'",au++):(i=u,0===fu&&du(tr)),i!==u?s=o=[o,a,i]:(au=s,s=u)):(au=s,s=u)):(au=s,s=u),s!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,s)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t===u&&(t=au,"engine"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(sr)),e!==u&&nl()!==u?((n=no())===u&&(n=null),n!==u&&nl()!==u&&(s=ya())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,s)):(au=t,t=u)):(au=t,t=u)))),t}function Vu(){var t,e,n,s,o,a,i,l,c;return t=au,(e=Ka())===u&&(e=null),e!==u&&nl()!==u?((n=function(){var t,e,n;t=au,"character"===r.substr(au,9).toLowerCase()?(e=r.substr(au,9),au+=9):(e=u,0===fu&&du(p));e!==u&&nl()!==u?("set"===r.substr(au,3).toLowerCase()?(n=r.substr(au,3),au+=3):(n=u,0===fu&&du(w)),n!==u?(t,t=e="CHARACTER SET"):(au=t,t=u)):(au=t,t=u);return t}())===u&&("charset"===r.substr(au,7).toLowerCase()?(n=r.substr(au,7),au+=7):(n=u,0===fu&&du(ur)),n===u&&("collate"===r.substr(au,7).toLowerCase()?(n=r.substr(au,7),au+=7):(n=u,0===fu&&du(or)))),n!==u&&nl()!==u?((s=no())===u&&(s=null),s!==u&&nl()!==u&&(o=ya())!==u?(t,i=n,l=s,c=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:l,value:c}):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t}function Ku(){var t;return(t=function(){var t,e,n,s;t=au,(e=function(){var t,e,n,s;t=au,"add"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du($s));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="ADD"):(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u?((n=ji())===u&&(n=null),n!==u&&nl()!==u&&(s=Hu())!==u?(t,o=n,a=s,e={action:"add",...a,keyword:o,resource:"column",type:"alter"},t=e):(au=t,t=u)):(au=t,t=u);var o,a;return t}())===u&&(t=function(){var r,t,e;r=au,Za()!==u&&nl()!==u?((t=ji())===u&&(t=null),t!==u&&nl()!==u&&(e=Ca())!==u?(r,r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(au=r,r=u)):(au=r,r=u);return r}())===u&&(t=function(){var r,t,e,n;r=au,(t=oo())!==u&&nl()!==u?((e=qa())===u&&(e=ei()),e===u&&(e=null),e!==u&&nl()!==u&&(n=da())!==u?(r,o=n,t={action:"rename",type:"alter",resource:"table",keyword:(s=e)&&s[0].toLowerCase(),table:o},r=t):(au=r,r=u)):(au=r,r=u);var s,o;return r}()),t}function qu(){var t,e;return t=au,ci()!==u&&nl()!==u?("btree"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(Cr)),e===u&&("hash"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(dr))),e!==u?(t,t={keyword:"using",type:e.toLowerCase()}):(au=t,t=u)):(au=t,t=u),t}function Zu(){var r,t,e,n,s,o,a,i;if(r=au,qi()!==u)if(nl()!==u)if((t=Aa())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Aa())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Aa())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u&&(n=nl())!==u&&(s=Zi())!==u?(r,r=l(t,e)):(au=r,r=u)}else au=r,r=u;else au=r,r=u;else au=r,r=u;return r}function zu(){var r,t,e,n,s,o;if(r=au,(t=Qu())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Qu())!==u?n=s=[s,o]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Qu())!==u?n=s=[s,o]:(au=n,n=u);e!==u?(r,r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(au=r,r=u)}else au=r,r=u;return r}function Qu(){var t,e,n,s,o,a;return t=au,(e=function(){var t,e,n,s;t=au,"key_block_size"===r.substr(au,14).toLowerCase()?(e=r.substr(au,14),au+=14):(e=u,0===fu&&du(q));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u?((n=no())===u&&(n=null),n!==u&&nl()!==u&&(s=Ga())!==u?(t,o=n,a=s,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(au=t,t=u)):(au=t,t=u),t===u&&(t=qu())===u&&(t=au,"with"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(pr)),e!==u&&nl()!==u?("parser"===r.substr(au,6).toLowerCase()?(n=r.substr(au,6),au+=6):(n=u,0===fu&&du(wr)),n!==u&&nl()!==u&&(s=ya())!==u?(t,t=e={type:"with parser",expr:s}):(au=t,t=u)):(au=t,t=u),t===u&&(t=au,"visible"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(Er)),e===u&&("invisible"===r.substr(au,9).toLowerCase()?(e=r.substr(au,9),au+=9):(e=u,0===fu&&du(Ar))),e!==u&&(t,e=function(r){return{type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===u&&(t=Bu()))),t}function Ju(){var t,e,n,s,o,a;return t=au,"on"===r.substr(au,2).toLowerCase()?(e=r.substr(au,2),au+=2):(e=u,0===fu&&du(hr)),e!==u&&sl()!==u?("delete"===r.substr(au,6).toLowerCase()?(n=r.substr(au,6),au+=6):(n=u,0===fu&&du(yr)),n===u&&("update"===r.substr(au,6).toLowerCase()?(n=r.substr(au,6),au+=6):(n=u,0===fu&&du(Tr))),n!==u&&sl()!==u&&(s=function(){var t,e;t=au,"restrict"===r.substr(au,8).toLowerCase()?(e=r.substr(au,8),au+=8):(e=u,0===fu&&du(mr));e===u&&("cascade"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(Ir)),e===u&&("set null"===r.substr(au,8).toLowerCase()?(e=r.substr(au,8),au+=8):(e=u,0===fu&&du(Nr)),e===u&&("no action"===r.substr(au,9).toLowerCase()?(e=r.substr(au,9),au+=9):(e=u,0===fu&&du(Rr)),e===u&&("set default"===r.substr(au,11).toLowerCase()?(e=r.substr(au,11),au+=11):(e=u,0===fu&&du(Sr))))));e!==u&&(t,e=e.toLowerCase());return t=e}())!==u?(t,o=n,a=s,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(au=t,t=u)):(au=t,t=u),t}function ro(){var t,e,n,s;return t=au,(e=function(){var t,e,n,s;t=au,"constraint"===r.substr(au,10).toLowerCase()?(e=r.substr(au,10),au+=10):(e=u,0===fu&&du(js));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="CONSTRAINT"):(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u?((n=da())===u&&(n=null),n!==u?(t,s=n,t=e={keyword:e.toLowerCase(),constraint:s}):(au=t,t=u)):(au=t,t=u),t}function to(){var t,e,n,s;return t=au,"update"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(Tr)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function eo(){var t,e,n,s;return t=au,"create"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(_r)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function no(){var t;return 61===r.charCodeAt(au)?(t="=",au++):(t=u,0===fu&&du(c)),t}function so(){var t,e,n,s;return t=au,"replace"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(Ur)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function uo(){var t,e,n,s;return t=au,"database"===r.substr(au,8).toLowerCase()?(e=r.substr(au,8),au+=8):(e=u,0===fu&&du(Dr)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function oo(){var t,e,n,s;return t=au,"rename"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du($r)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function ao(){var t,e,n,s;return t=au,"show"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(Pr)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function io(){var t;return 64===r.charCodeAt(au)?(t="@",au++):(t=u,0===fu&&du(Gr)),t}function lo(){var t,e,n,s;return t=au,"temporary"===r.substr(au,9).toLowerCase()?(e=r.substr(au,9),au+=9):(e=u,0===fu&&du(Yr)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function co(){var t,e,n,s;return t=au,(e=function(){var t,e,n,s;t=au,"union"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(mn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u?((n=di())===u&&(n=pi()),n===u&&(n=null),n!==u?(t,t=e=(s=n)?"union "+s.toLowerCase():"union"):(au=t,t=u)):(au=t,t=u),t===u&&(t=au,"intersect"===r.substr(au,9).toLowerCase()?(e=r.substr(au,9),au+=9):(e=u,0===fu&&du(qr)),e===u&&("except"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(Zr))),e!==u&&nl()!==u&&(n=pi())!==u?(t,t=e=function(r,t){return`${r.toLowerCase()} ${t.toLowerCase()}`}(e,n)):(au=t,t=u)),t}function fo(){var t,e,n,s,o,a,i;return(t=bo())===u&&(t=au,e=au,40===r.charCodeAt(au)?(n="(",au++):(n=u,0===fu&&du(Vr)),n!==u&&(s=nl())!==u&&(o=bo())!==u&&(a=nl())!==u?(41===r.charCodeAt(au)?(i=")",au++):(i=u,0===fu&&du(Kr)),i!==u?e=n=[n,s,o,a,i]:(au=e,e=u)):(au=e,e=u),e!==u&&(t,e={...e[2],parentheses:!0}),t=e),t}function bo(){var r,t,e,n,s,o,a,i;if(r=au,(t=vo())!==u){for(e=[],n=au,(s=nl())!==u?((o=co())===u&&(o=null),o!==u&&(a=nl())!==u&&(i=vo())!==u?n=s=[s,o,a,i]:(au=n,n=u)):(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u?((o=co())===u&&(o=null),o!==u&&(a=nl())!==u&&(i=vo())!==u?n=s=[s,o,a,i]:(au=n,n=u)):(au=n,n=u);e!==u?(r,r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e._next=t[r][3],e.set_op=t[r][1],e=e._next;return{tableList:Array.from(ml),columnList:yl(Il),ast:r}}(t,e)):(au=r,r=u)}else au=r,r=u;return r}function vo(){var t,e,n,s,o,a,i;return(t=po())===u&&(t=au,e=au,40===r.charCodeAt(au)?(n="(",au++):(n=u,0===fu&&du(Vr)),n!==u&&(s=nl())!==u&&(o=vo())!==u&&(a=nl())!==u?(41===r.charCodeAt(au)?(i=")",au++):(i=u,0===fu&&du(Kr)),i!==u?e=n=[n,s,o,a,i]:(au=e,e=u)):(au=e,e=u),e!==u&&(t,e={...e[2],parentheses_symbol:!0}),t=e),t}function Lo(){var r,t,e,n,s,o,a,i;if(r=au,fi()!==u)if(nl()!==u)if((t=Co())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Co())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Co())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,r=l(t,e)):(au=r,r=u)}else au=r,r=u;else au=r,r=u;else au=r,r=u;return r}function Co(){var r,t,e,n;return r=au,(t=Da())===u&&(t=ya()),t!==u&&nl()!==u&&ei()!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(e=fo())!==u&&nl()!==u&&Zi()!==u?(r,"string"==typeof(n=t)&&(n={type:"default",value:n}),r=t={name:n,stmt:e}):(au=r,r=u),r}function po(){var t,e,n,s,o,a,i,c,f,b,v,L,C,d,p,w,E,A,h,y,T,m,I,N,R,S,_;return t=au,nl()!==u?((e=Lo())===u&&(e=null),e!==u&&nl()!==u&&function(){var t,e,n,s;t=au,"select"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(an));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}()!==u&&sl()!==u?((n=function(){var t,e,n;t=au,(e=ei())!==u&&nl()!==u?((n=Mi())===u&&(n=function(){var t,e,n,s;t=au,"value"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(In));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="VALUE"):(au=t,t=u)):(au=t,t=u);return t}()),n!==u?(t,s=n,e=`${e[0].toLowerCase()} ${s.toLowerCase()}`,t=e):(au=t,t=u)):(au=t,t=u);var s;return t}())===u&&(n=null),n!==u&&nl()!==u?((s=di())===u&&(s=pi()),s===u&&(s=null),s!==u&&nl()!==u&&(o=Eo())!==u&&nl()!==u?((a=Io())===u&&(a=null),a!==u&&nl()!==u?((i=function(){var t,e,n,s,o,a;t=au,"for"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(P));e!==u&&nl()!==u?("system_time"===r.substr(au,11).toLowerCase()?(n=r.substr(au,11),au+=11):(n=u,0===fu&&du(zr)),n!==u&&nl()!==u?("as"===r.substr(au,2).toLowerCase()?(s=r.substr(au,2),au+=2):(s=u,0===fu&&du(Qr)),s!==u&&nl()!==u?("of"===r.substr(au,2).toLowerCase()?(o=r.substr(au,2),au+=2):(o=u,0===fu&&du(Jr)),o!==u&&nl()!==u&&(a=Vo())!==u?(t,t=e={keyword:"for system_time as of",expr:a}):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u);return t}())===u&&(i=null),i!==u&&nl()!==u?((c=Mo())===u&&(c=null),c!==u&&nl()!==u?((f=function(){var t,e,n;t=au,(e=function(){var t,e,n,s;t=au,"group"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(_n));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u&&bi()!==u&&nl()!==u&&(n=Xo())!==u?(t,e=n.value,t=e):(au=t,t=u);return t}())===u&&(f=null),f!==u&&nl()!==u?((b=function(){var r,t;r=au,vi()!==u&&nl()!==u&&(t=Qo())!==u?(r,r=t):(au=r,r=u);return r}())===u&&(b=null),b!==u&&nl()!==u?((v=function(){var t,e;t=au,function(){var t,e,n,s;t=au,"qualify"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(Un));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}()!==u&&nl()!==u&&(e=Vo())!==u?(t,t=e):(au=t,t=u);return t}())===u&&(v=null),v!==u&&nl()!==u?((L=jo())===u&&(L=null),L!==u&&nl()!==u?((C=Wo())===u&&(C=null),C!==u&&nl()!==u?((d=function(){var t,e;t=au,function(){var t,e,n,s;t=au,"window"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(Mn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}()!==u&&nl()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=au,(t=ko())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=ko())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=ko())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,t=l(t,e),r=t):(au=r,r=u)}else au=r,r=u;return r}())!==u?(t,t={keyword:"window",type:"window",expr:e}):(au=t,t=u);return t}())===u&&(d=null),d!==u?(t,p=e,w=n,E=s,A=o,h=a,y=i,T=c,m=f,I=b,N=v,R=L,S=C,_=d,Array.isArray(h)&&h.forEach(r=>r.table&&ml.add(`select::${r.db}::${r.table}`)),t={type:"select",as_struct_val:w,distinct:E,columns:A,from:h,for_sys_time_as_of:y,where:T,with:p,groupby:m,having:I,qualify:N,orderby:R,limit:S,window:_}):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t}function wo(){var r,t,e;return r=au,(t=function(){var r,t,e,n,s,o,a,i;if(r=au,(t=Vo())!==u){if(e=[],n=au,(s=nl())!==u?((o=mi())===u&&(o=Ii())===u&&(o=el()),o!==u&&(a=nl())!==u&&(i=Vo())!==u?n=s=[s,o,a,i]:(au=n,n=u)):(au=n,n=u),n!==u)for(;n!==u;)e.push(n),n=au,(s=nl())!==u?((o=mi())===u&&(o=Ii())===u&&(o=el()),o!==u&&(a=nl())!==u&&(i=Vo())!==u?n=s=[s,o,a,i]:(au=n,n=u)):(au=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=t.length;let n=t[e-1][3];for(let s=e-1;s>=0;s--){const e=0===s?r:t[s-1][3];n=pl(t[s][1],e,n)}return n}(t,e),r=t):(au=r,r=u)}else au=r,r=u;return r}())===u&&(t=Vo()),t!==u&&nl()!==u?((e=To())===u&&(e=null),e!==u?(r,r=t={expr:t,as:e}):(au=r,r=u)):(au=r,r=u),r}function Eo(){var t,e,n,s,o,a,i,l,c,f,b,v;if(t=au,(e=Ki())!==u&&(n=nl())!==u?("except"===r.substr(au,6).toLowerCase()?(s=r.substr(au,6),au+=6):(s=u,0===fu&&du(Zr)),s===u&&("replace"===r.substr(au,7).toLowerCase()?(s=r.substr(au,7),au+=7):(s=u,0===fu&&du(Ur))),s!==u&&(o=nl())!==u&&(a=qi())!==u&&(i=nl())!==u&&(l=Ao())!==u&&nl()!==u&&Zi()!==u?(t,c=s,f=l,Il.add("select::null::(.*)"),t=e={expr_list:f,parentheses:!0,star:"*",type:c.toLowerCase()}):(au=t,t=u)):(au=t,t=u),t===u){if(t=au,(e=di())===u&&(e=au,(n=Ki())!==u?(s=au,fu++,o=Ta(),fu--,o===u?s=void 0:(au=s,s=u),s!==u?e=n=[n,s]:(au=e,e=u)):(au=e,e=u),e===u&&(e=Ki())),e!==u){for(n=[],s=au,(o=nl())!==u&&(a=Vi())!==u&&(i=nl())!==u&&(l=yo())!==u?s=o=[o,a,i,l]:(au=s,s=u);s!==u;)n.push(s),s=au,(o=nl())!==u&&(a=Vi())!==u&&(i=nl())!==u&&(l=yo())!==u?s=o=[o,a,i,l]:(au=s,s=u);n!==u&&(s=nl())!==u?((o=Vi())===u&&(o=null),o!==u?(t,b=e,v=n,Il.add("select::null::(.*)"),t=e=v&&v.length>0?(b[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},El(b[0],v)):b[0]):(au=t,t=u)):(au=t,t=u)}else au=t,t=u;t===u&&(t=au,(e=Ao())!==u&&(n=nl())!==u?((s=Vi())===u&&(s=null),s!==u?(t,t=e=e):(au=t,t=u)):(au=t,t=u))}return t}function Ao(){var r,t,e,n,s,o,a,i;if(r=au,(t=yo())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=yo())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=yo())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,r=t=l(t,e)):(au=r,r=u)}else au=r,r=u;return r}function ho(){var t,e,n,s;return t=au,(e=Vo())!==u&&nl()!==u&&Ji()!==u&&nl()!==u?((n=Li())===u&&(n=function(){var t,e,n,s;t=au,"ordinal"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(kn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="ORDINAL"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=au,"safe_offset"===r.substr(au,11).toLowerCase()?(e=r.substr(au,11),au+=11):(e=u,0===fu&&du(Fn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="SAFE_OFFSET"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=au,"safe_ordinal"===r.substr(au,12).toLowerCase()?(e=r.substr(au,12),au+=12):(e=u,0===fu&&du(Dn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="SAFE_ORDINAL"):(au=t,t=u)):(au=t,t=u);return t}()),n!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(s=Ga())!==u&&nl()!==u&&Zi()!==u&&nl()!==u&&rl()!==u?(t,t=e={expr:e,offset:`[${n}(${s.value})]`}):(au=t,t=u)):(au=t,t=u),t}function yo(){var r,t,e,n,s,o,a;return r=au,(t=Ki())!==u&&(r,Il.add("select::null::(.*)"),t={expr:{type:"column_ref",table:null,column:"*"},as:null}),(r=t)===u&&(r=au,(t=wa())!==u&&nl()!==u&&(e=Xi())!==u?(n=au,(s=ho())===u&&(s=wa()),s!==u&&(o=nl())!==u&&(a=Xi())!==u?n=s=[s,o,a]:(au=n,n=u),n===u&&(n=null),n!==u&&(s=nl())!==u&&(o=Ki())!==u?(r,r=t=function(r,t){Il.add(`select::${r}::(.*)`);let e="*";const n=t&&t[0];return"string"==typeof n&&(e=n+".*"),n&&n.expr&&n.offset&&(e={...n,suffix:".*"}),{expr:{type:"column_ref",table:r,column:e},as:null}}(t,n)):(au=r,r=u)):(au=r,r=u),r===u&&(r=au,(t=ho())!==u&&nl()!==u?((e=To())===u&&(e=null),e!==u?(r,r=t={expr:{type:"column_ref",table:null,column:t},as:e}):(au=r,r=u)):(au=r,r=u),r===u&&(r=wo()))),r}function To(){var r,t,e;return r=au,(t=ei())!==u&&nl()!==u&&(e=function(){var r,t;r=au,(t=ya())!==u?(au,(function(r){if(!0===Ll[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return!1}(t)?u:void 0)!==u?(r,r=t=t):(au=r,r=u)):(au=r,r=u);r===u&&(r=au,(t=pa())!==u&&(r,t=t),r=t);return r}())!==u?(r,r=t=e):(au=r,r=u),r===u&&(r=au,(t=ei())===u&&(t=null),t!==u&&nl()!==u&&(e=da())!==u?(r,r=t=e):(au=r,r=u)),r}function mo(){var t,e,n,s,o;return t=au,"unnest"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(rt)),e!==u&&nl()!==u&&qi()!==u&&nl()!==u?((n=Vo())===u&&(n=null),n!==u&&nl()!==u&&Zi()!==u&&nl()!==u?((s=To())===u&&(s=null),s!==u&&nl()!==u?((o=function(){var r,t;r=au,fi()!==u&&nl()!==u&&Li()!==u&&nl()!==u?((t=To())===u&&(t=null),t!==u?(r,r={keyword:"with offset as",as:t}):(au=r,r=u)):(au=r,r=u);return r}())===u&&(o=null),o!==u?(t,t=e={type:"unnest",expr:n,parentheses:!0,as:s,with_offset:o}):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t}function Io(){var t,e,n,s,o;return t=au,ri()!==u&&nl()!==u&&(e=Ro())!==u&&nl()!==u?((n=function(){var t,e,n,s,o,a;t=au,function(){var t,e,n,s;t=au,"pivot"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(Ms));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="PIVOT"):(au=t,t=u)):(au=t,t=u);return t}()!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(e=function(){var r,t,e,n,s,o,a,i,l,c,f;if(r=au,(t=Ra())!==u)if(nl()!==u)if((e=To())===u&&(e=null),e!==u){for(n=[],s=au,(o=nl())!==u&&(a=Vi())!==u&&(i=nl())!==u&&(l=Ra())!==u&&(c=nl())!==u?((f=To())===u&&(f=null),f!==u?s=o=[o,a,i,l,c,f]:(au=s,s=u)):(au=s,s=u);s!==u;)n.push(s),s=au,(o=nl())!==u&&(a=Vi())!==u&&(i=nl())!==u&&(l=Ra())!==u&&(c=nl())!==u?((f=To())===u&&(f=null),f!==u?s=o=[o,a,i,l,c,f]:(au=s,s=u)):(au=s,s=u);n!==u?(r,t=function(r,t,e){const n={type:"expr_list"};return n.value=El(r,e),n}(t,0,n),r=t):(au=r,r=u)}else au=r,r=u;else au=r,r=u;else au=r,r=u;return r}())!==u&&nl()!==u?("for"===r.substr(au,3).toLowerCase()?(n=r.substr(au,3),au+=3):(n=u,0===fu&&du(P)),n!==u&&nl()!==u&&(s=Ca())!==u&&nl()!==u&&(o=oa())!==u&&nl()!==u&&Zi()!==u&&nl()!==u?((a=To())===u&&(a=null),a!==u?(t,i=e,l=s,f=a,(c=o).operator="=",t={type:"pivot",expr:i,column:l,in_expr:c,as:f}):(au=t,t=u)):(au=t,t=u)):(au=t,t=u);var i,l,c,f;return t}())===u&&(n=null),n!==u?(t,o=n,(s=e)[0]&&(s[0].operator=o),t=s):(au=t,t=u)):(au=t,t=u),t}function No(){var r,t,e;return r=au,(t=xo())!==u&&nl()!==u&&qa()!==u&&nl()!==u&&(e=xo())!==u?(r,r=t=[t,e]):(au=r,r=u),r}function Ro(){var r,t,e,n;if(r=au,(t=Oo())!==u){for(e=[],n=So();n!==u;)e.push(n),n=So();e!==u?(r,r=t=tt(t,e)):(au=r,r=u)}else au=r,r=u;return r}function So(){var r,t,e;return r=au,nl()!==u&&(t=Vi())!==u&&nl()!==u&&(e=Oo())!==u?(r,r=e):(au=r,r=u),r===u&&(r=au,nl()!==u&&(t=function(){var r,t,e,n,s,o,a,i,l,c,f;if(r=au,(t=go())!==u)if(nl()!==u)if((e=Oo())!==u)if(nl()!==u)if((n=ci())!==u)if(nl()!==u)if(qi()!==u)if(nl()!==u)if((s=ya())!==u){for(o=[],a=au,(i=nl())!==u&&(l=Vi())!==u&&(c=nl())!==u&&(f=ya())!==u?a=i=[i,l,c,f]:(au=a,a=u);a!==u;)o.push(a),a=au,(i=nl())!==u&&(l=Vi())!==u&&(c=nl())!==u&&(f=ya())!==u?a=i=[i,l,c,f]:(au=a,a=u);o!==u&&(a=nl())!==u&&(i=Zi())!==u?(r,b=t,L=s,C=o,(v=e).join=b,v.using=El(L,C),r=t=v):(au=r,r=u)}else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;else au=r,r=u;var b,v,L,C;r===u&&(r=au,(t=go())!==u&&nl()!==u&&(e=Oo())!==u&&nl()!==u?((n=Uo())===u&&(n=null),n!==u?(r,t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(au=r,r=u)):(au=r,r=u),r===u&&(r=au,(t=go())!==u&&nl()!==u&&(e=qi())!==u&&nl()!==u&&(n=fo())!==u&&nl()!==u&&Zi()!==u&&nl()!==u?((s=To())===u&&(s=null),s!==u&&(o=nl())!==u?((a=Uo())===u&&(a=null),a!==u?(r,t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,s,a),r=t):(au=r,r=u)):(au=r,r=u)):(au=r,r=u)));return r}())!==u?(r,r=t):(au=r,r=u)),r}function _o(){var t,e,n,s,o,a,i,l,c,f,b,v;return t=au,"tablesample"===r.substr(au,11).toLowerCase()?(e=r.substr(au,11),au+=11):(e=u,0===fu&&du(ct)),e!==u&&(n=nl())!==u?("bernoulli"===r.substr(au,9).toLowerCase()?(s=r.substr(au,9),au+=9):(s=u,0===fu&&du(ft)),s===u&&("reservoir"===r.substr(au,9).toLowerCase()?(s=r.substr(au,9),au+=9):(s=u,0===fu&&du(bt))),s!==u&&(o=nl())!==u?(40===r.charCodeAt(au)?(a="(",au++):(a=u,0===fu&&du(Vr)),a!==u&&(i=nl())!==u&&(l=Ha())!==u&&(c=nl())!==u?("percent"===r.substr(au,7).toLowerCase()?(f=r.substr(au,7),au+=7):(f=u,0===fu&&du(vt)),f===u&&("rows"===r.substr(au,4).toLowerCase()?(f=r.substr(au,4),au+=4):(f=u,0===fu&&du(Lt))),f!==u&&(b=nl())!==u?(41===r.charCodeAt(au)?(v=")",au++):(v=u,0===fu&&du(Kr)),v!==u?t=e=[e,n,s,o,a,i,l,c,f,b,v]:(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t}function Oo(){var t,e,n,s,o,a,i,l,c,f;return(t=mo())===u&&(t=au,(e=xo())!==u?((n=function(){var t,e,n,s,o,a,i,l,c,f,b;return t=au,et.test(r.charAt(au))?(e=r.charAt(au),au++):(e=u,0===fu&&du(nt)),e!==u?(st.test(r.charAt(au))?(n=r.charAt(au),au++):(n=u,0===fu&&du(ut)),n!==u&&(s=nl())!==u&&(o=ya())!==u&&(a=nl())!==u?(ot.test(r.charAt(au))?(i=r.charAt(au),au++):(i=u,0===fu&&du(at)),i!==u&&(l=nl())!==u&&(c=ya())!==u&&(f=nl())!==u?(it.test(r.charAt(au))?(b=r.charAt(au),au++):(b=u,0===fu&&du(lt)),b!==u?t=e=[e,n,s,o,a,i,l,c,f,b]:(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t}())===u&&(n=null),n!==u&&(s=nl())!==u?((o=_o())===u&&(o=null),o!==u&&nl()!==u?((a=To())===u&&(a=null),a!==u?(t,f=a,t=e="var"===(c=e).type?(c.as=f,c):{...c,as:f}):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t===u&&(t=au,(e=qi())!==u&&(n=nl())!==u&&(s=fo())!==u&&(o=nl())!==u&&Zi()!==u&&(a=nl())!==u?((i=_o())===u&&(i=null),i!==u&&nl()!==u?((l=To())===u&&(l=null),l!==u?(t,t=e=function(r,t,e){return r.parentheses=!0,{expr:r,as:e}}(s,0,l)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u))),t}function go(){var t,e,n;return t=au,(e=function(){var t,e,n,s;t=au,"left"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(dn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u?((n=ai())===u&&(n=null),n!==u&&nl()!==u&&oi()!==u?(t,t=e="LEFT JOIN"):(au=t,t=u)):(au=t,t=u),t===u&&(t=au,(e=function(){var t,e,n,s;t=au,"right"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(pn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u?((n=ai())===u&&(n=null),n!==u&&nl()!==u&&oi()!==u?(t,t=e="RIGHT JOIN"):(au=t,t=u)):(au=t,t=u),t===u&&(t=au,(e=function(){var t,e,n,s;t=au,"full"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(wn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u?((n=ai())===u&&(n=null),n!==u&&nl()!==u&&oi()!==u?(t,t=e="FULL JOIN"):(au=t,t=u)):(au=t,t=u),t===u&&(t=au,(e=function(){var t,e,n,s;t=au,"cross"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(An));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u&&(n=oi())!==u?(t,t=e=e[0].toUpperCase()+" JOIN"):(au=t,t=u),t===u&&(t=au,(e=function(){var t,e,n,s;t=au,"inner"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(En));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())===u&&(e=null),e!==u&&nl()!==u&&(n=oi())!==u?(t,t=e=function(r){return r?r[0].toUpperCase()+" JOIN":"JOIN"}(e)):(au=t,t=u))))),t}function xo(){var r,t,e,n,s,o,a,i;return r=au,(t=Ea())!==u?(e=au,(n=nl())!==u&&(s=Xi())!==u&&(o=nl())!==u&&(a=Ea())!==u?e=n=[n,s,o,a]:(au=e,e=u),e!==u?(n=au,(s=nl())!==u&&(o=Xi())!==u&&(a=nl())!==u&&(i=Ea())!==u?n=s=[s,o,a,i]:(au=n,n=u),n!==u?(r,r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=r,n.catalog=r,n.schema=t[3],n.table=e[3]),n}(t,e,n)):(au=r,r=u)):(au=r,r=u)):(au=r,r=u),r===u&&(r=au,(t=Ea())!==u?(e=au,(n=nl())!==u&&(s=Xi())!==u&&(o=nl())!==u&&(a=Ea())!==u?e=n=[n,s,o,a]:(au=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(au=r,r=u)):(au=r,r=u)),r}function Uo(){var r,t;return r=au,ui()!==u&&nl()!==u&&(t=Qo())!==u?(r,r=t):(au=r,r=u),r}function Mo(){var t,e;return t=au,function(){var t,e,n,s;t=au,"where"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(Sn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}()!==u&&nl()!==u&&(e=Qo())!==u?(t,t=e):(au=t,t=u),t}function ko(){var r,t,e;return r=au,(t=ya())!==u&&nl()!==u&&ei()!==u&&nl()!==u&&(e=Do())!==u?(r,r=t={name:t,as_window_specification:e}):(au=r,r=u),r}function Do(){var t,e,n;return t=au,(e=ya())!==u&&(t,e=e),(t=e)===u&&(t=au,(e=qi())!==u&&nl()!==u?((n=function(){var t,e,n,s,o;t=au,(e=da())===u&&(e=null);e!==u&&nl()!==u?((n=Ho())===u&&(n=null),n!==u&&nl()!==u?((s=jo())===u&&(s=null),s!==u&&nl()!==u?((o=function(){var t,e,n,s,o,a,i,l,c;t=au,"range"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(Ct));e!==u&&nl()!==u&&(n=wi())!==u?("unbounded"===r.substr(au,9).toLowerCase()?(s=r.substr(au,9),au+=9):(s=u,0===fu&&du(dt)),s!==u&&(o=nl())!==u?("preceding"===r.substr(au,9).toLowerCase()?(a=r.substr(au,9),au+=9):(a=u,0===fu&&du(pt)),a!==u&&nl()!==u&&mi()!==u&&(i=nl())!==u?("current"===r.substr(au,7).toLowerCase()?(l=r.substr(au,7),au+=7):(l=u,0===fu&&du(wt)),l!==u&&nl()!==u?("ROW"===r.substr(au,3)?(c="ROW",au+=3):(c=u,0===fu&&du(Et)),c!==u?(t,t=e="range between unbounded preceding and current row"):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u);t===u&&(t=au,(e=$i())!==u&&nl()!==u?((n=$o())===u&&(n=Po()),n!==u?(t,e="rows "+n.value,t=e):(au=t,t=u)):(au=t,t=u),t===u&&(t=au,(e=$i())!==u&&nl()!==u&&(n=wi())!==u&&(s=nl())!==u&&(o=Po())!==u&&(a=nl())!==u&&mi()!==u&&nl()!==u&&(i=$o())!==u?(t,f=i,e=`rows between ${o.value} and ${f.value}`,t=e):(au=t,t=u)));var f;return t}())===u&&(o=null),o!==u?(t,t=e={name:e,partitionby:n,orderby:s,window_frame_clause:o}):(au=t,t=u)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u);return t}())===u&&(n=null),n!==u&&nl()!==u&&Zi()!==u?(t,t=e={window_specification:n,parentheses:!0}):(au=t,t=u)):(au=t,t=u)),t}function $o(){var t,e,n,s,o;return t=au,(e=Go())!==u&&nl()!==u?("following"===r.substr(au,9).toLowerCase()?(n=r.substr(au,9),au+=9):(n=u,0===fu&&du(At)),n===u&&("preceding"===r.substr(au,9).toLowerCase()?(n=r.substr(au,9),au+=9):(n=u,0===fu&&du(pt))),n!==u?(t,o=n,(s=e).value+=" "+o.toUpperCase(),t=e=s):(au=t,t=u)):(au=t,t=u),t===u&&(t=Fo()),t}function Po(){var t,e,n,s;return t=au,(e=Go())!==u&&nl()!==u?("preceding"===r.substr(au,9).toLowerCase()?(n=r.substr(au,9),au+=9):(n=u,0===fu&&du(pt)),n!==u?(t,(s=e).value+=" PRECEDING",t=e=s):(au=t,t=u)):(au=t,t=u),t===u&&(t=Fo()),t}function Fo(){var t,e,n;return t=au,"current"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(wt)),e!==u&&nl()!==u?("row"===r.substr(au,3).toLowerCase()?(n=r.substr(au,3),au+=3):(n=u,0===fu&&du(ht)),n!==u?(t,t=e={type:"single_quote_string",value:"current row"}):(au=t,t=u)):(au=t,t=u),t}function Go(){var t,e;return t=au,"unbounded"===r.substr(au,9).toLowerCase()?(e=r.substr(au,9),au+=9):(e=u,0===fu&&du(dt)),e!==u&&(t,e={type:"single_quote_string",value:e.toUpperCase()}),(t=e)===u&&(t=Ga()),t}function Ho(){var r,t;return r=au,Qa()!==u&&nl()!==u&&bi()!==u&&nl()!==u&&(t=Eo())!==u?(r,r=t):(au=r,r=u),r}function jo(){var t,e;return t=au,function(){var t,e,n,s;t=au,"order"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(gn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}()!==u&&nl()!==u&&bi()!==u&&nl()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=au,(t=Yo())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Yo())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Yo())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,t=l(t,e),r=t):(au=r,r=u)}else au=r,r=u;return r}())!==u?(t,t=e):(au=t,t=u),t}function Yo(){var t,e,n,s,o,a;return t=au,(e=Vo())!==u&&nl()!==u?(n=au,"collate"===r.substr(au,7).toLowerCase()?(s=r.substr(au,7),au+=7):(s=u,0===fu&&du(or)),s!==u&&(o=nl())!==u&&(a=Da())!==u?n=s=[s,o,a]:(au=n,n=u),n===u&&(n=null),n!==u&&(s=nl())!==u?((o=Ci())===u&&(o=function(){var t,e,n,s;t=au,"asc"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(Gn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="ASC"):(au=t,t=u)):(au=t,t=u);return t}()),o===u&&(o=null),o!==u?(t,t=e=function(r,t,e){const n={expr:r,type:"ASC"};return"DESC"===e&&(n.type="DESC"),n}(e,0,o)):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t}function Bo(){var r;return(r=Ga())===u&&(r=Na()),r}function Wo(){var t,e,n,s,o,a;return t=au,function(){var t,e,n,s;t=au,"limit"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du($n));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}()!==u&&nl()!==u&&(e=Bo())!==u&&nl()!==u?(n=au,(s=Vi())===u&&(s=Li()),s!==u&&(o=nl())!==u&&(a=Bo())!==u?n=s=[s,o,a]:(au=n,n=u),n===u&&(n=null),n!==u?(t,t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(au=t,t=u)):(au=t,t=u),t}function Xo(){var r,t,e,n,s,o,a,i;if(r=au,(t=Vo())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Vo())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Vo())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,r=t=function(r,t){const e={type:"expr_list"};return e.value=El(r,t),e}(t,e)):(au=r,r=u)}else au=r,r=u;return r}function Vo(){var r;return(r=Zo())===u&&(r=zo())===u&&(r=function(){var r,t,e,n,s,o,a,l;if(r=au,(t=Jo())!==u){for(e=[],n=au,(s=sl())!==u&&(o=Ii())!==u&&(a=nl())!==u&&(l=Jo())!==u?n=s=[s,o,a,l]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=sl())!==u&&(o=Ii())!==u&&(a=nl())!==u&&(l=Jo())!==u?n=s=[s,o,a,l]:(au=n,n=u);e!==u?(r,t=i(t,e),r=t):(au=r,r=u)}else au=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o;if(r=au,(t=ia())!==u){if(e=[],n=au,(s=nl())!==u&&(o=fa())!==u?n=s=[s,o]:(au=n,n=u),n!==u)for(;n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=fa())!==u?n=s=[s,o]:(au=n,n=u);else e=u;e!==u?(r,t=dl(t,e[0][1]),r=t):(au=r,r=u)}else au=r,r=u;return r}())===u&&(r=fo())===u&&(r=qo()),r}function Ko(){var r,t;return r=au,qi()!==u&&nl()!==u&&(t=Eo())!==u&&nl()!==u&&Zi()!==u?(r,r=t):(au=r,r=u),r}function qo(){var r,t,e,n,s,o;return r=au,(t=Ji())!==u&&nl()!==u?((e=Eo())===u&&(e=null),e!==u&&(n=nl())!==u&&(s=rl())!==u?(r,r=t={array_path:e,type:"array",keyword:"",parentheses:!0}):(au=r,r=u)):(au=r,r=u),r===u&&(r=au,(t=bl())===u&&(t=gi()),t===u&&(t=null),t!==u&&Ji()!==u&&(e=nl())!==u&&(n=function(){var r,t,e,n,s,o,a,i;if(r=au,(t=Ma())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Ma())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Ma())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,t=l(t,e),r=t):(au=r,r=u)}else au=r,r=u;return r}())!==u&&(s=nl())!==u&&rl()!==u?(r,r=t=function(r,t){return{definition:r,array_path:t.map(r=>({expr:r,as:null})),type:"array",keyword:r&&"array",parentheses:!0}}(t,n)):(au=r,r=u),r===u&&(r=au,(t=bl())===u&&(t=gi()),t===u&&(t=null),t!==u&&nl()!==u?((e=Ji())===u&&(e=qi()),e!==u&&(n=nl())!==u?((s=function(){var r,t,e,n,s,o,a,i;if(r=au,(t=Ko())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Ko())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=Ko())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,r=t=l(t,e)):(au=r,r=u)}else au=r,r=u;return r}())===u&&(s=Vo()),s!==u&&nl()!==u?((o=rl())===u&&(o=Zi()),o!==u?(r,r=t=function(r,t){return{definition:r,expr_list:t,type:"array",keyword:r&&"array",parentheses:!0}}(t,s)):(au=r,r=u)):(au=r,r=u)):(au=r,r=u)):(au=r,r=u))),r}function Zo(){var r,t,e,n;return r=au,(t=vl())===u&&(t=Mi()),t!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(e=Eo())!==u&&nl()!==u&&Zi()!==u?(r,r=t={definition:n=t,expr_list:e,type:"struct",keyword:n&&"struct",parentheses:!0}):(au=r,r=u),r}function zo(){var r,t,e,n,s,o,a,i;if(r=au,(t=fa())!==u){if(e=[],n=au,(s=nl())!==u&&(o=el())!==u&&(a=nl())!==u&&(i=fa())!==u?n=s=[s,o,a,i]:(au=n,n=u),n!==u)for(;n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=el())!==u&&(a=nl())!==u&&(i=fa())!==u?n=s=[s,o,a,i]:(au=n,n=u);else e=u;e!==u&&(n=nl())!==u?((s=ea())===u&&(s=null),s!==u?(r,r=t=function(r,t,e){const n=Al(r,t);return null===e?n:"arithmetic"===e.type?Al(n,e.tail):pl(e.op,n,e.right)}(t,e,s)):(au=r,r=u)):(au=r,r=u)}else au=r,r=u;return r}function Qo(){var r,t,e,n,s,o,a,i;if(r=au,(t=Vo())!==u){for(e=[],n=au,(s=nl())!==u?((o=mi())===u&&(o=Ii())===u&&(o=Vi()),o!==u&&(a=nl())!==u&&(i=Vo())!==u?n=s=[s,o,a,i]:(au=n,n=u)):(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u?((o=mi())===u&&(o=Ii())===u&&(o=Vi()),o!==u&&(a=nl())!==u&&(i=Vo())!==u?n=s=[s,o,a,i]:(au=n,n=u)):(au=n,n=u);e!==u?(r,r=t=function(r,t){const e=t.length;let n=r,s="";for(let r=0;r<e;++r)","===t[r][1]?(s=",",Array.isArray(n)||(n=[n]),n.push(t[r][3])):n=pl(t[r][1],n,t[r][3]);if(","===s){const r={type:"expr_list"};return r.value=n,r}return n}(t,e)):(au=r,r=u)}else au=r,r=u;return r}function Jo(){var r,t,e,n,s,o,a,l;if(r=au,(t=ra())!==u){for(e=[],n=au,(s=sl())!==u&&(o=mi())!==u&&(a=nl())!==u&&(l=ra())!==u?n=s=[s,o,a,l]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=sl())!==u&&(o=mi())!==u&&(a=nl())!==u&&(l=ra())!==u?n=s=[s,o,a,l]:(au=n,n=u);e!==u?(r,r=t=i(t,e)):(au=r,r=u)}else au=r,r=u;return r}function ra(){var t,e,n,s,o;return(t=ta())===u&&(t=function(){var r,t,e;r=au,(t=function(){var r,t,e,n,s;r=au,t=au,(e=Ti())!==u&&(n=nl())!==u&&(s=yi())!==u?t=e=[e,n,s]:(au=t,t=u);t!==u&&(r,t=Tt(t));(r=t)===u&&(r=yi());return r}())!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(e=fo())!==u&&nl()!==u&&Zi()!==u?(r,n=t,(s=e).parentheses=!0,t=dl(n,s),r=t):(au=r,r=u);var n,s;return r}())===u&&(t=au,(e=Ti())===u&&(e=au,33===r.charCodeAt(au)?(n="!",au++):(n=u,0===fu&&du(yt)),n!==u?(s=au,fu++,61===r.charCodeAt(au)?(o="=",au++):(o=u,0===fu&&du(c)),fu--,o===u?s=void 0:(au=s,s=u),s!==u?e=n=[n,s]:(au=e,e=u)):(au=e,e=u)),e!==u&&(n=nl())!==u&&(s=ra())!==u?(t,t=e=dl("NOT",s)):(au=t,t=u)),t}function ta(){var r,t,e,n,s;return r=au,(t=aa())!==u&&nl()!==u?((e=ea())===u&&(e=null),e!==u?(r,n=t,r=t=null===(s=e)?n:"arithmetic"===s.type?Al(n,s.tail):pl(s.op,n,s.right)):(au=r,r=u)):(au=r,r=u),r===u&&(r=Da())===u&&(r=Ca()),r}function ea(){var r;return(r=function(){var r,t,e,n,s,o,a;r=au,t=[],e=au,(n=nl())!==u&&(s=na())!==u&&(o=nl())!==u?((a=zo())===u&&(a=aa()),a!==u?e=n=[n,s,o,a]:(au=e,e=u)):(au=e,e=u);if(e!==u)for(;e!==u;)t.push(e),e=au,(n=nl())!==u&&(s=na())!==u&&(o=nl())!==u?((a=zo())===u&&(a=aa()),a!==u?e=n=[n,s,o,a]:(au=e,e=u)):(au=e,e=u);else t=u;t!==u&&(r,t={type:"arithmetic",tail:t});return r=t}())===u&&(r=oa())===u&&(r=function(){var r,t,e,n;r=au,(t=function(){var r,t,e,n,s;r=au,t=au,(e=Ti())!==u&&(n=nl())!==u&&(s=wi())!==u?t=e=[e,n,s]:(au=t,t=u);t!==u&&(r,t=Tt(t));(r=t)===u&&(r=wi());return r}())!==u&&nl()!==u&&(e=aa())!==u&&nl()!==u&&mi()!==u&&nl()!==u&&(n=aa())!==u?(r,r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(au=r,r=u);return r}())===u&&(r=function(){var r,t,e,n,s;r=au,(t=Ai())!==u&&(e=nl())!==u&&(n=aa())!==u?(r,r=t={op:"IS",right:n}):(au=r,r=u);r===u&&(r=au,t=au,(e=Ai())!==u&&(n=nl())!==u&&(s=Ti())!==u?t=e=[e,n,s]:(au=t,t=u),t!==u&&(e=nl())!==u&&(n=aa())!==u?(r,t=function(r){return{op:"IS NOT",right:r}}(n),r=t):(au=r,r=u));return r}())===u&&(r=ua()),r}function na(){var t;return">="===r.substr(au,2)?(t=">=",au+=2):(t=u,0===fu&&du(mt)),t===u&&(62===r.charCodeAt(au)?(t=">",au++):(t=u,0===fu&&du(It)),t===u&&("<="===r.substr(au,2)?(t="<=",au+=2):(t=u,0===fu&&du(Nt)),t===u&&("<>"===r.substr(au,2)?(t="<>",au+=2):(t=u,0===fu&&du(Rt)),t===u&&(60===r.charCodeAt(au)?(t="<",au++):(t=u,0===fu&&du(St)),t===u&&(61===r.charCodeAt(au)?(t="=",au++):(t=u,0===fu&&du(c)),t===u&&("!="===r.substr(au,2)?(t="!=",au+=2):(t=u,0===fu&&du(_t)))))))),t}function sa(){var r,t,e,n,s;return r=au,t=au,(e=Ti())!==u&&(n=nl())!==u&&(s=Ei())!==u?t=e=[e,n,s]:(au=t,t=u),t!==u&&(r,t=Tt(t)),(r=t)===u&&(r=Ei()),r}function ua(){var r,t,e;return r=au,(t=function(){var r,t,e,n,s;return r=au,t=au,(e=Ti())!==u&&(n=nl())!==u&&(s=hi())!==u?t=e=[e,n,s]:(au=t,t=u),t!==u&&(r,t=Tt(t)),(r=t)===u&&(r=hi()),r}())!==u&&nl()!==u?((e=Ma())===u&&(e=ta()),e!==u?(r,r=t={op:t,right:e}):(au=r,r=u)):(au=r,r=u),r}function oa(){var r,t,e,n;return r=au,(t=sa())!==u&&nl()!==u&&(e=qi())!==u&&nl()!==u&&(n=Xo())!==u&&nl()!==u&&Zi()!==u?(r,r=t={op:t,right:n}):(au=r,r=u),r===u&&(r=au,(t=sa())!==u&&nl()!==u?((e=Da())===u&&(e=mo()),e!==u?(r,r=t=function(r,t){return{op:r,right:t}}(t,e)):(au=r,r=u)):(au=r,r=u)),r}function aa(){var r,t,e,n,s,o,a,l;if(r=au,(t=la())!==u){for(e=[],n=au,(s=nl())!==u&&(o=ia())!==u&&(a=nl())!==u&&(l=la())!==u?n=s=[s,o,a,l]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=ia())!==u&&(a=nl())!==u&&(l=la())!==u?n=s=[s,o,a,l]:(au=n,n=u);e!==u?(r,r=t=i(t,e)):(au=r,r=u)}else au=r,r=u;return r}function ia(){var t;return 43===r.charCodeAt(au)?(t="+",au++):(t=u,0===fu&&du(Ot)),t===u&&(45===r.charCodeAt(au)?(t="-",au++):(t=u,0===fu&&du(gt))),t}function la(){var r,t,e,n,s,o,a,i;if(r=au,(t=fa())!==u){for(e=[],n=au,(s=nl())!==u&&(o=ca())!==u&&(a=nl())!==u&&(i=fa())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=ca())!==u&&(a=nl())!==u&&(i=fa())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,r=t=Al(t,e)):(au=r,r=u)}else au=r,r=u;return r}function ca(){var t;return 42===r.charCodeAt(au)?(t="*",au++):(t=u,0===fu&&du(xt)),t===u&&(47===r.charCodeAt(au)?(t="/",au++):(t=u,0===fu&&du(Ut)),t===u&&(37===r.charCodeAt(au)?(t="%",au++):(t=u,0===fu&&du(Mt)))),t}function fa(){var t,e,n;return(t=qo())===u&&(t=Zo())===u&&(t=function(){var t,e,n,s,o,a,i;t=au,(e=Ua())!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(n=Vo())!==u&&nl()!==u&&ei()!==u&&nl()!==u&&(s=fl())!==u&&nl()!==u&&(o=Zi())!==u?(t,l=n,c=s,e={type:"cast",keyword:e.toLowerCase(),expr:l,symbol:"as",target:c},t=e):(au=t,t=u);var l,c;t===u&&(t=au,(e=Ua())!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(n=Vo())!==u&&nl()!==u&&ei()!==u&&nl()!==u&&(s=xi())!==u&&nl()!==u&&(o=qi())!==u&&nl()!==u&&(a=ja())!==u&&nl()!==u&&Zi()!==u&&nl()!==u&&(i=Zi())!==u?(t,e=function(r,t,e){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+")"}}}(e,n,a),t=e):(au=t,t=u),t===u&&(t=au,(e=Ua())!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(n=Vo())!==u&&nl()!==u&&ei()!==u&&nl()!==u&&(s=xi())!==u&&nl()!==u&&(o=qi())!==u&&nl()!==u&&(a=ja())!==u&&nl()!==u&&Vi()!==u&&nl()!==u&&(i=ja())!==u&&nl()!==u&&Zi()!==u&&nl()!==u&&Zi()!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+", "+n+")"}}}(e,n,a,i),t=e):(au=t,t=u),t===u&&(t=au,(e=Ua())!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(n=Vo())!==u&&nl()!==u&&ei()!==u&&nl()!==u&&(s=function(){var t;(t=function(){var t,e,n,s;t=au,"signed"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(ps));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="SIGNED"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=au,"unsigned"===r.substr(au,8).toLowerCase()?(e=r.substr(au,8),au+=8):(e=u,0===fu&&du(ws));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="UNSIGNED"):(au=t,t=u)):(au=t,t=u);return t}());return t}())!==u&&nl()!==u?((o=Ui())===u&&(o=null),o!==u&&nl()!==u&&(a=Zi())!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:e+(n?" "+n:"")}}}(e,n,s,o),t=e):(au=t,t=u)):(au=t,t=u))));return t}())===u&&(t=Ma())===u&&(t=Ra())===u&&(t=function(){var t,e,n,s,o;(t=function(){var t,e,n,s,o;t=au,(e=Si())!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(n=xa())!==u&&nl()!==u&&ri()!==u&&nl()!==u?((s=Fi())===u&&(s=Gi())===u&&(s=Pi())===u&&(s=ki()),s!==u&&nl()!==u&&(o=Vo())!==u&&nl()!==u&&Zi()!==u?(t,a=n,i=s,l=o,e={type:e.toLowerCase(),args:{field:a,cast_type:i,source:l}},t=e):(au=t,t=u)):(au=t,t=u);var a,i,l;t===u&&(t=au,(e=Si())!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(n=xa())!==u&&nl()!==u&&ri()!==u&&nl()!==u&&(s=Vo())!==u&&nl()!==u&&(o=Zi())!==u?(t,e=function(r,t,e){return{type:r.toLowerCase(),args:{field:t,source:e}}}(e,n,s),t=e):(au=t,t=u),t===u&&(t=au,"date_trunc"===r.substr(au,10).toLowerCase()?(e=r.substr(au,10),au+=10):(e=u,0===fu&&du(Te)),e!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(n=Vo())!==u&&nl()!==u&&Vi()!==u&&nl()!==u&&(s=xa())!==u&&nl()!==u&&(o=Zi())!==u?(t,e=function(r,t){return{type:"function",name:"DATE_TRUNC",args:{type:"expr_list",value:[r,{type:"origin",value:t}]},over:null}}(n,s),t=e):(au=t,t=u)));return t}())===u&&(t=function(){var t,e,n,s,o;t=au,"any_value"===r.substr(au,9).toLowerCase()?(e=r.substr(au,9),au+=9):(e=u,0===fu&&du(Qt));e!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(n=Qo())!==u&&nl()!==u?((s=function(){var r,t,e;r=au,vi()!==u&&nl()!==u?((t=Ni())===u&&(t=Ri()),t!==u&&nl()!==u&&(e=Qo())!==u?(r,r={prefix:t,expr:e}):(au=r,r=u)):(au=r,r=u);return r}())===u&&(s=null),s!==u&&nl()!==u&&Zi()!==u&&nl()!==u?((o=_a())===u&&(o=null),o!==u?(t,t=e={type:"any_value",args:{expr:n,having:s},over:o}):(au=t,t=u)):(au=t,t=u)):(au=t,t=u);return t}())===u&&(t=au,(e=Oa())!==u&&nl()!==u&&(n=qi())!==u&&nl()!==u?((s=Qo())===u&&(s=null),s!==u&&nl()!==u&&Zi()!==u&&nl()!==u?((o=_a())===u&&(o=null),o!==u?(t,a=e,l=o,(i=s)&&"expr_list"!==i.type&&(i={type:"expr_list",value:[i]}),t=e={type:"function",name:a,args:i||{type:"expr_list",value:[]},over:l}):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t===u&&(t=au,(e=function(){var t;(t=ga())===u&&(t=function(){var t,e,n,s;t=au,"session_user"===r.substr(au,12).toLowerCase()?(e=r.substr(au,12),au+=12):(e=u,0===fu&&du(gs));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="SESSION_USER"):(au=t,t=u)):(au=t,t=u);return t}());return t}())!==u&&nl()!==u&&(n=qi())!==u&&nl()!==u?((s=Xo())===u&&(s=null),s!==u&&nl()!==u&&Zi()!==u&&nl()!==u?((o=_a())===u&&(o=null),o!==u?(t,e=function(r,t,e){return{type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,s,o),t=e):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t===u&&(t=au,(e=ga())!==u&&nl()!==u?((n=Sa())===u&&(n=null),n!==u?(t,t=e={type:"function",name:e,over:n}):(au=t,t=u)):(au=t,t=u))));var a,i,l;return t}())===u&&(t=function(){var r,t,e,n,s,o,a;r=au,(t=_i())!==u&&nl()!==u&&(e=ba())!==u&&nl()!==u?((n=La())===u&&(n=null),n!==u&&nl()!==u&&(s=Oi())!==u&&nl()!==u?((o=_i())===u&&(o=null),o!==u?(r,i=e,(l=n)&&i.push(l),r=t={type:"case",expr:null,args:i}):(au=r,r=u)):(au=r,r=u)):(au=r,r=u);var i,l;r===u&&(r=au,(t=_i())!==u&&nl()!==u&&(e=Vo())!==u&&nl()!==u&&(n=ba())!==u&&nl()!==u?((s=La())===u&&(s=null),s!==u&&nl()!==u&&(o=Oi())!==u&&nl()!==u?((a=_i())===u&&(a=null),a!==u?(r,t=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(e,n,s),r=t):(au=r,r=u)):(au=r,r=u)):(au=r,r=u));return r}())===u&&(t=function(){var t,e,n,s;t=au,(e=Gi())!==u&&nl()!==u&&(n=Vo())!==u&&nl()!==u&&(s=function(){var t;(t=function(){var t,e,n,s;t=au,"year"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(ye));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="YEAR"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=au,"month"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(Le));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="MONTH"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=au,"day"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(re));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="DAY"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=au,"hour"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(oe));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="HOUR"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=au,"minute"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(ve));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="MINUTE"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=au,"second"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(de));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="SECOND"):(au=t,t=u)):(au=t,t=u);return t}());return t}())!==u?(t,e={type:"interval",expr:n,unit:s.toLowerCase()},t=e):(au=t,t=u);return t}())===u&&(t=Ca())===u&&(t=Na())===u&&(t=au,qi()!==u&&nl()!==u&&(e=Qo())!==u&&nl()!==u&&Zi()!==u?(t,(n=e).parentheses=!0,t=n):(au=t,t=u)),t}function ba(){var r,t,e,n,s,o;if(r=au,(t=va())!==u)if(nl()!==u){for(e=[],n=au,(s=nl())!==u&&(o=va())!==u?n=s=[s,o]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=va())!==u?n=s=[s,o]:(au=n,n=u);e!==u?(r,r=t=A(t,e)):(au=r,r=u)}else au=r,r=u;else au=r,r=u;return r}function va(){var t,e,n;return t=au,function(){var t,e,n,s;t=au,"when"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(us));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}()!==u&&nl()!==u&&(e=Qo())!==u&&nl()!==u&&function(){var t,e,n,s;t=au,"then"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(os));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}()!==u&&nl()!==u&&(n=Vo())!==u?(t,t={type:"when",cond:e,result:n}):(au=t,t=u),t}function La(){var t,e;return t=au,function(){var t,e,n,s;t=au,"else"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(as));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}()!==u&&nl()!==u&&(e=Vo())!==u?(t,t={type:"else",result:e}):(au=t,t=u),t}function Ca(){var r,t,e,n,s,o,a,i,l,c,f;if(r=au,(t=wa())!==u)if(e=au,(n=nl())!==u&&(s=Xi())!==u&&(o=nl())!==u&&(a=wa())!==u?e=n=[n,s,o,a]:(au=e,e=u),e!==u){if(n=[],s=au,(o=nl())!==u&&(a=Xi())!==u&&(i=nl())!==u&&(l=wa())!==u?s=o=[o,a,i,l]:(au=s,s=u),s!==u)for(;s!==u;)n.push(s),s=au,(o=nl())!==u&&(a=Xi())!==u&&(i=nl())!==u&&(l=wa())!==u?s=o=[o,a,i,l]:(au=s,s=u);else n=u;n!==u?(r,r=t=function(r,t,e){const n=e.map(r=>r[3]).join(".")||null;return Il.add(`select::${r}.${t[3]}::${e[0][3]}`),{type:"column_ref",schema:r,table:t[3],column:n}}(t,e,n)):(au=r,r=u)}else au=r,r=u;else au=r,r=u;return r===u&&(r=au,(t=wa())!==u&&(e=nl())!==u&&(n=Xi())!==u&&(s=nl())!==u&&(o=wa())!==u?(r,c=t,f=o,Il.add(`select::${c}::${f}`),r=t={type:"column_ref",table:c,column:f}):(au=r,r=u),r===u&&(r=au,(t=Aa())!==u&&(r,t=function(r){return Il.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t)),r}function da(){var r,t;return r=au,(t=ya())!==u?(au,(!0===Ll[(""+t).toUpperCase()]?u:void 0)!==u?(r,r=t=t):(au=r,r=u)):(au=r,r=u),r===u&&(r=au,(t=pa())!==u&&(r,t=t),r=t),r}function pa(){var t;return(t=function(){var t,e,n,s;t=au,34===r.charCodeAt(au)?(e='"',au++):(e=u,0===fu&&du(kt));if(e!==u){if(n=[],Dt.test(r.charAt(au))?(s=r.charAt(au),au++):(s=u,0===fu&&du($t)),s!==u)for(;s!==u;)n.push(s),Dt.test(r.charAt(au))?(s=r.charAt(au),au++):(s=u,0===fu&&du($t));else n=u;n!==u?(34===r.charCodeAt(au)?(s='"',au++):(s=u,0===fu&&du(kt)),s!==u?(t,e=Pt(n),t=e):(au=t,t=u)):(au=t,t=u)}else au=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=au,39===r.charCodeAt(au)?(e="'",au++):(e=u,0===fu&&du(tr));if(e!==u){if(n=[],Ft.test(r.charAt(au))?(s=r.charAt(au),au++):(s=u,0===fu&&du(Gt)),s!==u)for(;s!==u;)n.push(s),Ft.test(r.charAt(au))?(s=r.charAt(au),au++):(s=u,0===fu&&du(Gt));else n=u;n!==u?(39===r.charCodeAt(au)?(s="'",au++):(s=u,0===fu&&du(tr)),s!==u?(t,e=Pt(n),t=e):(au=t,t=u)):(au=t,t=u)}else au=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=au,96===r.charCodeAt(au)?(e="`",au++):(e=u,0===fu&&du(Ht));if(e!==u){if(n=[],jt.test(r.charAt(au))?(s=r.charAt(au),au++):(s=u,0===fu&&du(Yt)),s!==u)for(;s!==u;)n.push(s),jt.test(r.charAt(au))?(s=r.charAt(au),au++):(s=u,0===fu&&du(Yt));else n=u;n!==u?(96===r.charCodeAt(au)?(s="`",au++):(s=u,0===fu&&du(Ht)),s!==u?(t,e=`\`${n.join("")}\``,t=e):(au=t,t=u)):(au=t,t=u)}else au=t,t=u;return t}()),t}function wa(){var r;return(r=ha())===u&&(r=pa()),r}function Ea(){var r;return(r=ya())===u&&(r=pa()),r}function Aa(){var r,t;return r=au,(t=ha())!==u?(au,(!0===Ll[t.toUpperCase()]?u:void 0)!==u?(r,r=t=t):(au=r,r=u)):(au=r,r=u),r===u&&(r=pa()),r}function ha(){var r,t,e,n;if(r=au,(t=Ta())!==u){for(e=[],n=Ia();n!==u;)e.push(n),n=Ia();e!==u?(r,r=t=Bt(t,e)):(au=r,r=u)}else au=r,r=u;return r}function ya(){var r,t,e,n;if(r=au,(t=Ta())!==u){for(e=[],n=ma();n!==u;)e.push(n),n=ma();e!==u?(r,r=t=Bt(t,e)):(au=r,r=u)}else au=r,r=u;return r}function Ta(){var t;return Wt.test(r.charAt(au))?(t=r.charAt(au),au++):(t=u,0===fu&&du(Xt)),t}function ma(){var t;return Vt.test(r.charAt(au))?(t=r.charAt(au),au++):(t=u,0===fu&&du(Kt)),t}function Ia(){var t;return qt.test(r.charAt(au))?(t=r.charAt(au),au++):(t=u,0===fu&&du(Zt)),t}function Na(){var t,e,n;return t=au,58===r.charCodeAt(au)?(e=":",au++):(e=u,0===fu&&du(zt)),e===u&&(64===r.charCodeAt(au)?(e="@",au++):(e=u,0===fu&&du(Gr))),e!==u&&(n=ya())!==u?(t,t=e={type:"param",value:n,prefix:e}):(au=t,t=u),t}function Ra(){var t;return(t=function(){var t,e,n,s;t=au,(e=function(){var t,e,n,s;t=au,"count"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(zn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="COUNT"):(au=t,t=u)):(au=t,t=u);return t}())!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(n=function(){var t,e,n,s,o;t=au,(e=function(){var t,e;t=au,42===r.charCodeAt(au)?(e="*",au++):(e=u,0===fu&&du(xt));e!==u&&(t,e={type:"star",value:"*"});return t=e}())!==u&&(t,e={expr:e});(t=e)===u&&(t=au,(e=pi())===u&&(e=null),e!==u&&nl()!==u&&(n=qi())!==u&&nl()!==u&&(s=Vo())!==u&&nl()!==u&&Zi()!==u&&nl()!==u?((o=jo())===u&&(o=null),o!==u?(t,t=e={distinct:e,expr:s,orderby:o,parentheses:!0}):(au=t,t=u)):(au=t,t=u),t===u&&(t=au,(e=pi())===u&&(e=null),e!==u&&nl()!==u&&(n=Vo())!==u&&nl()!==u?((s=jo())===u&&(s=null),s!==u?(t,e=function(r,t,e){return{distinct:r,expr:t,orderby:e,parentheses:!1}}(e,n,s),t=e):(au=t,t=u)):(au=t,t=u)));return t}())!==u&&nl()!==u&&Zi()!==u&&nl()!==u?((s=_a())===u&&(s=null),s!==u?(t,t=e={type:"aggr_func",name:e,args:n,over:s}):(au=t,t=u)):(au=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=au,(e=function(){var t;(t=function(){var t,e,n,s;t=au,"sum"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(rs));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="SUM"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(t=Ni())===u&&(t=Ri())===u&&(t=function(){var t,e,n,s;t=au,"avg"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(ts));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="AVG"):(au=t,t=u)):(au=t,t=u);return t}());return t}())!==u&&nl()!==u&&qi()!==u&&nl()!==u&&(n=aa())!==u&&nl()!==u&&Zi()!==u&&nl()!==u?((s=_a())===u&&(s=null),s!==u?(t,t=e={type:"aggr_func",name:e,args:{expr:n},over:s}):(au=t,t=u)):(au=t,t=u);return t}()),t}function Sa(){var t,e,n,s;return t=au,ui()!==u&&nl()!==u?("update"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(Tr)),e!==u&&nl()!==u&&(n=Hi())!==u&&nl()!==u&&qi()!==u&&nl()!==u?((s=Xo())===u&&(s=null),s!==u&&nl()!==u&&Zi()!==u?(t,t={type:"on update",keyword:n,parentheses:!0,expr:s}):(au=t,t=u)):(au=t,t=u)):(au=t,t=u),t===u&&(t=au,ui()!==u&&nl()!==u?("update"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(Tr)),e!==u&&nl()!==u&&(n=Hi())!==u?(t,t=function(r){return{type:"on update",keyword:r}}(n)):(au=t,t=u)):(au=t,t=u)),t}function _a(){var r,t,e,n;return r=au,ii()!==u&&nl()!==u&&(t=Do())!==u?(r,r={type:"window",as_window_specification:t}):(au=r,r=u),r===u&&(r=au,ii()!==u&&nl()!==u&&(t=qi())!==u&&nl()!==u&&(e=Ho())!==u&&nl()!==u?((n=jo())===u&&(n=null),n!==u&&nl()!==u&&Zi()!==u?(r,r={partitionby:e,orderby:n}):(au=r,r=u)):(au=r,r=u),r===u&&(r=Sa())),r}function Oa(){var r,t,e,n,s,o,a,i;if(r=au,(t=ya())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Xi())!==u&&(a=nl())!==u&&(i=ya())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Xi())!==u&&(a=nl())!==u&&(i=ya())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,r=t=function(r,t){let e=r;return null!==t&&t.forEach(r=>e=`${e}.${r[3]}`),e}(t,e)):(au=r,r=u)}else au=r,r=u;return r}function ga(){var t;return(t=function(){var t,e,n,s;t=au,"current_date"===r.substr(au,12).toLowerCase()?(e=r.substr(au,12),au+=12):(e=u,0===fu&&du(Rs));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="CURRENT_DATE"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=au,"current_time"===r.substr(au,12).toLowerCase()?(e=r.substr(au,12),au+=12):(e=u,0===fu&&du(_s));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="CURRENT_TIME"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(t=Hi()),t}function xa(){var t,e;return t=au,"century"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(Jt)),e===u&&("day"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(re)),e===u&&("date"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(te)),e===u&&("decade"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(ee)),e===u&&("dow"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(ne)),e===u&&("doy"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(se)),e===u&&("epoch"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(ue)),e===u&&("hour"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(oe)),e===u&&("isodow"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(ae)),e===u&&("isoweek"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(ie)),e===u&&("isoyear"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(le)),e===u&&("microseconds"===r.substr(au,12).toLowerCase()?(e=r.substr(au,12),au+=12):(e=u,0===fu&&du(ce)),e===u&&("millennium"===r.substr(au,10).toLowerCase()?(e=r.substr(au,10),au+=10):(e=u,0===fu&&du(fe)),e===u&&("milliseconds"===r.substr(au,12).toLowerCase()?(e=r.substr(au,12),au+=12):(e=u,0===fu&&du(be)),e===u&&("minute"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(ve)),e===u&&("month"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(Le)),e===u&&("quarter"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(Ce)),e===u&&("second"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(de)),e===u&&("time"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(pe)),e===u&&("timezone"===r.substr(au,8).toLowerCase()?(e=r.substr(au,8),au+=8):(e=u,0===fu&&du(we)),e===u&&("timezone_hour"===r.substr(au,13).toLowerCase()?(e=r.substr(au,13),au+=13):(e=u,0===fu&&du(Ee)),e===u&&("timezone_minute"===r.substr(au,15).toLowerCase()?(e=r.substr(au,15),au+=15):(e=u,0===fu&&du(Ae)),e===u&&("week"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(he)),e===u&&("year"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(ye))))))))))))))))))))))))),e!==u&&(t,e=e),t=e}function Ua(){var t;return(t=function(){var t,e,n,s;t=au,"cast"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(ls));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="CAST"):(au=t,t=u)):(au=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=au,"safe_cast"===r.substr(au,9).toLowerCase()?(e=r.substr(au,9),au+=9):(e=u,0===fu&&du(cs));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="SAFE_CAST"):(au=t,t=u)):(au=t,t=u);return t}()),t}function Ma(){var t;return(t=Da())===u&&(t=Ga())===u&&(t=function(){var t,e;t=au,(e=function(){var t,e,n,s;t=au,"true"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(en));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!0});(t=e)===u&&(t=au,(e=function(){var t,e,n,s;t=au,"false"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(sn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!1}),t=e);return t}())===u&&(t=ka())===u&&(t=function(){var t,e,n,s,o,a;t=au,(e=Pi())===u&&(e=ki())===u&&(e=Fi())===u&&(e=Di());if(e!==u)if(nl()!==u){if(n=au,39===r.charCodeAt(au)?(s="'",au++):(s=u,0===fu&&du(tr)),s!==u){for(o=[],a=Pa();a!==u;)o.push(a),a=Pa();o!==u?(39===r.charCodeAt(au)?(a="'",au++):(a=u,0===fu&&du(tr)),a!==u?n=s=[s,o,a]:(au=n,n=u)):(au=n,n=u)}else au=n,n=u;n!==u?(t,e=Ie(e,n),t=e):(au=t,t=u)}else au=t,t=u;else au=t,t=u;if(t===u)if(t=au,(e=Pi())===u&&(e=ki())===u&&(e=Fi())===u&&(e=Di()),e!==u)if(nl()!==u){if(n=au,34===r.charCodeAt(au)?(s='"',au++):(s=u,0===fu&&du(kt)),s!==u){for(o=[],a=$a();a!==u;)o.push(a),a=$a();o!==u?(34===r.charCodeAt(au)?(a='"',au++):(a=u,0===fu&&du(kt)),a!==u?n=s=[s,o,a]:(au=n,n=u)):(au=n,n=u)}else au=n,n=u;n!==u?(t,e=Ie(e,n),t=e):(au=t,t=u)}else au=t,t=u;else au=t,t=u;return t}()),t}function ka(){var t,e;return t=au,(e=function(){var t,e,n,s;t=au,"null"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(rn));e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u);return t}())!==u&&(t,e={type:"null",value:null}),t=e}function Da(){var t,e,n,s,o,a;if(t=au,"r"===r.substr(au,1).toLowerCase()?(e=r.charAt(au),au++):(e=u,0===fu&&du(me)),e===u&&(e=null),e!==u)if(nl()!==u){if(n=au,39===r.charCodeAt(au)?(s="'",au++):(s=u,0===fu&&du(tr)),s!==u){for(o=[],a=Pa();a!==u;)o.push(a),a=Pa();o!==u?(39===r.charCodeAt(au)?(a="'",au++):(a=u,0===fu&&du(tr)),a!==u?n=s=[s,o,a]:(au=n,n=u)):(au=n,n=u)}else au=n,n=u;n!==u?(t,t=e={type:e?"regex_string":"single_quote_string",value:n[1].join("")}):(au=t,t=u)}else au=t,t=u;else au=t,t=u;if(t===u)if(t=au,"r"===r.substr(au,1).toLowerCase()?(e=r.charAt(au),au++):(e=u,0===fu&&du(me)),e===u&&(e=null),e!==u)if(nl()!==u){if(n=au,34===r.charCodeAt(au)?(s='"',au++):(s=u,0===fu&&du(kt)),s!==u){for(o=[],a=$a();a!==u;)o.push(a),a=$a();o!==u?(34===r.charCodeAt(au)?(a='"',au++):(a=u,0===fu&&du(kt)),a!==u?n=s=[s,o,a]:(au=n,n=u)):(au=n,n=u)}else au=n,n=u;n!==u?(t,t=e=function(r,t){return{type:r?"regex_string":"string",value:t[1].join("")}}(e,n)):(au=t,t=u)}else au=t,t=u;else au=t,t=u;return t}function $a(){var t;return Ne.test(r.charAt(au))?(t=r.charAt(au),au++):(t=u,0===fu&&du(Re)),t===u&&(t=Fa()),t}function Pa(){var t;return Se.test(r.charAt(au))?(t=r.charAt(au),au++):(t=u,0===fu&&du(_e)),t===u&&(t=Fa()),t}function Fa(){var t,e,n,s,o,a,i,l,c,f;return t=au,"\\'"===r.substr(au,2)?(e="\\'",au+=2):(e=u,0===fu&&du(Oe)),e!==u&&(t,e="\\'"),(t=e)===u&&(t=au,'\\"'===r.substr(au,2)?(e='\\"',au+=2):(e=u,0===fu&&du(ge)),e!==u&&(t,e='\\"'),(t=e)===u&&(t=au,"\\\\"===r.substr(au,2)?(e="\\\\",au+=2):(e=u,0===fu&&du(xe)),e!==u&&(t,e="\\\\"),(t=e)===u&&(t=au,"\\/"===r.substr(au,2)?(e="\\/",au+=2):(e=u,0===fu&&du(Ue)),e!==u&&(t,e="\\/"),(t=e)===u&&(t=au,"\\b"===r.substr(au,2)?(e="\\b",au+=2):(e=u,0===fu&&du(Me)),e!==u&&(t,e="\b"),(t=e)===u&&(t=au,"\\f"===r.substr(au,2)?(e="\\f",au+=2):(e=u,0===fu&&du(ke)),e!==u&&(t,e="\f"),(t=e)===u&&(t=au,"\\n"===r.substr(au,2)?(e="\\n",au+=2):(e=u,0===fu&&du(De)),e!==u&&(t,e="\n"),(t=e)===u&&(t=au,"\\r"===r.substr(au,2)?(e="\\r",au+=2):(e=u,0===fu&&du($e)),e!==u&&(t,e="\r"),(t=e)===u&&(t=au,"\\t"===r.substr(au,2)?(e="\\t",au+=2):(e=u,0===fu&&du(Pe)),e!==u&&(t,e="\t"),(t=e)===u&&(t=au,"\\u"===r.substr(au,2)?(e="\\u",au+=2):(e=u,0===fu&&du(Fe)),e!==u&&(n=Va())!==u&&(s=Va())!==u&&(o=Va())!==u&&(a=Va())!==u?(t,i=n,l=s,c=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+l+c+f))):(au=t,t=u),t===u&&(t=au,92===r.charCodeAt(au)?(e="\\",au++):(e=u,0===fu&&du(Ge)),e!==u&&(t,e="\\"),(t=e)===u&&(t=au,"''"===r.substr(au,2)?(e="''",au+=2):(e=u,0===fu&&du(He)),e!==u&&(t,e="''"),(t=e)===u&&(t=au,'""'===r.substr(au,2)?(e='""',au+=2):(e=u,0===fu&&du(je)),e!==u&&(t,e='""'),(t=e)===u&&(t=au,"``"===r.substr(au,2)?(e="``",au+=2):(e=u,0===fu&&du(Ye)),e!==u&&(t,e="``"),t=e))))))))))))),t}function Ga(){var r,t,e;return r=au,(t=Ha())!==u&&(r,t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function Ha(){var r,t,e,n;return r=au,(t=ja())!==u&&(e=Ya())!==u&&(n=Ba())!==u?(r,r=t={type:"bigint",value:t+e+n}):(au=r,r=u),r===u&&(r=au,(t=ja())!==u&&(e=Ya())!==u?(r,r=t=function(r,t){const e=r+t;return wl(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e)):(au=r,r=u),r===u&&(r=au,(t=ja())!==u&&(e=Ba())!==u?(r,r=t=function(r,t){return{type:"bigint",value:r+t}}(t,e)):(au=r,r=u),r===u&&(r=au,(t=ja())!==u&&(r,t=function(r){return wl(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t))),r}function ja(){var t,e,n;return(t=Wa())===u&&(t=Xa())===u&&(t=au,45===r.charCodeAt(au)?(e="-",au++):(e=u,0===fu&&du(gt)),e===u&&(43===r.charCodeAt(au)?(e="+",au++):(e=u,0===fu&&du(Ot))),e!==u&&(n=Wa())!==u?(t,t=e=e+n):(au=t,t=u),t===u&&(t=au,45===r.charCodeAt(au)?(e="-",au++):(e=u,0===fu&&du(gt)),e===u&&(43===r.charCodeAt(au)?(e="+",au++):(e=u,0===fu&&du(Ot))),e!==u&&(n=Xa())!==u?(t,t=e=function(r,t){return r+t}(e,n)):(au=t,t=u))),t}function Ya(){var t,e,n;return t=au,46===r.charCodeAt(au)?(e=".",au++):(e=u,0===fu&&du(m)),e!==u&&(n=Wa())!==u?(t,t=e="."+n):(au=t,t=u),t}function Ba(){var t,e,n;return t=au,(e=function(){var t,e,n;t=au,Ze.test(r.charAt(au))?(e=r.charAt(au),au++):(e=u,0===fu&&du(ze));e!==u?(Qe.test(r.charAt(au))?(n=r.charAt(au),au++):(n=u,0===fu&&du(Je)),n===u&&(n=null),n!==u?(t,t=e=e+(null!==(s=n)?s:"")):(au=t,t=u)):(au=t,t=u);var s;return t}())!==u&&(n=Wa())!==u?(t,t=e=e+n):(au=t,t=u),t}function Wa(){var r,t,e;if(r=au,t=[],(e=Xa())!==u)for(;e!==u;)t.push(e),e=Xa();else t=u;return t!==u&&(r,t=t.join("")),r=t}function Xa(){var t;return Xe.test(r.charAt(au))?(t=r.charAt(au),au++):(t=u,0===fu&&du(Ve)),t}function Va(){var t;return Ke.test(r.charAt(au))?(t=r.charAt(au),au++):(t=u,0===fu&&du(qe)),t}function Ka(){var t,e,n,s;return t=au,"default"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(N)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function qa(){var t,e,n,s;return t=au,"to"===r.substr(au,2).toLowerCase()?(e=r.substr(au,2),au+=2):(e=u,0===fu&&du(nn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function Za(){var t,e,n,s;return t=au,"drop"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(un)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="DROP"):(au=t,t=u)):(au=t,t=u),t}function za(){var t,e,n,s;return t=au,"ignore"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(ln)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function Qa(){var t,e,n,s;return t=au,"partition"===r.substr(au,9).toLowerCase()?(e=r.substr(au,9),au+=9):(e=u,0===fu&&du(cn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="PARTITION"):(au=t,t=u)):(au=t,t=u),t}function Ja(){var t,e,n,s;return t=au,"into"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(fn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function ri(){var t,e,n,s;return t=au,"from"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(bn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function ti(){var t,e,n,s;return t=au,"set"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(w)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function ei(){var t,e,n,s;return t=au,"as"===r.substr(au,2).toLowerCase()?(e=r.substr(au,2),au+=2):(e=u,0===fu&&du(Qr)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function ni(){var t,e,n,s;return t=au,"table"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(Ln)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="TABLE"):(au=t,t=u)):(au=t,t=u),t}function si(){var t,e,n,s;return t=au,"tables"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(Cn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="TABLES"):(au=t,t=u)):(au=t,t=u),t}function ui(){var t,e,n,s;return t=au,"on"===r.substr(au,2).toLowerCase()?(e=r.substr(au,2),au+=2):(e=u,0===fu&&du(hr)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function oi(){var t,e,n,s;return t=au,"join"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(hn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function ai(){var t,e,n,s;return t=au,"outer"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(yn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function ii(){var t,e,n,s;return t=au,"over"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(Tn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function li(){var t,e,n,s;return t=au,"values"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(Nn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function ci(){var t,e,n,s;return t=au,"using"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(Rn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function fi(){var t,e,n,s;return t=au,"with"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(pr)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function bi(){var t,e,n,s;return t=au,"by"===r.substr(au,2).toLowerCase()?(e=r.substr(au,2),au+=2):(e=u,0===fu&&du(On)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function vi(){var t,e,n,s;return t=au,"having"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(xn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function Li(){var t,e,n,s;return t=au,"offset"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(Pn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="OFFSET"):(au=t,t=u)):(au=t,t=u),t}function Ci(){var t,e,n,s;return t=au,"desc"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(Hn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="DESC"):(au=t,t=u)):(au=t,t=u),t}function di(){var t,e,n,s;return t=au,"all"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(jn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="ALL"):(au=t,t=u)):(au=t,t=u),t}function pi(){var t,e,n,s;return t=au,"distinct"===r.substr(au,8).toLowerCase()?(e=r.substr(au,8),au+=8):(e=u,0===fu&&du(Yn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="DISTINCT"):(au=t,t=u)):(au=t,t=u),t}function wi(){var t,e,n,s;return t=au,"between"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(Bn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="BETWEEN"):(au=t,t=u)):(au=t,t=u),t}function Ei(){var t,e,n,s;return t=au,"in"===r.substr(au,2).toLowerCase()?(e=r.substr(au,2),au+=2):(e=u,0===fu&&du(Wn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="IN"):(au=t,t=u)):(au=t,t=u),t}function Ai(){var t,e,n,s;return t=au,"is"===r.substr(au,2).toLowerCase()?(e=r.substr(au,2),au+=2):(e=u,0===fu&&du(Xn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="IS"):(au=t,t=u)):(au=t,t=u),t}function hi(){var t,e,n,s;return t=au,"like"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(Vn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="LIKE"):(au=t,t=u)):(au=t,t=u),t}function yi(){var t,e,n,s;return t=au,"exists"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(Kn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="EXISTS"):(au=t,t=u)):(au=t,t=u),t}function Ti(){var t,e,n,s;return t=au,"not"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(vr)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="NOT"):(au=t,t=u)):(au=t,t=u),t}function mi(){var t,e,n,s;return t=au,"and"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(qn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="AND"):(au=t,t=u)):(au=t,t=u),t}function Ii(){var t,e,n,s;return t=au,"or"===r.substr(au,2).toLowerCase()?(e=r.substr(au,2),au+=2):(e=u,0===fu&&du(Zn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="OR"):(au=t,t=u)):(au=t,t=u),t}function Ni(){var t,e,n,s;return t=au,"max"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(Qn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="MAX"):(au=t,t=u)):(au=t,t=u),t}function Ri(){var t,e,n,s;return t=au,"min"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(Jn)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="MIN"):(au=t,t=u)):(au=t,t=u),t}function Si(){var t,e,n,s;return t=au,"extract"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(es)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="EXTRACT"):(au=t,t=u)):(au=t,t=u),t}function _i(){var t,e,n,s;return t=au,"case"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(ss)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function Oi(){var t,e,n,s;return t=au,"end"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du(is)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?t=e=[e,n]:(au=t,t=u)):(au=t,t=u),t}function gi(){var t,e,n,s;return t=au,"array"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(fs)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="ARRAY"):(au=t,t=u)):(au=t,t=u),t}function xi(){var t,e,n,s;return t=au,"decimal"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(ds)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="DECIMAL"):(au=t,t=u)):(au=t,t=u),t}function Ui(){var t,e,n,s;return t=au,"integer"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(As)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="INTEGER"):(au=t,t=u)):(au=t,t=u),t}function Mi(){var t,e,n,s;return t=au,"struct"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(ys)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="STRUCT"):(au=t,t=u)):(au=t,t=u),t}function ki(){var t,e,n,s;return t=au,"date"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(te)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="DATE"):(au=t,t=u)):(au=t,t=u),t}function Di(){var t,e,n,s;return t=au,"datetime"===r.substr(au,8).toLowerCase()?(e=r.substr(au,8),au+=8):(e=u,0===fu&&du(ms)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="DATETIME"):(au=t,t=u)):(au=t,t=u),t}function $i(){var t,e,n,s;return t=au,"rows"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(Lt)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="ROWS"):(au=t,t=u)):(au=t,t=u),t}function Pi(){var t,e,n,s;return t=au,"time"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(pe)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="TIME"):(au=t,t=u)):(au=t,t=u),t}function Fi(){var t,e,n,s;return t=au,"timestamp"===r.substr(au,9).toLowerCase()?(e=r.substr(au,9),au+=9):(e=u,0===fu&&du(Is)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="TIMESTAMP"):(au=t,t=u)):(au=t,t=u),t}function Gi(){var t,e,n,s;return t=au,"interval"===r.substr(au,8).toLowerCase()?(e=r.substr(au,8),au+=8):(e=u,0===fu&&du(Ss)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="INTERVAL"):(au=t,t=u)):(au=t,t=u),t}function Hi(){var t,e,n,s;return t=au,"current_timestamp"===r.substr(au,17).toLowerCase()?(e=r.substr(au,17),au+=17):(e=u,0===fu&&du(Os)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="CURRENT_TIMESTAMP"):(au=t,t=u)):(au=t,t=u),t}function ji(){var t,e,n,s;return t=au,"column"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(Ps)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="COLUMN"):(au=t,t=u)):(au=t,t=u),t}function Yi(){var t,e,n,s;return t=au,"index"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(Fs)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="INDEX"):(au=t,t=u)):(au=t,t=u),t}function Bi(){var t,e,n,s;return t=au,"key"===r.substr(au,3).toLowerCase()?(e=r.substr(au,3),au+=3):(e=u,0===fu&&du($)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="KEY"):(au=t,t=u)):(au=t,t=u),t}function Wi(){var t,e,n,s;return t=au,"comment"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(Hs)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="COMMENT"):(au=t,t=u)):(au=t,t=u),t}function Xi(){var t;return 46===r.charCodeAt(au)?(t=".",au++):(t=u,0===fu&&du(m)),t}function Vi(){var t;return 44===r.charCodeAt(au)?(t=",",au++):(t=u,0===fu&&du(Bs)),t}function Ki(){var t;return 42===r.charCodeAt(au)?(t="*",au++):(t=u,0===fu&&du(xt)),t}function qi(){var t;return 40===r.charCodeAt(au)?(t="(",au++):(t=u,0===fu&&du(Vr)),t}function Zi(){var t;return 41===r.charCodeAt(au)?(t=")",au++):(t=u,0===fu&&du(Kr)),t}function zi(){var t;return 60===r.charCodeAt(au)?(t="<",au++):(t=u,0===fu&&du(St)),t}function Qi(){var t;return 62===r.charCodeAt(au)?(t=">",au++):(t=u,0===fu&&du(It)),t}function Ji(){var t;return 91===r.charCodeAt(au)?(t="[",au++):(t=u,0===fu&&du(Ws)),t}function rl(){var t;return 93===r.charCodeAt(au)?(t="]",au++):(t=u,0===fu&&du(Xs)),t}function tl(){var t;return 59===r.charCodeAt(au)?(t=";",au++):(t=u,0===fu&&du(Vs)),t}function el(){var t;return(t=function(){var t;return"||"===r.substr(au,2)?(t="||",au+=2):(t=u,0===fu&&du(Ks)),t}())===u&&(t=function(){var t;return"&&"===r.substr(au,2)?(t="&&",au+=2):(t=u,0===fu&&du(qs)),t}()),t}function nl(){var r,t;for(r=[],(t=al())===u&&(t=ul());t!==u;)r.push(t),(t=al())===u&&(t=ul());return r}function sl(){var r,t;if(r=[],(t=al())===u&&(t=ul()),t!==u)for(;t!==u;)r.push(t),(t=al())===u&&(t=ul());else r=u;return r}function ul(){var t;return(t=function(){var t,e,n,s,o,a;t=au,"/*"===r.substr(au,2)?(e="/*",au+=2):(e=u,0===fu&&du(Zs));if(e!==u){for(n=[],s=au,o=au,fu++,"*/"===r.substr(au,2)?(a="*/",au+=2):(a=u,0===fu&&du(zs)),fu--,a===u?o=void 0:(au=o,o=u),o!==u&&(a=ol())!==u?s=o=[o,a]:(au=s,s=u);s!==u;)n.push(s),s=au,o=au,fu++,"*/"===r.substr(au,2)?(a="*/",au+=2):(a=u,0===fu&&du(zs)),fu--,a===u?o=void 0:(au=o,o=u),o!==u&&(a=ol())!==u?s=o=[o,a]:(au=s,s=u);n!==u?("*/"===r.substr(au,2)?(s="*/",au+=2):(s=u,0===fu&&du(zs)),s!==u?t=e=[e,n,s]:(au=t,t=u)):(au=t,t=u)}else au=t,t=u;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=au,"--"===r.substr(au,2)?(e="--",au+=2):(e=u,0===fu&&du(Qs));if(e!==u){for(n=[],s=au,o=au,fu++,a=il(),fu--,a===u?o=void 0:(au=o,o=u),o!==u&&(a=ol())!==u?s=o=[o,a]:(au=s,s=u);s!==u;)n.push(s),s=au,o=au,fu++,a=il(),fu--,a===u?o=void 0:(au=o,o=u),o!==u&&(a=ol())!==u?s=o=[o,a]:(au=s,s=u);n!==u?t=e=[e,n]:(au=t,t=u)}else au=t,t=u;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=au,35===r.charCodeAt(au)?(e="#",au++):(e=u,0===fu&&du(Js));if(e!==u){for(n=[],s=au,o=au,fu++,a=il(),fu--,a===u?o=void 0:(au=o,o=u),o!==u&&(a=ol())!==u?s=o=[o,a]:(au=s,s=u);s!==u;)n.push(s),s=au,o=au,fu++,a=il(),fu--,a===u?o=void 0:(au=o,o=u),o!==u&&(a=ol())!==u?s=o=[o,a]:(au=s,s=u);n!==u?t=e=[e,n]:(au=t,t=u)}else au=t,t=u;return t}()),t}function ol(){var t;return r.length>au?(t=r.charAt(au),au++):(t=u,0===fu&&du(ru)),t}function al(){var t;return tu.test(r.charAt(au))?(t=r.charAt(au),au++):(t=u,0===fu&&du(eu)),t}function il(){var t,e;if((t=function(){var t,e;t=au,fu++,r.length>au?(e=r.charAt(au),au++):(e=u,0===fu&&du(ru));fu--,e===u?t=void 0:(au=t,t=u);return t}())===u)if(t=[],Be.test(r.charAt(au))?(e=r.charAt(au),au++):(e=u,0===fu&&du(We)),e!==u)for(;e!==u;)t.push(e),Be.test(r.charAt(au))?(e=r.charAt(au),au++):(e=u,0===fu&&du(We));else t=u;return t}function ll(){var r,t,e,n,s,o,a,i;if(r=au,(t=cl())!==u){for(e=[],n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=cl())!==u?n=s=[s,o,a,i]:(au=n,n=u);n!==u;)e.push(n),n=au,(s=nl())!==u&&(o=Vi())!==u&&(a=nl())!==u&&(i=cl())!==u?n=s=[s,o,a,i]:(au=n,n=u);e!==u?(r,r=t=l(t,e)):(au=r,r=u)}else au=r,r=u;return r}function cl(){var r,t,e,n;return r=au,t=au,(e=ya())!==u?(au,(n=(n=!0===Cl[e.toUpperCase()])?u:void 0)!==u?(t,t=e=e):(au=t,t=u)):(au=t,t=u),t===u&&(t=null),t!==u&&(e=nl())!==u&&(n=fl())!==u?(r,r=t=function(r,t){return{field_name:r,field_type:t}}(t,n)):(au=r,r=u),r}function fl(){var t;return(t=vl())===u&&(t=bl())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f;if(t=au,(e=function(){var t,e,n,s;return t=au,"string"===r.substr(au,6).toLowerCase()?(e=r.substr(au,6),au+=6):(e=u,0===fu&&du(hs)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="STRING"):(au=t,t=u)):(au=t,t=u),t}())!==u){if(n=[],s=au,(o=nl())!==u)if((a=qi())!==u)if((i=nl())!==u){if(l=[],Xe.test(r.charAt(au))?(c=r.charAt(au),au++):(c=u,0===fu&&du(Ve)),c!==u)for(;c!==u;)l.push(c),Xe.test(r.charAt(au))?(c=r.charAt(au),au++):(c=u,0===fu&&du(Ve));else l=u;l!==u&&(c=nl())!==u&&(f=Zi())!==u?s=o=[o,a,i,l,c,f]:(au=s,s=u)}else au=s,s=u;else au=s,s=u;else au=s,s=u;for(;s!==u;)if(n.push(s),s=au,(o=nl())!==u)if((a=qi())!==u)if((i=nl())!==u){if(l=[],Xe.test(r.charAt(au))?(c=r.charAt(au),au++):(c=u,0===fu&&du(Ve)),c!==u)for(;c!==u;)l.push(c),Xe.test(r.charAt(au))?(c=r.charAt(au),au++):(c=u,0===fu&&du(Ve));else l=u;l!==u&&(c=nl())!==u&&(f=Zi())!==u?s=o=[o,a,i,l,c,f]:(au=s,s=u)}else au=s,s=u;else au=s,s=u;else au=s,s=u;n!==u?(t,e=nu(e),t=e):(au=t,t=u)}else au=t,t=u;return t}())===u&&(t=function(){var t,e;t=au,(e=function(){var t,e,n,s;return t=au,"numeric"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(Cs)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="NUMERIC"):(au=t,t=u)):(au=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=au,"int64"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(Es)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="INT64"):(au=t,t=u)):(au=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=au,"float64"===r.substr(au,7).toLowerCase()?(e=r.substr(au,7),au+=7):(e=u,0===fu&&du(Ts)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="FLOAT64"):(au=t,t=u)):(au=t,t=u),t}())===u&&(e=Ui());e!==u&&(t,e=nu(e));return t=e}())===u&&(t=function(){var t,e,n,s;t=au,(e=ki())===u&&(e=Di())===u&&(e=Pi())===u&&(e=Fi());if(e!==u)if(nl()!==u)if(qi()!==u)if(nl()!==u){if(n=[],Xe.test(r.charAt(au))?(s=r.charAt(au),au++):(s=u,0===fu&&du(Ve)),s!==u)for(;s!==u;)n.push(s),Xe.test(r.charAt(au))?(s=r.charAt(au),au++):(s=u,0===fu&&du(Ve));else n=u;n!==u&&(s=nl())!==u&&Zi()!==u?(t,e={dataType:e,length:parseInt(n.join(""),10),parentheses:!0},t=e):(au=t,t=u)}else au=t,t=u;else au=t,t=u;else au=t,t=u;else au=t,t=u;t===u&&(t=au,(e=ki())===u&&(e=Di())===u&&(e=Pi())===u&&(e=Fi()),e!==u&&(t,e=nu(e)),t=e);return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l;if(t=au,e=au,(n=function(){var t,e,n,s;return t=au,"bytes"===r.substr(au,5).toLowerCase()?(e=r.substr(au,5),au+=5):(e=u,0===fu&&du(bs)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="BYTES"):(au=t,t=u)):(au=t,t=u),t}())!==u)if((s=qi())!==u)if((o=nl())!==u){if(a=[],Xe.test(r.charAt(au))?(i=r.charAt(au),au++):(i=u,0===fu&&du(Ve)),i!==u)for(;i!==u;)a.push(i),Xe.test(r.charAt(au))?(i=r.charAt(au),au++):(i=u,0===fu&&du(Ve));else a=u;a===u&&("MAX"===r.substr(au,3)?(a="MAX",au+=3):(a=u,0===fu&&du(su)),a===u&&("max"===r.substr(au,3)?(a="max",au+=3):(a=u,0===fu&&du(uu)))),a!==u&&(i=nl())!==u&&(l=Zi())!==u?e=n=[n,s,o,a,i,l]:(au=e,e=u)}else au=e,e=u;else au=e,e=u;else au=e,e=u;e===u&&(e=function(){var t,e,n,s;return t=au,"bool"===r.substr(au,4).toLowerCase()?(e=r.substr(au,4),au+=4):(e=u,0===fu&&du(vs)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="BOOL"):(au=t,t=u)):(au=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=au,"geography"===r.substr(au,9).toLowerCase()?(e=r.substr(au,9),au+=9):(e=u,0===fu&&du(Ls)),e!==u?(n=au,fu++,s=Ta(),fu--,s===u?n=void 0:(au=n,n=u),n!==u?(t,t=e="GEOGRAPHY"):(au=t,t=u)):(au=t,t=u),t}());e!==u&&(t,e=nu(e));return t=e}()),t}function bl(){var r,t,e;return r=au,(t=gi())!==u&&nl()!==u&&zi()!==u&&nl()!==u&&(e=ll())!==u&&nl()!==u&&Qi()!==u?(r,r=t=ou(t,e)):(au=r,r=u),r}function vl(){var r,t,e;return r=au,(t=Mi())!==u&&nl()!==u&&zi()!==u&&nl()!==u&&(e=ll())!==u&&nl()!==u&&Qi()!==u?(r,r=t=ou(t,e)):(au=r,r=u),r}const Ll={ARRAY:!0,ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CROSS:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,FOR:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!1,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,PARTITION:!0,PIVOT:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!1,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WINDOW:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0,UNNEST:!0},Cl={BOOL:!0,BYTE:!0,DATE:!0,DATETIME:!0,FLOAT64:!0,INT64:!0,NUMERIC:!0,STRING:!0,TIME:!0,TIMESTAMP:!0,ARRAY:!0,STRUCT:!0};function dl(r,t){return{type:"unary_expr",operator:r,expr:t}}function pl(r,t,e){return{type:"binary_expr",operator:r,left:t,right:e}}function wl(r){const t=n(Number.MAX_SAFE_INTEGER);return!(n(r)<t)}function El(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)delete t[r][e].tableList,delete t[r][e].columnList,n.push(t[r][e]);return n}function Al(r,t){let e=r;for(let r=0;r<t.length;r++)e=pl(t[r][1],e,t[r][3]);return e}function hl(r){const t=Nl[r];return t||(r||null)}function yl(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=hl(r[1])),t.add(r.join("::"))}return Array.from(t)}let Tl=[];const ml=new Set,Il=new Set,Nl={};if((e=a())!==u&&au===r.length)return e;throw e!==u&&au<r.length&&du({type:"end"}),pu(cu,lu<r.length?r.charAt(lu):null,lu<r.length?Cu(lu,lu+1):Cu(lu,lu))}}},function(r,t,e){"use strict";var n=e(0);function s(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,s)}!function(r,t){function e(){this.constructor=r}e.prototype=t.prototype,r.prototype=new e}(s,Error),s.buildMessage=function(r,t){var e={literal:function(r){return'"'+s(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?u(r.parts[t][0])+"-"+u(r.parts[t][1]):u(r.parts[t]);return"["+(r.inverted?"^":"")+e+"]"},any:function(r){return"any character"},end:function(r){return"end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function s(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}function u(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}return"Expected "+function(r){var t,n,s,u=new Array(r.length);for(t=0;t<r.length;t++)u[t]=(s=r[t],e[s.type](s));if(u.sort(),u.length>0){for(t=1,n=1;t<u.length;t++)u[t-1]!==u[t]&&(u[n]=u[t],n++);u.length=n}switch(u.length){case 1:return u[0];case 2:return u[0]+" or "+u[1];default:return u.slice(0,-1).join(", ")+", or "+u[u.length-1]}}(r)+" but "+function(r){return r?'"'+s(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:s,parse:function(r,t){t=void 0!==t?t:{};var e,u={},o={start:Os},a=Os,i=function(r,t){return ii(r,t,1)},l=ms("IF",!0),c=function(r,t){return ii(r,t)},f=ms("AUTO_INCREMENT",!0),b=ms("UNIQUE",!0),v=ms("PRIMARY",!0),L=ms("KEY",!0),C=ms("COLUMN_FORMAT",!0),d=ms("FIXED",!0),p=ms("DYNAMIC",!0),w=ms("DEFAULT",!0),E=ms("STORAGE",!0),A=ms("DISK",!0),h=ms("MEMORY",!0),y=ms("ALGORITHM",!0),T=ms("INSTANT",!0),m=ms("INPLACE",!0),I=ms("COPY",!0),N=ms("LOCK",!0),R=ms("NONE",!0),S=ms("SHARED",!0),_=ms("EXCLUSIVE",!0),O=ms("CHECK",!0),g=ms("NOCHECK",!0),x=ms("PRIMARY KEY",!0),U=ms("NOT",!0),M=ms("FOR",!0),k=ms("REPLICATION",!0),D=ms("FOREIGN KEY",!0),$=ms("MATCH FULL",!0),P=ms("MATCH PARTIAL",!0),F=ms("MATCH SIMPLE",!0),G=ms("ON",!0),H=ms("DELETE",!0),j=ms("UPDATE",!0),Y=ms("RESTRICT",!0),B=ms("CASCADE",!0),W=ms("SET NULL",!0),X=ms("NO ACTION",!0),V=ms("SET DEFAULT",!0),K=ms("CHARACTER",!0),q=ms("SET",!0),Z=ms("CHARSET",!0),z=ms("COLLATE",!0),Q=ms("AVG_ROW_LENGTH",!0),J=ms("KEY_BLOCK_SIZE",!0),rr=ms("MAX_ROWS",!0),tr=ms("MIN_ROWS",!0),er=ms("STATS_SAMPLE_PAGES",!0),nr=ms("CONNECTION",!0),sr=ms("COMPRESSION",!0),ur=ms("'",!1),or=ms("ZLIB",!0),ar=ms("LZ4",!0),ir=ms("ENGINE",!0),lr=ms("READ",!0),cr=ms("LOCAL",!0),fr=ms("LOW_PRIORITY",!0),br=ms("WRITE",!0),vr=ms("(",!1),Lr=ms(")",!1),Cr=ms("BTREE",!0),dr=ms("HASH",!0),pr=ms("WITH",!0),wr=ms("PARSER",!0),Er=ms("VISIBLE",!0),Ar=ms("INVISIBLE",!0),hr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;Ci[t]=t,e&&(Ci[e]=t),function(r){const t=fi(r);r.clear(),t.forEach(t=>r.add(t))}(Li)}),t},yr=ms("FIRST",!0),Tr=ms("ROWS",!0),mr=ms("ONLY",!0),Ir=ms("NEXT",!0),Nr=ms("=",!1),Rr=ms("DUPLICATE",!0),Sr=function(r,t){return li(r,t)},_r=ms("!",!1),Or=function(r){return r[0]+" "+r[2]},gr=ms(">=",!1),xr=ms(">",!1),Ur=ms("<=",!1),Mr=ms("<>",!1),kr=ms("<",!1),Dr=ms("!=",!1),$r=ms("+",!1),Pr=ms("-",!1),Fr=ms("*",!1),Gr=ms("/",!1),Hr=ms("%",!1),jr=function(r){return!0===si[r.toUpperCase()]},Yr=ms('"',!1),Br=/^[^"]/,Wr=Is(['"'],!0,!1),Xr=function(r){return r.join("")},Vr=/^[^']/,Kr=Is(["'"],!0,!1),qr=ms("`",!1),Zr=/^[^`]/,zr=Is(["`"],!0,!1),Qr=function(r,t){return r+t.join("")},Jr=/^[A-Za-z_]/,rt=Is([["A","Z"],["a","z"],"_"],!1,!1),tt=/^[A-Za-z0-9_]/,et=Is([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),nt=/^[A-Za-z0-9_:]/,st=Is([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),ut=ms(":",!1),ot=function(r){return{type:"string",value:r[1].join("")}},at=function(r,t){return{type:r.toLowerCase(),value:t[1].join("")}},it=/^[^"\\\0-\x1F\x7F]/,lt=Is(['"',"\\",["\0",""],""],!0,!1),ct=/^[^'\\]/,ft=Is(["'","\\"],!0,!1),bt=ms("\\'",!1),vt=ms('\\"',!1),Lt=ms("\\\\",!1),Ct=ms("\\/",!1),dt=ms("\\b",!1),pt=ms("\\f",!1),wt=ms("\\n",!1),Et=ms("\\r",!1),At=ms("\\t",!1),ht=ms("\\u",!1),yt=ms("\\",!1),Tt=ms("''",!1),mt=ms('""',!1),It=ms("``",!1),Nt=/^[\n\r]/,Rt=Is(["\n","\r"],!1,!1),St=ms(".",!1),_t=/^[0-9]/,Ot=Is([["0","9"]],!1,!1),gt=/^[0-9a-fA-F]/,xt=Is([["0","9"],["a","f"],["A","F"]],!1,!1),Ut=/^[eE]/,Mt=Is(["e","E"],!1,!1),kt=/^[+\-]/,Dt=Is(["+","-"],!1,!1),$t=ms("NULL",!0),Pt=ms("NOT NULL",!0),Ft=ms("TRUE",!0),Gt=ms("TO",!0),Ht=ms("FALSE",!0),jt=(ms("SHOW",!0),ms("DROP",!0)),Yt=ms("USE",!0),Bt=ms("ALTER",!0),Wt=ms("SELECT",!0),Xt=ms("CREATE",!0),Vt=ms("TEMPORARY",!0),Kt=ms("INSERT",!0),qt=ms("RECURSIVE",!1),Zt=ms("REPLACE",!0),zt=ms("RENAME",!0),Qt=ms("IGNORE",!0),Jt=(ms("EXPLAIN",!0),ms("PARTITION",!0)),re=ms("INTO",!0),te=ms("FROM",!0),ee=ms("UNLOCK",!0),ne=ms("AS",!0),se=ms("TABLE",!0),ue=ms("TABLES",!0),oe=ms("DATABASE",!0),ae=ms("SCHEME",!0),ie=ms("LEFT",!0),le=ms("RIGHT",!0),ce=ms("FULL",!0),fe=ms("INNER",!0),be=ms("JOIN",!0),ve=ms("OUTER",!0),Le=ms("OVER",!0),Ce=ms("UNION",!0),de=ms("VALUES",!0),pe=ms("USING",!0),we=ms("WHERE",!0),Ee=ms("GROUP",!0),Ae=ms("BY",!0),he=ms("ORDER",!0),ye=ms("HAVING",!0),Te=ms("FETCH",!0),me=ms("OFFSET",!0),Ie=ms("ASC",!0),Ne=ms("DESC",!0),Re=ms("ALL",!0),Se=ms("DISTINCT",!0),_e=ms("BETWEEN",!0),Oe=ms("IN",!0),ge=ms("IS",!0),xe=ms("LIKE",!0),Ue=ms("EXISTS",!0),Me=ms("AND",!0),ke=ms("OR",!0),De=ms("COUNT",!0),$e=ms("MAX",!0),Pe=ms("MIN",!0),Fe=ms("SUM",!0),Ge=ms("AVG",!0),He=ms("CALL",!0),je=ms("CASE",!0),Ye=ms("WHEN",!0),Be=ms("THEN",!0),We=ms("ELSE",!0),Xe=ms("END",!0),Ve=ms("CAST",!0),Ke=ms("CHAR",!0),qe=ms("VARCHAR",!0),Ze=ms("NUMERIC",!0),ze=ms("DECIMAL",!0),Qe=ms("SIGNED",!0),Je=ms("UNSIGNED",!0),rn=ms("INT",!0),tn=ms("ZEROFILL",!0),en=ms("INTEGER",!0),nn=ms("JSON",!0),sn=ms("SMALLINT",!0),un=ms("TINYINT",!0),on=ms("TINYTEXT",!0),an=ms("TEXT",!0),ln=ms("MEDIUMTEXT",!0),cn=ms("LONGTEXT",!0),fn=ms("BIGINT",!0),bn=ms("FLOAT",!0),vn=ms("DOUBLE",!0),Ln=ms("DATE",!0),Cn=ms("DATETIME",!0),dn=ms("TIME",!0),pn=ms("TIMESTAMP",!0),wn=ms("TRUNCATE",!0),En=ms("USER",!0),An=ms("CURRENT_DATE",!0),hn=(ms("ADDDATE",!0),ms("INTERVAL",!0)),yn=ms("YEAR",!0),Tn=ms("MONTH",!0),mn=ms("DAY",!0),In=ms("HOUR",!0),Nn=ms("MINUTE",!0),Rn=ms("SECOND",!0),Sn=ms("CURRENT_TIME",!0),_n=ms("CURRENT_TIMESTAMP",!0),On=ms("CURRENT_USER",!0),gn=ms("SESSION_USER",!0),xn=ms("SYSTEM_USER",!0),Un=ms("GLOBAL",!0),Mn=ms("SESSION",!0),kn=ms("PERSIST",!0),Dn=ms("PERSIST_ONLY",!0),$n=ms("@",!1),Pn=ms("@@",!1),Fn=ms("$",!1),Gn=ms("return",!0),Hn=ms(":=",!1),jn=ms("DUAL",!0),Yn=ms("ADD",!0),Bn=ms("COLUMN",!0),Wn=ms("INDEX",!0),Xn=ms("FULLTEXT",!0),Vn=ms("SPATIAL",!0),Kn=ms("COMMENT",!0),qn=ms("CONSTRAINT",!0),Zn=ms("REFERENCES",!0),zn=ms("SQL_CALC_FOUND_ROWS",!0),Qn=ms("SQL_CACHE",!0),Jn=ms("SQL_NO_CACHE",!0),rs=ms("SQL_SMALL_RESULT",!0),ts=ms("SQL_BIG_RESULT",!0),es=ms("SQL_BUFFER_RESULT",!0),ns=ms(",",!1),ss=ms("[",!1),us=ms("]",!1),os=ms(";",!1),as=ms("->",!1),is=ms("->>",!1),ls=ms("||",!1),cs=ms("&&",!1),fs=ms("/*",!1),bs=ms("*/",!1),vs=ms("--",!1),Ls=ms("#",!1),Cs={type:"any"},ds=/^[ \t\n\r]/,ps=Is([" ","\t","\n","\r"],!1,!1),ws=function(r){return{dataType:r}},Es=0,As=[{line:1,column:1}],hs=0,ys=[],Ts=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule]}function ms(r,t){return{type:"literal",text:r,ignoreCase:t}}function Is(r,t,e){return{type:"class",parts:r,inverted:t,ignoreCase:e}}function Ns(t){var e,n=As[t];if(n)return n;for(e=t-1;!As[e];)e--;for(n={line:(n=As[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return As[t]=n,n}function Rs(r,t){var e=Ns(r),n=Ns(t);return{start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Ss(r){Es<hs||(Es>hs&&(hs=Es,ys=[]),ys.push(r))}function _s(r,t,e){return new s(s.buildMessage(r,t),r,t,e)}function Os(){var r,t;return r=Es,Pa()!==u?((t=function(){var r,t,e,n,s,o,a,i;if(r=Es,(t=xs())!==u){if(e=[],n=Es,(s=Pa())!==u&&(o=Ma())!==u&&(a=Pa())!==u&&(i=xs())!==u?n=s=[s,o,a,i]:(Es=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Ma())!==u&&(a=Pa())!==u&&(i=xs())!==u?n=s=[s,o,a,i]:(Es=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return{tableList:Array.from(vi),columnList:fi(Li),ast:e}}(t,e),r=t):(Es=r,r=u)}else Es=r,r=u;return r}())===u&&(t=gs())===u&&(t=xs()),t!==u?(r,r=t):(Es=r,r=u)):(Es=r,r=u),r}function gs(){var t;return(t=function(){var r,t,e,n,s,o;r=Es,(t=To())!==u&&Pa()!==u&&(e=Mo())!==u&&Pa()!==u&&(n=fu())!==u?(r,a=t,l=e,(c=n)&&c.forEach(r=>vi.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(vi),columnList:fi(Li),ast:{type:a.toLowerCase(),keyword:l.toLowerCase(),name:c}},r=t):(Es=r,r=u);var a,l,c;r===u&&(r=Es,(t=To())!==u&&Pa()!==u&&(e=Ia())!==u&&Pa()!==u&&(n=Ku())!==u&&Pa()!==u&&Do()!==u&&Pa()!==u&&(s=Cu())!==u&&Pa()!==u?((o=function(){var r,t,e,n,s,o;r=Es,(t=Gs())===u&&(t=Hs());if(t!==u){for(e=[],n=Es,(s=Pa())!==u?((o=Gs())===u&&(o=Hs()),o!==u?n=s=[s,o]:(Es=n,n=u)):(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u?((o=Gs())===u&&(o=Hs()),o!==u?n=s=[s,o]:(Es=n,n=u)):(Es=n,n=u);e!==u?(r,t=i(t,e),r=t):(Es=r,r=u)}else Es=r,r=u;return r}())===u&&(o=null),o!==u&&Pa()!==u?(r,t=function(r,t,e,n,s){return{tableList:Array.from(vi),columnList:fi(Li),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:s}}}(t,e,n,s,o),r=t):(Es=r,r=u)):(Es=r,r=u));return r}())===u&&(t=function(){var t;(t=function(){var r,t,e,n,s,o,a,i,l,f;r=Es,(t=Io())!==u&&Pa()!==u?((e=No())===u&&(e=null),e!==u&&Pa()!==u&&Mo()!==u&&Pa()!==u?((n=ks())===u&&(n=null),n!==u&&Pa()!==u&&(s=fu())!==u&&Pa()!==u&&(o=function(){var r,t,e,n,s,o,a,i,l;if(r=Es,(t=xa())!==u)if(Pa()!==u)if((e=Ds())!==u){for(n=[],s=Es,(o=Pa())!==u&&(a=Oa())!==u&&(i=Pa())!==u&&(l=Ds())!==u?s=o=[o,a,i,l]:(Es=s,s=u);s!==u;)n.push(s),s=Es,(o=Pa())!==u&&(a=Oa())!==u&&(i=Pa())!==u&&(l=Ds())!==u?s=o=[o,a,i,l]:(Es=s,s=u);n!==u&&(s=Pa())!==u&&(o=Ua())!==u?(r,t=c(e,n),r=t):(Es=r,r=u)}else Es=r,r=u;else Es=r,r=u;else Es=r,r=u;return r}())!==u&&Pa()!==u?((a=function(){var r,t,e,n,s,o,a,i;if(r=Es,(t=qs())!==u){for(e=[],n=Es,(s=Pa())!==u?((o=Oa())===u&&(o=null),o!==u&&(a=Pa())!==u&&(i=qs())!==u?n=s=[s,o,a,i]:(Es=n,n=u)):(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u?((o=Oa())===u&&(o=null),o!==u&&(a=Pa())!==u&&(i=qs())!==u?n=s=[s,o,a,i]:(Es=n,n=u)):(Es=n,n=u);e!==u?(r,t=ii(t,e),r=t):(Es=r,r=u)}else Es=r,r=u;return r}())===u&&(a=null),a!==u&&Pa()!==u?((i=_o())===u&&(i=Ro()),i===u&&(i=null),i!==u&&Pa()!==u?((l=Uo())===u&&(l=null),l!==u&&Pa()!==u?((f=Ms())===u&&(f=null),f!==u?(r,b=t,v=e,L=n,d=o,p=a,w=i,E=l,A=f,(C=s)&&C.forEach(r=>vi.add(`create::${r.db}::${r.table}`)),t={tableList:Array.from(vi),columnList:fi(Li),ast:{type:b[0].toLowerCase(),keyword:"table",temporary:v&&v[0].toLowerCase(),if_not_exists:L,table:C,ignore_replace:w&&w[0].toLowerCase(),as:E&&E[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:d,table_options:p}},r=t):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u);var b,v,L,C,d,p,w,E,A;r===u&&(r=Es,(t=Io())!==u&&Pa()!==u?((e=No())===u&&(e=null),e!==u&&Pa()!==u&&Mo()!==u&&Pa()!==u?((n=ks())===u&&(n=null),n!==u&&Pa()!==u&&(s=fu())!==u&&Pa()!==u&&(o=function r(){var t,e;(t=function(){var r,t;r=Es,Zo()!==u&&Pa()!==u&&(t=fu())!==u?(r,r={type:"like",table:t}):(Es=r,r=u);return r}())===u&&(t=Es,xa()!==u&&Pa()!==u&&(e=r())!==u&&Pa()!==u&&Ua()!==u?(t,(n=e).parentheses=!0,t=n):(Es=t,t=u));var n;return t}())!==u?(r,t=function(r,t,e,n,s){return n&&n.forEach(r=>vi.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(vi),columnList:fi(Li),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e,table:n,like:s}}}(t,e,n,s,o),r=t):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u));return r}())===u&&(t=function(){var t,e,n,s,o,a;t=Es,(e=Io())!==u&&Pa()!==u?((n=function(){var t,e,n,s;t=Es,"database"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(oe));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="DATABASE"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Es,"scheme"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(ae));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="SCHEME"):(Es=t,t=u)):(Es=t,t=u);return t}()),n!==u&&Pa()!==u?((s=ks())===u&&(s=null),s!==u&&Pa()!==u&&(o=Ju())!==u&&Pa()!==u?((a=function(){var r,t,e,n,s,o;if(r=Es,(t=Ks())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Ks())!==u?n=s=[s,o]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Ks())!==u?n=s=[s,o]:(Es=n,n=u);e!==u?(r,t=i(t,e),r=t):(Es=r,r=u)}else Es=r,r=u;return r}())===u&&(a=null),a!==u?(t,l=e,c=s,f=o,b=a,e={tableList:Array.from(vi),columnList:fi(Li),ast:{type:l[0].toLowerCase(),keyword:"database",if_not_exists:c,database:f,create_definitions:b}},t=e):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u);var l,c,f,b;return t}());return t}())===u&&(t=function(){var t,e,n,s;t=Es,(e=function(){var t,e,n,s;t=Es,"truncate"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(wn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="TRUNCATE"):(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&Pa()!==u?((n=Mo())===u&&(n=null),n!==u&&Pa()!==u&&(s=fu())!==u?(t,o=e,a=n,(i=s)&&i.forEach(r=>vi.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(vi),columnList:fi(Li),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(Es=t,t=u)):(Es=t,t=u);var o,a,i;return t}())===u&&(t=function(){var r,t,e;r=Es,(t=So())!==u&&Pa()!==u&&Mo()!==u&&Pa()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=Es,(t=au())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=au())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=au())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,t=c(t,e),r=t):(Es=r,r=u)}else Es=r,r=u;return r}())!==u?(r,(n=e).forEach(r=>r.forEach(r=>r.table&&vi.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(vi),columnList:fi(Li),ast:{type:"rename",table:n}},r=t):(Es=r,r=u);var n;return r}())===u&&(t=function(){var t,e,n;t=Es,(e=function(){var t,e,n,s;t=Es,"call"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(He));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="CALL"):(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&Pa()!==u&&(n=Qa())!==u?(t,s=n,e={tableList:Array.from(vi),columnList:fi(Li),ast:{type:"call",expr:s}},t=e):(Es=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n;t=Es,(e=function(){var t,e,n,s;t=Es,"use"===r.substr(Es,3).toLowerCase()?(e=r.substr(Es,3),Es+=3):(e=u,0===Ts&&Ss(Yt));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&Pa()!==u&&(n=qu())!==u?(t,s=n,vi.add(`use::${s}::null`),e={tableList:Array.from(vi),columnList:fi(Li),ast:{type:"use",db:s}},t=e):(Es=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n,s;t=Es,(e=function(){var t,e,n,s;t=Es,"alter"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(Bt));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&Pa()!==u&&Mo()!==u&&Pa()!==u&&(n=fu())!==u&&Pa()!==u&&(s=function(){var r,t,e,n,s,o,a,i;if(r=Es,(t=Fs())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=Fs())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=Fs())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,t=c(t,e),r=t):(Es=r,r=u)}else Es=r,r=u;return r}())!==u?(t,a=s,(o=n)&&o.length>0&&o.forEach(r=>vi.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(vi),columnList:fi(Li),ast:{type:"alter",table:o,expr:a}},t=e):(Es=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n,s;t=Es,(e=xo())!==u&&Pa()!==u?((n=function(){var t,e,n,s;t=Es,"global"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(Un));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="GLOBAL"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Es,"session"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(Mn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="SESSION"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Es,"local"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(cr));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="LOCAL"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Es,"persist"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(kn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="PERSIST"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Es,"persist_only"===r.substr(Es,12).toLowerCase()?(e=r.substr(Es,12),Es+=12):(e=u,0===Ts&&Ss(Dn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="PERSIST_ONLY"):(Es=t,t=u)):(Es=t,t=u);return t}()),n===u&&(n=null),n!==u&&Pa()!==u&&(s=Xa())!==u?(t,o=n,(a=s).keyword=o,e={tableList:Array.from(vi),columnList:fi(Li),ast:{type:"set",expr:a}},t=e):(Es=t,t=u)):(Es=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n;t=Es,(e=function(){var t,e,n,s;t=Es,"lock"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(N));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&Pa()!==u&&ko()!==u&&Pa()!==u&&(n=function(){var r,t,e,n,s,o,a,i;if(r=Es,(t=Zs())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=Zs())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=Zs())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,t=ii(t,e),r=t):(Es=r,r=u)}else Es=r,r=u;return r}())!==u?(t,s=n,e={tableList:Array.from(vi),columnList:fi(Li),ast:{type:"lock",keyword:"tables",tables:s}},t=e):(Es=t,t=u);var s;return t}())===u&&(t=function(){var t,e;t=Es,(e=function(){var t,e,n,s;t=Es,"unlock"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(ee));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&Pa()!==u&&ko()!==u?(t,e={tableList:Array.from(vi),columnList:fi(Li),ast:{type:"unlock",keyword:"tables"}},t=e):(Es=t,t=u);return t}()),t}function xs(){var t;return(t=Ms())===u&&(t=function(){var r,t,e,n,s;r=Es,(t=mo())!==u&&Pa()!==u&&(e=fu())!==u&&Pa()!==u&&xo()!==u&&Pa()!==u&&(n=Tu())!==u&&Pa()!==u?((s=pu())===u&&(s=null),s!==u?(r,t=function(r,t,e){const n={};return r&&r.forEach(r=>{const{db:t,as:e,table:s,join:u}=r,o=u?"select":"update";t&&(n[s]=t),s&&vi.add(`${o}::${t}::${s}`)}),t&&t.forEach(r=>{if(r.table){const t=ci(r.table);vi.add(`update::${n[t]||null}::${t}`)}Li.add(`update::${r.table}::${r.column}`)}),{tableList:Array.from(vi),columnList:fi(Li),ast:{type:"update",table:r,set:t,where:e}}}(e,n,s),r=t):(Es=r,r=u)):(Es=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=Es,(t=Su())!==u&&Pa()!==u?((e=go())===u&&(e=null),e!==u&&Pa()!==u&&(n=Cu())!==u&&Pa()!==u?((s=Nu())===u&&(s=null),s!==u&&Pa()!==u&&xa()!==u&&Pa()!==u&&(o=function(){var r,t,e,n,s,o,a,i;if(r=Es,(t=zu())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=zu())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=zu())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,t=c(t,e),r=t):(Es=r,r=u)}else Es=r,r=u;return r}())!==u&&Pa()!==u&&Ua()!==u&&Pa()!==u&&(a=Iu())!==u&&Pa()!==u?((i=Ru())===u&&(i=null),i!==u?(r,t=function(r,t,e,n,s,u){if(t&&(vi.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(s)&&s.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>Li.add(`insert::${r}::${t}`))}return{tableList:Array.from(vi),columnList:fi(Li),ast:{type:r,table:[t],columns:n,values:s,partition:e,on_duplicate_update:u}}}(t,n,s,o,a,i),r=t):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=Es,(t=Su())!==u&&Pa()!==u?((e=_o())===u&&(e=null),e!==u&&Pa()!==u?((n=go())===u&&(n=null),n!==u&&Pa()!==u&&(s=Cu())!==u&&Pa()!==u?((o=Nu())===u&&(o=null),o!==u&&Pa()!==u&&(a=Iu())!==u&&Pa()!==u?((i=Ru())===u&&(i=null),i!==u?(r,t=function(r,t,e,n,s,u,o){n&&(vi.add(`insert::${n.db}::${n.table}`),Li.add(`insert::${n.table}::(.*)`),n.as=null);const a=[t,e].filter(r=>r).map(r=>r[0]&&r[0].toLowerCase()).join(" ");return{tableList:Array.from(vi),columnList:fi(Li),ast:{type:r,table:[n],columns:null,values:u,partition:s,prefix:a,on_duplicate_update:o}}}(t,e,n,s,o,a,i),r=t):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o;r=Es,(t=Su())!==u&&Pa()!==u&&go()!==u&&Pa()!==u&&(e=Cu())!==u&&Pa()!==u?((n=Nu())===u&&(n=null),n!==u&&Pa()!==u&&xo()!==u&&Pa()!==u&&(s=Tu())!==u&&Pa()!==u?((o=Ru())===u&&(o=null),o!==u?(r,a=t,l=n,c=s,f=o,(i=e)&&(vi.add(`insert::${i.db}::${i.table}`),Li.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(vi),columnList:fi(Li),ast:{type:a,table:[i],columns:null,partition:l,set:c,on_duplicate_update:f}},r=t):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u);var a,i,l,c,f;return r}())===u&&(t=function(){var t,e,n,s,o;t=Es,(e=function(){var t,e,n,s;t=Es,"delete"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(H));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&Pa()!==u?((n=fu())===u&&(n=null),n!==u&&Pa()!==u&&(s=ou())!==u&&Pa()!==u?((o=pu())===u&&(o=null),o!==u?(t,e=function(r,t,e){if(t&&t.forEach(r=>{const{db:t,as:e,table:n,join:s}=r,u=s?"select":"delete";n&&vi.add(`${u}::${t}::${n}`),s||Li.add(`delete::${n}::(.*)`)}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}]}return{tableList:Array.from(vi),columnList:fi(Li),ast:{type:"delete",table:r,from:t,where:e}}}(n,s,o),t=e):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=gs())===u&&(t=function(){var r,t;r=[],t=Wa();for(;t!==u;)r.push(t),t=Wa();return r}()),t}function Us(){var r,t;return r=Es,(t=Fo())!==u&&Pa()!==u&&Wo()!==u?(r,r=t="union all"):(Es=r,r=u),r===u&&(r=Es,(t=Fo())!==u&&(r,t="union"),r=t),r}function Ms(){var r,t,e,n,s,o,a,i;if(r=Es,(t=zs())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Us())!==u&&(a=Pa())!==u&&(i=zs())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Us())!==u&&(a=Pa())!==u&&(i=zs())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u&&(n=Pa())!==u?((s=Eu())===u&&(s=null),s!==u&&(o=Pa())!==u?((a=yu())===u&&(a=null),a!==u?(r,r=t=function(r,t,e,n){let s=r;for(let r=0;r<t.length;r++)s._next=t[r][3],s.set_op=t[r][1],s=s._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(vi),columnList:fi(Li),ast:r}}(t,e,s,a)):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u)}else Es=r,r=u;return r}function ks(){var t,e;return t=Es,"if"===r.substr(Es,2).toLowerCase()?(e=r.substr(Es,2),Es+=2):(e=u,0===Ts&&Ss(l)),e!==u&&Pa()!==u&&Qo()!==u&&Pa()!==u&&zo()!==u?(t,t=e="IF NOT EXISTS"):(Es=t,t=u),t}function Ds(){var r;return(r=Bs())===u&&(r=$s())===u&&(r=js())===u&&(r=Ys()),r}function $s(){var t,e,n,s,o,a,i,l,c,y,T,m,I,N,R,S,_,O,g,x,U,M,k,D,$;return t=Es,(e=Ku())!==u&&Pa()!==u&&(n=ei())!==u&&Pa()!==u?((s=function(){var t,e;t=Es,(e=function(){var t,e,n,s;t=Es,"not null"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(Pt));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&(t,e={type:"not null",value:"not null"});return t=e}())===u&&(s=io()),s===u&&(s=null),s!==u&&Pa()!==u?((o=function(){var r,t;r=Es,ho()!==u&&Pa()!==u?((t=ao())===u&&(t=ku()),t!==u?(r,r={type:"default",value:t}):(Es=r,r=u)):(Es=r,r=u);return r}())===u&&(o=null),o!==u&&Pa()!==u?("auto_increment"===r.substr(Es,14).toLowerCase()?(a=r.substr(Es,14),Es+=14):(a=u,0===Ts&&Ss(f)),a===u&&(a=null),a!==u&&Pa()!==u?(i=Es,"unique"===r.substr(Es,6).toLowerCase()?(l=r.substr(Es,6),Es+=6):(l=u,0===Ts&&Ss(b)),l===u&&("primary"===r.substr(Es,7).toLowerCase()?(l=r.substr(Es,7),Es+=7):(l=u,0===Ts&&Ss(v))),l===u&&(l=null),l!==u&&(c=Pa())!==u?("key"===r.substr(Es,3).toLowerCase()?(y=r.substr(Es,3),Es+=3):(y=u,0===Ts&&Ss(L)),y!==u?i=l=[l,c,y]:(Es=i,i=u)):(Es=i,i=u),i===u&&(i=null),i!==u&&(l=Pa())!==u?((c=Ha())===u&&(c=null),c!==u&&(y=Pa())!==u?((T=Ps())===u&&(T=null),T!==u&&Pa()!==u?((m=function(){var t,e,n;t=Es,"column_format"===r.substr(Es,13).toLowerCase()?(e=r.substr(Es,13),Es+=13):(e=u,0===Ts&&Ss(C));e!==u&&Pa()!==u?("fixed"===r.substr(Es,5).toLowerCase()?(n=r.substr(Es,5),Es+=5):(n=u,0===Ts&&Ss(d)),n===u&&("dynamic"===r.substr(Es,7).toLowerCase()?(n=r.substr(Es,7),Es+=7):(n=u,0===Ts&&Ss(p)),n===u&&("default"===r.substr(Es,7).toLowerCase()?(n=r.substr(Es,7),Es+=7):(n=u,0===Ts&&Ss(w)))),n!==u?(t,e={type:"column_format",value:n.toLowerCase()},t=e):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(m=null),m!==u&&Pa()!==u?((I=function(){var t,e,n;t=Es,"storage"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(E));e!==u&&Pa()!==u?("disk"===r.substr(Es,4).toLowerCase()?(n=r.substr(Es,4),Es+=4):(n=u,0===Ts&&Ss(A)),n===u&&("memory"===r.substr(Es,6).toLowerCase()?(n=r.substr(Es,6),Es+=6):(n=u,0===Ts&&Ss(h))),n!==u?(t,e={type:"storage",value:n.toLowerCase()},t=e):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(I=null),I!==u&&Pa()!==u?((N=Xs())===u&&(N=null),N!==u?(t,R=e,S=n,_=s,O=o,g=a,x=i,U=c,M=T,k=m,D=I,$=N,Li.add(`create::${R.table}::${R.column}`),_&&!_.value&&(_.value="null"),t=e={column:R,definition:S,nullable:_,default_val:O,auto_increment:g&&g.toLowerCase(),unique_or_primary:x&&`${x[0].toLowerCase()} ${x[2].toLowerCase()}`,comment:U,collate:M,column_format:k,storage:D,reference_definition:$,resource:"column"}):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u),t}function Ps(){var t,e;return t=Es,function(){var t,e,n,s;t=Es,"collate"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(z));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="COLLATE"):(Es=t,t=u)):(Es=t,t=u);return t}()!==u&&Pa()!==u&&(e=Ju())!==u?(t,t={type:"collate",value:e}):(Es=t,t=u),t}function Fs(){var t;return(t=function(){var r,t;r=Es,Ta()!==u&&Pa()!==u&&(t=Bs())!==u?(r,r={action:"add",create_definitions:t,resource:"constraint",type:"alter"}):(Es=r,r=u);return r}())===u&&(t=function(){var t,e,n,s;t=Es,(e=To())!==u&&Pa()!==u?("check"===r.substr(Es,5).toLowerCase()?(n=r.substr(Es,5),Es+=5):(n=u,0===Ts&&Ss(O)),n!==u&&Pa()!==u&&(s=Ju())!==u?(t,e={action:"drop",constraint:s,keyword:n.toLowerCase(),resource:"constraint",type:"alter"},t=e):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Es,jo()!==u&&Pa()!==u?("check"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(O)),e!==u&&Pa()!==u?("check"===r.substr(Es,5).toLowerCase()?(n=r.substr(Es,5),Es+=5):(n=u,0===Ts&&Ss(O)),n!==u&&Pa()!==u&&Sa()!==u&&Pa()!==u&&(s=Ju())!==u?(t,t={action:"with",constraint:s,keyword:"check check",resource:"constraint",type:"alter"}):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=function(){var t,e,n;t=Es,"nocheck"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(g));e!==u&&Pa()!==u&&Sa()!==u&&Pa()!==u&&(n=Ju())!==u?(t,t=e={action:"nocheck",constraint:n,resource:"constraint",type:"alter"}):(Es=t,t=u);return t}())===u&&(t=function(){var r,t,e,n;r=Es,(t=Ta())!==u&&Pa()!==u?((e=ma())===u&&(e=null),e!==u&&Pa()!==u&&(n=$s())!==u?(r,s=e,o=n,t={action:"add",...o,keyword:s,resource:"column",type:"alter"},r=t):(Es=r,r=u)):(Es=r,r=u);var s,o;return r}())===u&&(t=function(){var r,t,e;r=Es,To()!==u&&Pa()!==u?((t=ma())===u&&(t=null),t!==u&&Pa()!==u&&(e=Ku())!==u?(r,r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(Es=r,r=u)):(Es=r,r=u);return r}())===u&&(t=function(){var r,t,e;r=Es,(t=Ta())!==u&&Pa()!==u&&(e=js())!==u?(r,n=e,t={action:"add",type:"alter",...n},r=t):(Es=r,r=u);var n;return r}())===u&&(t=function(){var r,t,e;r=Es,(t=Ta())!==u&&Pa()!==u&&(e=Ys())!==u?(r,n=e,t={action:"add",type:"alter",...n},r=t):(Es=r,r=u);var n;return r}())===u&&(t=function(){var r,t,e,n;r=Es,(t=So())!==u&&Pa()!==u?((e=yo())===u&&(e=Uo()),e===u&&(e=null),e!==u&&Pa()!==u&&(n=qu())!==u?(r,o=n,t={action:"rename",type:"alter",resource:"table",keyword:(s=e)&&s[0].toLowerCase(),table:o},r=t):(Es=r,r=u)):(Es=r,r=u);var s,o;return r}())===u&&(t=Gs())===u&&(t=Hs()),t}function Gs(){var t,e,n,s;return t=Es,"algorithm"===r.substr(Es,9).toLowerCase()?(e=r.substr(Es,9),Es+=9):(e=u,0===Ts&&Ss(y)),e!==u&&Pa()!==u?((n=ya())===u&&(n=null),n!==u&&Pa()!==u?("default"===r.substr(Es,7).toLowerCase()?(s=r.substr(Es,7),Es+=7):(s=u,0===Ts&&Ss(w)),s===u&&("instant"===r.substr(Es,7).toLowerCase()?(s=r.substr(Es,7),Es+=7):(s=u,0===Ts&&Ss(T)),s===u&&("inplace"===r.substr(Es,7).toLowerCase()?(s=r.substr(Es,7),Es+=7):(s=u,0===Ts&&Ss(m)),s===u&&("copy"===r.substr(Es,4).toLowerCase()?(s=r.substr(Es,4),Es+=4):(s=u,0===Ts&&Ss(I))))),s!==u?(t,t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:s}):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u),t}function Hs(){var t,e,n,s;return t=Es,"lock"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(N)),e!==u&&Pa()!==u?((n=ya())===u&&(n=null),n!==u&&Pa()!==u?("default"===r.substr(Es,7).toLowerCase()?(s=r.substr(Es,7),Es+=7):(s=u,0===Ts&&Ss(w)),s===u&&("none"===r.substr(Es,4).toLowerCase()?(s=r.substr(Es,4),Es+=4):(s=u,0===Ts&&Ss(R)),s===u&&("shared"===r.substr(Es,6).toLowerCase()?(s=r.substr(Es,6),Es+=6):(s=u,0===Ts&&Ss(S)),s===u&&("exclusive"===r.substr(Es,9).toLowerCase()?(s=r.substr(Es,9),Es+=9):(s=u,0===Ts&&Ss(_))))),s!==u?(t,t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:s}):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u),t}function js(){var r,t,e,n,s,o,a,i;return r=Es,(t=Ia())===u&&(t=Na()),t!==u&&Pa()!==u?((e=zu())===u&&(e=null),e!==u&&Pa()!==u?((n=iu())===u&&(n=null),n!==u&&Pa()!==u&&(s=ru())!==u&&Pa()!==u?((o=lu())===u&&(o=null),o!==u&&Pa()!==u?(r,a=n,i=o,r=t={index:e,definition:s,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u),r}function Ys(){var t,e,n,s,o,a,i,l,c;return t=Es,(e=function(){var t,e,n,s;t=Es,"fulltext"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(Xn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="FULLTEXT"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(e=function(){var t,e,n,s;t=Es,"spatial"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(Vn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="SPATIAL"):(Es=t,t=u)):(Es=t,t=u);return t}()),e!==u&&Pa()!==u?((n=Ia())===u&&(n=Na()),n===u&&(n=null),n!==u&&Pa()!==u?((s=zu())===u&&(s=null),s!==u&&Pa()!==u&&(o=ru())!==u&&Pa()!==u?((a=lu())===u&&(a=null),a!==u&&Pa()!==u?(t,i=e,c=a,t=e={index:s,definition:o,keyword:(l=n)&&`${i.toLowerCase()} ${l.toLowerCase()}`||i.toLowerCase(),index_options:c,resource:"index"}):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u),t}function Bs(){var t;return(t=function(){var t,e,n,s,o,a;t=Es,(e=Ws())===u&&(e=null);e!==u&&Pa()!==u?("primary key"===r.substr(Es,11).toLowerCase()?(n=r.substr(Es,11),Es+=11):(n=u,0===Ts&&Ss(x)),n!==u&&Pa()!==u?((s=iu())===u&&(s=null),s!==u&&Pa()!==u&&(o=ru())!==u&&Pa()!==u?((a=lu())===u&&(a=null),a!==u?(t,l=n,c=s,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:l.toLowerCase(),keyword:i&&i.keyword,index_type:c,resource:"constraint",index_options:b},t=e):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u);var i,l,c,f,b;return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l;t=Es,(e=Ws())===u&&(e=null);e!==u&&Pa()!==u&&(n=function(){var t,e,n,s;t=Es,"unique"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(b));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="UNIQUE"):(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&Pa()!==u?((s=Ia())===u&&(s=Na()),s===u&&(s=null),s!==u&&Pa()!==u?((o=zu())===u&&(o=null),o!==u&&Pa()!==u?((a=iu())===u&&(a=null),a!==u&&Pa()!==u&&(i=ru())!==u&&Pa()!==u?((l=lu())===u&&(l=null),l!==u?(t,f=n,v=s,L=o,C=a,d=i,p=l,e={constraint:(c=e)&&c.constraint,definition:d,constraint_type:v&&`${f.toLowerCase()} ${v.toLowerCase()}`||f.toLowerCase(),keyword:c&&c.keyword,index_type:C,index:L,resource:"constraint",index_options:p},t=e):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u);var c,f,v,L,C,d,p;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=Es,(e=Ws())===u&&(e=null);e!==u&&Pa()!==u?("foreign key"===r.substr(Es,11).toLowerCase()?(n=r.substr(Es,11),Es+=11):(n=u,0===Ts&&Ss(D)),n!==u&&Pa()!==u?((s=zu())===u&&(s=null),s!==u&&Pa()!==u&&(o=ru())!==u&&Pa()!==u?((a=Xs())===u&&(a=null),a!==u?(t,l=n,c=s,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:l,keyword:i&&i.keyword,index:c,resource:"constraint",reference_definition:b},t=e):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u);var i,l,c,f,b;return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f;t=Es,(e=Ws())===u&&(e=null);e!==u&&Pa()!==u?("check"===r.substr(Es,5).toLowerCase()?(n=r.substr(Es,5),Es+=5):(n=u,0===Ts&&Ss(O)),n!==u&&Pa()!==u?(s=Es,"not"===r.substr(Es,3).toLowerCase()?(o=r.substr(Es,3),Es+=3):(o=u,0===Ts&&Ss(U)),o!==u&&(a=Pa())!==u?("for"===r.substr(Es,3).toLowerCase()?(i=r.substr(Es,3),Es+=3):(i=u,0===Ts&&Ss(M)),i!==u&&(l=Pa())!==u?("replication"===r.substr(Es,11).toLowerCase()?(c=r.substr(Es,11),Es+=11):(c=u,0===Ts&&Ss(k)),c!==u&&(f=Pa())!==u?s=o=[o,a,i,l,c,f]:(Es=s,s=u)):(Es=s,s=u)):(Es=s,s=u),s===u&&(s=null),s!==u&&(o=xa())!==u&&(a=Pa())!==u&&(i=ku())!==u&&(l=Pa())!==u&&(c=Ua())!==u?(t,b=e,v=s,L=i,e={constraint_type:n.toLowerCase(),keyword:b&&b.keyword,constraint:b&&b.constraint,index_type:v&&{keyword:"not for replication"},definition:[L],resource:"constraint"},t=e):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u);var b,v,L;return t}()),t}function Ws(){var r,t,e,n;return r=Es,(t=Sa())!==u&&Pa()!==u?((e=qu())===u&&(e=null),e!==u?(r,n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(Es=r,r=u)):(Es=r,r=u),r}function Xs(){var t,e,n,s,o,a,i,l,c,f;return t=Es,(e=function(){var t,e,n,s;t=Es,"references"===r.substr(Es,10).toLowerCase()?(e=r.substr(Es,10),Es+=10):(e=u,0===Ts&&Ss(Zn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="REFERENCES"):(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&Pa()!==u&&(n=fu())!==u&&Pa()!==u&&(s=ru())!==u&&Pa()!==u?("match full"===r.substr(Es,10).toLowerCase()?(o=r.substr(Es,10),Es+=10):(o=u,0===Ts&&Ss($)),o===u&&("match partial"===r.substr(Es,13).toLowerCase()?(o=r.substr(Es,13),Es+=13):(o=u,0===Ts&&Ss(P)),o===u&&("match simple"===r.substr(Es,12).toLowerCase()?(o=r.substr(Es,12),Es+=12):(o=u,0===Ts&&Ss(F)))),o===u&&(o=null),o!==u&&Pa()!==u?((a=Vs())===u&&(a=null),a!==u&&Pa()!==u?((i=Vs())===u&&(i=null),i!==u?(t,l=o,c=a,f=i,t=e={definition:s,table:n,keyword:e.toLowerCase(),match:l&&l.toLowerCase(),on_delete:c,on_update:f}):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u),t}function Vs(){var t,e,n,s,o,a;return t=Es,"on"===r.substr(Es,2).toLowerCase()?(e=r.substr(Es,2),Es+=2):(e=u,0===Ts&&Ss(G)),e!==u&&Fa()!==u?("delete"===r.substr(Es,6).toLowerCase()?(n=r.substr(Es,6),Es+=6):(n=u,0===Ts&&Ss(H)),n===u&&("update"===r.substr(Es,6).toLowerCase()?(n=r.substr(Es,6),Es+=6):(n=u,0===Ts&&Ss(j))),n!==u&&Fa()!==u&&(s=function(){var t,e;t=Es,"restrict"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(Y));e===u&&("cascade"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(B)),e===u&&("set null"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(W)),e===u&&("no action"===r.substr(Es,9).toLowerCase()?(e=r.substr(Es,9),Es+=9):(e=u,0===Ts&&Ss(X)),e===u&&("set default"===r.substr(Es,11).toLowerCase()?(e=r.substr(Es,11),Es+=11):(e=u,0===Ts&&Ss(V))))));e!==u&&(t,e=e.toLowerCase());return t=e}())!==u?(t,o=n,a=s,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(Es=t,t=u)):(Es=t,t=u),t}function Ks(){var t,e,n,s,o,a,i,l,c;return t=Es,(e=ho())===u&&(e=null),e!==u&&Pa()!==u?((n=function(){var t,e,n;return t=Es,"character"===r.substr(Es,9).toLowerCase()?(e=r.substr(Es,9),Es+=9):(e=u,0===Ts&&Ss(K)),e!==u&&Pa()!==u?("set"===r.substr(Es,3).toLowerCase()?(n=r.substr(Es,3),Es+=3):(n=u,0===Ts&&Ss(q)),n!==u?(t,t=e="CHARACTER SET"):(Es=t,t=u)):(Es=t,t=u),t}())===u&&("charset"===r.substr(Es,7).toLowerCase()?(n=r.substr(Es,7),Es+=7):(n=u,0===Ts&&Ss(Z)),n===u&&("collate"===r.substr(Es,7).toLowerCase()?(n=r.substr(Es,7),Es+=7):(n=u,0===Ts&&Ss(z)))),n!==u&&Pa()!==u?((s=ya())===u&&(s=null),s!==u&&Pa()!==u&&(o=Ju())!==u?(t,i=n,l=s,c=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:l,value:c}):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u),t}function qs(){var t,e,n,s,o,a,i,l,c;return t=Es,"auto_increment"===r.substr(Es,14).toLowerCase()?(e=r.substr(Es,14),Es+=14):(e=u,0===Ts&&Ss(f)),e===u&&("avg_row_length"===r.substr(Es,14).toLowerCase()?(e=r.substr(Es,14),Es+=14):(e=u,0===Ts&&Ss(Q)),e===u&&("key_block_size"===r.substr(Es,14).toLowerCase()?(e=r.substr(Es,14),Es+=14):(e=u,0===Ts&&Ss(J)),e===u&&("max_rows"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(rr)),e===u&&("min_rows"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(tr)),e===u&&("stats_sample_pages"===r.substr(Es,18).toLowerCase()?(e=r.substr(Es,18),Es+=18):(e=u,0===Ts&&Ss(er))))))),e!==u&&Pa()!==u?((n=ya())===u&&(n=null),n!==u&&Pa()!==u&&(s=vo())!==u?(t,l=n,c=s,t=e={keyword:e.toLowerCase(),symbol:l,value:c.value}):(Es=t,t=u)):(Es=t,t=u),t===u&&(t=Ks())===u&&(t=Es,(e=Ra())===u&&("connection"===r.substr(Es,10).toLowerCase()?(e=r.substr(Es,10),Es+=10):(e=u,0===Ts&&Ss(nr))),e!==u&&Pa()!==u?((n=ya())===u&&(n=null),n!==u&&Pa()!==u&&(s=lo())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,s)):(Es=t,t=u)):(Es=t,t=u),t===u&&(t=Es,"compression"===r.substr(Es,11).toLowerCase()?(e=r.substr(Es,11),Es+=11):(e=u,0===Ts&&Ss(sr)),e!==u&&Pa()!==u?((n=ya())===u&&(n=null),n!==u&&Pa()!==u?(s=Es,39===r.charCodeAt(Es)?(o="'",Es++):(o=u,0===Ts&&Ss(ur)),o!==u?("zlib"===r.substr(Es,4).toLowerCase()?(a=r.substr(Es,4),Es+=4):(a=u,0===Ts&&Ss(or)),a===u&&("lz4"===r.substr(Es,3).toLowerCase()?(a=r.substr(Es,3),Es+=3):(a=u,0===Ts&&Ss(ar)),a===u&&("none"===r.substr(Es,4).toLowerCase()?(a=r.substr(Es,4),Es+=4):(a=u,0===Ts&&Ss(R)))),a!==u?(39===r.charCodeAt(Es)?(i="'",Es++):(i=u,0===Ts&&Ss(ur)),i!==u?s=o=[o,a,i]:(Es=s,s=u)):(Es=s,s=u)):(Es=s,s=u),s!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,s)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u),t===u&&(t=Es,"engine"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(ir)),e!==u&&Pa()!==u?((n=ya())===u&&(n=null),n!==u&&Pa()!==u&&(s=Ju())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,s)):(Es=t,t=u)):(Es=t,t=u)))),t}function Zs(){var t,e,n,s,o;return t=Es,(e=vu())!==u&&Pa()!==u&&(n=function(){var t,e,n;return t=Es,"read"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(lr)),e!==u&&Pa()!==u?("local"===r.substr(Es,5).toLowerCase()?(n=r.substr(Es,5),Es+=5):(n=u,0===Ts&&Ss(cr)),n===u&&(n=null),n!==u?(t,t=e={type:"read",suffix:n&&"local"}):(Es=t,t=u)):(Es=t,t=u),t===u&&(t=Es,"low_priority"===r.substr(Es,12).toLowerCase()?(e=r.substr(Es,12),Es+=12):(e=u,0===Ts&&Ss(fr)),e===u&&(e=null),e!==u&&Pa()!==u?("write"===r.substr(Es,5).toLowerCase()?(n=r.substr(Es,5),Es+=5):(n=u,0===Ts&&Ss(br)),n!==u?(t,t=e={type:"write",prefix:e&&"low_priority"}):(Es=t,t=u)):(Es=t,t=u)),t}())!==u?(t,s=e,o=n,vi.add(`lock::${s.db}::${s.table}`),t=e={table:s,lock_type:o}):(Es=t,t=u),t}function zs(){var t,e,n,s,o,a,i;return(t=tu())===u&&(t=Es,e=Es,40===r.charCodeAt(Es)?(n="(",Es++):(n=u,0===Ts&&Ss(vr)),n!==u&&(s=Pa())!==u&&(o=zs())!==u&&(a=Pa())!==u?(41===r.charCodeAt(Es)?(i=")",Es++):(i=u,0===Ts&&Ss(Lr)),i!==u?e=n=[n,s,o,a,i]:(Es=e,e=u)):(Es=e,e=u),e!==u&&(t,e={...e[2],parentheses_symbol:!0}),t=e),t}function Qs(){var t,e,n,s,o,a,i,l,f;if(t=Es,jo()!==u)if(Pa()!==u)if((e=Js())!==u){for(n=[],s=Es,(o=Pa())!==u&&(a=Oa())!==u&&(i=Pa())!==u&&(l=Js())!==u?s=o=[o,a,i,l]:(Es=s,s=u);s!==u;)n.push(s),s=Es,(o=Pa())!==u&&(a=Oa())!==u&&(i=Pa())!==u&&(l=Js())!==u?s=o=[o,a,i,l]:(Es=s,s=u);n!==u?(t,t=c(e,n)):(Es=t,t=u)}else Es=t,t=u;else Es=t,t=u;else Es=t,t=u;return t===u&&(t=Es,Pa()!==u&&jo()!==u&&(e=Pa())!==u&&(n=function(){var t,e,n,s;t=Es,"RECURSIVE"===r.substr(Es,9)?(e="RECURSIVE",Es+=9):(e=u,0===Ts&&Ss(qt));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&(s=Pa())!==u&&(o=Js())!==u?(t,(f=o).recursive=!0,t=[f]):(Es=t,t=u)),t}function Js(){var r,t,e,n,s;return r=Es,(t=lo())===u&&(t=Ju()),t!==u&&Pa()!==u?((e=ru())===u&&(e=null),e!==u&&Pa()!==u&&Uo()!==u&&Pa()!==u&&xa()!==u&&Pa()!==u&&(n=Ms())!==u&&Pa()!==u&&Ua()!==u?(r,"string"==typeof(s=t)&&(s={type:"default",value:s}),r=t={name:s,stmt:n,columns:e}):(Es=r,r=u)):(Es=r,r=u),r}function ru(){var r,t;return r=Es,xa()!==u&&Pa()!==u&&(t=wu())!==u&&Pa()!==u&&Ua()!==u?(r,r=t):(Es=r,r=u),r}function tu(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C,d,p,w,E,A,h,y;return t=Es,Pa()!==u?((e=Qs())===u&&(e=null),e!==u&&Pa()!==u&&function(){var t,e,n,s;t=Es,"select"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(Wt));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}()!==u&&Fa()!==u?((n=function(){var r,t,e,n,s,o;if(r=Es,(t=eu())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=eu())!==u?n=s=[s,o]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=eu())!==u?n=s=[s,o]:(Es=n,n=u);e!==u?(r,t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(Es=r,r=u)}else Es=r,r=u;return r}())===u&&(n=null),n!==u&&Pa()!==u?((s=Xo())===u&&(s=null),s!==u&&Pa()!==u&&(o=nu())!==u&&Pa()!==u?((a=ou())===u&&(a=null),a!==u&&Pa()!==u?((i=pu())===u&&(i=null),i!==u&&Pa()!==u?((l=function(){var t,e,n;t=Es,(e=function(){var t,e,n,s;t=Es,"group"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(Ee));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&Pa()!==u&&Yo()!==u&&Pa()!==u&&(n=Ou())!==u?(t,e=n.value,t=e):(Es=t,t=u);return t}())===u&&(l=null),l!==u&&Pa()!==u?((c=function(){var t,e;t=Es,function(){var t,e,n,s;t=Es,"having"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(ye));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}()!==u&&Pa()!==u&&(e=Du())!==u?(t,t=e):(Es=t,t=u);return t}())===u&&(c=null),c!==u&&Pa()!==u?((f=Eu())===u&&(f=null),f!==u&&Pa()!==u?((b=yu())===u&&(b=null),b!==u?(t,v=e,L=n,C=s,d=o,w=i,E=l,A=c,h=f,y=b,(p=a)&&p.forEach(r=>r.table&&vi.add(`select::${r.db}::${r.table}`)),t={with:v,type:"select",options:L,distinct:C,columns:d,from:p,where:w,groupby:E,having:A,orderby:h,limit:y}):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u),t}function eu(){var t,e;return t=Es,(e=function(){var t;"sql_calc_found_rows"===r.substr(Es,19).toLowerCase()?(t=r.substr(Es,19),Es+=19):(t=u,0===Ts&&Ss(zn));return t}())===u&&((e=function(){var t;"sql_cache"===r.substr(Es,9).toLowerCase()?(t=r.substr(Es,9),Es+=9):(t=u,0===Ts&&Ss(Qn));return t}())===u&&(e=function(){var t;"sql_no_cache"===r.substr(Es,12).toLowerCase()?(t=r.substr(Es,12),Es+=12):(t=u,0===Ts&&Ss(Jn));return t}()),e===u&&(e=function(){var t;"sql_big_result"===r.substr(Es,14).toLowerCase()?(t=r.substr(Es,14),Es+=14):(t=u,0===Ts&&Ss(ts));return t}())===u&&(e=function(){var t;"sql_small_result"===r.substr(Es,16).toLowerCase()?(t=r.substr(Es,16),Es+=16):(t=u,0===Ts&&Ss(rs));return t}())===u&&(e=function(){var t;"sql_buffer_result"===r.substr(Es,17).toLowerCase()?(t=r.substr(Es,17),Es+=17):(t=u,0===Ts&&Ss(es));return t}())),e!==u&&(t,e=e),t=e}function nu(){var r,t,e,n,s,o,a,i,l,f;if(r=Es,(t=Wo())===u&&(t=Es,(e=ga())!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t===u&&(t=ga())),t!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=su())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=su())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,l=t,f=e,Li.add("select::null::(.*)"),r=t=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},ii(l[0],f)):l[0]):(Es=r,r=u)}else Es=r,r=u;if(r===u)if(r=Es,(t=su())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=su())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=su())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,r=t=c(t,e)):(Es=r,r=u)}else Es=r,r=u;return r}function su(){var r,t,e,n,s;return r=Es,t=Es,(e=qu())!==u&&(n=Pa())!==u&&(s=_a())!==u?t=e=[e,n,s]:(Es=t,t=u),t===u&&(t=null),t!==u&&(e=Pa())!==u&&(n=ga())!==u?(r,r=t=function(r){const t=r&&r[0]||null;return Li.add(`select::${t}::(.*)`),{expr:{type:"column_ref",table:t,column:"*"},as:null}}(t)):(Es=r,r=u),r===u&&(r=Es,(t=function(){var r,t,e,n,s,o,a,i;if(r=Es,(t=ku())!==u){if(e=[],n=Es,(s=Pa())!==u?((o=Jo())===u&&(o=ra())===u&&(o=$a()),o!==u&&(a=Pa())!==u&&(i=ku())!==u?n=s=[s,o,a,i]:(Es=n,n=u)):(Es=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Es,(s=Pa())!==u?((o=Jo())===u&&(o=ra())===u&&(o=$a()),o!==u&&(a=Pa())!==u&&(i=ku())!==u?n=s=[s,o,a,i]:(Es=n,n=u)):(Es=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=t.length;let n=t[e-1][3];for(let s=e-1;s>=0;s--){const e=0===s?r:t[s-1][3];n=oi(t[s][1],e,n)}return n}(t,e),r=t):(Es=r,r=u)}else Es=r,r=u;return r}())===u&&(t=ku()),t!==u&&(e=Pa())!==u?((n=uu())===u&&(n=null),n!==u?(r,r=t={expr:t,as:n}):(Es=r,r=u)):(Es=r,r=u)),r}function uu(){var r,t,e;return r=Es,(t=Uo())!==u&&Pa()!==u&&(e=function(){var r,t;r=Es,(t=Ju())!==u?(Es,(function(r){if(!0===si[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return!1}(t)?u:void 0)!==u?(r,r=t=t):(Es=r,r=u)):(Es=r,r=u);r===u&&(r=Es,(t=Zu())!==u&&(r,t=t),r=t);return r}())!==u?(r,r=t=e):(Es=r,r=u),r===u&&(r=Es,(t=Uo())===u&&(t=null),t!==u&&Pa()!==u&&(e=qu())!==u?(r,r=t=e):(Es=r,r=u)),r}function ou(){var t,e;return t=Es,function(){var t,e,n,s;t=Es,"from"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(te));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}()!==u&&Pa()!==u&&(e=fu())!==u?(t,t=e):(Es=t,t=u),t}function au(){var r,t,e;return r=Es,(t=Cu())!==u&&Pa()!==u&&yo()!==u&&Pa()!==u&&(e=Cu())!==u?(r,r=t=[t,e]):(Es=r,r=u),r}function iu(){var t,e;return t=Es,Ho()!==u&&Pa()!==u?("btree"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(Cr)),e===u&&("hash"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(dr))),e!==u?(t,t={keyword:"using",type:e.toLowerCase()}):(Es=t,t=u)):(Es=t,t=u),t}function lu(){var r,t,e,n,s,o;if(r=Es,(t=cu())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=cu())!==u?n=s=[s,o]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=cu())!==u?n=s=[s,o]:(Es=n,n=u);e!==u?(r,r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(Es=r,r=u)}else Es=r,r=u;return r}function cu(){var t,e,n,s,o,a;return t=Es,(e=function(){var t,e,n,s;t=Es,"key_block_size"===r.substr(Es,14).toLowerCase()?(e=r.substr(Es,14),Es+=14):(e=u,0===Ts&&Ss(J));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="KEY_BLOCK_SIZE"):(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&Pa()!==u?((n=ya())===u&&(n=null),n!==u&&Pa()!==u&&(s=vo())!==u?(t,o=n,a=s,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(Es=t,t=u)):(Es=t,t=u),t===u&&(t=iu())===u&&(t=Es,"with"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(pr)),e!==u&&Pa()!==u?("parser"===r.substr(Es,6).toLowerCase()?(n=r.substr(Es,6),Es+=6):(n=u,0===Ts&&Ss(wr)),n!==u&&Pa()!==u&&(s=Ju())!==u?(t,t=e={type:"with parser",expr:s}):(Es=t,t=u)):(Es=t,t=u),t===u&&(t=Es,"visible"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(Er)),e===u&&("invisible"===r.substr(Es,9).toLowerCase()?(e=r.substr(Es,9),Es+=9):(e=u,0===Ts&&Ss(Ar))),e!==u&&(t,e=function(r){return{type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===u&&(t=Ha()))),t}function fu(){var r,t,e,n;if(r=Es,(t=vu())!==u){for(e=[],n=bu();n!==u;)e.push(n),n=bu();e!==u?(r,r=t=hr(t,e)):(Es=r,r=u)}else Es=r,r=u;return r}function bu(){var r,t,e;return r=Es,Pa()!==u&&(t=Oa())!==u&&Pa()!==u&&(e=vu())!==u?(r,r=e):(Es=r,r=u),r===u&&(r=Es,Pa()!==u&&(t=function(){var r,t,e,n,s,o,a,i,l,c,f;if(r=Es,(t=Lu())!==u)if(Pa()!==u)if((e=vu())!==u)if(Pa()!==u)if((n=Ho())!==u)if(Pa()!==u)if(xa()!==u)if(Pa()!==u)if((s=Ju())!==u){for(o=[],a=Es,(i=Pa())!==u&&(l=Oa())!==u&&(c=Pa())!==u&&(f=Ju())!==u?a=i=[i,l,c,f]:(Es=a,a=u);a!==u;)o.push(a),a=Es,(i=Pa())!==u&&(l=Oa())!==u&&(c=Pa())!==u&&(f=Ju())!==u?a=i=[i,l,c,f]:(Es=a,a=u);o!==u&&(a=Pa())!==u&&(i=Ua())!==u?(r,b=t,L=s,C=o,(v=e).join=b,v.using=ii(L,C),r=t=v):(Es=r,r=u)}else Es=r,r=u;else Es=r,r=u;else Es=r,r=u;else Es=r,r=u;else Es=r,r=u;else Es=r,r=u;else Es=r,r=u;else Es=r,r=u;else Es=r,r=u;var b,v,L,C;r===u&&(r=Es,(t=Lu())!==u&&Pa()!==u&&(e=vu())!==u&&Pa()!==u?((n=du())===u&&(n=null),n!==u?(r,t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(Es=r,r=u)):(Es=r,r=u),r===u&&(r=Es,(t=Lu())!==u&&Pa()!==u&&(e=xa())!==u&&Pa()!==u&&(n=Ms())!==u&&Pa()!==u&&Ua()!==u&&Pa()!==u?((s=uu())===u&&(s=null),s!==u&&(o=Pa())!==u?((a=du())===u&&(a=null),a!==u?(r,t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,s,a),r=t):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u)));return r}())!==u?(r,r=t):(Es=r,r=u)),r}function vu(){var t,e,n,s,o,a;return t=Es,(e=function(){var t;"dual"===r.substr(Es,4).toLowerCase()?(t=r.substr(Es,4),Es+=4):(t=u,0===Ts&&Ss(jn));return t}())!==u&&(t,e={type:"dual"}),(t=e)===u&&(t=Es,(e=Cu())!==u&&Pa()!==u?((n=uu())===u&&(n=null),n!==u?(t,a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(Es=t,t=u)):(Es=t,t=u),t===u&&(t=Es,(e=xa())!==u&&Pa()!==u&&(n=Ms())!==u&&Pa()!==u&&Ua()!==u&&Pa()!==u?((s=uu())===u&&(s=null),s!==u?(t,t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,s)):(Es=t,t=u)):(Es=t,t=u))),t}function Lu(){var t,e,n,s;return t=Es,(e=function(){var t,e,n,s;t=Es,"left"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(ie));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&(n=Pa())!==u?((s=Po())===u&&(s=null),s!==u&&Pa()!==u&&$o()!==u?(t,t=e="LEFT JOIN"):(Es=t,t=u)):(Es=t,t=u),t===u&&(t=Es,(e=function(){var t,e,n,s;t=Es,"right"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(le));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&(n=Pa())!==u?((s=Po())===u&&(s=null),s!==u&&Pa()!==u&&$o()!==u?(t,t=e="RIGHT JOIN"):(Es=t,t=u)):(Es=t,t=u),t===u&&(t=Es,(e=function(){var t,e,n,s;t=Es,"full"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(ce));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&(n=Pa())!==u?((s=Po())===u&&(s=null),s!==u&&Pa()!==u&&$o()!==u?(t,t=e="FULL JOIN"):(Es=t,t=u)):(Es=t,t=u),t===u&&(t=Es,e=Es,(n=function(){var t,e,n,s;t=Es,"inner"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(fe));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&(s=Pa())!==u?e=n=[n,s]:(Es=e,e=u),e===u&&(e=null),e!==u&&(n=$o())!==u?(t,t=e="INNER JOIN"):(Es=t,t=u)))),t}function Cu(){var r,t,e,n,s,o,a,i;return r=Es,(t=qu())!==u?(e=Es,(n=Pa())!==u&&(s=_a())!==u&&(o=Pa())!==u&&(a=qu())!==u?e=n=[n,s,o,a]:(Es=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Es=r,r=u)):(Es=r,r=u),r===u&&(r=Es,(t=ri())!==u&&(r,(i=t).db=null,i.table=i.name,t=i),r=t),r}function du(){var r,t;return r=Es,Do()!==u&&Pa()!==u&&(t=Du())!==u?(r,r=t):(Es=r,r=u),r}function pu(){var t,e;return t=Es,function(){var t,e,n,s;t=Es,"where"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(we));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}()!==u&&Pa()!==u&&(e=Du())!==u?(t,t=e):(Es=t,t=u),t}function wu(){var r,t,e,n,s,o,a,i;if(r=Es,(t=Ku())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=Ku())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=Ku())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,r=t=c(t,e)):(Es=r,r=u)}else Es=r,r=u;return r}function Eu(){var t,e;return t=Es,function(){var t,e,n,s;t=Es,"order"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(he));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}()!==u&&Pa()!==u&&Yo()!==u&&Pa()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=Es,(t=Au())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=Au())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=Au())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,t=c(t,e),r=t):(Es=r,r=u)}else Es=r,r=u;return r}())!==u?(t,t=e):(Es=t,t=u),t}function Au(){var t,e,n;return t=Es,(e=ku())!==u&&Pa()!==u?((n=function(){var t,e,n,s;t=Es,"desc"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(Ne));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="DESC"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Es,"asc"===r.substr(Es,3).toLowerCase()?(e=r.substr(Es,3),Es+=3):(e=u,0===Ts&&Ss(Ie));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="ASC"):(Es=t,t=u)):(Es=t,t=u);return t}()),n===u&&(n=null),n!==u?(t,t=e=function(r,t){const e={expr:r,type:"ASC"};return"DESC"===t&&(e.type="DESC"),e}(e,n)):(Es=t,t=u)):(Es=t,t=u),t}function hu(){var r;return(r=vo())===u&&(r=no()),r}function yu(){var t,e,n,s,o,a,i,l;return t=Es,Bo()!==u&&Pa()!==u?("first"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(yr)),e!==u&&Pa()!==u&&(n=hu())!==u&&Pa()!==u?("rows"===r.substr(Es,4).toLowerCase()?(s=r.substr(Es,4),Es+=4):(s=u,0===Ts&&Ss(Tr)),s!==u&&Pa()!==u?("only"===r.substr(Es,4).toLowerCase()?(o=r.substr(Es,4),Es+=4):(o=u,0===Ts&&Ss(mr)),o!==u?(t,t={fetch:{prefix:"fetch first",value:n,suffix:"rows only"}}):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u),t===u&&(t=Es,function(){var t,e,n,s;t=Es,"offset"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(me));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="OFFSET"):(Es=t,t=u)):(Es=t,t=u);return t}()!==u&&Pa()!==u&&(e=hu())!==u&&Pa()!==u?("rows"===r.substr(Es,4).toLowerCase()?(n=r.substr(Es,4),Es+=4):(n=u,0===Ts&&Ss(Tr)),n!==u&&Pa()!==u&&(s=Bo())!==u&&Pa()!==u?("next"===r.substr(Es,4).toLowerCase()?(o=r.substr(Es,4),Es+=4):(o=u,0===Ts&&Ss(Ir)),o!==u&&Pa()!==u&&(a=hu())!==u&&Pa()!==u?("rows"===r.substr(Es,4).toLowerCase()?(i=r.substr(Es,4),Es+=4):(i=u,0===Ts&&Ss(Tr)),i!==u&&Pa()!==u?("only"===r.substr(Es,4).toLowerCase()?(l=r.substr(Es,4),Es+=4):(l=u,0===Ts&&Ss(mr)),l!==u?(t,t=function(r,t){return{offset:{prefix:"offset",value:r,suffix:"rows"},fetch:{prefix:"fetch next",value:t,suffix:"rows only"}}}(e,a)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u)),t}function Tu(){var r,t,e,n,s,o,a,i;if(r=Es,(t=mu())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=mu())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=mu())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,r=t=c(t,e)):(Es=r,r=u)}else Es=r,r=u;return r}function mu(){var t,e,n,s,o,a,i,l,c;return t=Es,e=Es,(n=qu())!==u&&(s=Pa())!==u&&(o=_a())!==u?e=n=[n,s,o]:(Es=e,e=u),e===u&&(e=null),e!==u&&(n=Pa())!==u&&(s=zu())!==u&&(o=Pa())!==u?(61===r.charCodeAt(Es)?(a="=",Es++):(a=u,0===Ts&&Ss(Nr)),a!==u&&Pa()!==u&&(i=Yu())!==u?(t,t=e={column:s,value:i,table:(c=e)&&c[0]}):(Es=t,t=u)):(Es=t,t=u),t===u&&(t=Es,e=Es,(n=qu())!==u&&(s=Pa())!==u&&(o=_a())!==u?e=n=[n,s,o]:(Es=e,e=u),e===u&&(e=null),e!==u&&(n=Pa())!==u&&(s=zu())!==u&&(o=Pa())!==u?(61===r.charCodeAt(Es)?(a="=",Es++):(a=u,0===Ts&&Ss(Nr)),a!==u&&Pa()!==u&&(i=Go())!==u&&Pa()!==u&&xa()!==u&&Pa()!==u&&(l=Ku())!==u&&Pa()!==u&&Ua()!==u?(t,t=e=function(r,t,e){return{column:t,value:e,table:r&&r[0],keyword:"values"}}(e,s,l)):(Es=t,t=u)):(Es=t,t=u)),t}function Iu(){var r;return(r=function(){var r,t;r=Es,Go()!==u&&Pa()!==u&&(t=function(){var r,t,e,n,s,o,a,i;if(r=Es,(t=_u())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=_u())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=_u())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,t=c(t,e),r=t):(Es=r,r=u)}else Es=r,r=u;return r}())!==u?(r,r=t):(Es=r,r=u);return r}())===u&&(r=tu()),r}function Nu(){var r,t,e,n,s,o,a,i,l;if(r=Es,Oo()!==u)if(Pa()!==u)if((t=xa())!==u)if(Pa()!==u)if((e=Ju())!==u){for(n=[],s=Es,(o=Pa())!==u&&(a=Oa())!==u&&(i=Pa())!==u&&(l=Ju())!==u?s=o=[o,a,i,l]:(Es=s,s=u);s!==u;)n.push(s),s=Es,(o=Pa())!==u&&(a=Oa())!==u&&(i=Pa())!==u&&(l=Ju())!==u?s=o=[o,a,i,l]:(Es=s,s=u);n!==u&&(s=Pa())!==u&&(o=Ua())!==u?(r,r=ii(e,n)):(Es=r,r=u)}else Es=r,r=u;else Es=r,r=u;else Es=r,r=u;else Es=r,r=u;else Es=r,r=u;return r===u&&(r=Es,Oo()!==u&&Pa()!==u&&(t=_u())!==u?(r,r=t):(Es=r,r=u)),r}function Ru(){var t,e,n;return t=Es,Do()!==u&&Pa()!==u?("duplicate"===r.substr(Es,9).toLowerCase()?(e=r.substr(Es,9),Es+=9):(e=u,0===Ts&&Ss(Rr)),e!==u&&Pa()!==u&&Na()!==u&&Pa()!==u&&mo()!==u&&Pa()!==u&&(n=Tu())!==u?(t,t={keyword:"on duplicate key update",set:n}):(Es=t,t=u)):(Es=t,t=u),t}function Su(){var t,e;return t=Es,(e=function(){var t,e,n,s;t=Es,"insert"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(Kt));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&(t,e="insert"),(t=e)===u&&(t=Es,(e=Ro())!==u&&(t,e="replace"),t=e),t}function _u(){var r,t;return r=Es,xa()!==u&&Pa()!==u&&(t=Ou())!==u&&Pa()!==u&&Ua()!==u?(r,r=t):(Es=r,r=u),r}function Ou(){var r,t,e,n,s,o,a,i;if(r=Es,(t=ku())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=ku())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=ku())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,r=t=function(r,t){const e={type:"expr_list"};return e.value=ii(r,t),e}(t,e)):(Es=r,r=u)}else Es=r,r=u;return r}function gu(){var t,e,n;return t=Es,function(){var t,e,n,s;t=Es,"interval"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(hn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="INTERVAL"):(Es=t,t=u)):(Es=t,t=u);return t}()!==u&&Pa()!==u&&(e=ku())!==u&&Pa()!==u&&(n=function(){var t;(t=function(){var t,e,n,s;t=Es,"year"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(yn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="YEAR"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Es,"month"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(Tn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="MONTH"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Es,"day"===r.substr(Es,3).toLowerCase()?(e=r.substr(Es,3),Es+=3):(e=u,0===Ts&&Ss(mn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="DAY"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Es,"hour"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(In));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="HOUR"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Es,"minute"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(Nn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="MINUTE"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Es,"second"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(Rn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="SECOND"):(Es=t,t=u)):(Es=t,t=u);return t}());return t}())!==u?(t,t={type:"interval",expr:e,unit:n.toLowerCase()}):(Es=t,t=u),t}function xu(){var r,t,e,n,s,o;if(r=Es,(t=Uu())!==u)if(Pa()!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Uu())!==u?n=s=[s,o]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Uu())!==u?n=s=[s,o]:(Es=n,n=u);e!==u?(r,r=t=i(t,e)):(Es=r,r=u)}else Es=r,r=u;else Es=r,r=u;return r}function Uu(){var t,e,n;return t=Es,function(){var t,e,n,s;t=Es,"when"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(Ye));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}()!==u&&Pa()!==u&&(e=Du())!==u&&Pa()!==u&&function(){var t,e,n,s;t=Es,"then"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(Be));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}()!==u&&Pa()!==u&&(n=ku())!==u?(t,t={type:"when",cond:e,result:n}):(Es=t,t=u),t}function Mu(){var t,e;return t=Es,function(){var t,e,n,s;t=Es,"else"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(We));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}()!==u&&Pa()!==u&&(e=ku())!==u?(t,t={type:"else",result:e}):(Es=t,t=u),t}function ku(){var r;return(r=function(){var r,t,e,n,s,o,a,i;if(r=Es,(t=Vu())!==u){if(e=[],n=Es,(s=Pa())!==u&&(o=$a())!==u&&(a=Pa())!==u&&(i=Vu())!==u?n=s=[s,o,a,i]:(Es=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=$a())!==u&&(a=Pa())!==u&&(i=Vu())!==u?n=s=[s,o,a,i]:(Es=n,n=u);else e=u;e!==u&&(n=Pa())!==u?((s=Gu())===u&&(s=null),s!==u?(r,t=function(r,t,e){const n=li(r,t);return null===e?n:"arithmetic"===e.type?li(n,e.tail):oi(e.op,n,e.right)}(t,e,s),r=t):(Es=r,r=u)):(Es=r,r=u)}else Es=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o,a,i;if(r=Es,(t=$u())!==u){for(e=[],n=Es,(s=Fa())!==u&&(o=ra())!==u&&(a=Pa())!==u&&(i=$u())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Fa())!==u&&(o=ra())!==u&&(a=Pa())!==u&&(i=$u())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,t=Sr(t,e),r=t):(Es=r,r=u)}else Es=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o;if(r=Es,(t=Bu())!==u){if(e=[],n=Es,(s=Pa())!==u&&(o=Vu())!==u?n=s=[s,o]:(Es=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Vu())!==u?n=s=[s,o]:(Es=n,n=u);else e=u;e!==u?(r,t=ui(t,e[0][1]),r=t):(Es=r,r=u)}else Es=r,r=u;return r}())===u&&(r=Ms()),r}function Du(){var r,t,e,n,s,o,a,i;if(r=Es,(t=ku())!==u){for(e=[],n=Es,(s=Pa())!==u?((o=Jo())===u&&(o=ra())===u&&(o=Oa()),o!==u&&(a=Pa())!==u&&(i=ku())!==u?n=s=[s,o,a,i]:(Es=n,n=u)):(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u?((o=Jo())===u&&(o=ra())===u&&(o=Oa()),o!==u&&(a=Pa())!==u&&(i=ku())!==u?n=s=[s,o,a,i]:(Es=n,n=u)):(Es=n,n=u);e!==u?(r,r=t=function(r,t){const e=t.length;let n=r,s="";for(let r=0;r<e;++r)","===t[r][1]?(s=",",Array.isArray(n)||(n=[n]),n.push(t[r][3])):n=oi(t[r][1],n,t[r][3]);if(","===s){const r={type:"expr_list"};return r.value=n,r}return n}(t,e)):(Es=r,r=u)}else Es=r,r=u;return r}function $u(){var r,t,e,n,s,o,a,i;if(r=Es,(t=Pu())!==u){for(e=[],n=Es,(s=Fa())!==u&&(o=Jo())!==u&&(a=Pa())!==u&&(i=Pu())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Fa())!==u&&(o=Jo())!==u&&(a=Pa())!==u&&(i=Pu())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,r=t=Sr(t,e)):(Es=r,r=u)}else Es=r,r=u;return r}function Pu(){var t,e,n,s,o;return(t=Fu())===u&&(t=function(){var r,t,e;r=Es,(t=function(){var r,t,e,n,s;r=Es,t=Es,(e=Qo())!==u&&(n=Pa())!==u&&(s=zo())!==u?t=e=[e,n,s]:(Es=t,t=u);t!==u&&(r,t=Or(t));(r=t)===u&&(r=zo());return r}())!==u&&Pa()!==u&&xa()!==u&&Pa()!==u&&(e=Ms())!==u&&Pa()!==u&&Ua()!==u?(r,n=t,(s=e).parentheses=!0,t=ui(n,s),r=t):(Es=r,r=u);var n,s;return r}())===u&&(t=Es,(e=Qo())===u&&(e=Es,33===r.charCodeAt(Es)?(n="!",Es++):(n=u,0===Ts&&Ss(_r)),n!==u?(s=Es,Ts++,61===r.charCodeAt(Es)?(o="=",Es++):(o=u,0===Ts&&Ss(Nr)),Ts--,o===u?s=void 0:(Es=s,s=u),s!==u?e=n=[n,s]:(Es=e,e=u)):(Es=e,e=u)),e!==u&&(n=Pa())!==u&&(s=Pu())!==u?(t,t=e=ui("NOT",s)):(Es=t,t=u)),t}function Fu(){var r,t,e,n,s;return r=Es,(t=Yu())!==u&&Pa()!==u?((e=Gu())===u&&(e=null),e!==u?(r,n=t,r=t=null===(s=e)?n:"arithmetic"===s.type?li(n,s.tail):oi(s.op,n,s.right)):(Es=r,r=u)):(Es=r,r=u),r===u&&(r=lo())===u&&(r=Ku()),r}function Gu(){var r;return(r=function(){var r,t,e,n,s,o,a;r=Es,t=[],e=Es,(n=Pa())!==u&&(s=Hu())!==u&&(o=Pa())!==u&&(a=Yu())!==u?e=n=[n,s,o,a]:(Es=e,e=u);if(e!==u)for(;e!==u;)t.push(e),e=Es,(n=Pa())!==u&&(s=Hu())!==u&&(o=Pa())!==u&&(a=Yu())!==u?e=n=[n,s,o,a]:(Es=e,e=u);else t=u;t!==u&&(r,t={type:"arithmetic",tail:t});return r=t}())===u&&(r=function(){var r,t,e,n;r=Es,(t=ju())!==u&&Pa()!==u&&(e=xa())!==u&&Pa()!==u&&(n=Ou())!==u&&Pa()!==u&&Ua()!==u?(r,r=t={op:t,right:n}):(Es=r,r=u);r===u&&(r=Es,(t=ju())!==u&&Pa()!==u?((e=ri())===u&&(e=lo()),e!==u?(r,t=function(r,t){return{op:r,right:t}}(t,e),r=t):(Es=r,r=u)):(Es=r,r=u));return r}())===u&&(r=function(){var r,t,e,n;r=Es,(t=function(){var r,t,e,n,s;r=Es,t=Es,(e=Qo())!==u&&(n=Pa())!==u&&(s=Vo())!==u?t=e=[e,n,s]:(Es=t,t=u);t!==u&&(r,t=Or(t));(r=t)===u&&(r=Vo());return r}())!==u&&Pa()!==u&&(e=Yu())!==u&&Pa()!==u&&Jo()!==u&&Pa()!==u&&(n=Yu())!==u?(r,r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Es=r,r=u);return r}())===u&&(r=function(){var r,t,e,n,s;r=Es,(t=qo())!==u&&(e=Pa())!==u&&(n=Yu())!==u?(r,r=t={op:"IS",right:n}):(Es=r,r=u);r===u&&(r=Es,t=Es,(e=qo())!==u&&(n=Pa())!==u&&(s=Qo())!==u?t=e=[e,n,s]:(Es=t,t=u),t!==u&&(e=Pa())!==u&&(n=Yu())!==u?(r,t=function(r){return{op:"IS NOT",right:r}}(n),r=t):(Es=r,r=u));return r}())===u&&(r=function(){var r,t,e;r=Es,(t=function(){var r,t,e,n,s;r=Es,t=Es,(e=Qo())!==u&&(n=Pa())!==u&&(s=Zo())!==u?t=e=[e,n,s]:(Es=t,t=u);t!==u&&(r,t=Or(t));(r=t)===u&&(r=Zo());return r}())!==u&&Pa()!==u?((e=ao())===u&&(e=Fu()),e!==u?(r,r=t={op:t,right:e}):(Es=r,r=u)):(Es=r,r=u);return r}()),r}function Hu(){var t;return">="===r.substr(Es,2)?(t=">=",Es+=2):(t=u,0===Ts&&Ss(gr)),t===u&&(62===r.charCodeAt(Es)?(t=">",Es++):(t=u,0===Ts&&Ss(xr)),t===u&&("<="===r.substr(Es,2)?(t="<=",Es+=2):(t=u,0===Ts&&Ss(Ur)),t===u&&("<>"===r.substr(Es,2)?(t="<>",Es+=2):(t=u,0===Ts&&Ss(Mr)),t===u&&(60===r.charCodeAt(Es)?(t="<",Es++):(t=u,0===Ts&&Ss(kr)),t===u&&(61===r.charCodeAt(Es)?(t="=",Es++):(t=u,0===Ts&&Ss(Nr)),t===u&&("!="===r.substr(Es,2)?(t="!=",Es+=2):(t=u,0===Ts&&Ss(Dr)))))))),t}function ju(){var r,t,e,n,s;return r=Es,t=Es,(e=Qo())!==u&&(n=Pa())!==u&&(s=Ko())!==u?t=e=[e,n,s]:(Es=t,t=u),t!==u&&(r,t=Or(t)),(r=t)===u&&(r=Ko()),r}function Yu(){var r,t,e,n,s,o,a,i;if(r=Es,(t=Wu())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Bu())!==u&&(a=Pa())!==u&&(i=Wu())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Bu())!==u&&(a=Pa())!==u&&(i=Wu())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,r=t=Sr(t,e)):(Es=r,r=u)}else Es=r,r=u;return r}function Bu(){var t;return 43===r.charCodeAt(Es)?(t="+",Es++):(t=u,0===Ts&&Ss($r)),t===u&&(45===r.charCodeAt(Es)?(t="-",Es++):(t=u,0===Ts&&Ss(Pr))),t}function Wu(){var r,t,e,n,s,o,a,i;if(r=Es,(t=Vu())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Xu())!==u&&(a=Pa())!==u&&(i=Vu())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Xu())!==u&&(a=Pa())!==u&&(i=Vu())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,r=t=li(t,e)):(Es=r,r=u)}else Es=r,r=u;return r}function Xu(){var t;return 42===r.charCodeAt(Es)?(t="*",Es++):(t=u,0===Ts&&Ss(Fr)),t===u&&(47===r.charCodeAt(Es)?(t="/",Es++):(t=u,0===Ts&&Ss(Gr)),t===u&&(37===r.charCodeAt(Es)?(t="%",Es++):(t=u,0===Ts&&Ss(Hr)))),t}function Vu(){var t,e,n;return(t=function(){var t,e,n,s,o,a,i;t=Es,(e=na())!==u&&Pa()!==u&&xa()!==u&&Pa()!==u&&(n=ku())!==u&&Pa()!==u&&Uo()!==u&&Pa()!==u&&(s=ei())!==u&&Pa()!==u&&(o=Ua())!==u?(t,l=n,c=s,e={type:"cast",keyword:e.toLowerCase(),expr:l,symbol:"as",target:c},t=e):(Es=t,t=u);var l,c;t===u&&(t=Es,(e=na())!==u&&Pa()!==u&&xa()!==u&&Pa()!==u&&(n=ku())!==u&&Pa()!==u&&Uo()!==u&&Pa()!==u&&(s=aa())!==u&&Pa()!==u&&(o=xa())!==u&&Pa()!==u&&(a=Lo())!==u&&Pa()!==u&&Ua()!==u&&Pa()!==u&&(i=Ua())!==u?(t,e=function(r,t,e){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+")"}}}(e,n,a),t=e):(Es=t,t=u),t===u&&(t=Es,(e=na())!==u&&Pa()!==u&&xa()!==u&&Pa()!==u&&(n=ku())!==u&&Pa()!==u&&Uo()!==u&&Pa()!==u&&(s=aa())!==u&&Pa()!==u&&(o=xa())!==u&&Pa()!==u&&(a=Lo())!==u&&Pa()!==u&&Oa()!==u&&Pa()!==u&&(i=Lo())!==u&&Pa()!==u&&Ua()!==u&&Pa()!==u&&Ua()!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+", "+n+")"}}}(e,n,a,i),t=e):(Es=t,t=u),t===u&&(t=Es,(e=na())!==u&&Pa()!==u&&xa()!==u&&Pa()!==u&&(n=ku())!==u&&Pa()!==u&&Uo()!==u&&Pa()!==u&&(s=function(){var t;(t=function(){var t,e,n,s;t=Es,"signed"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(Qe));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="SIGNED"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=ia());return t}())!==u&&Pa()!==u?((o=ca())===u&&(o=null),o!==u&&Pa()!==u&&(a=Ua())!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:e+(n?" "+n:"")}}}(e,n,s,o),t=e):(Es=t,t=u)):(Es=t,t=u))));return t}())===u&&(t=ao())===u&&(t=function(){var t;(t=function(){var t,e,n,s;t=Es,(e=function(){var t,e,n,s;t=Es,"count"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(De));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="COUNT"):(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&Pa()!==u&&xa()!==u&&Pa()!==u&&(n=function(){var t,e,n,s;t=Es,(e=function(){var t,e;t=Es,42===r.charCodeAt(Es)?(e="*",Es++):(e=u,0===Ts&&Ss(Fr));e!==u&&(t,e={type:"star",value:"*"});return t=e}())!==u&&(t,e={expr:e});(t=e)===u&&(t=Es,(e=Xo())===u&&(e=null),e!==u&&Pa()!==u&&(n=xa())!==u&&Pa()!==u&&(s=ku())!==u&&Pa()!==u&&Ua()!==u?(t,t=e={distinct:e,expr:s,parentheses:!0}):(Es=t,t=u),t===u&&(t=Es,(e=Xo())===u&&(e=null),e!==u&&Pa()!==u&&(n=ku())!==u&&Pa()!==u?((s=Eu())===u&&(s=null),s!==u?(t,e=function(r,t,e){return{distinct:r,expr:t,orderby:e,parentheses:!1}}(e,n,s),t=e):(Es=t,t=u)):(Es=t,t=u)));return t}())!==u&&Pa()!==u&&Ua()!==u&&Pa()!==u?((s=uo())===u&&(s=null),s!==u?(t,t=e={type:"aggr_func",name:e,args:n,over:s}):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=function(){var t,e,n;t=Es,(e=function(){var t;(t=function(){var t,e,n,s;t=Es,"sum"===r.substr(Es,3).toLowerCase()?(e=r.substr(Es,3),Es+=3):(e=u,0===Ts&&Ss(Fe));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="SUM"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Es,"max"===r.substr(Es,3).toLowerCase()?(e=r.substr(Es,3),Es+=3):(e=u,0===Ts&&Ss($e));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="MAX"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Es,"min"===r.substr(Es,3).toLowerCase()?(e=r.substr(Es,3),Es+=3):(e=u,0===Ts&&Ss(Pe));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="MIN"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Es,"avg"===r.substr(Es,3).toLowerCase()?(e=r.substr(Es,3),Es+=3):(e=u,0===Ts&&Ss(Ge));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="AVG"):(Es=t,t=u)):(Es=t,t=u);return t}());return t}())!==u&&Pa()!==u&&xa()!==u&&Pa()!==u&&(n=Yu())!==u&&Pa()!==u&&Ua()!==u?(t,t=e={type:"aggr_func",name:e,args:{expr:n}}):(Es=t,t=u);return t}());return t}())===u&&(t=function(){var t,e,n,s,o;t=Es,(e=za())!==u&&Pa()!==u&&(n=xa())!==u&&Pa()!==u?((s=Du())===u&&(s=null),s!==u&&Pa()!==u&&Ua()!==u&&Pa()!==u?((o=uo())===u&&(o=null),o!==u?(t,a=e,l=o,(i=s)&&"expr_list"!==i.type&&(i={type:"expr_list",value:[i]}),t=e={type:"function",name:a,args:i||{type:"expr_list",value:[]},over:l}):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u);var a,i,l;t===u&&(t=Es,(e=function(){var t;(t=oo())===u&&(t=function(){var t,e,n,s;t=Es,"current_user"===r.substr(Es,12).toLowerCase()?(e=r.substr(Es,12),Es+=12):(e=u,0===Ts&&Ss(On));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="CURRENT_USER"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Es,"user"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(En));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="USER"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Es,"session_user"===r.substr(Es,12).toLowerCase()?(e=r.substr(Es,12),Es+=12):(e=u,0===Ts&&Ss(gn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="SESSION_USER"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Es,"system_user"===r.substr(Es,11).toLowerCase()?(e=r.substr(Es,11),Es+=11):(e=u,0===Ts&&Ss(xn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="SYSTEM_USER"):(Es=t,t=u)):(Es=t,t=u);return t}());return t}())!==u&&Pa()!==u&&(n=xa())!==u&&Pa()!==u?((s=Ou())===u&&(s=null),s!==u&&Pa()!==u&&Ua()!==u&&Pa()!==u?((o=uo())===u&&(o=null),o!==u?(t,e=function(r,t,e){return{type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,s,o),t=e):(Es=t,t=u)):(Es=t,t=u)):(Es=t,t=u),t===u&&(t=Es,(e=oo())!==u&&Pa()!==u?((n=so())===u&&(n=null),n!==u?(t,t=e={type:"function",name:e,over:n}):(Es=t,t=u)):(Es=t,t=u)));return t}())===u&&(t=function(){var r,t,e,n,s,o,a,i;return r=Es,ta()!==u&&Pa()!==u&&(t=xu())!==u&&Pa()!==u?((e=Mu())===u&&(e=null),e!==u&&Pa()!==u&&(n=ea())!==u&&Pa()!==u?((s=ta())===u&&(s=null),s!==u?(r,a=t,(i=e)&&a.push(i),r={type:"case",expr:null,args:a}):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u),r===u&&(r=Es,ta()!==u&&Pa()!==u&&(t=ku())!==u&&Pa()!==u&&(e=xu())!==u&&Pa()!==u?((n=Mu())===u&&(n=null),n!==u&&Pa()!==u&&(s=ea())!==u&&Pa()!==u?((o=ta())===u&&(o=null),o!==u?(r,r=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(t,e,n)):(Es=r,r=u)):(Es=r,r=u)):(Es=r,r=u)),r}())===u&&(t=gu())===u&&(t=Ku())===u&&(t=no())===u&&(t=Es,xa()!==u&&Pa()!==u&&(e=Du())!==u&&Pa()!==u&&Ua()!==u?(t,(n=e).parentheses=!0,t=n):(Es=t,t=u),t===u&&(t=ri())),t}function Ku(){var r,t,e,n,s,o,a,i,l,c,f;if(r=Es,t=Es,(e=qu())!==u&&(n=Pa())!==u&&(s=_a())!==u&&(o=Pa())!==u?t=e=[e,n,s,o]:(Es=t,t=u),t===u&&(t=null),t!==u)if((e=zu())!==u)if((n=Pa())!==u){if(s=[],o=Es,(a=Da())===u&&(a=ka()),a!==u&&(i=Pa())!==u?((l=lo())===u&&(l=vo()),l!==u?o=a=[a,i,l]:(Es=o,o=u)):(Es=o,o=u),o!==u)for(;o!==u;)s.push(o),o=Es,(a=Da())===u&&(a=ka()),a!==u&&(i=Pa())!==u?((l=lo())===u&&(l=vo()),l!==u?o=a=[a,i,l]:(Es=o,o=u)):(Es=o,o=u);else s=u;s!==u&&(o=Pa())!==u?((a=Ps())===u&&(a=null),a!==u?(r,r=t=function(r,t,e,n){const s=r&&r[0]||null;return Li.add(`select::${s}::${t}`),{type:"column_ref",table:s,column:t,collate:n,arrows:e.map(r=>r[0]),properties:e.map(r=>r[2])}}(t,e,s,a)):(Es=r,r=u)):(Es=r,r=u)}else Es=r,r=u;else Es=r,r=u;else Es=r,r=u;return r===u&&(r=Es,(t=qu())!==u&&(e=Pa())!==u&&(n=_a())!==u&&(s=Pa())!==u&&(o=function(){var r,t;r=Es,(t=Qu())!==u&&(r,t=t);(r=t)===u&&(r=Zu());return r}())!==u?(r,c=t,f=o,Li.add(`select::${c}::${f}`),r=t={type:"column_ref",table:c,column:f}):(Es=r,r=u),r===u&&(r=Es,(t=zu())!==u&&(r,t=function(r){return Li.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t)),r}function qu(){var r,t;return r=Es,(t=Ju())!==u?(Es,(jr(t)?u:void 0)!==u?(r,r=t=t):(Es=r,r=u)):(Es=r,r=u),r===u&&(r=Es,(t=Zu())!==u&&(r,t=t),r=t),r}function Zu(){var t;return(t=function(){var t,e,n,s;t=Es,34===r.charCodeAt(Es)?(e='"',Es++):(e=u,0===Ts&&Ss(Yr));if(e!==u){if(n=[],Br.test(r.charAt(Es))?(s=r.charAt(Es),Es++):(s=u,0===Ts&&Ss(Wr)),s!==u)for(;s!==u;)n.push(s),Br.test(r.charAt(Es))?(s=r.charAt(Es),Es++):(s=u,0===Ts&&Ss(Wr));else n=u;n!==u?(34===r.charCodeAt(Es)?(s='"',Es++):(s=u,0===Ts&&Ss(Yr)),s!==u?(t,e=Xr(n),t=e):(Es=t,t=u)):(Es=t,t=u)}else Es=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=Es,39===r.charCodeAt(Es)?(e="'",Es++):(e=u,0===Ts&&Ss(ur));if(e!==u){if(n=[],Vr.test(r.charAt(Es))?(s=r.charAt(Es),Es++):(s=u,0===Ts&&Ss(Kr)),s!==u)for(;s!==u;)n.push(s),Vr.test(r.charAt(Es))?(s=r.charAt(Es),Es++):(s=u,0===Ts&&Ss(Kr));else n=u;n!==u?(39===r.charCodeAt(Es)?(s="'",Es++):(s=u,0===Ts&&Ss(ur)),s!==u?(t,e=Xr(n),t=e):(Es=t,t=u)):(Es=t,t=u)}else Es=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=Es,96===r.charCodeAt(Es)?(e="`",Es++):(e=u,0===Ts&&Ss(qr));if(e!==u){if(n=[],Zr.test(r.charAt(Es))?(s=r.charAt(Es),Es++):(s=u,0===Ts&&Ss(zr)),s!==u)for(;s!==u;)n.push(s),Zr.test(r.charAt(Es))?(s=r.charAt(Es),Es++):(s=u,0===Ts&&Ss(zr));else n=u;n!==u?(96===r.charCodeAt(Es)?(s="`",Es++):(s=u,0===Ts&&Ss(qr)),s!==u?(t,e=Xr(n),t=e):(Es=t,t=u)):(Es=t,t=u)}else Es=t,t=u;return t}()),t}function zu(){var r,t;return r=Es,(t=Qu())!==u?(Es,(jr(t)?u:void 0)!==u?(r,r=t=t):(Es=r,r=u)):(Es=r,r=u),r===u&&(r=Zu()),r}function Qu(){var r,t,e,n;if(r=Es,(t=ro())!==u){for(e=[],n=eo();n!==u;)e.push(n),n=eo();e!==u?(r,r=t=Qr(t,e)):(Es=r,r=u)}else Es=r,r=u;return r}function Ju(){var r,t,e,n;if(r=Es,(t=ro())!==u){for(e=[],n=to();n!==u;)e.push(n),n=to();e!==u?(r,r=t=Qr(t,e)):(Es=r,r=u)}else Es=r,r=u;return r}function ro(){var t;return Jr.test(r.charAt(Es))?(t=r.charAt(Es),Es++):(t=u,0===Ts&&Ss(rt)),t}function to(){var t;return tt.test(r.charAt(Es))?(t=r.charAt(Es),Es++):(t=u,0===Ts&&Ss(et)),t}function eo(){var t;return nt.test(r.charAt(Es))?(t=r.charAt(Es),Es++):(t=u,0===Ts&&Ss(st)),t}function no(){var t,e,n,s;return t=Es,e=Es,58===r.charCodeAt(Es)?(n=":",Es++):(n=u,0===Ts&&Ss(ut)),n!==u&&(s=Ju())!==u?e=n=[n,s]:(Es=e,e=u),e!==u&&(t,e={type:"param",value:e[1]}),t=e}function so(){var r,t,e;return r=Es,Do()!==u&&Pa()!==u&&mo()!==u&&Pa()!==u&&(t=Aa())!==u&&Pa()!==u&&xa()!==u&&Pa()!==u?((e=Ou())===u&&(e=null),e!==u&&Pa()!==u&&Ua()!==u?(r,r={type:"on update",keyword:t,parentheses:!0,expr:e}):(Es=r,r=u)):(Es=r,r=u),r===u&&(r=Es,Do()!==u&&Pa()!==u&&mo()!==u&&Pa()!==u&&(t=Aa())!==u?(r,r=function(r){return{type:"on update",keyword:r}}(t)):(Es=r,r=u)),r}function uo(){var t,e,n;return t=Es,function(){var t,e,n,s;t=Es,"over"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(Le));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}()!==u&&Pa()!==u&&xa()!==u&&Pa()!==u&&Oo()!==u&&Pa()!==u&&Yo()!==u&&Pa()!==u&&(e=nu())!==u&&Pa()!==u?((n=Eu())===u&&(n=null),n!==u&&Pa()!==u&&Ua()!==u?(t,t={partitionby:e,orderby:n}):(Es=t,t=u)):(Es=t,t=u),t===u&&(t=so()),t}function oo(){var t;return(t=function(){var t,e,n,s;t=Es,"current_date"===r.substr(Es,12).toLowerCase()?(e=r.substr(Es,12),Es+=12):(e=u,0===Ts&&Ss(An));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="CURRENT_DATE"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Es,"current_time"===r.substr(Es,12).toLowerCase()?(e=r.substr(Es,12),Es+=12):(e=u,0===Ts&&Ss(Sn));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="CURRENT_TIME"):(Es=t,t=u)):(Es=t,t=u);return t}())===u&&(t=Aa()),t}function ao(){var t;return(t=lo())===u&&(t=vo())===u&&(t=function(){var t,e;t=Es,(e=function(){var t,e,n,s;t=Es,"true"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(Ft));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!0});(t=e)===u&&(t=Es,(e=function(){var t,e,n,s;t=Es,"false"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(Ht));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!1}),t=e);return t}())===u&&(t=io())===u&&(t=function(){var t,e,n,s,o,a;t=Es,(e=wa())===u&&(e=da())===u&&(e=Ea())===u&&(e=pa());if(e!==u)if(Pa()!==u){if(n=Es,39===r.charCodeAt(Es)?(s="'",Es++):(s=u,0===Ts&&Ss(ur)),s!==u){for(o=[],a=fo();a!==u;)o.push(a),a=fo();o!==u?(39===r.charCodeAt(Es)?(a="'",Es++):(a=u,0===Ts&&Ss(ur)),a!==u?n=s=[s,o,a]:(Es=n,n=u)):(Es=n,n=u)}else Es=n,n=u;n!==u?(t,e=at(e,n),t=e):(Es=t,t=u)}else Es=t,t=u;else Es=t,t=u;if(t===u)if(t=Es,(e=wa())===u&&(e=da())===u&&(e=Ea())===u&&(e=pa()),e!==u)if(Pa()!==u){if(n=Es,34===r.charCodeAt(Es)?(s='"',Es++):(s=u,0===Ts&&Ss(Yr)),s!==u){for(o=[],a=co();a!==u;)o.push(a),a=co();o!==u?(34===r.charCodeAt(Es)?(a='"',Es++):(a=u,0===Ts&&Ss(Yr)),a!==u?n=s=[s,o,a]:(Es=n,n=u)):(Es=n,n=u)}else Es=n,n=u;n!==u?(t,e=at(e,n),t=e):(Es=t,t=u)}else Es=t,t=u;else Es=t,t=u;return t}()),t}function io(){var t,e;return t=Es,(e=function(){var t,e,n,s;t=Es,"null"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss($t));e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u);return t}())!==u&&(t,e={type:"null",value:null}),t=e}function lo(){var t,e,n,s,o;if(t=Es,e=Es,39===r.charCodeAt(Es)?(n="'",Es++):(n=u,0===Ts&&Ss(ur)),n!==u){for(s=[],o=fo();o!==u;)s.push(o),o=fo();s!==u?(39===r.charCodeAt(Es)?(o="'",Es++):(o=u,0===Ts&&Ss(ur)),o!==u?e=n=[n,s,o]:(Es=e,e=u)):(Es=e,e=u)}else Es=e,e=u;if(e!==u&&(t,e=ot(e)),(t=e)===u){if(t=Es,e=Es,34===r.charCodeAt(Es)?(n='"',Es++):(n=u,0===Ts&&Ss(Yr)),n!==u){for(s=[],o=co();o!==u;)s.push(o),o=co();s!==u?(34===r.charCodeAt(Es)?(o='"',Es++):(o=u,0===Ts&&Ss(Yr)),o!==u?e=n=[n,s,o]:(Es=e,e=u)):(Es=e,e=u)}else Es=e,e=u;e!==u&&(t,e=ot(e)),t=e}return t}function co(){var t;return it.test(r.charAt(Es))?(t=r.charAt(Es),Es++):(t=u,0===Ts&&Ss(lt)),t===u&&(t=bo()),t}function fo(){var t;return ct.test(r.charAt(Es))?(t=r.charAt(Es),Es++):(t=u,0===Ts&&Ss(ft)),t===u&&(t=bo()),t}function bo(){var t,e,n,s,o,a,i,l,c,f;return t=Es,"\\'"===r.substr(Es,2)?(e="\\'",Es+=2):(e=u,0===Ts&&Ss(bt)),e!==u&&(t,e="\\'"),(t=e)===u&&(t=Es,'\\"'===r.substr(Es,2)?(e='\\"',Es+=2):(e=u,0===Ts&&Ss(vt)),e!==u&&(t,e='\\"'),(t=e)===u&&(t=Es,"\\\\"===r.substr(Es,2)?(e="\\\\",Es+=2):(e=u,0===Ts&&Ss(Lt)),e!==u&&(t,e="\\\\"),(t=e)===u&&(t=Es,"\\/"===r.substr(Es,2)?(e="\\/",Es+=2):(e=u,0===Ts&&Ss(Ct)),e!==u&&(t,e="\\/"),(t=e)===u&&(t=Es,"\\b"===r.substr(Es,2)?(e="\\b",Es+=2):(e=u,0===Ts&&Ss(dt)),e!==u&&(t,e="\b"),(t=e)===u&&(t=Es,"\\f"===r.substr(Es,2)?(e="\\f",Es+=2):(e=u,0===Ts&&Ss(pt)),e!==u&&(t,e="\f"),(t=e)===u&&(t=Es,"\\n"===r.substr(Es,2)?(e="\\n",Es+=2):(e=u,0===Ts&&Ss(wt)),e!==u&&(t,e="\n"),(t=e)===u&&(t=Es,"\\r"===r.substr(Es,2)?(e="\\r",Es+=2):(e=u,0===Ts&&Ss(Et)),e!==u&&(t,e="\r"),(t=e)===u&&(t=Es,"\\t"===r.substr(Es,2)?(e="\\t",Es+=2):(e=u,0===Ts&&Ss(At)),e!==u&&(t,e="\t"),(t=e)===u&&(t=Es,"\\u"===r.substr(Es,2)?(e="\\u",Es+=2):(e=u,0===Ts&&Ss(ht)),e!==u&&(n=Ao())!==u&&(s=Ao())!==u&&(o=Ao())!==u&&(a=Ao())!==u?(t,i=n,l=s,c=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+l+c+f))):(Es=t,t=u),t===u&&(t=Es,92===r.charCodeAt(Es)?(e="\\",Es++):(e=u,0===Ts&&Ss(yt)),e!==u&&(t,e="\\"),(t=e)===u&&(t=Es,"''"===r.substr(Es,2)?(e="''",Es+=2):(e=u,0===Ts&&Ss(Tt)),e!==u&&(t,e="''"),(t=e)===u&&(t=Es,'""'===r.substr(Es,2)?(e='""',Es+=2):(e=u,0===Ts&&Ss(mt)),e!==u&&(t,e='""'),(t=e)===u&&(t=Es,"``"===r.substr(Es,2)?(e="``",Es+=2):(e=u,0===Ts&&Ss(It)),e!==u&&(t,e="``"),t=e))))))))))))),t}function vo(){var r,t,e;return r=Es,(t=function(){var r,t,e,n;r=Es,(t=Lo())!==u&&(e=Co())!==u&&(n=po())!==u?(r,r=t={type:"bigint",value:t+e+n}):(Es=r,r=u);r===u&&(r=Es,(t=Lo())!==u&&(e=Co())!==u?(r,t=function(r,t){const e=r+t;return ai(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(Es=r,r=u),r===u&&(r=Es,(t=Lo())!==u&&(e=po())!==u?(r,t=function(r,t){return{type:"bigint",value:r+t}}(t,e),r=t):(Es=r,r=u),r===u&&(r=Es,(t=Lo())!==u&&(r,t=function(r){return ai(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==u&&(r,t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function Lo(){var t,e,n;return(t=wo())===u&&(t=Eo())===u&&(t=Es,45===r.charCodeAt(Es)?(e="-",Es++):(e=u,0===Ts&&Ss(Pr)),e===u&&(43===r.charCodeAt(Es)?(e="+",Es++):(e=u,0===Ts&&Ss($r))),e!==u&&(n=wo())!==u?(t,t=e=e+n):(Es=t,t=u),t===u&&(t=Es,45===r.charCodeAt(Es)?(e="-",Es++):(e=u,0===Ts&&Ss(Pr)),e===u&&(43===r.charCodeAt(Es)?(e="+",Es++):(e=u,0===Ts&&Ss($r))),e!==u&&(n=Eo())!==u?(t,t=e=function(r,t){return r+t}(e,n)):(Es=t,t=u))),t}function Co(){var t,e,n;return t=Es,46===r.charCodeAt(Es)?(e=".",Es++):(e=u,0===Ts&&Ss(St)),e!==u&&(n=wo())!==u?(t,t=e="."+n):(Es=t,t=u),t}function po(){var t,e,n;return t=Es,(e=function(){var t,e,n;t=Es,Ut.test(r.charAt(Es))?(e=r.charAt(Es),Es++):(e=u,0===Ts&&Ss(Mt));e!==u?(kt.test(r.charAt(Es))?(n=r.charAt(Es),Es++):(n=u,0===Ts&&Ss(Dt)),n===u&&(n=null),n!==u?(t,t=e=e+(null!==(s=n)?s:"")):(Es=t,t=u)):(Es=t,t=u);var s;return t}())!==u&&(n=wo())!==u?(t,t=e=e+n):(Es=t,t=u),t}function wo(){var r,t,e;if(r=Es,t=[],(e=Eo())!==u)for(;e!==u;)t.push(e),e=Eo();else t=u;return t!==u&&(r,t=t.join("")),r=t}function Eo(){var t;return _t.test(r.charAt(Es))?(t=r.charAt(Es),Es++):(t=u,0===Ts&&Ss(Ot)),t}function Ao(){var t;return gt.test(r.charAt(Es))?(t=r.charAt(Es),Es++):(t=u,0===Ts&&Ss(xt)),t}function ho(){var t,e,n,s;return t=Es,"default"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(w)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function yo(){var t,e,n,s;return t=Es,"to"===r.substr(Es,2).toLowerCase()?(e=r.substr(Es,2),Es+=2):(e=u,0===Ts&&Ss(Gt)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function To(){var t,e,n,s;return t=Es,"drop"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(jt)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="DROP"):(Es=t,t=u)):(Es=t,t=u),t}function mo(){var t,e,n,s;return t=Es,"update"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(j)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function Io(){var t,e,n,s;return t=Es,"create"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(Xt)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function No(){var t,e,n,s;return t=Es,"temporary"===r.substr(Es,9).toLowerCase()?(e=r.substr(Es,9),Es+=9):(e=u,0===Ts&&Ss(Vt)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function Ro(){var t,e,n,s;return t=Es,"replace"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(Zt)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function So(){var t,e,n,s;return t=Es,"rename"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(zt)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function _o(){var t,e,n,s;return t=Es,"ignore"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(Qt)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function Oo(){var t,e,n,s;return t=Es,"partition"===r.substr(Es,9).toLowerCase()?(e=r.substr(Es,9),Es+=9):(e=u,0===Ts&&Ss(Jt)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="PARTITION"):(Es=t,t=u)):(Es=t,t=u),t}function go(){var t,e,n,s;return t=Es,"into"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(re)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function xo(){var t,e,n,s;return t=Es,"set"===r.substr(Es,3).toLowerCase()?(e=r.substr(Es,3),Es+=3):(e=u,0===Ts&&Ss(q)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function Uo(){var t,e,n,s;return t=Es,"as"===r.substr(Es,2).toLowerCase()?(e=r.substr(Es,2),Es+=2):(e=u,0===Ts&&Ss(ne)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function Mo(){var t,e,n,s;return t=Es,"table"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(se)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="TABLE"):(Es=t,t=u)):(Es=t,t=u),t}function ko(){var t,e,n,s;return t=Es,"tables"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(ue)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="TABLES"):(Es=t,t=u)):(Es=t,t=u),t}function Do(){var t,e,n,s;return t=Es,"on"===r.substr(Es,2).toLowerCase()?(e=r.substr(Es,2),Es+=2):(e=u,0===Ts&&Ss(G)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function $o(){var t,e,n,s;return t=Es,"join"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(be)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function Po(){var t,e,n,s;return t=Es,"outer"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(ve)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function Fo(){var t,e,n,s;return t=Es,"union"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(Ce)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function Go(){var t,e,n,s;return t=Es,"values"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(de)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function Ho(){var t,e,n,s;return t=Es,"using"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(pe)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function jo(){var t,e,n,s;return t=Es,"with"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(pr)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function Yo(){var t,e,n,s;return t=Es,"by"===r.substr(Es,2).toLowerCase()?(e=r.substr(Es,2),Es+=2):(e=u,0===Ts&&Ss(Ae)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function Bo(){var t,e,n,s;return t=Es,"fetch"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(Te)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="FETCH"):(Es=t,t=u)):(Es=t,t=u),t}function Wo(){var t,e,n,s;return t=Es,"all"===r.substr(Es,3).toLowerCase()?(e=r.substr(Es,3),Es+=3):(e=u,0===Ts&&Ss(Re)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="ALL"):(Es=t,t=u)):(Es=t,t=u),t}function Xo(){var t,e,n,s;return t=Es,"distinct"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(Se)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="DISTINCT"):(Es=t,t=u)):(Es=t,t=u),t}function Vo(){var t,e,n,s;return t=Es,"between"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(_e)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="BETWEEN"):(Es=t,t=u)):(Es=t,t=u),t}function Ko(){var t,e,n,s;return t=Es,"in"===r.substr(Es,2).toLowerCase()?(e=r.substr(Es,2),Es+=2):(e=u,0===Ts&&Ss(Oe)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="IN"):(Es=t,t=u)):(Es=t,t=u),t}function qo(){var t,e,n,s;return t=Es,"is"===r.substr(Es,2).toLowerCase()?(e=r.substr(Es,2),Es+=2):(e=u,0===Ts&&Ss(ge)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="IS"):(Es=t,t=u)):(Es=t,t=u),t}function Zo(){var t,e,n,s;return t=Es,"like"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(xe)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="LIKE"):(Es=t,t=u)):(Es=t,t=u),t}function zo(){var t,e,n,s;return t=Es,"exists"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(Ue)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="EXISTS"):(Es=t,t=u)):(Es=t,t=u),t}function Qo(){var t,e,n,s;return t=Es,"not"===r.substr(Es,3).toLowerCase()?(e=r.substr(Es,3),Es+=3):(e=u,0===Ts&&Ss(U)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="NOT"):(Es=t,t=u)):(Es=t,t=u),t}function Jo(){var t,e,n,s;return t=Es,"and"===r.substr(Es,3).toLowerCase()?(e=r.substr(Es,3),Es+=3):(e=u,0===Ts&&Ss(Me)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="AND"):(Es=t,t=u)):(Es=t,t=u),t}function ra(){var t,e,n,s;return t=Es,"or"===r.substr(Es,2).toLowerCase()?(e=r.substr(Es,2),Es+=2):(e=u,0===Ts&&Ss(ke)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="OR"):(Es=t,t=u)):(Es=t,t=u),t}function ta(){var t,e,n,s;return t=Es,"case"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(je)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function ea(){var t,e,n,s;return t=Es,"end"===r.substr(Es,3).toLowerCase()?(e=r.substr(Es,3),Es+=3):(e=u,0===Ts&&Ss(Xe)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?t=e=[e,n]:(Es=t,t=u)):(Es=t,t=u),t}function na(){var t,e,n,s;return t=Es,"cast"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(Ve)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="CAST"):(Es=t,t=u)):(Es=t,t=u),t}function sa(){var t,e,n,s;return t=Es,"char"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(Ke)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="CHAR"):(Es=t,t=u)):(Es=t,t=u),t}function ua(){var t,e,n,s;return t=Es,"varchar"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(qe)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="VARCHAR"):(Es=t,t=u)):(Es=t,t=u),t}function oa(){var t,e,n,s;return t=Es,"numeric"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(Ze)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="NUMERIC"):(Es=t,t=u)):(Es=t,t=u),t}function aa(){var t,e,n,s;return t=Es,"decimal"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(ze)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="DECIMAL"):(Es=t,t=u)):(Es=t,t=u),t}function ia(){var t,e,n,s;return t=Es,"unsigned"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(Je)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="UNSIGNED"):(Es=t,t=u)):(Es=t,t=u),t}function la(){var t,e,n,s;return t=Es,"int"===r.substr(Es,3).toLowerCase()?(e=r.substr(Es,3),Es+=3):(e=u,0===Ts&&Ss(rn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="INT"):(Es=t,t=u)):(Es=t,t=u),t}function ca(){var t,e,n,s;return t=Es,"integer"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(en)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="INTEGER"):(Es=t,t=u)):(Es=t,t=u),t}function fa(){var t,e,n,s;return t=Es,"smallint"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(sn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="SMALLINT"):(Es=t,t=u)):(Es=t,t=u),t}function ba(){var t,e,n,s;return t=Es,"tinyint"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(un)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="TINYINT"):(Es=t,t=u)):(Es=t,t=u),t}function va(){var t,e,n,s;return t=Es,"bigint"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(fn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="BIGINT"):(Es=t,t=u)):(Es=t,t=u),t}function La(){var t,e,n,s;return t=Es,"float"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(bn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="FLOAT"):(Es=t,t=u)):(Es=t,t=u),t}function Ca(){var t,e,n,s;return t=Es,"double"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(vn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="DOUBLE"):(Es=t,t=u)):(Es=t,t=u),t}function da(){var t,e,n,s;return t=Es,"date"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(Ln)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="DATE"):(Es=t,t=u)):(Es=t,t=u),t}function pa(){var t,e,n,s;return t=Es,"datetime"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(Cn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="DATETIME"):(Es=t,t=u)):(Es=t,t=u),t}function wa(){var t,e,n,s;return t=Es,"time"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(dn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="TIME"):(Es=t,t=u)):(Es=t,t=u),t}function Ea(){var t,e,n,s;return t=Es,"timestamp"===r.substr(Es,9).toLowerCase()?(e=r.substr(Es,9),Es+=9):(e=u,0===Ts&&Ss(pn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="TIMESTAMP"):(Es=t,t=u)):(Es=t,t=u),t}function Aa(){var t,e,n,s;return t=Es,"current_timestamp"===r.substr(Es,17).toLowerCase()?(e=r.substr(Es,17),Es+=17):(e=u,0===Ts&&Ss(_n)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="CURRENT_TIMESTAMP"):(Es=t,t=u)):(Es=t,t=u),t}function ha(){var t;return(t=function(){var t;return"@@"===r.substr(Es,2)?(t="@@",Es+=2):(t=u,0===Ts&&Ss(Pn)),t}())===u&&(t=function(){var t;return 64===r.charCodeAt(Es)?(t="@",Es++):(t=u,0===Ts&&Ss($n)),t}())===u&&(t=function(){var t;return 36===r.charCodeAt(Es)?(t="$",Es++):(t=u,0===Ts&&Ss(Fn)),t}()),t}function ya(){var t;return 61===r.charCodeAt(Es)?(t="=",Es++):(t=u,0===Ts&&Ss(Nr)),t}function Ta(){var t,e,n,s;return t=Es,"add"===r.substr(Es,3).toLowerCase()?(e=r.substr(Es,3),Es+=3):(e=u,0===Ts&&Ss(Yn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="ADD"):(Es=t,t=u)):(Es=t,t=u),t}function ma(){var t,e,n,s;return t=Es,"column"===r.substr(Es,6).toLowerCase()?(e=r.substr(Es,6),Es+=6):(e=u,0===Ts&&Ss(Bn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="COLUMN"):(Es=t,t=u)):(Es=t,t=u),t}function Ia(){var t,e,n,s;return t=Es,"index"===r.substr(Es,5).toLowerCase()?(e=r.substr(Es,5),Es+=5):(e=u,0===Ts&&Ss(Wn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="INDEX"):(Es=t,t=u)):(Es=t,t=u),t}function Na(){var t,e,n,s;return t=Es,"key"===r.substr(Es,3).toLowerCase()?(e=r.substr(Es,3),Es+=3):(e=u,0===Ts&&Ss(L)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="KEY"):(Es=t,t=u)):(Es=t,t=u),t}function Ra(){var t,e,n,s;return t=Es,"comment"===r.substr(Es,7).toLowerCase()?(e=r.substr(Es,7),Es+=7):(e=u,0===Ts&&Ss(Kn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="COMMENT"):(Es=t,t=u)):(Es=t,t=u),t}function Sa(){var t,e,n,s;return t=Es,"constraint"===r.substr(Es,10).toLowerCase()?(e=r.substr(Es,10),Es+=10):(e=u,0===Ts&&Ss(qn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="CONSTRAINT"):(Es=t,t=u)):(Es=t,t=u),t}function _a(){var t;return 46===r.charCodeAt(Es)?(t=".",Es++):(t=u,0===Ts&&Ss(St)),t}function Oa(){var t;return 44===r.charCodeAt(Es)?(t=",",Es++):(t=u,0===Ts&&Ss(ns)),t}function ga(){var t;return 42===r.charCodeAt(Es)?(t="*",Es++):(t=u,0===Ts&&Ss(Fr)),t}function xa(){var t;return 40===r.charCodeAt(Es)?(t="(",Es++):(t=u,0===Ts&&Ss(vr)),t}function Ua(){var t;return 41===r.charCodeAt(Es)?(t=")",Es++):(t=u,0===Ts&&Ss(Lr)),t}function Ma(){var t;return 59===r.charCodeAt(Es)?(t=";",Es++):(t=u,0===Ts&&Ss(os)),t}function ka(){var t;return"->"===r.substr(Es,2)?(t="->",Es+=2):(t=u,0===Ts&&Ss(as)),t}function Da(){var t;return"->>"===r.substr(Es,3)?(t="->>",Es+=3):(t=u,0===Ts&&Ss(is)),t}function $a(){var t;return(t=function(){var t;return"||"===r.substr(Es,2)?(t="||",Es+=2):(t=u,0===Ts&&Ss(ls)),t}())===u&&(t=function(){var t;return"&&"===r.substr(Es,2)?(t="&&",Es+=2):(t=u,0===Ts&&Ss(cs)),t}()),t}function Pa(){var r,t;for(r=[],(t=Ya())===u&&(t=Ga());t!==u;)r.push(t),(t=Ya())===u&&(t=Ga());return r}function Fa(){var r,t;if(r=[],(t=Ya())===u&&(t=Ga()),t!==u)for(;t!==u;)r.push(t),(t=Ya())===u&&(t=Ga());else r=u;return r}function Ga(){var t;return(t=function(){var t,e,n,s,o,a;t=Es,"/*"===r.substr(Es,2)?(e="/*",Es+=2):(e=u,0===Ts&&Ss(fs));if(e!==u){for(n=[],s=Es,o=Es,Ts++,"*/"===r.substr(Es,2)?(a="*/",Es+=2):(a=u,0===Ts&&Ss(bs)),Ts--,a===u?o=void 0:(Es=o,o=u),o!==u&&(a=ja())!==u?s=o=[o,a]:(Es=s,s=u);s!==u;)n.push(s),s=Es,o=Es,Ts++,"*/"===r.substr(Es,2)?(a="*/",Es+=2):(a=u,0===Ts&&Ss(bs)),Ts--,a===u?o=void 0:(Es=o,o=u),o!==u&&(a=ja())!==u?s=o=[o,a]:(Es=s,s=u);n!==u?("*/"===r.substr(Es,2)?(s="*/",Es+=2):(s=u,0===Ts&&Ss(bs)),s!==u?t=e=[e,n,s]:(Es=t,t=u)):(Es=t,t=u)}else Es=t,t=u;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=Es,"--"===r.substr(Es,2)?(e="--",Es+=2):(e=u,0===Ts&&Ss(vs));if(e!==u){for(n=[],s=Es,o=Es,Ts++,a=Ba(),Ts--,a===u?o=void 0:(Es=o,o=u),o!==u&&(a=ja())!==u?s=o=[o,a]:(Es=s,s=u);s!==u;)n.push(s),s=Es,o=Es,Ts++,a=Ba(),Ts--,a===u?o=void 0:(Es=o,o=u),o!==u&&(a=ja())!==u?s=o=[o,a]:(Es=s,s=u);n!==u?t=e=[e,n]:(Es=t,t=u)}else Es=t,t=u;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=Es,35===r.charCodeAt(Es)?(e="#",Es++):(e=u,0===Ts&&Ss(Ls));if(e!==u){for(n=[],s=Es,o=Es,Ts++,a=Ba(),Ts--,a===u?o=void 0:(Es=o,o=u),o!==u&&(a=ja())!==u?s=o=[o,a]:(Es=s,s=u);s!==u;)n.push(s),s=Es,o=Es,Ts++,a=Ba(),Ts--,a===u?o=void 0:(Es=o,o=u),o!==u&&(a=ja())!==u?s=o=[o,a]:(Es=s,s=u);n!==u?t=e=[e,n]:(Es=t,t=u)}else Es=t,t=u;return t}()),t}function Ha(){var r,t,e,n,s,o,a;return r=Es,(t=Ra())!==u&&Pa()!==u?((e=ya())===u&&(e=null),e!==u&&Pa()!==u&&(n=lo())!==u?(r,o=e,a=n,r=t={type:(s=t).toLowerCase(),keyword:s.toLowerCase(),symbol:o,value:a}):(Es=r,r=u)):(Es=r,r=u),r}function ja(){var t;return r.length>Es?(t=r.charAt(Es),Es++):(t=u,0===Ts&&Ss(Cs)),t}function Ya(){var t;return ds.test(r.charAt(Es))?(t=r.charAt(Es),Es++):(t=u,0===Ts&&Ss(ps)),t}function Ba(){var t,e;if((t=function(){var t,e;t=Es,Ts++,r.length>Es?(e=r.charAt(Es),Es++):(e=u,0===Ts&&Ss(Cs));Ts--,e===u?t=void 0:(Es=t,t=u);return t}())===u)if(t=[],Nt.test(r.charAt(Es))?(e=r.charAt(Es),Es++):(e=u,0===Ts&&Ss(Rt)),e!==u)for(;e!==u;)t.push(e),Nt.test(r.charAt(Es))?(e=r.charAt(Es),Es++):(e=u,0===Ts&&Ss(Rt));else t=u;return t}function Wa(){var t,e;return t=Es,Es,bi=[],( true?void 0:0)!==u&&Pa()!==u?((e=Xa())===u&&(e=function(){var t,e;t=Es,function(){var t;return"return"===r.substr(Es,6).toLowerCase()?(t=r.substr(Es,6),Es+=6):(t=u,0===Ts&&Ss(Gn)),t}()!==u&&Pa()!==u&&(e=Va())!==u?(t,t={type:"return",expr:e}):(Es=t,t=u);return t}()),e!==u?(t,t={stmt:e,vars:bi}):(Es=t,t=u)):(Es=t,t=u),t}function Xa(){var t,e,n,s;return t=Es,(e=ri())===u&&(e=ti()),e!==u&&Pa()!==u?((n=function(){var t;return":="===r.substr(Es,2)?(t=":=",Es+=2):(t=u,0===Ts&&Ss(Hn)),t}())===u&&(n=ya()),n!==u&&Pa()!==u&&(s=Va())!==u?(t,t=e={type:"assign",left:e,symbol:n,right:s}):(Es=t,t=u)):(Es=t,t=u),t}function Va(){var t;return(t=zs())===u&&(t=function(){var r,t,e,n,s;r=Es,(t=ri())!==u&&Pa()!==u&&(e=Lu())!==u&&Pa()!==u&&(n=ri())!==u&&Pa()!==u&&(s=du())!==u?(r,r=t={type:"join",ltable:t,rtable:n,op:e,on:s}):(Es=r,r=u);return r}())===u&&(t=Ka())===u&&(t=function(){var t,e;t=Es,function(){var t;return 91===r.charCodeAt(Es)?(t="[",Es++):(t=u,0===Ts&&Ss(ss)),t}()!==u&&Pa()!==u&&(e=Ja())!==u&&Pa()!==u&&function(){var t;return 93===r.charCodeAt(Es)?(t="]",Es++):(t=u,0===Ts&&Ss(us)),t}()!==u?(t,t={type:"array",value:e}):(Es=t,t=u);return t}()),t}function Ka(){var r,t,e,n,s,o,a,i;if(r=Es,(t=qa())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Bu())!==u&&(a=Pa())!==u&&(i=qa())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Bu())!==u&&(a=Pa())!==u&&(i=qa())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,r=t=Sr(t,e)):(Es=r,r=u)}else Es=r,r=u;return r}function qa(){var r,t,e,n,s,o,a,i;if(r=Es,(t=Za())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Xu())!==u&&(a=Pa())!==u&&(i=Za())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Xu())!==u&&(a=Pa())!==u&&(i=Za())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,r=t=Sr(t,e)):(Es=r,r=u)}else Es=r,r=u;return r}function Za(){var r,t,e;return(r=ao())===u&&(r=ri())===u&&(r=Qa())===u&&(r=no())===u&&(r=Es,xa()!==u&&Pa()!==u&&(t=Ka())!==u&&Pa()!==u&&Ua()!==u?(r,(e=t).parentheses=!0,r=e):(Es=r,r=u)),r}function za(){var r,t,e,n,s,o,a;return r=Es,(t=Ju())!==u?(e=Es,(n=Pa())!==u&&(s=_a())!==u&&(o=Pa())!==u&&(a=Ju())!==u?e=n=[n,s,o,a]:(Es=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(Es=r,r=u)):(Es=r,r=u),r}function Qa(){var r,t,e;return r=Es,(t=za())!==u&&Pa()!==u&&xa()!==u&&Pa()!==u?((e=Ja())===u&&(e=null),e!==u&&Pa()!==u&&Ua()!==u?(r,r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(Es=r,r=u)):(Es=r,r=u),r===u&&(r=Es,(t=za())!==u&&(r,t=function(r){return{type:"function",name:r,args:null}}(t)),r=t),r}function Ja(){var r,t,e,n,s,o,a,i;if(r=Es,(t=Za())!==u){for(e=[],n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=Za())!==u?n=s=[s,o,a,i]:(Es=n,n=u);n!==u;)e.push(n),n=Es,(s=Pa())!==u&&(o=Oa())!==u&&(a=Pa())!==u&&(i=Za())!==u?n=s=[s,o,a,i]:(Es=n,n=u);e!==u?(r,r=t=c(t,e)):(Es=r,r=u)}else Es=r,r=u;return r}function ri(){var r,t,e,n,s;return r=Es,(t=ha())!==u&&(e=ti())!==u?(r,n=t,s=e,r=t={type:"var",...s,prefix:n}):(Es=r,r=u),r}function ti(){var t,e,n,s,o;return t=Es,(e=Ju())!==u&&(n=function(){var t,e,n,s,o;t=Es,e=[],n=Es,46===r.charCodeAt(Es)?(s=".",Es++):(s=u,0===Ts&&Ss(St));s!==u&&(o=Ju())!==u?n=s=[s,o]:(Es=n,n=u);for(;n!==u;)e.push(n),n=Es,46===r.charCodeAt(Es)?(s=".",Es++):(s=u,0===Ts&&Ss(St)),s!==u&&(o=Ju())!==u?n=s=[s,o]:(Es=n,n=u);e!==u&&(t,e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==u?(t,s=e,o=n,bi.push(s),t=e={type:"var",name:s,members:o,prefix:null}):(Es=t,t=u),t===u&&(t=Es,(e=vo())!==u&&(t,e={type:"var",name:e.value,members:[],quoted:null,prefix:null}),t=e),t}function ei(){var t;return(t=function(){var t,e,n,s;t=Es,(e=sa())===u&&(e=ua());if(e!==u)if(Pa()!==u)if(xa()!==u)if(Pa()!==u){if(n=[],_t.test(r.charAt(Es))?(s=r.charAt(Es),Es++):(s=u,0===Ts&&Ss(Ot)),s!==u)for(;s!==u;)n.push(s),_t.test(r.charAt(Es))?(s=r.charAt(Es),Es++):(s=u,0===Ts&&Ss(Ot));else n=u;n!==u&&(s=Pa())!==u&&Ua()!==u?(t,e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Es=t,t=u)}else Es=t,t=u;else Es=t,t=u;else Es=t,t=u;else Es=t,t=u;t===u&&(t=Es,(e=sa())!==u&&(t,e=ws(e)),(t=e)===u&&(t=Es,(e=ua())!==u&&(t,e=ws(e)),t=e));return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f,b,v;t=Es,(e=oa())===u&&(e=aa())===u&&(e=la())===u&&(e=ca())===u&&(e=fa())===u&&(e=ba())===u&&(e=va())===u&&(e=La())===u&&(e=Ca());if(e!==u)if((n=Pa())!==u)if((s=xa())!==u)if((o=Pa())!==u){if(a=[],_t.test(r.charAt(Es))?(i=r.charAt(Es),Es++):(i=u,0===Ts&&Ss(Ot)),i!==u)for(;i!==u;)a.push(i),_t.test(r.charAt(Es))?(i=r.charAt(Es),Es++):(i=u,0===Ts&&Ss(Ot));else a=u;if(a!==u)if((i=Pa())!==u){if(l=Es,(c=Oa())!==u)if((f=Pa())!==u){if(b=[],_t.test(r.charAt(Es))?(v=r.charAt(Es),Es++):(v=u,0===Ts&&Ss(Ot)),v!==u)for(;v!==u;)b.push(v),_t.test(r.charAt(Es))?(v=r.charAt(Es),Es++):(v=u,0===Ts&&Ss(Ot));else b=u;b!==u?l=c=[c,f,b]:(Es=l,l=u)}else Es=l,l=u;else Es=l,l=u;l===u&&(l=null),l!==u&&(c=Pa())!==u&&(f=Ua())!==u&&(b=Pa())!==u?((v=ni())===u&&(v=null),v!==u?(t,L=l,C=v,e={dataType:e,length:parseInt(a.join(""),10),scale:L&&parseInt(L[2].join(""),10),parentheses:!0,suffix:C},t=e):(Es=t,t=u)):(Es=t,t=u)}else Es=t,t=u;else Es=t,t=u}else Es=t,t=u;else Es=t,t=u;else Es=t,t=u;else Es=t,t=u;var L,C;if(t===u){if(t=Es,(e=oa())===u&&(e=aa())===u&&(e=la())===u&&(e=ca())===u&&(e=fa())===u&&(e=ba())===u&&(e=va())===u&&(e=La())===u&&(e=Ca()),e!==u){if(n=[],_t.test(r.charAt(Es))?(s=r.charAt(Es),Es++):(s=u,0===Ts&&Ss(Ot)),s!==u)for(;s!==u;)n.push(s),_t.test(r.charAt(Es))?(s=r.charAt(Es),Es++):(s=u,0===Ts&&Ss(Ot));else n=u;n!==u&&(s=Pa())!==u?((o=ni())===u&&(o=null),o!==u?(t,e=function(r,t,e){return{dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(Es=t,t=u)):(Es=t,t=u)}else Es=t,t=u;t===u&&(t=Es,(e=oa())===u&&(e=aa())===u&&(e=la())===u&&(e=ca())===u&&(e=fa())===u&&(e=ba())===u&&(e=va())===u&&(e=La())===u&&(e=Ca()),e!==u&&(n=Pa())!==u?((s=ni())===u&&(s=null),s!==u&&(o=Pa())!==u?(t,e=function(r,t){return{dataType:r,suffix:t}}(e,s),t=e):(Es=t,t=u)):(Es=t,t=u))}return t}())===u&&(t=function(){var t,e,n,s;t=Es,(e=da())===u&&(e=pa())===u&&(e=wa())===u&&(e=Ea());if(e!==u)if(Pa()!==u)if(xa()!==u)if(Pa()!==u){if(n=[],_t.test(r.charAt(Es))?(s=r.charAt(Es),Es++):(s=u,0===Ts&&Ss(Ot)),s!==u)for(;s!==u;)n.push(s),_t.test(r.charAt(Es))?(s=r.charAt(Es),Es++):(s=u,0===Ts&&Ss(Ot));else n=u;n!==u&&(s=Pa())!==u&&Ua()!==u?(t,e={dataType:e,length:parseInt(n.join(""),10),parentheses:!0},t=e):(Es=t,t=u)}else Es=t,t=u;else Es=t,t=u;else Es=t,t=u;else Es=t,t=u;t===u&&(t=Es,(e=da())===u&&(e=pa())===u&&(e=wa())===u&&(e=Ea()),e!==u&&(t,e=ws(e)),t=e);return t}())===u&&(t=function(){var t,e;t=Es,(e=function(){var t,e,n,s;return t=Es,"json"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(nn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="JSON"):(Es=t,t=u)):(Es=t,t=u),t}())!==u&&(t,e=ws(e));return t=e}())===u&&(t=function(){var t,e;t=Es,(e=function(){var t,e,n,s;return t=Es,"tinytext"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(on)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="TINYTEXT"):(Es=t,t=u)):(Es=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=Es,"text"===r.substr(Es,4).toLowerCase()?(e=r.substr(Es,4),Es+=4):(e=u,0===Ts&&Ss(an)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="TEXT"):(Es=t,t=u)):(Es=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=Es,"mediumtext"===r.substr(Es,10).toLowerCase()?(e=r.substr(Es,10),Es+=10):(e=u,0===Ts&&Ss(ln)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="MEDIUMTEXT"):(Es=t,t=u)):(Es=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=Es,"longtext"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(cn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="LONGTEXT"):(Es=t,t=u)):(Es=t,t=u),t}());e!==u&&(t,e={dataType:e});return t=e}()),t}function ni(){var t,e,n;return t=Es,(e=ia())===u&&(e=null),e!==u&&Pa()!==u?((n=function(){var t,e,n,s;return t=Es,"zerofill"===r.substr(Es,8).toLowerCase()?(e=r.substr(Es,8),Es+=8):(e=u,0===Ts&&Ss(tn)),e!==u?(n=Es,Ts++,s=ro(),Ts--,s===u?n=void 0:(Es=n,n=u),n!==u?(t,t=e="ZEROFILL"):(Es=t,t=u)):(Es=t,t=u),t}())===u&&(n=null),n!==u?(t,t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(Es=t,t=u)):(Es=t,t=u),t}const si={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function ui(r,t){return{type:"unary_expr",operator:r,expr:t}}function oi(r,t,e){return{type:"binary_expr",operator:r,left:t,right:e}}function ai(r){const t=n(Number.MAX_SAFE_INTEGER);return!(n(r)<t)}function ii(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)delete t[r][e].tableList,delete t[r][e].columnList,n.push(t[r][e]);return n}function li(r,t){let e=r;for(let r=0;r<t.length;r++)e=oi(t[r][1],e,t[r][3]);return e}function ci(r){const t=Ci[r];return t||(r||null)}function fi(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=ci(r[1])),t.add(r.join("::"))}return Array.from(t)}let bi=[];const vi=new Set,Li=new Set,Ci={};if((e=a())!==u&&Es===r.length)return e;throw e!==u&&Es<r.length&&Ss({type:"end"}),_s(ys,hs<r.length?r.charAt(hs):null,hs<r.length?Rs(hs,hs+1):Rs(hs,hs))}}},function(r,t,e){"use strict";var n=e(0);function s(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,s)}!function(r,t){function e(){this.constructor=r}e.prototype=t.prototype,r.prototype=new e}(s,Error),s.buildMessage=function(r,t){var e={literal:function(r){return'"'+s(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?u(r.parts[t][0])+"-"+u(r.parts[t][1]):u(r.parts[t]);return"["+(r.inverted?"^":"")+e+"]"},any:function(r){return"any character"},end:function(r){return"end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function s(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}function u(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}return"Expected "+function(r){var t,n,s,u=new Array(r.length);for(t=0;t<r.length;t++)u[t]=(s=r[t],e[s.type](s));if(u.sort(),u.length>0){for(t=1,n=1;t<u.length;t++)u[t-1]!==u[t]&&(u[n]=u[t],n++);u.length=n}switch(u.length){case 1:return u[0];case 2:return u[0]+" or "+u[1];default:return u.slice(0,-1).join(", ")+", or "+u[u.length-1]}}(r)+" but "+function(r){return r?'"'+s(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:s,parse:function(r,t){t=void 0!==t?t:{};var e,u={},o={start:xs},a=xs,i=function(r,t){return vi(r,t,1)},l=Ns("IF",!0),c=function(r,t){return vi(r,t)},f=Ns("AUTO_INCREMENT",!0),b=Ns("UNIQUE",!0),v=Ns("KEY",!0),L=Ns("PRIMARY",!0),C=Ns("COLUMN_FORMAT",!0),d=Ns("FIXED",!0),p=Ns("DYNAMIC",!0),w=Ns("DEFAULT",!0),E=Ns("STORAGE",!0),A=Ns("DISK",!0),h=Ns("MEMORY",!0),y=Ns("ALGORITHM",!0),T=Ns("INSTANT",!0),m=Ns("INPLACE",!0),I=Ns("COPY",!0),N=Ns("LOCK",!0),R=Ns("NONE",!0),S=Ns("SHARED",!0),_=Ns("EXCLUSIVE",!0),O=Ns("PRIMARY KEY",!0),g=Ns("FOREIGN KEY",!0),x=Ns("MATCH FULL",!0),U=Ns("MATCH PARTIAL",!0),M=Ns("MATCH SIMPLE",!0),k=Ns("ON",!0),D=Ns("DELETE",!0),$=Ns("UPDATE",!0),P=Ns("RESTRICT",!0),F=Ns("CASCADE",!0),G=Ns("SET NULL",!0),H=Ns("NO ACTION",!0),j=Ns("SET DEFAULT",!0),Y=Ns("CHARACTER",!0),B=Ns("SET",!0),W=Ns("CHARSET",!0),X=Ns("COLLATE",!0),V=Ns("AVG_ROW_LENGTH",!0),K=Ns("KEY_BLOCK_SIZE",!0),q=Ns("MAX_ROWS",!0),Z=Ns("MIN_ROWS",!0),z=Ns("STATS_SAMPLE_PAGES",!0),Q=Ns("CONNECTION",!0),J=Ns("COMPRESSION",!0),rr=Ns("'",!1),tr=Ns("ZLIB",!0),er=Ns("LZ4",!0),nr=Ns("ENGINE",!0),sr=Ns("READ",!0),ur=Ns("LOCAL",!0),or=Ns("LOW_PRIORITY",!0),ar=Ns("WRITE",!0),ir=Ns("(",!1),lr=Ns(")",!1),cr=Ns(".",!1),fr=Ns("BTREE",!0),br=Ns("HASH",!0),vr=Ns("WITH",!0),Lr=Ns("PARSER",!0),Cr=Ns("VISIBLE",!0),dr=Ns("INVISIBLE",!0),pr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;Ai[t]=t,e&&(Ai[e]=t),function(r){const t=di(r);r.clear(),t.forEach(t=>r.add(t))}(Ei)}),t},wr=Ns("FOLLOWING",!0),Er=Ns("PRECEDING",!0),Ar=Ns("CURRENT",!0),hr=Ns("ROW",!0),yr=Ns("UNBOUNDED",!0),Tr=Ns("=",!1),mr=function(r,t){return Li(r,t)},Ir=Ns("!",!1),Nr=function(r){return r[0]+" "+r[2]},Rr=Ns(">=",!1),Sr=Ns(">",!1),_r=Ns("<=",!1),Or=Ns("<>",!1),gr=Ns("<",!1),xr=Ns("==",!1),Ur=Ns("!=",!1),Mr=function(r,t){return{op:r,right:t}},kr=Ns("+",!1),Dr=Ns("-",!1),$r=Ns("*",!1),Pr=Ns("/",!1),Fr=Ns("%",!1),Gr=function(r){return!0===li[r.toUpperCase()]},Hr=Ns('"',!1),jr=/^[^"]/,Yr=Rs(['"'],!0,!1),Br=function(r){return r.join("")},Wr=/^[^']/,Xr=Rs(["'"],!0,!1),Vr=Ns("`",!1),Kr=/^[^`]/,qr=Rs(["`"],!0,!1),Zr=function(r,t){return r+t.join("")},zr=/^[A-Za-z_]/,Qr=Rs([["A","Z"],["a","z"],"_"],!1,!1),Jr=/^[A-Za-z0-9_]/,rt=Rs([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),tt=/^[A-Za-z0-9_:]/,et=Rs([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),nt=Ns(":",!1),st=Ns("OVER",!0),ut=Ns("AT TIME ZONE",!0),ot=function(r){return{type:"string",value:r[1].join("")}},at=function(r,t){return{type:r.toLowerCase(),value:t[1].join("")}},it=/^[^"\\\0-\x1F\x7F]/,lt=Rs(['"',"\\",["\0",""],""],!0,!1),ct=/^[^'\\]/,ft=Rs(["'","\\"],!0,!1),bt=Ns("\\'",!1),vt=Ns('\\"',!1),Lt=Ns("\\\\",!1),Ct=Ns("\\/",!1),dt=Ns("\\b",!1),pt=Ns("\\f",!1),wt=Ns("\\n",!1),Et=Ns("\\r",!1),At=Ns("\\t",!1),ht=Ns("\\u",!1),yt=Ns("\\",!1),Tt=Ns("''",!1),mt=Ns('""',!1),It=Ns("``",!1),Nt=/^[\n\r]/,Rt=Rs(["\n","\r"],!1,!1),St=/^[0-9]/,_t=Rs([["0","9"]],!1,!1),Ot=/^[0-9a-fA-F]/,gt=Rs([["0","9"],["a","f"],["A","F"]],!1,!1),xt=/^[eE]/,Ut=Rs(["e","E"],!1,!1),Mt=/^[+\-]/,kt=Rs(["+","-"],!1,!1),Dt=Ns("NULL",!0),$t=Ns("NOT NULL",!0),Pt=Ns("TRUE",!0),Ft=Ns("TO",!0),Gt=Ns("FALSE",!0),Ht=(Ns("SHOW",!0),Ns("DROP",!0)),jt=Ns("USE",!0),Yt=Ns("ALTER",!0),Bt=Ns("SELECT",!0),Wt=Ns("CREATE",!0),Xt=Ns("TEMPORARY",!0),Vt=Ns("INSERT",!0),Kt=Ns("RECURSIVE",!1),qt=Ns("REPLACE",!0),Zt=Ns("RENAME",!0),zt=Ns("IGNORE",!0),Qt=(Ns("EXPLAIN",!0),Ns("PARTITION",!0)),Jt=Ns("INTO",!0),re=Ns("OVERWRITE",!0),te=Ns("FROM",!0),ee=Ns("UNLOCK",!0),ne=Ns("AS",!0),se=Ns("TABLE",!0),ue=Ns("TABLES",!0),oe=Ns("DATABASE",!0),ae=Ns("SCHEME",!0),ie=Ns("LEFT",!0),le=Ns("RIGHT",!0),ce=Ns("FULL",!0),fe=Ns("CROSS",!0),be=Ns("INNER",!0),ve=Ns("JOIN",!0),Le=Ns("OUTER",!0),Ce=Ns("UNION",!0),de=Ns("VALUES",!0),pe=Ns("USING",!0),we=Ns("WHERE",!0),Ee=Ns("GROUP",!0),Ae=Ns("BY",!0),he=Ns("ORDER",!0),ye=Ns("HAVING",!0),Te=Ns("LIMIT",!0),me=Ns("OFFSET",!0),Ie=Ns("ASC",!0),Ne=Ns("DESC",!0),Re=Ns("ALL",!0),Se=Ns("DISTINCT",!0),_e=Ns("BETWEEN",!0),Oe=Ns("IN",!0),ge=Ns("IS",!0),xe=Ns("LIKE",!0),Ue=Ns("RLIKE",!0),Me=Ns("EXISTS",!0),ke=Ns("NOT",!0),De=Ns("AND",!0),$e=Ns("OR",!0),Pe=Ns("COUNT",!0),Fe=Ns("MAX",!0),Ge=Ns("MIN",!0),He=Ns("SUM",!0),je=Ns("AVG",!0),Ye=Ns("CALL",!0),Be=Ns("CASE",!0),We=Ns("WHEN",!0),Xe=Ns("THEN",!0),Ve=Ns("ELSE",!0),Ke=Ns("END",!0),qe=Ns("CAST",!0),Ze=Ns("CHAR",!0),ze=Ns("VARCHAR",!0),Qe=Ns("NUMERIC",!0),Je=Ns("DECIMAL",!0),rn=Ns("SIGNED",!0),tn=Ns("STRING",!0),en=Ns("UNSIGNED",!0),nn=Ns("INT",!0),sn=Ns("ZEROFILL",!0),un=Ns("INTEGER",!0),on=Ns("JSON",!0),an=Ns("SMALLINT",!0),ln=Ns("TINYINT",!0),cn=Ns("TINYTEXT",!0),fn=Ns("TEXT",!0),bn=Ns("MEDIUMTEXT",!0),vn=Ns("LONGTEXT",!0),Ln=Ns("BIGINT",!0),Cn=Ns("FLOAT",!0),dn=Ns("DOUBLE",!0),pn=Ns("DATE",!0),wn=Ns("DATETIME",!0),En=Ns("ROWS",!0),An=Ns("TIME",!0),hn=Ns("TIMESTAMP",!0),yn=Ns("TRUNCATE",!0),Tn=Ns("USER",!0),mn=Ns("CURRENT_DATE",!0),In=(Ns("ADDDATE",!0),Ns("INTERVAL",!0)),Nn=Ns("YEAR",!0),Rn=Ns("MONTH",!0),Sn=Ns("DAY",!0),_n=Ns("HOUR",!0),On=Ns("MINUTE",!0),gn=Ns("SECOND",!0),xn=Ns("CURRENT_TIME",!0),Un=Ns("CURRENT_TIMESTAMP",!0),Mn=Ns("CURRENT_USER",!0),kn=Ns("SESSION_USER",!0),Dn=Ns("SYSTEM_USER",!0),$n=Ns("GLOBAL",!0),Pn=Ns("SESSION",!0),Fn=Ns("PERSIST",!0),Gn=Ns("PERSIST_ONLY",!0),Hn=Ns("@",!1),jn=Ns("@@",!1),Yn=Ns("$",!1),Bn=Ns("return",!0),Wn=Ns(":=",!1),Xn=Ns("DUAL",!0),Vn=Ns("ADD",!0),Kn=Ns("COLUMN",!0),qn=Ns("INDEX",!0),Zn=Ns("FULLTEXT",!0),zn=Ns("SPATIAL",!0),Qn=Ns("COMMENT",!0),Jn=Ns("CONSTRAINT",!0),rs=Ns("REFERENCES",!0),ts=Ns("SQL_CALC_FOUND_ROWS",!0),es=Ns("SQL_CACHE",!0),ns=Ns("SQL_NO_CACHE",!0),ss=Ns("SQL_SMALL_RESULT",!0),us=Ns("SQL_BIG_RESULT",!0),os=Ns("SQL_BUFFER_RESULT",!0),as=Ns(",",!1),is=Ns("[",!1),ls=Ns("]",!1),cs=Ns(";",!1),fs=Ns("||",!1),bs=Ns("&&",!1),vs=Ns("/*",!1),Ls=Ns("*/",!1),Cs=Ns("--",!1),ds=Ns("#",!1),ps={type:"any"},ws=/^[ \t\n\r]/,Es=Rs([" ","\t","\n","\r"],!1,!1),As=function(r){return{dataType:r}},hs=0,ys=[{line:1,column:1}],Ts=0,ms=[],Is=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule]}function Ns(r,t){return{type:"literal",text:r,ignoreCase:t}}function Rs(r,t,e){return{type:"class",parts:r,inverted:t,ignoreCase:e}}function Ss(t){var e,n=ys[t];if(n)return n;for(e=t-1;!ys[e];)e--;for(n={line:(n=ys[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return ys[t]=n,n}function _s(r,t){var e=Ss(r),n=Ss(t);return{start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Os(r){hs<Ts||(hs>Ts&&(Ts=hs,ms=[]),ms.push(r))}function gs(r,t,e){return new s(s.buildMessage(r,t),r,t,e)}function xs(){var r,t;return r=hs,Ya()!==u?((t=function(){var r,t,e,n,s,o,a,i;if(r=hs,(t=Ms())!==u){if(e=[],n=hs,(s=Ya())!==u&&(o=Ha())!==u&&(a=Ya())!==u&&(i=Ms())!==u?n=s=[s,o,a,i]:(hs=n,n=u),n!==u)for(;n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=Ha())!==u&&(a=Ya())!==u&&(i=Ms())!==u?n=s=[s,o,a,i]:(hs=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return{tableList:Array.from(wi),columnList:di(Ei),ast:e}}(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())===u&&(t=Us())===u&&(t=Ms()),t!==u?(r,r=t):(hs=r,r=u)):(hs=r,r=u),r}function Us(){var t;return(t=function(){var r,t,e,n,s,o;r=hs,(t=_o())!==u&&Ya()!==u&&(e=Fo())!==u&&Ya()!==u&&(n=Lu())!==u?(r,a=t,l=e,(c=n)&&c.forEach(r=>wi.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(wi),columnList:di(Ei),ast:{type:a.toLowerCase(),keyword:l.toLowerCase(),name:c}},r=t):(hs=r,r=u);var a,l,c;r===u&&(r=hs,(t=_o())!==u&&Ya()!==u&&(e=ga())!==u&&Ya()!==u&&(n=ro())!==u&&Ya()!==u&&Ho()!==u&&Ya()!==u&&(s=wu())!==u&&Ya()!==u?((o=function(){var r,t,e,n,s,o;r=hs,(t=js())===u&&(t=Ys());if(t!==u){for(e=[],n=hs,(s=Ya())!==u?((o=js())===u&&(o=Ys()),o!==u?n=s=[s,o]:(hs=n,n=u)):(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u?((o=js())===u&&(o=Ys()),o!==u?n=s=[s,o]:(hs=n,n=u)):(hs=n,n=u);e!==u?(r,t=i(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())===u&&(o=null),o!==u&&Ya()!==u?(r,t=function(r,t,e,n,s){return{tableList:Array.from(wi),columnList:di(Ei),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:s}}}(t,e,n,s,o),r=t):(hs=r,r=u)):(hs=r,r=u));return r}())===u&&(t=function(){var t;(t=function(){var t,e,n,s,o,a,i,l,f,b;t=hs,(e=go())!==u&&Ya()!==u?((n=xo())===u&&(n=null),n!==u&&Ya()!==u&&Fo()!==u&&Ya()!==u?((s=$s())===u&&(s=null),s!==u&&Ya()!==u&&(o=Lu())!==u&&Ya()!==u&&(a=function(){var r,t,e,n,s,o,a,i,l;if(r=hs,(t=$a())!==u)if(Ya()!==u)if((e=Ps())!==u){for(n=[],s=hs,(o=Ya())!==u&&(a=ka())!==u&&(i=Ya())!==u&&(l=Ps())!==u?s=o=[o,a,i,l]:(hs=s,s=u);s!==u;)n.push(s),s=hs,(o=Ya())!==u&&(a=ka())!==u&&(i=Ya())!==u&&(l=Ps())!==u?s=o=[o,a,i,l]:(hs=s,s=u);n!==u&&(s=Ya())!==u&&(o=Pa())!==u?(r,t=c(e,n),r=t):(hs=r,r=u)}else hs=r,r=u;else hs=r,r=u;else hs=r,r=u;return r}())!==u&&Ya()!==u?((i=function(){var r,t,e,n,s,o,a,i;if(r=hs,(t=Zs())!==u){for(e=[],n=hs,(s=Ya())!==u?((o=ka())===u&&(o=null),o!==u&&(a=Ya())!==u&&(i=Zs())!==u?n=s=[s,o,a,i]:(hs=n,n=u)):(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u?((o=ka())===u&&(o=null),o!==u&&(a=Ya())!==u&&(i=Zs())!==u?n=s=[s,o,a,i]:(hs=n,n=u)):(hs=n,n=u);e!==u?(r,t=vi(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())===u&&(i=null),i!==u&&Ya()!==u?((l=function(){var t,e,n,s;t=hs,"ignore"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(zt));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(l=Uo()),l===u&&(l=null),l!==u&&Ya()!==u?((f=Po())===u&&(f=null),f!==u&&Ya()!==u?((b=Ds())===u&&(b=null),b!==u?(t,v=e,L=n,C=s,p=a,w=i,E=l,A=f,h=b,(d=o)&&d.forEach(r=>wi.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(wi),columnList:di(Ei),ast:{type:v[0].toLowerCase(),keyword:"table",temporary:L&&L[0].toLowerCase(),if_not_exists:C,table:d,ignore_replace:E&&E[0].toLowerCase(),as:A&&A[0].toLowerCase(),query_expr:h&&h.ast,create_definitions:p,table_options:w}},t=e):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u);var v,L,C,d,p,w,E,A,h;t===u&&(t=hs,(e=go())!==u&&Ya()!==u?((n=xo())===u&&(n=null),n!==u&&Ya()!==u&&Fo()!==u&&Ya()!==u?((s=$s())===u&&(s=null),s!==u&&Ya()!==u&&(o=Lu())!==u&&Ya()!==u&&(a=function r(){var t,e;(t=function(){var r,t;r=hs,ra()!==u&&Ya()!==u&&(t=Lu())!==u?(r,r={type:"like",table:t}):(hs=r,r=u);return r}())===u&&(t=hs,$a()!==u&&Ya()!==u&&(e=r())!==u&&Ya()!==u&&Pa()!==u?(t,(n=e).parentheses=!0,t=n):(hs=t,t=u));var n;return t}())!==u?(t,e=function(r,t,e,n,s){return n&&n.forEach(r=>wi.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(wi),columnList:di(Ei),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e,table:n,like:s}}}(e,n,s,o,a),t=e):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u));return t}())===u&&(t=function(){var t,e,n,s,o,a;t=hs,(e=go())!==u&&Ya()!==u?((n=function(){var t,e,n,s;t=hs,"database"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os(oe));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="DATABASE"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=hs,"scheme"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(ae));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="SCHEME"):(hs=t,t=u)):(hs=t,t=u);return t}()),n!==u&&Ya()!==u?((s=$s())===u&&(s=null),s!==u&&Ya()!==u&&(o=so())!==u&&Ya()!==u?((a=function(){var r,t,e,n,s,o;if(r=hs,(t=qs())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=qs())!==u?n=s=[s,o]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=qs())!==u?n=s=[s,o]:(hs=n,n=u);e!==u?(r,t=i(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())===u&&(a=null),a!==u?(t,l=e,c=s,f=o,b=a,e={tableList:Array.from(wi),columnList:di(Ei),ast:{type:l[0].toLowerCase(),keyword:"database",if_not_exists:c,database:f,create_definitions:b}},t=e):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u);var l,c,f,b;return t}());return t}())===u&&(t=function(){var t,e,n,s;t=hs,(e=function(){var t,e,n,s;t=hs,"truncate"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os(yn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="TRUNCATE"):(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&Ya()!==u?((n=Fo())===u&&(n=null),n!==u&&Ya()!==u&&(s=Lu())!==u?(t,o=e,a=n,(i=s)&&i.forEach(r=>wi.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(wi),columnList:di(Ei),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(hs=t,t=u)):(hs=t,t=u);var o,a,i;return t}())===u&&(t=function(){var r,t,e;r=hs,(t=Mo())!==u&&Ya()!==u&&Fo()!==u&&Ya()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=hs,(t=cu())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=cu())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=cu())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,t=c(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())!==u?(r,(n=e).forEach(r=>r.forEach(r=>r.table&&wi.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(wi),columnList:di(Ei),ast:{type:"rename",table:n}},r=t):(hs=r,r=u);var n;return r}())===u&&(t=function(){var t,e,n;t=hs,(e=function(){var t,e,n,s;t=hs,"call"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(Ye));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="CALL"):(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&Ya()!==u&&(n=ni())!==u?(t,s=n,e={tableList:Array.from(wi),columnList:di(Ei),ast:{type:"call",expr:s}},t=e):(hs=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n;t=hs,(e=function(){var t,e,n,s;t=hs,"use"===r.substr(hs,3).toLowerCase()?(e=r.substr(hs,3),hs+=3):(e=u,0===Is&&Os(jt));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&Ya()!==u&&(n=to())!==u?(t,s=n,wi.add(`use::${s}::null`),e={tableList:Array.from(wi),columnList:di(Ei),ast:{type:"use",db:s}},t=e):(hs=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n,s;t=hs,(e=function(){var t,e,n,s;t=hs,"alter"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(Yt));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&Ya()!==u&&Fo()!==u&&Ya()!==u&&(n=Lu())!==u&&Ya()!==u&&(s=function(){var r,t,e,n,s,o,a,i;if(r=hs,(t=Hs())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=Hs())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=Hs())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,t=c(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())!==u?(t,a=s,(o=n)&&o.length>0&&o.forEach(r=>wi.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(wi),columnList:di(Ei),ast:{type:"alter",table:o,expr:a}},t=e):(hs=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n,s;t=hs,(e=$o())!==u&&Ya()!==u?((n=function(){var t,e,n,s;t=hs,"global"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os($n));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="GLOBAL"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=hs,"session"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(Pn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="SESSION"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=hs,"local"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(ur));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="LOCAL"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=hs,"persist"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(Fn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="PERSIST"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=hs,"persist_only"===r.substr(hs,12).toLowerCase()?(e=r.substr(hs,12),hs+=12):(e=u,0===Is&&Os(Gn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="PERSIST_ONLY"):(hs=t,t=u)):(hs=t,t=u);return t}()),n===u&&(n=null),n!==u&&Ya()!==u&&(s=za())!==u?(t,o=n,(a=s).keyword=o,e={tableList:Array.from(wi),columnList:di(Ei),ast:{type:"set",expr:a}},t=e):(hs=t,t=u)):(hs=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n;t=hs,(e=function(){var t,e,n,s;t=hs,"lock"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(N));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&Ya()!==u&&Go()!==u&&Ya()!==u&&(n=function(){var r,t,e,n,s,o,a,i;if(r=hs,(t=zs())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=zs())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=zs())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,t=vi(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())!==u?(t,s=n,e={tableList:Array.from(wi),columnList:di(Ei),ast:{type:"lock",keyword:"tables",tables:s}},t=e):(hs=t,t=u);var s;return t}())===u&&(t=function(){var t,e;t=hs,(e=function(){var t,e,n,s;t=hs,"unlock"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(ee));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&Ya()!==u&&Go()!==u?(t,e={tableList:Array.from(wi),columnList:di(Ei),ast:{type:"unlock",keyword:"tables"}},t=e):(hs=t,t=u);return t}()),t}function Ms(){var t;return(t=Ds())===u&&(t=function(){var r,t,e,n,s;r=hs,(t=Oo())!==u&&Ya()!==u&&(e=Lu())!==u&&Ya()!==u&&$o()!==u&&Ya()!==u&&(n=function(){var r,t,e,n,s,o,a,i;if(r=hs,(t=gu())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=gu())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=gu())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,t=c(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())!==u&&Ya()!==u?((s=Au())===u&&(s=null),s!==u?(r,t=function(r,t,e){const n={};return r&&r.forEach(r=>{const{db:t,as:e,table:s,join:u}=r,o=u?"select":"update";t&&(n[s]=t),s&&wi.add(`${o}::${t}::${s}`)}),t&&t.forEach(r=>{if(r.table){const t=Ci(r.table);wi.add(`update::${n[t]||null}::${t}`)}Ei.add(`update::${r.table}::${r.column}`)}),{tableList:Array.from(wi),columnList:di(Ei),ast:{type:"update",table:r,set:t,where:e}}}(e,n,s),r=t):(hs=r,r=u)):(hs=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=hs,(t=Mu())!==u&&Ya()!==u&&(e=Do())!==u&&Ya()!==u?((n=Fo())===u&&(n=null),n!==u&&Ya()!==u&&(s=wu())!==u?((o=Uu())===u&&(o=null),o!==u&&Ya()!==u&&$a()!==u&&Ya()!==u&&(a=function(){var r,t,e,n,s,o,a,i;if(r=hs,(t=no())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=no())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=no())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,t=c(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())!==u&&Ya()!==u&&Pa()!==u&&Ya()!==u&&(i=xu())!==u?(r,t=function(r,t,e,n,s,u,o){if(n&&(wi.add(`insert::${n.db}::${n.table}`),n.as=null),u){let r=n&&n.table||null;Array.isArray(o)&&o.forEach((r,t)=>{if(r.value.length!=u.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),u.forEach(t=>Ei.add(`insert::${r}::${t}`))}const a=e?" "+e.toLowerCase():"";return{tableList:Array.from(wi),columnList:di(Ei),ast:{type:r,prefix:`${t.toLowerCase()}${a}`,table:[n],columns:u,values:o,partition:s}}}(t,e,n,s,o,a,i),r=t):(hs=r,r=u)):(hs=r,r=u)):(hs=r,r=u);return r}())===u&&(t=function(){var t,e,n,s,o,a,i;t=hs,(e=Mu())!==u&&Ya()!==u?((n=Do())===u&&(n=function(){var t,e,n,s;t=hs,"overwrite"===r.substr(hs,9).toLowerCase()?(e=r.substr(hs,9),hs+=9):(e=u,0===Is&&Os(re));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="OVERWRITE"):(hs=t,t=u)):(hs=t,t=u);return t}()),n!==u&&Ya()!==u?((s=Fo())===u&&(s=null),s!==u&&Ya()!==u&&(o=wu())!==u&&Ya()!==u?((a=Uu())===u&&(a=null),a!==u&&Ya()!==u&&(i=xu())!==u?(t,e=function(r,t,e,n,s,u){n&&(wi.add(`insert::${n.db}::${n.table}`),Ei.add(`insert::${n.table}::(.*)`),n.as=null);const o=e?" "+e.toLowerCase():"";return{tableList:Array.from(wi),columnList:di(Ei),ast:{type:r,prefix:`${t.toLowerCase()}${o}`,table:[n],columns:null,values:u,partition:s}}}(e,n,s,o,a,i),t=e):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=function(){var t,e,n,s,o;t=hs,(e=function(){var t,e,n,s;t=hs,"delete"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(D));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&Ya()!==u?((n=Lu())===u&&(n=null),n!==u&&Ya()!==u&&(s=lu())!==u&&Ya()!==u?((o=Au())===u&&(o=null),o!==u?(t,e=function(r,t,e){if(t&&t.forEach(r=>{const{db:t,as:e,table:n,join:s}=r,u=s?"select":"delete";n&&wi.add(`${u}::${t}::${n}`),s||Ei.add(`delete::${n}::(.*)`)}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}]}return{tableList:Array.from(wi),columnList:di(Ei),ast:{type:"delete",table:r,from:t,where:e}}}(n,s,o),t=e):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=Us())===u&&(t=function(){var r,t;r=[],t=Za();for(;t!==u;)r.push(t),t=Za();return r}()),t}function ks(){var r,t;return r=hs,(t=Bo())!==u&&Ya()!==u&&qo()!==u?(r,r=t="union all"):(hs=r,r=u),r===u&&(r=hs,(t=Bo())!==u&&(r,t="union"),r=t),r}function Ds(){var r,t,e,n,s,o,a,i;if(r=hs,(t=Qs())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=ks())!==u&&(a=Ya())!==u&&(i=Qs())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=ks())!==u&&(a=Ya())!==u&&(i=Qs())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u&&(n=Ya())!==u?((s=Nu())===u&&(s=null),s!==u&&(o=Ya())!==u?((a=Ou())===u&&(a=null),a!==u?(r,r=t=function(r,t,e,n){t.forEach(r=>r.slice(1,1));let s=r;for(let r=0;r<t.length;r++)s._next=t[r][3],s.set_op=t[r][1],s=s._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(wi),columnList:di(Ei),ast:r}}(t,e,s,a)):(hs=r,r=u)):(hs=r,r=u)):(hs=r,r=u)}else hs=r,r=u;return r}function $s(){var t,e;return t=hs,"if"===r.substr(hs,2).toLowerCase()?(e=r.substr(hs,2),hs+=2):(e=u,0===Is&&Os(l)),e!==u&&Ya()!==u&&na()!==u&&Ya()!==u&&ea()!==u?(t,t=e="IF NOT EXISTS"):(hs=t,t=u),t}function Ps(){var t;return(t=Gs())===u&&(t=Bs())===u&&(t=Ws())===u&&(t=function(){var t;(t=function(){var t,e,n,s,o,a;t=hs,(e=Xs())===u&&(e=null);e!==u&&Ya()!==u?("primary key"===r.substr(hs,11).toLowerCase()?(n=r.substr(hs,11),hs+=11):(n=u,0===Is&&Os(O)),n!==u&&Ya()!==u?((s=fu())===u&&(s=null),s!==u&&Ya()!==u&&(o=tu())!==u&&Ya()!==u?((a=bu())===u&&(a=null),a!==u?(t,l=n,c=s,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:l.toLowerCase(),keyword:i&&i.keyword,index_type:c,resource:"constraint",index_options:b},t=e):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u);var i,l,c,f,b;return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l;t=hs,(e=Xs())===u&&(e=null);e!==u&&Ya()!==u&&(n=function(){var t,e,n,s;t=hs,"unique"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(b));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="UNIQUE"):(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&Ya()!==u?((s=ga())===u&&(s=xa()),s===u&&(s=null),s!==u&&Ya()!==u?((o=no())===u&&(o=null),o!==u&&Ya()!==u?((a=fu())===u&&(a=null),a!==u&&Ya()!==u&&(i=tu())!==u&&Ya()!==u?((l=bu())===u&&(l=null),l!==u?(t,f=n,v=s,L=o,C=a,d=i,p=l,e={constraint:(c=e)&&c.constraint,definition:d,constraint_type:v&&`${f.toLowerCase()} ${v.toLowerCase()}`||f.toLowerCase(),keyword:c&&c.keyword,index_type:C,index:L,resource:"constraint",index_options:p},t=e):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u);var c,f,v,L,C,d,p;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=hs,(e=Xs())===u&&(e=null);e!==u&&Ya()!==u?("foreign key"===r.substr(hs,11).toLowerCase()?(n=r.substr(hs,11),hs+=11):(n=u,0===Is&&Os(g)),n!==u&&Ya()!==u?((s=no())===u&&(s=null),s!==u&&Ya()!==u&&(o=tu())!==u&&Ya()!==u?((a=Vs())===u&&(a=null),a!==u?(t,l=n,c=s,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:l,keyword:i&&i.keyword,index:c,resource:"constraint",reference_definition:b},t=e):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u);var i,l,c,f,b;return t}());return t}()),t}function Fs(){var t,e,n,s,o,a;return t=hs,(e=function(){var t,e;t=hs,(e=function(){var t,e,n,s;t=hs,"not null"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os($t));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&(t,e={type:"not null",value:"not null"});return t=e}())===u&&(e=vo()),e!==u&&(t,(a=e)&&!a.value&&(a.value="null"),e={nullable:a}),(t=e)===u&&(t=hs,(e=function(){var r,t;r=hs,Ro()!==u&&Ya()!==u?((t=bo())===u&&(t=Hu()),t!==u?(r,r={type:"default",value:t}):(hs=r,r=u)):(hs=r,r=u);return r}())!==u&&(t,e={default_val:e}),(t=e)===u&&(t=hs,"auto_increment"===r.substr(hs,14).toLowerCase()?(e=r.substr(hs,14),hs+=14):(e=u,0===Is&&Os(f)),e!==u&&(t,e={auto_increment:e.toLowerCase()}),(t=e)===u&&(t=hs,e=hs,"unique"===r.substr(hs,6).toLowerCase()?(n=r.substr(hs,6),hs+=6):(n=u,0===Is&&Os(b)),n!==u&&(s=Ya())!==u?("key"===r.substr(hs,3).toLowerCase()?(o=r.substr(hs,3),hs+=3):(o=u,0===Is&&Os(v)),o===u&&(o=null),o!==u?e=n=[n,s,o]:(hs=e,e=u)):(hs=e,e=u),e===u&&(e=hs,"primary"===r.substr(hs,7).toLowerCase()?(n=r.substr(hs,7),hs+=7):(n=u,0===Is&&Os(L)),n===u&&(n=null),n!==u&&(s=Ya())!==u?("key"===r.substr(hs,3).toLowerCase()?(o=r.substr(hs,3),hs+=3):(o=u,0===Is&&Os(v)),o!==u?e=n=[n,s,o]:(hs=e,e=u)):(hs=e,e=u)),e!==u&&(t,e=function(r){const t=[];return r&&t.push(r[0],r[2]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===u&&(t=hs,(e=Xa())!==u&&(t,e={comment:e}),(t=e)===u&&(t=hs,(e=function(){var t,e;t=hs,function(){var t,e,n,s;t=hs,"collate"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(X));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="COLLATE"):(hs=t,t=u)):(hs=t,t=u);return t}()!==u&&Ya()!==u&&(e=so())!==u?(t,t={type:"collate",value:e}):(hs=t,t=u);return t}())!==u&&(t,e={collate:e}),(t=e)===u&&(t=hs,(e=function(){var t,e,n;t=hs,"column_format"===r.substr(hs,13).toLowerCase()?(e=r.substr(hs,13),hs+=13):(e=u,0===Is&&Os(C));e!==u&&Ya()!==u?("fixed"===r.substr(hs,5).toLowerCase()?(n=r.substr(hs,5),hs+=5):(n=u,0===Is&&Os(d)),n===u&&("dynamic"===r.substr(hs,7).toLowerCase()?(n=r.substr(hs,7),hs+=7):(n=u,0===Is&&Os(p)),n===u&&("default"===r.substr(hs,7).toLowerCase()?(n=r.substr(hs,7),hs+=7):(n=u,0===Is&&Os(w)))),n!==u?(t,e={type:"column_format",value:n.toLowerCase()},t=e):(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&(t,e={column_format:e}),(t=e)===u&&(t=hs,(e=function(){var t,e,n;t=hs,"storage"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(E));e!==u&&Ya()!==u?("disk"===r.substr(hs,4).toLowerCase()?(n=r.substr(hs,4),hs+=4):(n=u,0===Is&&Os(A)),n===u&&("memory"===r.substr(hs,6).toLowerCase()?(n=r.substr(hs,6),hs+=6):(n=u,0===Is&&Os(h))),n!==u?(t,e={type:"storage",value:n.toLowerCase()},t=e):(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&(t,e={storage:e}),(t=e)===u&&(t=hs,(e=Vs())!==u&&(t,e={reference_definition:e}),t=e)))))))),t}function Gs(){var r,t,e,n,s,o,a;return r=hs,(t=ro())!==u&&Ya()!==u&&(e=ai())!==u&&Ya()!==u?((n=function(){var r,t,e,n,s,o;if(r=hs,(t=Fs())!==u)if(Ya()!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=Fs())!==u?n=s=[s,o]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=Fs())!==u?n=s=[s,o]:(hs=n,n=u);e!==u?(r,r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(hs=r,r=u)}else hs=r,r=u;else hs=r,r=u;return r}())===u&&(n=null),n!==u?(r,s=t,o=e,a=n,Ei.add(`create::${s.table}::${s.column}`),r=t={column:s,definition:o,resource:"column",...a||{}}):(hs=r,r=u)):(hs=r,r=u),r}function Hs(){var r;return(r=function(){var r,t,e,n;r=hs,(t=_a())!==u&&Ya()!==u?((e=Oa())===u&&(e=null),e!==u&&Ya()!==u&&(n=Gs())!==u?(r,s=e,o=n,t={action:"add",...o,keyword:s,resource:"column",type:"alter"},r=t):(hs=r,r=u)):(hs=r,r=u);var s,o;return r}())===u&&(r=function(){var r,t,e;r=hs,_o()!==u&&Ya()!==u?((t=Oa())===u&&(t=null),t!==u&&Ya()!==u&&(e=ro())!==u?(r,r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(hs=r,r=u)):(hs=r,r=u);return r}())===u&&(r=function(){var r,t,e;r=hs,(t=_a())!==u&&Ya()!==u&&(e=Bs())!==u?(r,n=e,t={action:"add",type:"alter",...n},r=t):(hs=r,r=u);var n;return r}())===u&&(r=function(){var r,t,e;r=hs,(t=_a())!==u&&Ya()!==u&&(e=Ws())!==u?(r,n=e,t={action:"add",type:"alter",...n},r=t):(hs=r,r=u);var n;return r}())===u&&(r=function(){var r,t,e,n;r=hs,(t=Mo())!==u&&Ya()!==u?((e=So())===u&&(e=Po()),e===u&&(e=null),e!==u&&Ya()!==u&&(n=to())!==u?(r,o=n,t={action:"rename",type:"alter",resource:"table",keyword:(s=e)&&s[0].toLowerCase(),table:o},r=t):(hs=r,r=u)):(hs=r,r=u);var s,o;return r}())===u&&(r=js())===u&&(r=Ys()),r}function js(){var t,e,n,s;return t=hs,"algorithm"===r.substr(hs,9).toLowerCase()?(e=r.substr(hs,9),hs+=9):(e=u,0===Is&&Os(y)),e!==u&&Ya()!==u?((n=Sa())===u&&(n=null),n!==u&&Ya()!==u?("default"===r.substr(hs,7).toLowerCase()?(s=r.substr(hs,7),hs+=7):(s=u,0===Is&&Os(w)),s===u&&("instant"===r.substr(hs,7).toLowerCase()?(s=r.substr(hs,7),hs+=7):(s=u,0===Is&&Os(T)),s===u&&("inplace"===r.substr(hs,7).toLowerCase()?(s=r.substr(hs,7),hs+=7):(s=u,0===Is&&Os(m)),s===u&&("copy"===r.substr(hs,4).toLowerCase()?(s=r.substr(hs,4),hs+=4):(s=u,0===Is&&Os(I))))),s!==u?(t,t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:s}):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u),t}function Ys(){var t,e,n,s;return t=hs,"lock"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(N)),e!==u&&Ya()!==u?((n=Sa())===u&&(n=null),n!==u&&Ya()!==u?("default"===r.substr(hs,7).toLowerCase()?(s=r.substr(hs,7),hs+=7):(s=u,0===Is&&Os(w)),s===u&&("none"===r.substr(hs,4).toLowerCase()?(s=r.substr(hs,4),hs+=4):(s=u,0===Is&&Os(R)),s===u&&("shared"===r.substr(hs,6).toLowerCase()?(s=r.substr(hs,6),hs+=6):(s=u,0===Is&&Os(S)),s===u&&("exclusive"===r.substr(hs,9).toLowerCase()?(s=r.substr(hs,9),hs+=9):(s=u,0===Is&&Os(_))))),s!==u?(t,t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:s}):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u),t}function Bs(){var r,t,e,n,s,o,a,i;return r=hs,(t=ga())===u&&(t=xa()),t!==u&&Ya()!==u?((e=no())===u&&(e=null),e!==u&&Ya()!==u?((n=fu())===u&&(n=null),n!==u&&Ya()!==u&&(s=tu())!==u&&Ya()!==u?((o=bu())===u&&(o=null),o!==u&&Ya()!==u?(r,a=n,i=o,r=t={index:e,definition:s,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(hs=r,r=u)):(hs=r,r=u)):(hs=r,r=u)):(hs=r,r=u),r}function Ws(){var t,e,n,s,o,a,i,l,c;return t=hs,(e=function(){var t,e,n,s;t=hs,"fulltext"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os(Zn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="FULLTEXT"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(e=function(){var t,e,n,s;t=hs,"spatial"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(zn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="SPATIAL"):(hs=t,t=u)):(hs=t,t=u);return t}()),e!==u&&Ya()!==u?((n=ga())===u&&(n=xa()),n===u&&(n=null),n!==u&&Ya()!==u?((s=no())===u&&(s=null),s!==u&&Ya()!==u&&(o=tu())!==u&&Ya()!==u?((a=bu())===u&&(a=null),a!==u&&Ya()!==u?(t,i=e,c=a,t=e={index:s,definition:o,keyword:(l=n)&&`${i.toLowerCase()} ${l.toLowerCase()}`||i.toLowerCase(),index_options:c,resource:"index"}):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u),t}function Xs(){var t,e,n,s;return t=hs,(e=function(){var t,e,n,s;t=hs,"constraint"===r.substr(hs,10).toLowerCase()?(e=r.substr(hs,10),hs+=10):(e=u,0===Is&&Os(Jn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="CONSTRAINT"):(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&Ya()!==u?((n=to())===u&&(n=null),n!==u?(t,s=n,t=e={keyword:e.toLowerCase(),constraint:s}):(hs=t,t=u)):(hs=t,t=u),t}function Vs(){var t,e,n,s,o,a,i,l,c,f;return t=hs,(e=function(){var t,e,n,s;t=hs,"references"===r.substr(hs,10).toLowerCase()?(e=r.substr(hs,10),hs+=10):(e=u,0===Is&&Os(rs));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="REFERENCES"):(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&Ya()!==u&&(n=Lu())!==u&&Ya()!==u&&(s=tu())!==u&&Ya()!==u?("match full"===r.substr(hs,10).toLowerCase()?(o=r.substr(hs,10),hs+=10):(o=u,0===Is&&Os(x)),o===u&&("match partial"===r.substr(hs,13).toLowerCase()?(o=r.substr(hs,13),hs+=13):(o=u,0===Is&&Os(U)),o===u&&("match simple"===r.substr(hs,12).toLowerCase()?(o=r.substr(hs,12),hs+=12):(o=u,0===Is&&Os(M)))),o===u&&(o=null),o!==u&&Ya()!==u?((a=Ks())===u&&(a=null),a!==u&&Ya()!==u?((i=Ks())===u&&(i=null),i!==u?(t,l=o,c=a,f=i,t=e={definition:s,table:n,keyword:e.toLowerCase(),match:l&&l.toLowerCase(),on_delete:c,on_update:f}):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u),t}function Ks(){var t,e,n,s,o,a;return t=hs,"on"===r.substr(hs,2).toLowerCase()?(e=r.substr(hs,2),hs+=2):(e=u,0===Is&&Os(k)),e!==u&&Ba()!==u?("delete"===r.substr(hs,6).toLowerCase()?(n=r.substr(hs,6),hs+=6):(n=u,0===Is&&Os(D)),n===u&&("update"===r.substr(hs,6).toLowerCase()?(n=r.substr(hs,6),hs+=6):(n=u,0===Is&&Os($))),n!==u&&Ba()!==u&&(s=function(){var t,e;t=hs,"restrict"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os(P));e===u&&("cascade"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(F)),e===u&&("set null"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os(G)),e===u&&("no action"===r.substr(hs,9).toLowerCase()?(e=r.substr(hs,9),hs+=9):(e=u,0===Is&&Os(H)),e===u&&("set default"===r.substr(hs,11).toLowerCase()?(e=r.substr(hs,11),hs+=11):(e=u,0===Is&&Os(j))))));e!==u&&(t,e=e.toLowerCase());return t=e}())!==u?(t,o=n,a=s,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(hs=t,t=u)):(hs=t,t=u),t}function qs(){var t,e,n,s,o,a,i,l,c;return t=hs,(e=Ro())===u&&(e=null),e!==u&&Ya()!==u?((n=function(){var t,e,n;return t=hs,"character"===r.substr(hs,9).toLowerCase()?(e=r.substr(hs,9),hs+=9):(e=u,0===Is&&Os(Y)),e!==u&&Ya()!==u?("set"===r.substr(hs,3).toLowerCase()?(n=r.substr(hs,3),hs+=3):(n=u,0===Is&&Os(B)),n!==u?(t,t=e="CHARACTER SET"):(hs=t,t=u)):(hs=t,t=u),t}())===u&&("charset"===r.substr(hs,7).toLowerCase()?(n=r.substr(hs,7),hs+=7):(n=u,0===Is&&Os(W)),n===u&&("collate"===r.substr(hs,7).toLowerCase()?(n=r.substr(hs,7),hs+=7):(n=u,0===Is&&Os(X)))),n!==u&&Ya()!==u?((s=Sa())===u&&(s=null),s!==u&&Ya()!==u&&(o=so())!==u?(t,i=n,l=s,c=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:l,value:c}):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u),t}function Zs(){var t,e,n,s,o,a,i,l,c;return t=hs,"auto_increment"===r.substr(hs,14).toLowerCase()?(e=r.substr(hs,14),hs+=14):(e=u,0===Is&&Os(f)),e===u&&("avg_row_length"===r.substr(hs,14).toLowerCase()?(e=r.substr(hs,14),hs+=14):(e=u,0===Is&&Os(V)),e===u&&("key_block_size"===r.substr(hs,14).toLowerCase()?(e=r.substr(hs,14),hs+=14):(e=u,0===Is&&Os(K)),e===u&&("max_rows"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os(q)),e===u&&("min_rows"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os(Z)),e===u&&("stats_sample_pages"===r.substr(hs,18).toLowerCase()?(e=r.substr(hs,18),hs+=18):(e=u,0===Is&&Os(z))))))),e!==u&&Ya()!==u?((n=Sa())===u&&(n=null),n!==u&&Ya()!==u&&(s=Eo())!==u?(t,l=n,c=s,t=e={keyword:e.toLowerCase(),symbol:l,value:c.value}):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=qs())===u&&(t=hs,(e=Ua())===u&&("connection"===r.substr(hs,10).toLowerCase()?(e=r.substr(hs,10),hs+=10):(e=u,0===Is&&Os(Q))),e!==u&&Ya()!==u?((n=Sa())===u&&(n=null),n!==u&&Ya()!==u&&(s=Lo())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,s)):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=hs,"compression"===r.substr(hs,11).toLowerCase()?(e=r.substr(hs,11),hs+=11):(e=u,0===Is&&Os(J)),e!==u&&Ya()!==u?((n=Sa())===u&&(n=null),n!==u&&Ya()!==u?(s=hs,39===r.charCodeAt(hs)?(o="'",hs++):(o=u,0===Is&&Os(rr)),o!==u?("zlib"===r.substr(hs,4).toLowerCase()?(a=r.substr(hs,4),hs+=4):(a=u,0===Is&&Os(tr)),a===u&&("lz4"===r.substr(hs,3).toLowerCase()?(a=r.substr(hs,3),hs+=3):(a=u,0===Is&&Os(er)),a===u&&("none"===r.substr(hs,4).toLowerCase()?(a=r.substr(hs,4),hs+=4):(a=u,0===Is&&Os(R)))),a!==u?(39===r.charCodeAt(hs)?(i="'",hs++):(i=u,0===Is&&Os(rr)),i!==u?s=o=[o,a,i]:(hs=s,s=u)):(hs=s,s=u)):(hs=s,s=u),s!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,s)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=hs,"engine"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(nr)),e!==u&&Ya()!==u?((n=Sa())===u&&(n=null),n!==u&&Ya()!==u&&(s=so())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,s)):(hs=t,t=u)):(hs=t,t=u)))),t}function zs(){var t,e,n,s,o;return t=hs,(e=du())!==u&&Ya()!==u&&(n=function(){var t,e,n;return t=hs,"read"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(sr)),e!==u&&Ya()!==u?("local"===r.substr(hs,5).toLowerCase()?(n=r.substr(hs,5),hs+=5):(n=u,0===Is&&Os(ur)),n===u&&(n=null),n!==u?(t,t=e={type:"read",suffix:n&&"local"}):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=hs,"low_priority"===r.substr(hs,12).toLowerCase()?(e=r.substr(hs,12),hs+=12):(e=u,0===Is&&Os(or)),e===u&&(e=null),e!==u&&Ya()!==u?("write"===r.substr(hs,5).toLowerCase()?(n=r.substr(hs,5),hs+=5):(n=u,0===Is&&Os(ar)),n!==u?(t,t=e={type:"write",prefix:e&&"low_priority"}):(hs=t,t=u)):(hs=t,t=u)),t}())!==u?(t,s=e,o=n,wi.add(`lock::${s.db}::${s.table}`),t=e={table:s,lock_type:o}):(hs=t,t=u),t}function Qs(){var t,e,n,s,o,a,i;return(t=eu())===u&&(t=hs,e=hs,40===r.charCodeAt(hs)?(n="(",hs++):(n=u,0===Is&&Os(ir)),n!==u&&(s=Ya())!==u&&(o=Qs())!==u&&(a=Ya())!==u?(41===r.charCodeAt(hs)?(i=")",hs++):(i=u,0===Is&&Os(lr)),i!==u?e=n=[n,s,o,a,i]:(hs=e,e=u)):(hs=e,e=u),e!==u&&(t,e={...e[2],parentheses_symbol:!0}),t=e),t}function Js(){var t,e,n,s,o,a,i,l,f;if(t=hs,Vo()!==u)if(Ya()!==u)if((e=ru())!==u){for(n=[],s=hs,(o=Ya())!==u&&(a=ka())!==u&&(i=Ya())!==u&&(l=ru())!==u?s=o=[o,a,i,l]:(hs=s,s=u);s!==u;)n.push(s),s=hs,(o=Ya())!==u&&(a=ka())!==u&&(i=Ya())!==u&&(l=ru())!==u?s=o=[o,a,i,l]:(hs=s,s=u);n!==u?(t,t=c(e,n)):(hs=t,t=u)}else hs=t,t=u;else hs=t,t=u;else hs=t,t=u;return t===u&&(t=hs,Ya()!==u&&Vo()!==u&&(e=Ya())!==u&&(n=function(){var t,e,n,s;t=hs,"RECURSIVE"===r.substr(hs,9)?(e="RECURSIVE",hs+=9):(e=u,0===Is&&Os(Kt));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&(s=Ya())!==u&&(o=ru())!==u?(t,(f=o).recursive=!0,t=[f]):(hs=t,t=u)),t}function ru(){var r,t,e,n,s;return r=hs,(t=Lo())===u&&(t=so()),t!==u&&Ya()!==u?((e=tu())===u&&(e=null),e!==u&&Ya()!==u&&Po()!==u&&Ya()!==u&&$a()!==u&&Ya()!==u&&(n=Ds())!==u&&Ya()!==u&&Pa()!==u?(r,"string"==typeof(s=t)&&(s={type:"default",value:s}),r=t={name:s,stmt:n,columns:e}):(hs=r,r=u)):(hs=r,r=u),r}function tu(){var r,t;return r=hs,$a()!==u&&Ya()!==u&&(t=function(){var r,t,e,n,s,o,a,i;if(r=hs,(t=ro())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=ro())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=ro())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,t=c(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())!==u&&Ya()!==u&&Pa()!==u?(r,r=t):(hs=r,r=u),r}function eu(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C,d,p,w,E,A,h,y;return t=hs,Ya()!==u?((e=Js())===u&&(e=null),e!==u&&Ya()!==u&&function(){var t,e,n,s;t=hs,"select"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(Bt));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}()!==u&&Ba()!==u?((n=function(){var r,t,e,n,s,o;if(r=hs,(t=nu())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=nu())!==u?n=s=[s,o]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=nu())!==u?n=s=[s,o]:(hs=n,n=u);e!==u?(r,t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())===u&&(n=null),n!==u&&Ya()!==u?((s=Zo())===u&&(s=null),s!==u&&Ya()!==u&&(o=su())!==u&&Ya()!==u?((a=lu())===u&&(a=null),a!==u&&Ya()!==u?((i=Au())===u&&(i=null),i!==u&&Ya()!==u?((l=function(){var t,e,n;t=hs,(e=function(){var t,e,n,s;t=hs,"group"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(Ee));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&Ya()!==u&&Ko()!==u&&Ya()!==u&&(n=Du())!==u?(t,e=n.value,t=e):(hs=t,t=u);return t}())===u&&(l=null),l!==u&&Ya()!==u?((c=function(){var t,e;t=hs,function(){var t,e,n,s;t=hs,"having"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(ye));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}()!==u&&Ya()!==u&&(e=ju())!==u?(t,t=e):(hs=t,t=u);return t}())===u&&(c=null),c!==u&&Ya()!==u?((f=Nu())===u&&(f=null),f!==u&&Ya()!==u?((b=Ou())===u&&(b=null),b!==u?(t,v=e,L=n,C=s,d=o,w=i,E=l,A=c,h=f,y=b,(p=a)&&p.forEach(r=>r.table&&wi.add(`select::${r.db}::${r.table}`)),t={with:v,type:"select",options:L,distinct:C,columns:d,from:p,where:w,groupby:E,having:A,orderby:h,limit:y}):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u),t}function nu(){var t,e;return t=hs,(e=function(){var t;"sql_calc_found_rows"===r.substr(hs,19).toLowerCase()?(t=r.substr(hs,19),hs+=19):(t=u,0===Is&&Os(ts));return t}())===u&&((e=function(){var t;"sql_cache"===r.substr(hs,9).toLowerCase()?(t=r.substr(hs,9),hs+=9):(t=u,0===Is&&Os(es));return t}())===u&&(e=function(){var t;"sql_no_cache"===r.substr(hs,12).toLowerCase()?(t=r.substr(hs,12),hs+=12):(t=u,0===Is&&Os(ns));return t}()),e===u&&(e=function(){var t;"sql_big_result"===r.substr(hs,14).toLowerCase()?(t=r.substr(hs,14),hs+=14):(t=u,0===Is&&Os(us));return t}())===u&&(e=function(){var t;"sql_small_result"===r.substr(hs,16).toLowerCase()?(t=r.substr(hs,16),hs+=16):(t=u,0===Is&&Os(ss));return t}())===u&&(e=function(){var t;"sql_buffer_result"===r.substr(hs,17).toLowerCase()?(t=r.substr(hs,17),hs+=17):(t=u,0===Is&&Os(os));return t}())),e!==u&&(t,e=e),t=e}function su(){var r,t,e,n,s,o,a,i,l,f;if(r=hs,(t=qo())===u&&(t=hs,(e=Da())!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t===u&&(t=Da())),t!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=au())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=au())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,l=t,f=e,Ei.add("select::null::(.*)"),r=t=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},vi(l[0],f)):l[0]):(hs=r,r=u)}else hs=r,r=u;if(r===u)if(r=hs,(t=au())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=au())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=au())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,r=t=c(t,e)):(hs=r,r=u)}else hs=r,r=u;return r}function uu(){var t,e,n,s;return t=hs,Fa()!==u&&Ya()!==u&&(e=Ao())!==u&&Ya()!==u&&Ga()!==u&&Ya()!==u?(46===r.charCodeAt(hs)?(n=".",hs++):(n=u,0===Is&&Os(cr)),n!==u&&Ya()!==u&&(s=to())!==u?(t,t={brackets:!0,number:e,property:{type:"origin",value:s}}):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=hs,Fa()!==u&&Ya()!==u&&(e=Ao())!==u&&Ya()!==u&&Ga()!==u?(t,t=function(r){return{brackets:!0,number:r}}(e)):(hs=t,t=u)),t}function ou(){var r,t,e,n,s;return r=hs,(t=function(){var r,t,e,n,s,o,a,i;if(r=hs,(t=Hu())!==u){if(e=[],n=hs,(s=Ya())!==u?((o=sa())===u&&(o=ua())===u&&(o=ja()),o!==u&&(a=Ya())!==u&&(i=Hu())!==u?n=s=[s,o,a,i]:(hs=n,n=u)):(hs=n,n=u),n!==u)for(;n!==u;)e.push(n),n=hs,(s=Ya())!==u?((o=sa())===u&&(o=ua())===u&&(o=ja()),o!==u&&(a=Ya())!==u&&(i=Hu())!==u?n=s=[s,o,a,i]:(hs=n,n=u)):(hs=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=t.length;let n=t[e-1][3];for(let s=e-1;s>=0;s--){const e=0===s?r:t[s-1][3];n=fi(t[s][1],e,n)}return n}(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())===u&&(t=Hu()),t!==u&&Ya()!==u?((e=uu())===u&&(e=null),e!==u?(r,n=t,(s=e)&&(n.array_index=s),r=t=n):(hs=r,r=u)):(hs=r,r=u),r}function au(){var r,t,e,n,s;return r=hs,t=hs,(e=to())!==u&&(n=Ya())!==u&&(s=Ma())!==u?t=e=[e,n,s]:(hs=t,t=u),t===u&&(t=null),t!==u&&(e=Ya())!==u&&(n=Da())!==u?(r,r=t=function(r){const t=r&&r[0]||null;return Ei.add(`select::${t}::(.*)`),{expr:{type:"column_ref",table:t,column:"*"},as:null}}(t)):(hs=r,r=u),r===u&&(r=hs,(t=ou())!==u&&(e=Ya())!==u?((n=iu())===u&&(n=null),n!==u?(r,r=t={type:"expr",expr:t,as:n}):(hs=r,r=u)):(hs=r,r=u)),r}function iu(){var r,t,e;return r=hs,(t=Po())!==u&&Ya()!==u&&(e=function(){var r,t;r=hs,(t=so())!==u?(hs,(function(r){if(!0===li[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return!1}(t)?u:void 0)!==u?(r,r=t=t):(hs=r,r=u)):(hs=r,r=u);r===u&&(r=hs,(t=eo())!==u&&(r,t=t),r=t);return r}())!==u?(r,r=t=e):(hs=r,r=u),r===u&&(r=hs,(t=Po())===u&&(t=null),t!==u&&Ya()!==u&&(e=to())!==u?(r,r=t=e):(hs=r,r=u)),r}function lu(){var t,e;return t=hs,function(){var t,e,n,s;t=hs,"from"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(te));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}()!==u&&Ya()!==u&&(e=Lu())!==u?(t,t=e):(hs=t,t=u),t}function cu(){var r,t,e;return r=hs,(t=wu())!==u&&Ya()!==u&&So()!==u&&Ya()!==u&&(e=wu())!==u?(r,r=t=[t,e]):(hs=r,r=u),r}function fu(){var t,e;return t=hs,Xo()!==u&&Ya()!==u?("btree"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(fr)),e===u&&("hash"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(br))),e!==u?(t,t={keyword:"using",type:e.toLowerCase()}):(hs=t,t=u)):(hs=t,t=u),t}function bu(){var r,t,e,n,s,o;if(r=hs,(t=vu())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=vu())!==u?n=s=[s,o]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=vu())!==u?n=s=[s,o]:(hs=n,n=u);e!==u?(r,r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(hs=r,r=u)}else hs=r,r=u;return r}function vu(){var t,e,n,s,o,a;return t=hs,(e=function(){var t,e,n,s;t=hs,"key_block_size"===r.substr(hs,14).toLowerCase()?(e=r.substr(hs,14),hs+=14):(e=u,0===Is&&Os(K));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="KEY_BLOCK_SIZE"):(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&Ya()!==u?((n=Sa())===u&&(n=null),n!==u&&Ya()!==u&&(s=Eo())!==u?(t,o=n,a=s,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=fu())===u&&(t=hs,"with"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(vr)),e!==u&&Ya()!==u?("parser"===r.substr(hs,6).toLowerCase()?(n=r.substr(hs,6),hs+=6):(n=u,0===Is&&Os(Lr)),n!==u&&Ya()!==u&&(s=so())!==u?(t,t=e={type:"with parser",expr:s}):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=hs,"visible"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(Cr)),e===u&&("invisible"===r.substr(hs,9).toLowerCase()?(e=r.substr(hs,9),hs+=9):(e=u,0===Is&&Os(dr))),e!==u&&(t,e=function(r){return{type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===u&&(t=Xa()))),t}function Lu(){var r,t,e,n;if(r=hs,(t=du())!==u){for(e=[],n=Cu();n!==u;)e.push(n),n=Cu();e!==u?(r,r=t=pr(t,e)):(hs=r,r=u)}else hs=r,r=u;return r}function Cu(){var r,t,e;return r=hs,Ya()!==u&&(t=ka())!==u&&Ya()!==u&&(e=du())!==u?(r,r=e):(hs=r,r=u),r===u&&(r=hs,Ya()!==u&&(t=function(){var r,t,e,n,s,o,a,i,l,c,f;if(r=hs,(t=pu())!==u)if(Ya()!==u)if((e=du())!==u)if(Ya()!==u)if((n=Xo())!==u)if(Ya()!==u)if($a()!==u)if(Ya()!==u)if((s=so())!==u){for(o=[],a=hs,(i=Ya())!==u&&(l=ka())!==u&&(c=Ya())!==u&&(f=so())!==u?a=i=[i,l,c,f]:(hs=a,a=u);a!==u;)o.push(a),a=hs,(i=Ya())!==u&&(l=ka())!==u&&(c=Ya())!==u&&(f=so())!==u?a=i=[i,l,c,f]:(hs=a,a=u);o!==u&&(a=Ya())!==u&&(i=Pa())!==u?(r,b=t,L=s,C=o,(v=e).join=b,v.using=vi(L,C),r=t=v):(hs=r,r=u)}else hs=r,r=u;else hs=r,r=u;else hs=r,r=u;else hs=r,r=u;else hs=r,r=u;else hs=r,r=u;else hs=r,r=u;else hs=r,r=u;else hs=r,r=u;var b,v,L,C;r===u&&(r=hs,(t=pu())!==u&&Ya()!==u&&(e=du())!==u&&Ya()!==u?((n=Eu())===u&&(n=null),n!==u?(r,t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(hs=r,r=u)):(hs=r,r=u),r===u&&(r=hs,(t=pu())!==u&&Ya()!==u&&(e=$a())!==u&&Ya()!==u&&(n=Ds())!==u&&Ya()!==u&&Pa()!==u&&Ya()!==u?((s=iu())===u&&(s=null),s!==u&&(o=Ya())!==u?((a=Eu())===u&&(a=null),a!==u?(r,t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,s,a),r=t):(hs=r,r=u)):(hs=r,r=u)):(hs=r,r=u)));return r}())!==u?(r,r=t):(hs=r,r=u)),r}function du(){var t,e,n,s,o,a;return t=hs,(e=function(){var t;"dual"===r.substr(hs,4).toLowerCase()?(t=r.substr(hs,4),hs+=4):(t=u,0===Is&&Os(Xn));return t}())!==u&&(t,e={type:"dual"}),(t=e)===u&&(t=hs,(e=wu())!==u&&Ya()!==u?((n=iu())===u&&(n=null),n!==u?(t,a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=hs,(e=$a())!==u&&Ya()!==u&&(n=Ds())!==u&&Ya()!==u&&Pa()!==u&&Ya()!==u?((s=iu())===u&&(s=null),s!==u?(t,t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,s)):(hs=t,t=u)):(hs=t,t=u))),t}function pu(){var t,e,n,s;return t=hs,(e=function(){var t,e,n,s;t=hs,"left"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(ie));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&(n=Ya())!==u?((s=Yo())===u&&(s=null),s!==u&&Ya()!==u&&jo()!==u?(t,t=e="LEFT JOIN"):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=hs,(e=function(){var t,e,n,s;t=hs,"right"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(le));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&(n=Ya())!==u?((s=Yo())===u&&(s=null),s!==u&&Ya()!==u&&jo()!==u?(t,t=e="RIGHT JOIN"):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=hs,(e=function(){var t,e,n,s;t=hs,"full"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(ce));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&(n=Ya())!==u?((s=Yo())===u&&(s=null),s!==u&&Ya()!==u&&jo()!==u?(t,t=e="FULL JOIN"):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=hs,e=hs,(n=function(){var t,e,n,s;t=hs,"inner"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(be));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&(s=Ya())!==u?e=n=[n,s]:(hs=e,e=u),e===u&&(e=null),e!==u&&(n=jo())!==u?(t,t=e="INNER JOIN"):(hs=t,t=u),t===u&&(t=hs,(e=function(){var t,e,n,s;t=hs,"cross"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(fe));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&(n=Ya())!==u&&(s=jo())!==u?(t,t=e="CROSS JOIN"):(hs=t,t=u))))),t}function wu(){var r,t,e,n,s,o,a,i;return r=hs,(t=to())!==u?(e=hs,(n=Ya())!==u&&(s=Ma())!==u&&(o=Ya())!==u&&(a=to())!==u?e=n=[n,s,o,a]:(hs=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(hs=r,r=u)):(hs=r,r=u),r===u&&(r=hs,(t=ui())!==u&&(r,(i=t).db=null,i.table=i.name,t=i),r=t),r}function Eu(){var r,t;return r=hs,Ho()!==u&&Ya()!==u&&(t=ju())!==u?(r,r=t):(hs=r,r=u),r}function Au(){var t,e;return t=hs,function(){var t,e,n,s;t=hs,"where"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(we));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}()!==u&&Ya()!==u&&(e=ju())!==u?(t,t=e):(hs=t,t=u),t}function hu(){var r,t;return(r=so())===u&&(r=hs,$a()!==u&&Ya()!==u?((t=function(){var r,t,e,n;r=hs,(t=Ru())===u&&(t=null);t!==u&&Ya()!==u?((e=Nu())===u&&(e=null),e!==u&&Ya()!==u?((n=function(){var r,t,e,n,s;r=hs,(t=Ta())!==u&&Ya()!==u?((e=yu())===u&&(e=Tu()),e!==u?(r,t="rows "+e.value,r=t):(hs=r,r=u)):(hs=r,r=u);r===u&&(r=hs,(t=Ta())!==u&&Ya()!==u&&(e=zo())!==u&&Ya()!==u&&(n=Tu())!==u&&Ya()!==u&&sa()!==u&&Ya()!==u&&(s=yu())!==u?(r,o=s,t=`rows between ${n.value} and ${o.value}`,r=t):(hs=r,r=u));var o;return r}())===u&&(n=null),n!==u?(r,r=t={name:null,partitionby:t,orderby:e,window_frame_clause:n}):(hs=r,r=u)):(hs=r,r=u)):(hs=r,r=u);return r}())===u&&(t=null),t!==u&&Ya()!==u&&Pa()!==u?(r,r={window_specification:t||{},parentheses:!0}):(hs=r,r=u)):(hs=r,r=u)),r}function yu(){var t,e,n,s;return t=hs,(e=Iu())!==u&&Ya()!==u?("following"===r.substr(hs,9).toLowerCase()?(n=r.substr(hs,9),hs+=9):(n=u,0===Is&&Os(wr)),n!==u?(t,(s=e).value+=" FOLLOWING",t=e=s):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=mu()),t}function Tu(){var t,e,n,s;return t=hs,(e=Iu())!==u&&Ya()!==u?("preceding"===r.substr(hs,9).toLowerCase()?(n=r.substr(hs,9),hs+=9):(n=u,0===Is&&Os(Er)),n!==u?(t,(s=e).value+=" PRECEDING",t=e=s):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=mu()),t}function mu(){var t,e,n;return t=hs,"current"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(Ar)),e!==u&&Ya()!==u?("row"===r.substr(hs,3).toLowerCase()?(n=r.substr(hs,3),hs+=3):(n=u,0===Is&&Os(hr)),n!==u?(t,t=e={type:"single_quote_string",value:"current row"}):(hs=t,t=u)):(hs=t,t=u),t}function Iu(){var t,e;return t=hs,"unbounded"===r.substr(hs,9).toLowerCase()?(e=r.substr(hs,9),hs+=9):(e=u,0===Is&&Os(yr)),e!==u&&(t,e={type:"single_quote_string",value:e.toUpperCase()}),(t=e)===u&&(t=Eo()),t}function Nu(){var t,e;return t=hs,function(){var t,e,n,s;t=hs,"order"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(he));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}()!==u&&Ya()!==u&&Ko()!==u&&Ya()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=hs,(t=Su())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=Su())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=Su())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,t=c(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())!==u?(t,t=e):(hs=t,t=u),t}function Ru(){var r,t;return r=hs,ko()!==u&&Ya()!==u&&Ko()!==u&&Ya()!==u&&(t=su())!==u?(r,r=t):(hs=r,r=u),r}function Su(){var t,e,n;return t=hs,(e=Hu())!==u&&Ya()!==u?((n=function(){var t,e,n,s;t=hs,"desc"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(Ne));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="DESC"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=hs,"asc"===r.substr(hs,3).toLowerCase()?(e=r.substr(hs,3),hs+=3):(e=u,0===Is&&Os(Ie));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="ASC"):(hs=t,t=u)):(hs=t,t=u);return t}()),n===u&&(n=null),n!==u?(t,t=e=function(r,t){const e={expr:r,type:"ASC"};return"DESC"===t&&(e.type="DESC"),e}(e,n)):(hs=t,t=u)):(hs=t,t=u),t}function _u(){var r;return(r=Eo())===u&&(r=io()),r}function Ou(){var t,e,n,s,o,a;return t=hs,function(){var t,e,n,s;t=hs,"limit"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(Te));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}()!==u&&Ya()!==u&&(e=_u())!==u&&Ya()!==u?(n=hs,(s=ka())===u&&(s=function(){var t,e,n,s;t=hs,"offset"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(me));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="OFFSET"):(hs=t,t=u)):(hs=t,t=u);return t}()),s!==u&&(o=Ya())!==u&&(a=_u())!==u?n=s=[s,o,a]:(hs=n,n=u),n===u&&(n=null),n!==u?(t,t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(hs=t,t=u)):(hs=t,t=u),t}function gu(){var t,e,n,s,o,a,i,l,c;return t=hs,e=hs,(n=to())!==u&&(s=Ya())!==u&&(o=Ma())!==u?e=n=[n,s,o]:(hs=e,e=u),e===u&&(e=null),e!==u&&(n=Ya())!==u&&(s=no())!==u&&(o=Ya())!==u?(61===r.charCodeAt(hs)?(a="=",hs++):(a=u,0===Is&&Os(Tr)),a!==u&&Ya()!==u&&(i=qu())!==u?(t,t=e={column:s,value:i,table:(c=e)&&c[0]}):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=hs,e=hs,(n=to())!==u&&(s=Ya())!==u&&(o=Ma())!==u?e=n=[n,s,o]:(hs=e,e=u),e===u&&(e=null),e!==u&&(n=Ya())!==u&&(s=no())!==u&&(o=Ya())!==u?(61===r.charCodeAt(hs)?(a="=",hs++):(a=u,0===Is&&Os(Tr)),a!==u&&Ya()!==u&&(i=Wo())!==u&&Ya()!==u&&$a()!==u&&Ya()!==u&&(l=ro())!==u&&Ya()!==u&&Pa()!==u?(t,t=e=function(r,t,e){return{column:t,value:e,table:r&&r[0],keyword:"values"}}(e,s,l)):(hs=t,t=u)):(hs=t,t=u)),t}function xu(){var r;return(r=function(){var r,t;r=hs,Wo()!==u&&Ya()!==u&&(t=function(){var r,t,e,n,s,o,a,i;if(r=hs,(t=ku())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=ku())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=ku())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,t=c(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())!==u?(r,r=t):(hs=r,r=u);return r}())===u&&(r=eu()),r}function Uu(){var r,t,e,n,s,o,a,i,l;if(r=hs,ko()!==u)if(Ya()!==u)if((t=$a())!==u)if(Ya()!==u)if((e=so())!==u){for(n=[],s=hs,(o=Ya())!==u&&(a=ka())!==u&&(i=Ya())!==u&&(l=so())!==u?s=o=[o,a,i,l]:(hs=s,s=u);s!==u;)n.push(s),s=hs,(o=Ya())!==u&&(a=ka())!==u&&(i=Ya())!==u&&(l=so())!==u?s=o=[o,a,i,l]:(hs=s,s=u);n!==u&&(s=Ya())!==u&&(o=Pa())!==u?(r,r=vi(e,n)):(hs=r,r=u)}else hs=r,r=u;else hs=r,r=u;else hs=r,r=u;else hs=r,r=u;else hs=r,r=u;return r===u&&(r=hs,ko()!==u&&Ya()!==u&&(t=ku())!==u?(r,r=t):(hs=r,r=u)),r}function Mu(){var t,e;return t=hs,(e=function(){var t,e,n,s;t=hs,"insert"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(Vt));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&(t,e="insert"),(t=e)===u&&(t=hs,(e=Uo())!==u&&(t,e="replace"),t=e),t}function ku(){var r,t;return r=hs,$a()!==u&&Ya()!==u&&(t=Du())!==u&&Ya()!==u&&Pa()!==u?(r,r=t):(hs=r,r=u),r}function Du(){var r,t,e,n,s,o,a,i;if(r=hs,(t=Hu())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=Hu())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=Hu())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,r=t=function(r,t){const e={type:"expr_list"};return e.value=vi(r,t),e}(t,e)):(hs=r,r=u)}else hs=r,r=u;return r}function $u(){var t,e,n;return t=hs,function(){var t,e,n,s;t=hs,"interval"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os(In));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="INTERVAL"):(hs=t,t=u)):(hs=t,t=u);return t}()!==u&&Ya()!==u&&(e=Hu())!==u&&Ya()!==u&&(n=function(){var t;(t=function(){var t,e,n,s;t=hs,"year"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(Nn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="YEAR"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=hs,"month"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(Rn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="MONTH"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=hs,"day"===r.substr(hs,3).toLowerCase()?(e=r.substr(hs,3),hs+=3):(e=u,0===Is&&Os(Sn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="DAY"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=hs,"hour"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(_n));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="HOUR"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=hs,"minute"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(On));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="MINUTE"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=hs,"second"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(gn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="SECOND"):(hs=t,t=u)):(hs=t,t=u);return t}());return t}())!==u?(t,t={type:"interval",expr:e,unit:n.toLowerCase()}):(hs=t,t=u),t}function Pu(){var r,t,e,n,s,o;if(r=hs,(t=Fu())!==u)if(Ya()!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=Fu())!==u?n=s=[s,o]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=Fu())!==u?n=s=[s,o]:(hs=n,n=u);e!==u?(r,r=t=i(t,e)):(hs=r,r=u)}else hs=r,r=u;else hs=r,r=u;return r}function Fu(){var t,e,n;return t=hs,function(){var t,e,n,s;t=hs,"when"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(We));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}()!==u&&Ya()!==u&&(e=ju())!==u&&Ya()!==u&&function(){var t,e,n,s;t=hs,"then"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(Xe));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}()!==u&&Ya()!==u&&(n=Hu())!==u?(t,t={type:"when",cond:e,result:n}):(hs=t,t=u),t}function Gu(){var t,e;return t=hs,function(){var t,e,n,s;t=hs,"else"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(Ve));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}()!==u&&Ya()!==u&&(e=Hu())!==u?(t,t={type:"else",result:e}):(hs=t,t=u),t}function Hu(){var r;return(r=function(){var r,t,e,n,s,o,a,i;if(r=hs,(t=Ju())!==u){if(e=[],n=hs,(s=Ya())!==u&&(o=ja())!==u&&(a=Ya())!==u&&(i=Ju())!==u?n=s=[s,o,a,i]:(hs=n,n=u),n!==u)for(;n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=ja())!==u&&(a=Ya())!==u&&(i=Ju())!==u?n=s=[s,o,a,i]:(hs=n,n=u);else e=u;e!==u&&(n=Ya())!==u?((s=Xu())===u&&(s=null),s!==u?(r,t=function(r,t,e){const n=Li(r,t);return null===e?n:"arithmetic"===e.type?Li(n,e.tail):fi(e.op,n,e.right)}(t,e,s),r=t):(hs=r,r=u)):(hs=r,r=u)}else hs=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o,a,i;if(r=hs,(t=Yu())!==u){for(e=[],n=hs,(s=Ba())!==u&&(o=ua())!==u&&(a=Ya())!==u&&(i=Yu())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ba())!==u&&(o=ua())!==u&&(a=Ya())!==u&&(i=Yu())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,t=mr(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o;if(r=hs,(t=Zu())!==u){if(e=[],n=hs,(s=Ya())!==u&&(o=Ju())!==u?n=s=[s,o]:(hs=n,n=u),n!==u)for(;n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=Ju())!==u?n=s=[s,o]:(hs=n,n=u);else e=u;e!==u?(r,t=ci(t,e[0][1]),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())===u&&(r=Ds()),r}function ju(){var r,t,e,n,s,o,a,i;if(r=hs,(t=Hu())!==u){for(e=[],n=hs,(s=Ya())!==u?((o=sa())===u&&(o=ua())===u&&(o=ka()),o!==u&&(a=Ya())!==u&&(i=Hu())!==u?n=s=[s,o,a,i]:(hs=n,n=u)):(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u?((o=sa())===u&&(o=ua())===u&&(o=ka()),o!==u&&(a=Ya())!==u&&(i=Hu())!==u?n=s=[s,o,a,i]:(hs=n,n=u)):(hs=n,n=u);e!==u?(r,r=t=function(r,t){const e=t.length;let n=r,s="";for(let r=0;r<e;++r)","===t[r][1]?(s=",",Array.isArray(n)||(n=[n]),n.push(t[r][3])):n=fi(t[r][1],n,t[r][3]);if(","===s){const r={type:"expr_list"};return r.value=n,r}return n}(t,e)):(hs=r,r=u)}else hs=r,r=u;return r}function Yu(){var r,t,e,n,s,o,a,i;if(r=hs,(t=Bu())!==u){for(e=[],n=hs,(s=Ba())!==u&&(o=sa())!==u&&(a=Ya())!==u&&(i=Bu())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ba())!==u&&(o=sa())!==u&&(a=Ya())!==u&&(i=Bu())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,r=t=Li(t,e)):(hs=r,r=u)}else hs=r,r=u;return r}function Bu(){var t,e,n,s,o;return(t=Wu())===u&&(t=function(){var r,t,e;r=hs,(t=function(){var r,t,e,n,s;r=hs,t=hs,(e=na())!==u&&(n=Ya())!==u&&(s=ea())!==u?t=e=[e,n,s]:(hs=t,t=u);t!==u&&(r,t=Nr(t));(r=t)===u&&(r=ea());return r}())!==u&&Ya()!==u&&$a()!==u&&Ya()!==u&&(e=Ds())!==u&&Ya()!==u&&Pa()!==u?(r,n=t,(s=e).parentheses=!0,t=ci(n,s),r=t):(hs=r,r=u);var n,s;return r}())===u&&(t=hs,(e=na())===u&&(e=hs,33===r.charCodeAt(hs)?(n="!",hs++):(n=u,0===Is&&Os(Ir)),n!==u?(s=hs,Is++,61===r.charCodeAt(hs)?(o="=",hs++):(o=u,0===Is&&Os(Tr)),Is--,o===u?s=void 0:(hs=s,s=u),s!==u?e=n=[n,s]:(hs=e,e=u)):(hs=e,e=u)),e!==u&&(n=Ya())!==u&&(s=Bu())!==u?(t,t=e=ci("NOT",s)):(hs=t,t=u)),t}function Wu(){var r,t,e,n,s;return r=hs,(t=qu())!==u&&Ya()!==u?((e=Xu())===u&&(e=null),e!==u?(r,n=t,r=t=null===(s=e)?n:"arithmetic"===s.type?Li(n,s.tail):fi(s.op,n,s.right)):(hs=r,r=u)):(hs=r,r=u),r===u&&(r=Lo())===u&&(r=ro()),r}function Xu(){var r;return(r=function(){var r,t,e,n,s,o,a;r=hs,t=[],e=hs,(n=Ya())!==u&&(s=Vu())!==u&&(o=Ya())!==u&&(a=qu())!==u?e=n=[n,s,o,a]:(hs=e,e=u);if(e!==u)for(;e!==u;)t.push(e),e=hs,(n=Ya())!==u&&(s=Vu())!==u&&(o=Ya())!==u&&(a=qu())!==u?e=n=[n,s,o,a]:(hs=e,e=u);else t=u;t!==u&&(r,t={type:"arithmetic",tail:t});return r=t}())===u&&(r=function(){var r,t,e,n;r=hs,(t=Ku())!==u&&Ya()!==u&&(e=$a())!==u&&Ya()!==u&&(n=Du())!==u&&Ya()!==u&&Pa()!==u?(r,r=t={op:t,right:n}):(hs=r,r=u);r===u&&(r=hs,(t=Ku())!==u&&Ya()!==u?((e=ui())===u&&(e=Lo()),e!==u?(r,t=function(r,t){return{op:r,right:t}}(t,e),r=t):(hs=r,r=u)):(hs=r,r=u));return r}())===u&&(r=function(){var r,t,e,n;r=hs,(t=function(){var r,t,e,n,s;r=hs,t=hs,(e=na())!==u&&(n=Ya())!==u&&(s=zo())!==u?t=e=[e,n,s]:(hs=t,t=u);t!==u&&(r,t=Nr(t));(r=t)===u&&(r=zo());return r}())!==u&&Ya()!==u&&(e=qu())!==u&&Ya()!==u&&sa()!==u&&Ya()!==u&&(n=qu())!==u?(r,r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(hs=r,r=u);return r}())===u&&(r=function(){var r,t,e,n,s;r=hs,(t=Jo())!==u&&(e=Ya())!==u&&(n=qu())!==u?(r,r=t={op:"IS",right:n}):(hs=r,r=u);r===u&&(r=hs,t=hs,(e=Jo())!==u&&(n=Ya())!==u&&(s=na())!==u?t=e=[e,n,s]:(hs=t,t=u),t!==u&&(e=Ya())!==u&&(n=qu())!==u?(r,t=function(r){return{op:"IS NOT",right:r}}(n),r=t):(hs=r,r=u));return r}())===u&&(r=function(){var r,t,e;r=hs,(t=function(){var r,t,e,n,s;r=hs,t=hs,(e=na())!==u&&(n=Ya())!==u&&(s=ra())!==u?t=e=[e,n,s]:(hs=t,t=u);t!==u&&(r,t=Nr(t));(r=t)===u&&(r=ra());return r}())!==u&&Ya()!==u?((e=bo())===u&&(e=Wu()),e!==u?(r,t=Mr(t,e),r=t):(hs=r,r=u)):(hs=r,r=u);return r}())===u&&(r=function(){var r,t,e;r=hs,(t=function(){var r,t,e,n,s;r=hs,t=hs,(e=na())!==u&&(n=Ya())!==u&&(s=ta())!==u?t=e=[e,n,s]:(hs=t,t=u);t!==u&&(r,t=Nr(t));(r=t)===u&&(r=ta());return r}())!==u&&Ya()!==u?((e=bo())===u&&(e=Wu()),e!==u?(r,t=Mr(t,e),r=t):(hs=r,r=u)):(hs=r,r=u);return r}()),r}function Vu(){var t;return">="===r.substr(hs,2)?(t=">=",hs+=2):(t=u,0===Is&&Os(Rr)),t===u&&(62===r.charCodeAt(hs)?(t=">",hs++):(t=u,0===Is&&Os(Sr)),t===u&&("<="===r.substr(hs,2)?(t="<=",hs+=2):(t=u,0===Is&&Os(_r)),t===u&&("<>"===r.substr(hs,2)?(t="<>",hs+=2):(t=u,0===Is&&Os(Or)),t===u&&(60===r.charCodeAt(hs)?(t="<",hs++):(t=u,0===Is&&Os(gr)),t===u&&("=="===r.substr(hs,2)?(t="==",hs+=2):(t=u,0===Is&&Os(xr)),t===u&&(61===r.charCodeAt(hs)?(t="=",hs++):(t=u,0===Is&&Os(Tr)),t===u&&("!="===r.substr(hs,2)?(t="!=",hs+=2):(t=u,0===Is&&Os(Ur))))))))),t}function Ku(){var r,t,e,n,s;return r=hs,t=hs,(e=na())!==u&&(n=Ya())!==u&&(s=Qo())!==u?t=e=[e,n,s]:(hs=t,t=u),t!==u&&(r,t=Nr(t)),(r=t)===u&&(r=Qo()),r}function qu(){var r,t,e,n,s,o,a,i;if(r=hs,(t=zu())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=Zu())!==u&&(a=Ya())!==u&&(i=zu())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=Zu())!==u&&(a=Ya())!==u&&(i=zu())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,r=t=mr(t,e)):(hs=r,r=u)}else hs=r,r=u;return r}function Zu(){var t;return 43===r.charCodeAt(hs)?(t="+",hs++):(t=u,0===Is&&Os(kr)),t===u&&(45===r.charCodeAt(hs)?(t="-",hs++):(t=u,0===Is&&Os(Dr))),t}function zu(){var r,t,e,n,s,o,a,i;if(r=hs,(t=Ju())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=Qu())!==u&&(a=Ya())!==u&&(i=Ju())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=Qu())!==u&&(a=Ya())!==u&&(i=Ju())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,r=t=Li(t,e)):(hs=r,r=u)}else hs=r,r=u;return r}function Qu(){var t;return 42===r.charCodeAt(hs)?(t="*",hs++):(t=u,0===Is&&Os($r)),t===u&&(47===r.charCodeAt(hs)?(t="/",hs++):(t=u,0===Is&&Os(Pr)),t===u&&(37===r.charCodeAt(hs)?(t="%",hs++):(t=u,0===Is&&Os(Fr)))),t}function Ju(){var t,e,n,s,o,a;return(t=function(){var t,e,n,s,o,a,i;t=hs,(e=ia())!==u&&Ya()!==u&&$a()!==u&&Ya()!==u&&(n=Hu())!==u&&Ya()!==u&&Po()!==u&&Ya()!==u&&(s=ai())!==u&&Ya()!==u&&(o=Pa())!==u?(t,l=n,c=s,e={type:"cast",keyword:e.toLowerCase(),expr:l,symbol:"as",target:c},t=e):(hs=t,t=u);var l,c;t===u&&(t=hs,(e=ia())!==u&&Ya()!==u&&$a()!==u&&Ya()!==u&&(n=Hu())!==u&&Ya()!==u&&Po()!==u&&Ya()!==u&&(s=ba())!==u&&Ya()!==u&&(o=$a())!==u&&Ya()!==u&&(a=ho())!==u&&Ya()!==u&&Pa()!==u&&Ya()!==u&&(i=Pa())!==u?(t,e=function(r,t,e){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+")"}}}(e,n,a),t=e):(hs=t,t=u),t===u&&(t=hs,(e=ia())!==u&&Ya()!==u&&$a()!==u&&Ya()!==u&&(n=Hu())!==u&&Ya()!==u&&Po()!==u&&Ya()!==u&&(s=ba())!==u&&Ya()!==u&&(o=$a())!==u&&Ya()!==u&&(a=ho())!==u&&Ya()!==u&&ka()!==u&&Ya()!==u&&(i=ho())!==u&&Ya()!==u&&Pa()!==u&&Ya()!==u&&Pa()!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+", "+n+")"}}}(e,n,a,i),t=e):(hs=t,t=u),t===u&&(t=hs,(e=ia())!==u&&Ya()!==u&&$a()!==u&&Ya()!==u&&(n=Hu())!==u&&Ya()!==u&&Po()!==u&&Ya()!==u&&(s=function(){var t;(t=function(){var t,e,n,s;t=hs,"signed"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(rn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="SIGNED"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=va());return t}())!==u&&Ya()!==u?((o=Ca())===u&&(o=null),o!==u&&Ya()!==u&&(a=Pa())!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:e+(n?" "+n:"")}}}(e,n,s,o),t=e):(hs=t,t=u)):(hs=t,t=u))));return t}())===u&&(t=bo())===u&&(t=function(){var t;(t=function(){var t,e,n,s;t=hs,(e=function(){var t,e,n,s;t=hs,"count"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(Pe));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="COUNT"):(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&Ya()!==u&&$a()!==u&&Ya()!==u&&(n=function(){var t,e,n,s,o;t=hs,(e=function(){var t,e;t=hs,42===r.charCodeAt(hs)?(e="*",hs++):(e=u,0===Is&&Os($r));e!==u&&(t,e={type:"star",value:"*"});return t=e}())!==u&&(t,e={expr:e});(t=e)===u&&(t=hs,(e=Zo())===u&&(e=null),e!==u&&Ya()!==u&&(n=$a())!==u&&Ya()!==u&&(s=Hu())!==u&&Ya()!==u&&Pa()!==u&&Ya()!==u?((o=Nu())===u&&(o=null),o!==u?(t,t=e={distinct:e,expr:s,orderby:o,parentheses:!0}):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=hs,(e=Zo())===u&&(e=null),e!==u&&Ya()!==u&&(n=Hu())!==u&&Ya()!==u?((s=Nu())===u&&(s=null),s!==u?(t,e=function(r,t,e){return{distinct:r,expr:t,orderby:e,parentheses:!1}}(e,n,s),t=e):(hs=t,t=u)):(hs=t,t=u)));return t}())!==u&&Ya()!==u&&Pa()!==u&&Ya()!==u?((s=co())===u&&(s=null),s!==u?(t,t=e={type:"aggr_func",name:e,args:n,over:s}):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=function(){var t,e,n;t=hs,(e=function(){var t;(t=function(){var t,e,n,s;t=hs,"sum"===r.substr(hs,3).toLowerCase()?(e=r.substr(hs,3),hs+=3):(e=u,0===Is&&Os(He));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="SUM"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=hs,"max"===r.substr(hs,3).toLowerCase()?(e=r.substr(hs,3),hs+=3):(e=u,0===Is&&Os(Fe));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="MAX"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=hs,"min"===r.substr(hs,3).toLowerCase()?(e=r.substr(hs,3),hs+=3):(e=u,0===Is&&Os(Ge));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="MIN"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=hs,"avg"===r.substr(hs,3).toLowerCase()?(e=r.substr(hs,3),hs+=3):(e=u,0===Is&&Os(je));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="AVG"):(hs=t,t=u)):(hs=t,t=u);return t}());return t}())!==u&&Ya()!==u&&$a()!==u&&Ya()!==u&&(n=qu())!==u&&Ya()!==u&&Pa()!==u?(t,t=e={type:"aggr_func",name:e,args:{expr:n}}):(hs=t,t=u);return t}());return t}())===u&&(t=function(){var t,e,n,s,o;t=hs,(e=ei())!==u&&Ya()!==u&&(n=$a())!==u&&Ya()!==u?((s=ju())===u&&(s=null),s!==u&&Ya()!==u&&Pa()!==u&&Ya()!==u?((o=co())===u&&(o=null),o!==u?(t,a=e,l=o,(i=s)&&"expr_list"!==i.type&&(i={type:"expr_list",value:[i]}),t=e={type:"function",name:a,args:i||{type:"expr_list",value:[]},over:l}):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u);var a,i,l;t===u&&(t=hs,(e=function(){var t;(t=fo())===u&&(t=function(){var t,e,n,s;t=hs,"current_user"===r.substr(hs,12).toLowerCase()?(e=r.substr(hs,12),hs+=12):(e=u,0===Is&&Os(Mn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="CURRENT_USER"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=hs,"user"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(Tn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="USER"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=hs,"session_user"===r.substr(hs,12).toLowerCase()?(e=r.substr(hs,12),hs+=12):(e=u,0===Is&&Os(kn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="SESSION_USER"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=hs,"system_user"===r.substr(hs,11).toLowerCase()?(e=r.substr(hs,11),hs+=11):(e=u,0===Is&&Os(Dn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="SYSTEM_USER"):(hs=t,t=u)):(hs=t,t=u);return t}());return t}())!==u&&Ya()!==u&&(n=$a())!==u&&Ya()!==u?((s=Du())===u&&(s=null),s!==u&&Ya()!==u&&Pa()!==u&&Ya()!==u?((o=co())===u&&(o=null),o!==u?(t,e=function(r,t,e){return{type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,s,o),t=e):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=hs,(e=fo())!==u&&Ya()!==u?((n=lo())===u&&(n=null),n!==u?(t,t=e={type:"function",name:e,over:n}):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=hs,(e=ha())===u&&(e=ma())===u&&(e=Ia())===u&&("at time zone"===r.substr(hs,12).toLowerCase()?(e=r.substr(hs,12),hs+=12):(e=u,0===Is&&Os(ut))),e!==u&&Ya()!==u?((n=ju())===u&&(n=null),n!==u&&Ya()!==u?((s=co())===u&&(s=null),s!==u?(t,e=function(r,t,e){return t&&"expr_list"!==t.type&&(t={type:"expr_list",value:[t]}),{type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e,args_parentheses:!1}}(e,n,s),t=e):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u))));return t}())===u&&(t=function(){var r,t,e,n,s,o,a,i;return r=hs,oa()!==u&&Ya()!==u&&(t=Pu())!==u&&Ya()!==u?((e=Gu())===u&&(e=null),e!==u&&Ya()!==u&&(n=aa())!==u&&Ya()!==u?((s=oa())===u&&(s=null),s!==u?(r,a=t,(i=e)&&a.push(i),r={type:"case",expr:null,args:a}):(hs=r,r=u)):(hs=r,r=u)):(hs=r,r=u),r===u&&(r=hs,oa()!==u&&Ya()!==u&&(t=Hu())!==u&&Ya()!==u&&(e=Pu())!==u&&Ya()!==u?((n=Gu())===u&&(n=null),n!==u&&Ya()!==u&&(s=aa())!==u&&Ya()!==u?((o=oa())===u&&(o=null),o!==u?(r,r=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(t,e,n)):(hs=r,r=u)):(hs=r,r=u)):(hs=r,r=u)),r}())===u&&(t=$u())===u&&(t=hs,(e=ro())!==u&&Ya()!==u&&(n=uu())!==u?(t,a=n,(o=e).array_index=a,t=e=o):(hs=t,t=u),t===u&&(t=ro())===u&&(t=io())===u&&(t=hs,(e=$a())!==u&&Ya()!==u&&(n=ju())!==u&&Ya()!==u&&Pa()!==u?(t,(s=n).parentheses=!0,t=e=s):(hs=t,t=u),t===u&&(t=ui()))),t}function ro(){var r,t,e,n,s;return r=hs,(t=to())!==u&&Ya()!==u&&Ma()!==u&&Ya()!==u&&(e=no())!==u?(r,n=t,s=e,Ei.add(`select::${n}::${s}`),r=t={type:"column_ref",table:n,column:s}):(hs=r,r=u),r===u&&(r=hs,(t=no())!==u&&(r,t=function(r){return Ei.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t),r}function to(){var r,t;return r=hs,(t=so())!==u?(hs,(Gr(t)?u:void 0)!==u?(r,r=t=t):(hs=r,r=u)):(hs=r,r=u),r===u&&(r=hs,(t=eo())!==u&&(r,t=t),r=t),r}function eo(){var t;return(t=function(){var t,e,n,s;t=hs,34===r.charCodeAt(hs)?(e='"',hs++):(e=u,0===Is&&Os(Hr));if(e!==u){if(n=[],jr.test(r.charAt(hs))?(s=r.charAt(hs),hs++):(s=u,0===Is&&Os(Yr)),s!==u)for(;s!==u;)n.push(s),jr.test(r.charAt(hs))?(s=r.charAt(hs),hs++):(s=u,0===Is&&Os(Yr));else n=u;n!==u?(34===r.charCodeAt(hs)?(s='"',hs++):(s=u,0===Is&&Os(Hr)),s!==u?(t,e=Br(n),t=e):(hs=t,t=u)):(hs=t,t=u)}else hs=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=hs,39===r.charCodeAt(hs)?(e="'",hs++):(e=u,0===Is&&Os(rr));if(e!==u){if(n=[],Wr.test(r.charAt(hs))?(s=r.charAt(hs),hs++):(s=u,0===Is&&Os(Xr)),s!==u)for(;s!==u;)n.push(s),Wr.test(r.charAt(hs))?(s=r.charAt(hs),hs++):(s=u,0===Is&&Os(Xr));else n=u;n!==u?(39===r.charCodeAt(hs)?(s="'",hs++):(s=u,0===Is&&Os(rr)),s!==u?(t,e=Br(n),t=e):(hs=t,t=u)):(hs=t,t=u)}else hs=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=hs,96===r.charCodeAt(hs)?(e="`",hs++):(e=u,0===Is&&Os(Vr));if(e!==u){if(n=[],Kr.test(r.charAt(hs))?(s=r.charAt(hs),hs++):(s=u,0===Is&&Os(qr)),s!==u)for(;s!==u;)n.push(s),Kr.test(r.charAt(hs))?(s=r.charAt(hs),hs++):(s=u,0===Is&&Os(qr));else n=u;n!==u?(96===r.charCodeAt(hs)?(s="`",hs++):(s=u,0===Is&&Os(Vr)),s!==u?(t,e=Br(n),t=e):(hs=t,t=u)):(hs=t,t=u)}else hs=t,t=u;return t}()),t}function no(){var r,t;return r=hs,(t=function(){var r,t,e,n;if(r=hs,(t=oo())!==u){for(e=[],n=ao();n!==u;)e.push(n),n=ao();e!==u?(r,t=Zr(t,e),r=t):(hs=r,r=u)}else hs=r,r=u;return r}())!==u?(hs,(Gr(t)?u:void 0)!==u?(r,r=t=t):(hs=r,r=u)):(hs=r,r=u),r===u&&(r=eo()),r}function so(){var r,t,e,n;if(r=hs,(t=uo())!==u){for(e=[],n=oo();n!==u;)e.push(n),n=oo();e!==u?(r,r=t=Zr(t,e)):(hs=r,r=u)}else hs=r,r=u;return r}function uo(){var t;return zr.test(r.charAt(hs))?(t=r.charAt(hs),hs++):(t=u,0===Is&&Os(Qr)),t}function oo(){var t;return Jr.test(r.charAt(hs))?(t=r.charAt(hs),hs++):(t=u,0===Is&&Os(rt)),t}function ao(){var t;return tt.test(r.charAt(hs))?(t=r.charAt(hs),hs++):(t=u,0===Is&&Os(et)),t}function io(){var t,e,n,s;return t=hs,e=hs,58===r.charCodeAt(hs)?(n=":",hs++):(n=u,0===Is&&Os(nt)),n!==u&&(s=so())!==u?e=n=[n,s]:(hs=e,e=u),e!==u&&(t,e={type:"param",value:e[1]}),t=e}function lo(){var r,t,e;return r=hs,Ho()!==u&&Ya()!==u&&Oo()!==u&&Ya()!==u&&(t=Na())!==u&&Ya()!==u&&$a()!==u&&Ya()!==u?((e=Du())===u&&(e=null),e!==u&&Ya()!==u&&Pa()!==u?(r,r={type:"on update",keyword:t,parentheses:!0,expr:e}):(hs=r,r=u)):(hs=r,r=u),r===u&&(r=hs,Ho()!==u&&Ya()!==u&&Oo()!==u&&Ya()!==u&&(t=Na())!==u?(r,r=function(r){return{type:"on update",keyword:r}}(t)):(hs=r,r=u)),r}function co(){var t,e,n,s,o;return t=hs,"over"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(st)),e!==u&&Ya()!==u&&(n=hu())!==u?(t,t=e={type:"window",as_window_specification:n}):(hs=t,t=u),t===u&&(t=hs,"over"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(st)),e!==u&&Ya()!==u&&(n=$a())!==u&&Ya()!==u?((s=Ru())===u&&(s=null),s!==u&&Ya()!==u?((o=Nu())===u&&(o=null),o!==u&&Ya()!==u&&Pa()!==u?(t,t=e={partitionby:s,orderby:o}):(hs=t,t=u)):(hs=t,t=u)):(hs=t,t=u),t===u&&(t=lo())),t}function fo(){var t;return(t=function(){var t,e,n,s;t=hs,"current_date"===r.substr(hs,12).toLowerCase()?(e=r.substr(hs,12),hs+=12):(e=u,0===Is&&Os(mn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="CURRENT_DATE"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=hs,"current_time"===r.substr(hs,12).toLowerCase()?(e=r.substr(hs,12),hs+=12):(e=u,0===Is&&Os(xn));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="CURRENT_TIME"):(hs=t,t=u)):(hs=t,t=u);return t}())===u&&(t=Na()),t}function bo(){var t;return(t=Lo())===u&&(t=Eo())===u&&(t=function(){var t,e;t=hs,(e=function(){var t,e,n,s;t=hs,"true"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(Pt));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!0});(t=e)===u&&(t=hs,(e=function(){var t,e,n,s;t=hs,"false"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(Gt));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!1}),t=e);return t}())===u&&(t=vo())===u&&(t=function(){var t,e,n,s,o,a;t=hs,(e=ma())===u&&(e=ha())===u&&(e=Ia())===u&&(e=ya());if(e!==u)if(Ya()!==u){if(n=hs,39===r.charCodeAt(hs)?(s="'",hs++):(s=u,0===Is&&Os(rr)),s!==u){for(o=[],a=po();a!==u;)o.push(a),a=po();o!==u?(39===r.charCodeAt(hs)?(a="'",hs++):(a=u,0===Is&&Os(rr)),a!==u?n=s=[s,o,a]:(hs=n,n=u)):(hs=n,n=u)}else hs=n,n=u;n!==u?(t,e=at(e,n),t=e):(hs=t,t=u)}else hs=t,t=u;else hs=t,t=u;if(t===u)if(t=hs,(e=ma())===u&&(e=ha())===u&&(e=Ia())===u&&(e=ya()),e!==u)if(Ya()!==u){if(n=hs,34===r.charCodeAt(hs)?(s='"',hs++):(s=u,0===Is&&Os(Hr)),s!==u){for(o=[],a=Co();a!==u;)o.push(a),a=Co();o!==u?(34===r.charCodeAt(hs)?(a='"',hs++):(a=u,0===Is&&Os(Hr)),a!==u?n=s=[s,o,a]:(hs=n,n=u)):(hs=n,n=u)}else hs=n,n=u;n!==u?(t,e=at(e,n),t=e):(hs=t,t=u)}else hs=t,t=u;else hs=t,t=u;return t}()),t}function vo(){var t,e;return t=hs,(e=function(){var t,e,n,s;t=hs,"null"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(Dt));e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u);return t}())!==u&&(t,e={type:"null",value:null}),t=e}function Lo(){var t,e,n,s,o;if(t=hs,e=hs,39===r.charCodeAt(hs)?(n="'",hs++):(n=u,0===Is&&Os(rr)),n!==u){for(s=[],o=po();o!==u;)s.push(o),o=po();s!==u?(39===r.charCodeAt(hs)?(o="'",hs++):(o=u,0===Is&&Os(rr)),o!==u?e=n=[n,s,o]:(hs=e,e=u)):(hs=e,e=u)}else hs=e,e=u;if(e!==u&&(t,e=ot(e)),(t=e)===u){if(t=hs,e=hs,34===r.charCodeAt(hs)?(n='"',hs++):(n=u,0===Is&&Os(Hr)),n!==u){for(s=[],o=Co();o!==u;)s.push(o),o=Co();s!==u?(34===r.charCodeAt(hs)?(o='"',hs++):(o=u,0===Is&&Os(Hr)),o!==u?e=n=[n,s,o]:(hs=e,e=u)):(hs=e,e=u)}else hs=e,e=u;e!==u&&(t,e=ot(e)),t=e}return t}function Co(){var t;return it.test(r.charAt(hs))?(t=r.charAt(hs),hs++):(t=u,0===Is&&Os(lt)),t===u&&(t=wo()),t}function po(){var t;return ct.test(r.charAt(hs))?(t=r.charAt(hs),hs++):(t=u,0===Is&&Os(ft)),t===u&&(t=wo()),t}function wo(){var t,e,n,s,o,a,i,l,c,f;return t=hs,"\\'"===r.substr(hs,2)?(e="\\'",hs+=2):(e=u,0===Is&&Os(bt)),e!==u&&(t,e="\\'"),(t=e)===u&&(t=hs,'\\"'===r.substr(hs,2)?(e='\\"',hs+=2):(e=u,0===Is&&Os(vt)),e!==u&&(t,e='\\"'),(t=e)===u&&(t=hs,"\\\\"===r.substr(hs,2)?(e="\\\\",hs+=2):(e=u,0===Is&&Os(Lt)),e!==u&&(t,e="\\\\"),(t=e)===u&&(t=hs,"\\/"===r.substr(hs,2)?(e="\\/",hs+=2):(e=u,0===Is&&Os(Ct)),e!==u&&(t,e="\\/"),(t=e)===u&&(t=hs,"\\b"===r.substr(hs,2)?(e="\\b",hs+=2):(e=u,0===Is&&Os(dt)),e!==u&&(t,e="\b"),(t=e)===u&&(t=hs,"\\f"===r.substr(hs,2)?(e="\\f",hs+=2):(e=u,0===Is&&Os(pt)),e!==u&&(t,e="\f"),(t=e)===u&&(t=hs,"\\n"===r.substr(hs,2)?(e="\\n",hs+=2):(e=u,0===Is&&Os(wt)),e!==u&&(t,e="\n"),(t=e)===u&&(t=hs,"\\r"===r.substr(hs,2)?(e="\\r",hs+=2):(e=u,0===Is&&Os(Et)),e!==u&&(t,e="\r"),(t=e)===u&&(t=hs,"\\t"===r.substr(hs,2)?(e="\\t",hs+=2):(e=u,0===Is&&Os(At)),e!==u&&(t,e="\t"),(t=e)===u&&(t=hs,"\\u"===r.substr(hs,2)?(e="\\u",hs+=2):(e=u,0===Is&&Os(ht)),e!==u&&(n=No())!==u&&(s=No())!==u&&(o=No())!==u&&(a=No())!==u?(t,i=n,l=s,c=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+l+c+f))):(hs=t,t=u),t===u&&(t=hs,92===r.charCodeAt(hs)?(e="\\",hs++):(e=u,0===Is&&Os(yt)),e!==u&&(t,e="\\"),(t=e)===u&&(t=hs,"''"===r.substr(hs,2)?(e="''",hs+=2):(e=u,0===Is&&Os(Tt)),e!==u&&(t,e="''"),(t=e)===u&&(t=hs,'""'===r.substr(hs,2)?(e='""',hs+=2):(e=u,0===Is&&Os(mt)),e!==u&&(t,e='""'),(t=e)===u&&(t=hs,"``"===r.substr(hs,2)?(e="``",hs+=2):(e=u,0===Is&&Os(It)),e!==u&&(t,e="``"),t=e))))))))))))),t}function Eo(){var r,t,e;return r=hs,(t=Ao())!==u&&(r,t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function Ao(){var r,t,e,n;return r=hs,(t=ho())!==u&&(e=yo())!==u&&(n=To())!==u?(r,r=t={type:"bigint",value:t+e+n}):(hs=r,r=u),r===u&&(r=hs,(t=ho())!==u&&(e=yo())!==u?(r,r=t=function(r,t){const e=r+t;return bi(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e)):(hs=r,r=u),r===u&&(r=hs,(t=ho())!==u&&(e=To())!==u?(r,r=t=function(r,t){return{type:"bigint",value:r+t}}(t,e)):(hs=r,r=u),r===u&&(r=hs,(t=ho())!==u&&(r,t=function(r){return bi(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t))),r}function ho(){var t,e,n;return(t=mo())===u&&(t=Io())===u&&(t=hs,45===r.charCodeAt(hs)?(e="-",hs++):(e=u,0===Is&&Os(Dr)),e===u&&(43===r.charCodeAt(hs)?(e="+",hs++):(e=u,0===Is&&Os(kr))),e!==u&&(n=mo())!==u?(t,t=e=e+n):(hs=t,t=u),t===u&&(t=hs,45===r.charCodeAt(hs)?(e="-",hs++):(e=u,0===Is&&Os(Dr)),e===u&&(43===r.charCodeAt(hs)?(e="+",hs++):(e=u,0===Is&&Os(kr))),e!==u&&(n=Io())!==u?(t,t=e=function(r,t){return r+t}(e,n)):(hs=t,t=u))),t}function yo(){var t,e,n;return t=hs,46===r.charCodeAt(hs)?(e=".",hs++):(e=u,0===Is&&Os(cr)),e!==u&&(n=mo())!==u?(t,t=e="."+n):(hs=t,t=u),t}function To(){var t,e,n;return t=hs,(e=function(){var t,e,n;t=hs,xt.test(r.charAt(hs))?(e=r.charAt(hs),hs++):(e=u,0===Is&&Os(Ut));e!==u?(Mt.test(r.charAt(hs))?(n=r.charAt(hs),hs++):(n=u,0===Is&&Os(kt)),n===u&&(n=null),n!==u?(t,t=e=e+(null!==(s=n)?s:"")):(hs=t,t=u)):(hs=t,t=u);var s;return t}())!==u&&(n=mo())!==u?(t,t=e=e+n):(hs=t,t=u),t}function mo(){var r,t,e;if(r=hs,t=[],(e=Io())!==u)for(;e!==u;)t.push(e),e=Io();else t=u;return t!==u&&(r,t=t.join("")),r=t}function Io(){var t;return St.test(r.charAt(hs))?(t=r.charAt(hs),hs++):(t=u,0===Is&&Os(_t)),t}function No(){var t;return Ot.test(r.charAt(hs))?(t=r.charAt(hs),hs++):(t=u,0===Is&&Os(gt)),t}function Ro(){var t,e,n,s;return t=hs,"default"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(w)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function So(){var t,e,n,s;return t=hs,"to"===r.substr(hs,2).toLowerCase()?(e=r.substr(hs,2),hs+=2):(e=u,0===Is&&Os(Ft)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function _o(){var t,e,n,s;return t=hs,"drop"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(Ht)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="DROP"):(hs=t,t=u)):(hs=t,t=u),t}function Oo(){var t,e,n,s;return t=hs,"update"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os($)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function go(){var t,e,n,s;return t=hs,"create"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(Wt)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function xo(){var t,e,n,s;return t=hs,"temporary"===r.substr(hs,9).toLowerCase()?(e=r.substr(hs,9),hs+=9):(e=u,0===Is&&Os(Xt)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function Uo(){var t,e,n,s;return t=hs,"replace"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(qt)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function Mo(){var t,e,n,s;return t=hs,"rename"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(Zt)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function ko(){var t,e,n,s;return t=hs,"partition"===r.substr(hs,9).toLowerCase()?(e=r.substr(hs,9),hs+=9):(e=u,0===Is&&Os(Qt)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="PARTITION"):(hs=t,t=u)):(hs=t,t=u),t}function Do(){var t,e,n,s;return t=hs,"into"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(Jt)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="INTO"):(hs=t,t=u)):(hs=t,t=u),t}function $o(){var t,e,n,s;return t=hs,"set"===r.substr(hs,3).toLowerCase()?(e=r.substr(hs,3),hs+=3):(e=u,0===Is&&Os(B)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function Po(){var t,e,n,s;return t=hs,"as"===r.substr(hs,2).toLowerCase()?(e=r.substr(hs,2),hs+=2):(e=u,0===Is&&Os(ne)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function Fo(){var t,e,n,s;return t=hs,"table"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(se)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="TABLE"):(hs=t,t=u)):(hs=t,t=u),t}function Go(){var t,e,n,s;return t=hs,"tables"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(ue)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="TABLES"):(hs=t,t=u)):(hs=t,t=u),t}function Ho(){var t,e,n,s;return t=hs,"on"===r.substr(hs,2).toLowerCase()?(e=r.substr(hs,2),hs+=2):(e=u,0===Is&&Os(k)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function jo(){var t,e,n,s;return t=hs,"join"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(ve)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function Yo(){var t,e,n,s;return t=hs,"outer"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(Le)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function Bo(){var t,e,n,s;return t=hs,"union"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(Ce)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function Wo(){var t,e,n,s;return t=hs,"values"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(de)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function Xo(){var t,e,n,s;return t=hs,"using"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(pe)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function Vo(){var t,e,n,s;return t=hs,"with"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(vr)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function Ko(){var t,e,n,s;return t=hs,"by"===r.substr(hs,2).toLowerCase()?(e=r.substr(hs,2),hs+=2):(e=u,0===Is&&Os(Ae)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function qo(){var t,e,n,s;return t=hs,"all"===r.substr(hs,3).toLowerCase()?(e=r.substr(hs,3),hs+=3):(e=u,0===Is&&Os(Re)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="ALL"):(hs=t,t=u)):(hs=t,t=u),t}function Zo(){var t,e,n,s;return t=hs,"distinct"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os(Se)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="DISTINCT"):(hs=t,t=u)):(hs=t,t=u),t}function zo(){var t,e,n,s;return t=hs,"between"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(_e)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="BETWEEN"):(hs=t,t=u)):(hs=t,t=u),t}function Qo(){var t,e,n,s;return t=hs,"in"===r.substr(hs,2).toLowerCase()?(e=r.substr(hs,2),hs+=2):(e=u,0===Is&&Os(Oe)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="IN"):(hs=t,t=u)):(hs=t,t=u),t}function Jo(){var t,e,n,s;return t=hs,"is"===r.substr(hs,2).toLowerCase()?(e=r.substr(hs,2),hs+=2):(e=u,0===Is&&Os(ge)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="IS"):(hs=t,t=u)):(hs=t,t=u),t}function ra(){var t,e,n,s;return t=hs,"like"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(xe)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="LIKE"):(hs=t,t=u)):(hs=t,t=u),t}function ta(){var t,e,n,s;return t=hs,"rlike"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(Ue)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="RLIKE"):(hs=t,t=u)):(hs=t,t=u),t}function ea(){var t,e,n,s;return t=hs,"exists"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(Me)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="EXISTS"):(hs=t,t=u)):(hs=t,t=u),t}function na(){var t,e,n,s;return t=hs,"not"===r.substr(hs,3).toLowerCase()?(e=r.substr(hs,3),hs+=3):(e=u,0===Is&&Os(ke)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="NOT"):(hs=t,t=u)):(hs=t,t=u),t}function sa(){var t,e,n,s;return t=hs,"and"===r.substr(hs,3).toLowerCase()?(e=r.substr(hs,3),hs+=3):(e=u,0===Is&&Os(De)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="AND"):(hs=t,t=u)):(hs=t,t=u),t}function ua(){var t,e,n,s;return t=hs,"or"===r.substr(hs,2).toLowerCase()?(e=r.substr(hs,2),hs+=2):(e=u,0===Is&&Os($e)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="OR"):(hs=t,t=u)):(hs=t,t=u),t}function oa(){var t,e,n,s;return t=hs,"case"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(Be)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function aa(){var t,e,n,s;return t=hs,"end"===r.substr(hs,3).toLowerCase()?(e=r.substr(hs,3),hs+=3):(e=u,0===Is&&Os(Ke)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?t=e=[e,n]:(hs=t,t=u)):(hs=t,t=u),t}function ia(){var t,e,n,s;return t=hs,"cast"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(qe)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="CAST"):(hs=t,t=u)):(hs=t,t=u),t}function la(){var t,e,n,s;return t=hs,"char"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(Ze)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="CHAR"):(hs=t,t=u)):(hs=t,t=u),t}function ca(){var t,e,n,s;return t=hs,"varchar"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(ze)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="VARCHAR"):(hs=t,t=u)):(hs=t,t=u),t}function fa(){var t,e,n,s;return t=hs,"numeric"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(Qe)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="NUMERIC"):(hs=t,t=u)):(hs=t,t=u),t}function ba(){var t,e,n,s;return t=hs,"decimal"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(Je)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="DECIMAL"):(hs=t,t=u)):(hs=t,t=u),t}function va(){var t,e,n,s;return t=hs,"unsigned"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os(en)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="UNSIGNED"):(hs=t,t=u)):(hs=t,t=u),t}function La(){var t,e,n,s;return t=hs,"int"===r.substr(hs,3).toLowerCase()?(e=r.substr(hs,3),hs+=3):(e=u,0===Is&&Os(nn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="INT"):(hs=t,t=u)):(hs=t,t=u),t}function Ca(){var t,e,n,s;return t=hs,"integer"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(un)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="INTEGER"):(hs=t,t=u)):(hs=t,t=u),t}function da(){var t,e,n,s;return t=hs,"smallint"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os(an)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="SMALLINT"):(hs=t,t=u)):(hs=t,t=u),t}function pa(){var t,e,n,s;return t=hs,"tinyint"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(ln)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="TINYINT"):(hs=t,t=u)):(hs=t,t=u),t}function wa(){var t,e,n,s;return t=hs,"bigint"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(Ln)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="BIGINT"):(hs=t,t=u)):(hs=t,t=u),t}function Ea(){var t,e,n,s;return t=hs,"float"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(Cn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="FLOAT"):(hs=t,t=u)):(hs=t,t=u),t}function Aa(){var t,e,n,s;return t=hs,"double"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(dn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="DOUBLE"):(hs=t,t=u)):(hs=t,t=u),t}function ha(){var t,e,n,s;return t=hs,"date"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(pn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="DATE"):(hs=t,t=u)):(hs=t,t=u),t}function ya(){var t,e,n,s;return t=hs,"datetime"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os(wn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="DATETIME"):(hs=t,t=u)):(hs=t,t=u),t}function Ta(){var t,e,n,s;return t=hs,"rows"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(En)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="ROWS"):(hs=t,t=u)):(hs=t,t=u),t}function ma(){var t,e,n,s;return t=hs,"time"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(An)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="TIME"):(hs=t,t=u)):(hs=t,t=u),t}function Ia(){var t,e,n,s;return t=hs,"timestamp"===r.substr(hs,9).toLowerCase()?(e=r.substr(hs,9),hs+=9):(e=u,0===Is&&Os(hn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="TIMESTAMP"):(hs=t,t=u)):(hs=t,t=u),t}function Na(){var t,e,n,s;return t=hs,"current_timestamp"===r.substr(hs,17).toLowerCase()?(e=r.substr(hs,17),hs+=17):(e=u,0===Is&&Os(Un)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="CURRENT_TIMESTAMP"):(hs=t,t=u)):(hs=t,t=u),t}function Ra(){var t;return(t=function(){var t;return"@@"===r.substr(hs,2)?(t="@@",hs+=2):(t=u,0===Is&&Os(jn)),t}())===u&&(t=function(){var t;return 64===r.charCodeAt(hs)?(t="@",hs++):(t=u,0===Is&&Os(Hn)),t}())===u&&(t=function(){var t;return 36===r.charCodeAt(hs)?(t="$",hs++):(t=u,0===Is&&Os(Yn)),t}()),t}function Sa(){var t;return 61===r.charCodeAt(hs)?(t="=",hs++):(t=u,0===Is&&Os(Tr)),t}function _a(){var t,e,n,s;return t=hs,"add"===r.substr(hs,3).toLowerCase()?(e=r.substr(hs,3),hs+=3):(e=u,0===Is&&Os(Vn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="ADD"):(hs=t,t=u)):(hs=t,t=u),t}function Oa(){var t,e,n,s;return t=hs,"column"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(Kn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="COLUMN"):(hs=t,t=u)):(hs=t,t=u),t}function ga(){var t,e,n,s;return t=hs,"index"===r.substr(hs,5).toLowerCase()?(e=r.substr(hs,5),hs+=5):(e=u,0===Is&&Os(qn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="INDEX"):(hs=t,t=u)):(hs=t,t=u),t}function xa(){var t,e,n,s;return t=hs,"key"===r.substr(hs,3).toLowerCase()?(e=r.substr(hs,3),hs+=3):(e=u,0===Is&&Os(v)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="KEY"):(hs=t,t=u)):(hs=t,t=u),t}function Ua(){var t,e,n,s;return t=hs,"comment"===r.substr(hs,7).toLowerCase()?(e=r.substr(hs,7),hs+=7):(e=u,0===Is&&Os(Qn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="COMMENT"):(hs=t,t=u)):(hs=t,t=u),t}function Ma(){var t;return 46===r.charCodeAt(hs)?(t=".",hs++):(t=u,0===Is&&Os(cr)),t}function ka(){var t;return 44===r.charCodeAt(hs)?(t=",",hs++):(t=u,0===Is&&Os(as)),t}function Da(){var t;return 42===r.charCodeAt(hs)?(t="*",hs++):(t=u,0===Is&&Os($r)),t}function $a(){var t;return 40===r.charCodeAt(hs)?(t="(",hs++):(t=u,0===Is&&Os(ir)),t}function Pa(){var t;return 41===r.charCodeAt(hs)?(t=")",hs++):(t=u,0===Is&&Os(lr)),t}function Fa(){var t;return 91===r.charCodeAt(hs)?(t="[",hs++):(t=u,0===Is&&Os(is)),t}function Ga(){var t;return 93===r.charCodeAt(hs)?(t="]",hs++):(t=u,0===Is&&Os(ls)),t}function Ha(){var t;return 59===r.charCodeAt(hs)?(t=";",hs++):(t=u,0===Is&&Os(cs)),t}function ja(){var t;return(t=function(){var t;return"||"===r.substr(hs,2)?(t="||",hs+=2):(t=u,0===Is&&Os(fs)),t}())===u&&(t=function(){var t;return"&&"===r.substr(hs,2)?(t="&&",hs+=2):(t=u,0===Is&&Os(bs)),t}()),t}function Ya(){var r,t;for(r=[],(t=Ka())===u&&(t=Wa());t!==u;)r.push(t),(t=Ka())===u&&(t=Wa());return r}function Ba(){var r,t;if(r=[],(t=Ka())===u&&(t=Wa()),t!==u)for(;t!==u;)r.push(t),(t=Ka())===u&&(t=Wa());else r=u;return r}function Wa(){var t;return(t=function(){var t,e,n,s,o,a;t=hs,"/*"===r.substr(hs,2)?(e="/*",hs+=2):(e=u,0===Is&&Os(vs));if(e!==u){for(n=[],s=hs,o=hs,Is++,"*/"===r.substr(hs,2)?(a="*/",hs+=2):(a=u,0===Is&&Os(Ls)),Is--,a===u?o=void 0:(hs=o,o=u),o!==u&&(a=Va())!==u?s=o=[o,a]:(hs=s,s=u);s!==u;)n.push(s),s=hs,o=hs,Is++,"*/"===r.substr(hs,2)?(a="*/",hs+=2):(a=u,0===Is&&Os(Ls)),Is--,a===u?o=void 0:(hs=o,o=u),o!==u&&(a=Va())!==u?s=o=[o,a]:(hs=s,s=u);n!==u?("*/"===r.substr(hs,2)?(s="*/",hs+=2):(s=u,0===Is&&Os(Ls)),s!==u?t=e=[e,n,s]:(hs=t,t=u)):(hs=t,t=u)}else hs=t,t=u;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=hs,"--"===r.substr(hs,2)?(e="--",hs+=2):(e=u,0===Is&&Os(Cs));if(e!==u){for(n=[],s=hs,o=hs,Is++,a=qa(),Is--,a===u?o=void 0:(hs=o,o=u),o!==u&&(a=Va())!==u?s=o=[o,a]:(hs=s,s=u);s!==u;)n.push(s),s=hs,o=hs,Is++,a=qa(),Is--,a===u?o=void 0:(hs=o,o=u),o!==u&&(a=Va())!==u?s=o=[o,a]:(hs=s,s=u);n!==u?t=e=[e,n]:(hs=t,t=u)}else hs=t,t=u;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=hs,35===r.charCodeAt(hs)?(e="#",hs++):(e=u,0===Is&&Os(ds));if(e!==u){for(n=[],s=hs,o=hs,Is++,a=qa(),Is--,a===u?o=void 0:(hs=o,o=u),o!==u&&(a=Va())!==u?s=o=[o,a]:(hs=s,s=u);s!==u;)n.push(s),s=hs,o=hs,Is++,a=qa(),Is--,a===u?o=void 0:(hs=o,o=u),o!==u&&(a=Va())!==u?s=o=[o,a]:(hs=s,s=u);n!==u?t=e=[e,n]:(hs=t,t=u)}else hs=t,t=u;return t}()),t}function Xa(){var r,t,e,n,s,o,a;return r=hs,(t=Ua())!==u&&Ya()!==u?((e=Sa())===u&&(e=null),e!==u&&Ya()!==u&&(n=Lo())!==u?(r,o=e,a=n,r=t={type:(s=t).toLowerCase(),keyword:s.toLowerCase(),symbol:o,value:a}):(hs=r,r=u)):(hs=r,r=u),r}function Va(){var t;return r.length>hs?(t=r.charAt(hs),hs++):(t=u,0===Is&&Os(ps)),t}function Ka(){var t;return ws.test(r.charAt(hs))?(t=r.charAt(hs),hs++):(t=u,0===Is&&Os(Es)),t}function qa(){var t,e;if((t=function(){var t,e;t=hs,Is++,r.length>hs?(e=r.charAt(hs),hs++):(e=u,0===Is&&Os(ps));Is--,e===u?t=void 0:(hs=t,t=u);return t}())===u)if(t=[],Nt.test(r.charAt(hs))?(e=r.charAt(hs),hs++):(e=u,0===Is&&Os(Rt)),e!==u)for(;e!==u;)t.push(e),Nt.test(r.charAt(hs))?(e=r.charAt(hs),hs++):(e=u,0===Is&&Os(Rt));else t=u;return t}function Za(){var t,e;return t=hs,hs,pi=[],( true?void 0:0)!==u&&Ya()!==u?((e=za())===u&&(e=function(){var t,e;t=hs,function(){var t;return"return"===r.substr(hs,6).toLowerCase()?(t=r.substr(hs,6),hs+=6):(t=u,0===Is&&Os(Bn)),t}()!==u&&Ya()!==u&&(e=Qa())!==u?(t,t={type:"return",expr:e}):(hs=t,t=u);return t}()),e!==u?(t,t={stmt:e,vars:pi}):(hs=t,t=u)):(hs=t,t=u),t}function za(){var t,e,n,s;return t=hs,(e=ui())===u&&(e=oi()),e!==u&&Ya()!==u?((n=function(){var t;return":="===r.substr(hs,2)?(t=":=",hs+=2):(t=u,0===Is&&Os(Wn)),t}())===u&&(n=Sa()),n!==u&&Ya()!==u&&(s=Qa())!==u?(t,t=e={type:"assign",left:e,symbol:n,right:s}):(hs=t,t=u)):(hs=t,t=u),t}function Qa(){var r;return(r=Qs())===u&&(r=function(){var r,t,e,n,s;r=hs,(t=ui())!==u&&Ya()!==u&&(e=pu())!==u&&Ya()!==u&&(n=ui())!==u&&Ya()!==u&&(s=Eu())!==u?(r,r=t={type:"join",ltable:t,rtable:n,op:e,on:s}):(hs=r,r=u);return r}())===u&&(r=Ja())===u&&(r=function(){var r,t;r=hs,Fa()!==u&&Ya()!==u&&(t=si())!==u&&Ya()!==u&&Ga()!==u?(r,r={type:"array",value:t}):(hs=r,r=u);return r}()),r}function Ja(){var r,t,e,n,s,o,a,i;if(r=hs,(t=ri())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=Zu())!==u&&(a=Ya())!==u&&(i=ri())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=Zu())!==u&&(a=Ya())!==u&&(i=ri())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,r=t=mr(t,e)):(hs=r,r=u)}else hs=r,r=u;return r}function ri(){var r,t,e,n,s,o,a,i;if(r=hs,(t=ti())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=Qu())!==u&&(a=Ya())!==u&&(i=ti())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=Qu())!==u&&(a=Ya())!==u&&(i=ti())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,r=t=mr(t,e)):(hs=r,r=u)}else hs=r,r=u;return r}function ti(){var r,t,e;return(r=bo())===u&&(r=ui())===u&&(r=ni())===u&&(r=io())===u&&(r=hs,$a()!==u&&Ya()!==u&&(t=Ja())!==u&&Ya()!==u&&Pa()!==u?(r,(e=t).parentheses=!0,r=e):(hs=r,r=u)),r}function ei(){var r,t,e,n,s,o,a;return r=hs,(t=so())!==u?(e=hs,(n=Ya())!==u&&(s=Ma())!==u&&(o=Ya())!==u&&(a=so())!==u?e=n=[n,s,o,a]:(hs=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(hs=r,r=u)):(hs=r,r=u),r}function ni(){var r,t,e;return r=hs,(t=ei())!==u&&Ya()!==u&&$a()!==u&&Ya()!==u?((e=si())===u&&(e=null),e!==u&&Ya()!==u&&Pa()!==u?(r,r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(hs=r,r=u)):(hs=r,r=u),r===u&&(r=hs,(t=ei())!==u&&(r,t=function(r){return{type:"function",name:r,args:null}}(t)),r=t),r}function si(){var r,t,e,n,s,o,a,i;if(r=hs,(t=ti())!==u){for(e=[],n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=ti())!==u?n=s=[s,o,a,i]:(hs=n,n=u);n!==u;)e.push(n),n=hs,(s=Ya())!==u&&(o=ka())!==u&&(a=Ya())!==u&&(i=ti())!==u?n=s=[s,o,a,i]:(hs=n,n=u);e!==u?(r,r=t=c(t,e)):(hs=r,r=u)}else hs=r,r=u;return r}function ui(){var r,t,e,n,s;return r=hs,(t=Ra())!==u&&(e=oi())!==u?(r,n=t,s=e,r=t={type:"var",...s,prefix:n}):(hs=r,r=u),r}function oi(){var t,e,n,s,o;return t=hs,(e=so())!==u&&(n=function(){var t,e,n,s,o;t=hs,e=[],n=hs,46===r.charCodeAt(hs)?(s=".",hs++):(s=u,0===Is&&Os(cr));s!==u&&(o=so())!==u?n=s=[s,o]:(hs=n,n=u);for(;n!==u;)e.push(n),n=hs,46===r.charCodeAt(hs)?(s=".",hs++):(s=u,0===Is&&Os(cr)),s!==u&&(o=so())!==u?n=s=[s,o]:(hs=n,n=u);e!==u&&(t,e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==u?(t,s=e,o=n,pi.push(s),t=e={type:"var",name:s,members:o,prefix:null}):(hs=t,t=u),t===u&&(t=hs,(e=Eo())!==u&&(t,e={type:"var",name:e.value,members:[],quoted:null,prefix:null}),t=e),t}function ai(){var t;return(t=function(){var t,e,n,s;t=hs,(e=la())===u&&(e=ca());if(e!==u)if(Ya()!==u)if($a()!==u)if(Ya()!==u){if(n=[],St.test(r.charAt(hs))?(s=r.charAt(hs),hs++):(s=u,0===Is&&Os(_t)),s!==u)for(;s!==u;)n.push(s),St.test(r.charAt(hs))?(s=r.charAt(hs),hs++):(s=u,0===Is&&Os(_t));else n=u;n!==u&&(s=Ya())!==u&&Pa()!==u?(t,e={dataType:e,length:parseInt(n.join(""),10)},t=e):(hs=t,t=u)}else hs=t,t=u;else hs=t,t=u;else hs=t,t=u;else hs=t,t=u;t===u&&(t=hs,(e=la())===u&&(e=ca())===u&&(e=function(){var t,e,n,s;return t=hs,"string"===r.substr(hs,6).toLowerCase()?(e=r.substr(hs,6),hs+=6):(e=u,0===Is&&Os(tn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="STRING"):(hs=t,t=u)):(hs=t,t=u),t}()),e!==u&&(t,e=As(e)),t=e);return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f,b,v;t=hs,(e=fa())===u&&(e=ba())===u&&(e=La())===u&&(e=Ca())===u&&(e=da())===u&&(e=pa())===u&&(e=wa())===u&&(e=Ea())===u&&(e=Aa());if(e!==u)if((n=Ya())!==u)if((s=$a())!==u)if((o=Ya())!==u){if(a=[],St.test(r.charAt(hs))?(i=r.charAt(hs),hs++):(i=u,0===Is&&Os(_t)),i!==u)for(;i!==u;)a.push(i),St.test(r.charAt(hs))?(i=r.charAt(hs),hs++):(i=u,0===Is&&Os(_t));else a=u;if(a!==u)if((i=Ya())!==u){if(l=hs,(c=ka())!==u)if((f=Ya())!==u){if(b=[],St.test(r.charAt(hs))?(v=r.charAt(hs),hs++):(v=u,0===Is&&Os(_t)),v!==u)for(;v!==u;)b.push(v),St.test(r.charAt(hs))?(v=r.charAt(hs),hs++):(v=u,0===Is&&Os(_t));else b=u;b!==u?l=c=[c,f,b]:(hs=l,l=u)}else hs=l,l=u;else hs=l,l=u;l===u&&(l=null),l!==u&&(c=Ya())!==u&&(f=Pa())!==u&&(b=Ya())!==u?((v=ii())===u&&(v=null),v!==u?(t,L=l,C=v,e={dataType:e,length:parseInt(a.join(""),10),scale:L&&parseInt(L[2].join(""),10),parentheses:!0,suffix:C},t=e):(hs=t,t=u)):(hs=t,t=u)}else hs=t,t=u;else hs=t,t=u}else hs=t,t=u;else hs=t,t=u;else hs=t,t=u;else hs=t,t=u;var L,C;if(t===u){if(t=hs,(e=fa())===u&&(e=ba())===u&&(e=La())===u&&(e=Ca())===u&&(e=da())===u&&(e=pa())===u&&(e=wa())===u&&(e=Ea())===u&&(e=Aa()),e!==u){if(n=[],St.test(r.charAt(hs))?(s=r.charAt(hs),hs++):(s=u,0===Is&&Os(_t)),s!==u)for(;s!==u;)n.push(s),St.test(r.charAt(hs))?(s=r.charAt(hs),hs++):(s=u,0===Is&&Os(_t));else n=u;n!==u&&(s=Ya())!==u?((o=ii())===u&&(o=null),o!==u?(t,e=function(r,t,e){return{dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(hs=t,t=u)):(hs=t,t=u)}else hs=t,t=u;t===u&&(t=hs,(e=fa())===u&&(e=ba())===u&&(e=La())===u&&(e=Ca())===u&&(e=da())===u&&(e=pa())===u&&(e=wa())===u&&(e=Ea())===u&&(e=Aa()),e!==u&&(n=Ya())!==u?((s=ii())===u&&(s=null),s!==u&&(o=Ya())!==u?(t,e=function(r,t){return{dataType:r,suffix:t}}(e,s),t=e):(hs=t,t=u)):(hs=t,t=u))}return t}())===u&&(t=function(){var t,e,n,s;t=hs,(e=ha())===u&&(e=ya())===u&&(e=ma())===u&&(e=Ia());if(e!==u)if(Ya()!==u)if($a()!==u)if(Ya()!==u){if(n=[],St.test(r.charAt(hs))?(s=r.charAt(hs),hs++):(s=u,0===Is&&Os(_t)),s!==u)for(;s!==u;)n.push(s),St.test(r.charAt(hs))?(s=r.charAt(hs),hs++):(s=u,0===Is&&Os(_t));else n=u;n!==u&&(s=Ya())!==u&&Pa()!==u?(t,e={dataType:e,length:parseInt(n.join(""),10),parentheses:!0},t=e):(hs=t,t=u)}else hs=t,t=u;else hs=t,t=u;else hs=t,t=u;else hs=t,t=u;t===u&&(t=hs,(e=ha())===u&&(e=ya())===u&&(e=ma())===u&&(e=Ia()),e!==u&&(t,e=function(r){return{dataType:r}}(e)),t=e);return t}())===u&&(t=function(){var t,e;t=hs,(e=function(){var t,e,n,s;return t=hs,"json"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(on)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="JSON"):(hs=t,t=u)):(hs=t,t=u),t}())!==u&&(t,e=As(e));return t=e}())===u&&(t=function(){var t,e;t=hs,(e=function(){var t,e,n,s;return t=hs,"tinytext"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os(cn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="TINYTEXT"):(hs=t,t=u)):(hs=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=hs,"text"===r.substr(hs,4).toLowerCase()?(e=r.substr(hs,4),hs+=4):(e=u,0===Is&&Os(fn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="TEXT"):(hs=t,t=u)):(hs=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=hs,"mediumtext"===r.substr(hs,10).toLowerCase()?(e=r.substr(hs,10),hs+=10):(e=u,0===Is&&Os(bn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="MEDIUMTEXT"):(hs=t,t=u)):(hs=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=hs,"longtext"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os(vn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="LONGTEXT"):(hs=t,t=u)):(hs=t,t=u),t}());e!==u&&(t,e={dataType:e});return t=e}()),t}function ii(){var t,e,n;return t=hs,(e=va())===u&&(e=null),e!==u&&Ya()!==u?((n=function(){var t,e,n,s;return t=hs,"zerofill"===r.substr(hs,8).toLowerCase()?(e=r.substr(hs,8),hs+=8):(e=u,0===Is&&Os(sn)),e!==u?(n=hs,Is++,s=uo(),Is--,s===u?n=void 0:(hs=n,n=u),n!==u?(t,t=e="ZEROFILL"):(hs=t,t=u)):(hs=t,t=u),t}())===u&&(n=null),n!==u?(t,t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(hs=t,t=u)):(hs=t,t=u),t}const li={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CROSS:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function ci(r,t){return{type:"unary_expr",operator:r,expr:t}}function fi(r,t,e){return{type:"binary_expr",operator:r,left:t,right:e}}function bi(r){const t=n(Number.MAX_SAFE_INTEGER);return!(n(r)<t)}function vi(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)delete t[r][e].tableList,delete t[r][e].columnList,n.push(t[r][e]);return n}function Li(r,t){let e=r;for(let r=0;r<t.length;r++)e=fi(t[r][1],e,t[r][3]);return e}function Ci(r){const t=Ai[r];return t||(r||null)}function di(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=Ci(r[1])),t.add(r.join("::"))}return Array.from(t)}let pi=[];const wi=new Set,Ei=new Set,Ai={};if((e=a())!==u&&hs===r.length)return e;throw e!==u&&hs<r.length&&Os({type:"end"}),gs(ms,Ts<r.length?r.charAt(Ts):null,Ts<r.length?_s(Ts,Ts+1):_s(Ts,Ts))}}},function(r,t,e){"use strict";var n=e(0);function s(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,s)}!function(r,t){function e(){this.constructor=r}e.prototype=t.prototype,r.prototype=new e}(s,Error),s.buildMessage=function(r,t){var e={literal:function(r){return'"'+s(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?u(r.parts[t][0])+"-"+u(r.parts[t][1]):u(r.parts[t]);return"["+(r.inverted?"^":"")+e+"]"},any:function(r){return"any character"},end:function(r){return"end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function s(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}function u(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}return"Expected "+function(r){var t,n,s,u=new Array(r.length);for(t=0;t<r.length;t++)u[t]=(s=r[t],e[s.type](s));if(u.sort(),u.length>0){for(t=1,n=1;t<u.length;t++)u[t-1]!==u[t]&&(u[n]=u[t],n++);u.length=n}switch(u.length){case 1:return u[0];case 2:return u[0]+" or "+u[1];default:return u.slice(0,-1).join(", ")+", or "+u[u.length-1]}}(r)+" but "+function(r){return r?'"'+s(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:s,parse:function(r,t){t=void 0!==t?t:{};var e,u={},o={start:So},a=So,i=function(r,t){return Gc(r,t)},l=function(r,t){return Gc(r,t,1)},c=yo("IF",!0),f=yo("CASCADED",!0),b=yo("LOCAL",!0),v=yo("CHECK",!0),L=yo("OPTION",!1),C=yo("ALGORITHM",!0),d=yo("UNDEFINED",!0),p=yo("MERGE",!0),w=yo("TEMPTABLE",!0),E=yo("DEFINER",!0),A=yo("SQL",!0),h=yo("SECURITY",!0),y=yo("INVOKER",!0),T=function(r,t){return Gc(r,t)},m=yo("AUTO_INCREMENT",!0),I=yo("UNIQUE",!0),N=yo("KEY",!0),R=yo("PRIMARY",!0),S=yo("COLUMN_FORMAT",!0),_=yo("FIXED",!0),O=yo("DYNAMIC",!0),g=yo("DEFAULT",!0),x=yo("STORAGE",!0),U=yo("DISK",!0),M=yo("MEMORY",!0),k=yo("GENERATED",!0),D=yo("ALWAYS",!0),$=yo("AS",!0),P=yo("STORED",!0),F=yo("VIRTUAL",!0),G=yo("if",!0),H=yo("exists",!0),j=yo("INSTANT",!0),Y=yo("INPLACE",!0),B=yo("COPY",!0),W=yo("LOCK",!0),X=yo("NONE",!0),V=yo("SHARED",!0),K=yo("EXCLUSIVE",!0),q=yo("CHANGE",!0),Z=yo("FIRST",!0),z=yo("AFTER",!0),Q=yo("FOREIGN",!0),J=yo("NOCHECK",!0),rr=yo("NOT",!0),tr=yo("FOR",!0),er=yo("REPLICATION",!0),nr=yo("FOREIGN KEY",!0),sr=yo("ENFORCED",!0),ur=yo("MATCH FULL",!0),or=yo("MATCH PARTIAL",!0),ar=yo("MATCH SIMPLE",!0),ir=yo("ON",!0),lr=yo("DELETE",!0),cr=yo("UPDATE",!0),fr=yo("RESTRICT",!0),br=yo("CASCADE",!0),vr=yo("SET NULL",!0),Lr=yo("NO ACTION",!0),Cr=yo("SET DEFAULT",!0),dr=yo("CHARACTER",!0),pr=yo("SET",!0),wr=yo("CHARSET",!0),Er=yo("COLLATE",!0),Ar=yo("AVG_ROW_LENGTH",!0),hr=yo("KEY_BLOCK_SIZE",!0),yr=yo("MAX_ROWS",!0),Tr=yo("MIN_ROWS",!0),mr=yo("STATS_SAMPLE_PAGES",!0),Ir=yo("CONNECTION",!0),Nr=yo("COMPRESSION",!0),Rr=yo("'",!1),Sr=yo("ZLIB",!0),_r=yo("LZ4",!0),Or=yo("ENGINE",!0),gr=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}},xr=yo("ROW_FORMAT",!0),Ur=yo("COMPRESSED",!0),Mr=yo("REDUNDANT",!0),kr=yo("COMPACT",!0),Dr=yo("READ",!0),$r=yo("LOW_PRIORITY",!0),Pr=yo("WRITE",!0),Fr=function(r,t){return Gc(r,t)},Gr=yo("BINARY",!0),Hr=yo("MASTER",!0),jr=yo("LOGS",!0),Yr=yo("BINLOG",!0),Br=yo("EVENTS",!0),Wr=yo("COLLATION",!0),Xr=yo("GRANTS",!0),Vr=yo("(",!1),Kr=yo(")",!1),qr=/^[0-9]/,Zr=To([["0","9"]],!1,!1),zr=yo("IN",!0),Qr=yo("SHARE",!0),Jr=yo("MODE",!0),rt=yo("WAIT",!0),tt=yo("NOWAIT",!0),et=yo("SKIP",!0),nt=yo("LOCKED",!0),st=yo("NATURAL",!0),ut=yo("LANGUAGE",!0),ot=yo("WITH",!0),at=yo("QUERY",!0),it=yo("EXPANSION",!0),lt=yo("BOOLEAN",!0),ct=yo("MATCH",!0),ft=yo("AGAINST",!1),bt=yo("OUTFILE",!0),vt=yo("DUMPFILE",!0),Lt=yo("BTREE",!0),Ct=yo("HASH",!0),dt=yo("PARSER",!0),pt=yo("VISIBLE",!0),wt=yo("INVISIBLE",!0),Et=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;Vc[t]=t,e&&(Vc[e]=t),function(r){const t=Yc(r);r.clear(),t.forEach(t=>r.add(t))}(Xc)}),t},At=yo("?",!1),ht=yo("=",!1),yt=yo("DUPLICATE",!0),Tt=yo("ROW",!0),mt=function(r,t){return Hc(r,t)},It=yo("!",!1),Nt=function(r){return r[0]+" "+r[2]},Rt=yo(">=",!1),St=yo(">",!1),_t=yo("<=",!1),Ot=yo("<>",!1),gt=yo("<",!1),xt=yo("!=",!1),Ut=yo("+",!1),Mt=yo("-",!1),kt=yo("~",!1),Dt=yo("*",!1),$t=yo("/",!1),Pt=yo("%",!1),Ft=yo("div",!0),Gt=yo("&",!1),Ht=yo(">>",!1),jt=yo("<<",!1),Yt=yo("^",!1),Bt=yo("|",!1),Wt=function(r){return!0===Dc[r.toUpperCase()]},Xt=yo('"',!1),Vt=/^[^"]/,Kt=To(['"'],!0,!1),qt=function(r){return r.join("")},Zt=/^[^']/,zt=To(["'"],!0,!1),Qt=yo("`",!1),Jt=/^[^`\\]/,re=To(["`","\\"],!0,!1),te=function(r,t){return r+t.join("")},ee=/^[A-Za-z_]/,ne=To([["A","Z"],["a","z"],"_"],!1,!1),se=/^[A-Za-z0-9_$]/,ue=To([["A","Z"],["a","z"],["0","9"],"_","$"],!1,!1),oe=/^[A-Za-z0-9_:]/,ae=To([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),ie=yo(":",!1),le=yo("OVER",!0),ce=yo("WINDOW",!0),fe=yo("FOLLOWING",!0),be=yo("PRECEDING",!0),ve=yo("CURRENT",!0),Le=yo("UNBOUNDED",!0),Ce=yo("SEPARATOR",!0),de=yo("BOTH",!0),pe=yo("LEADING",!0),we=yo("TRAILING",!0),Ee=yo("trim",!0),Ae=yo("convert",!0),he=yo("binary",!0),ye=yo("_binary",!0),Te=yo("_latin1",!0),me=yo("X",!0),Ie=/^[0-9A-Fa-f]/,Ne=To([["0","9"],["A","F"],["a","f"]],!1,!1),Re=yo("b",!0),Se=yo("0x",!0),_e=yo("N",!0),Oe=function(r,t){return{type:r.toLowerCase(),value:t[1].join("")}},ge=/^[^"\\\0-\x1F\x7F]/,xe=To(['"',"\\",["\0",""],""],!0,!1),Ue=/^[^'\\]/,Me=To(["'","\\"],!0,!1),ke=yo("\\'",!1),De=yo('\\"',!1),$e=yo("\\\\",!1),Pe=yo("\\/",!1),Fe=yo("\\b",!1),Ge=yo("\\f",!1),He=yo("\\n",!1),je=yo("\\r",!1),Ye=yo("\\t",!1),Be=yo("\\u",!1),We=yo("\\",!1),Xe=yo("''",!1),Ve=yo('""',!1),Ke=yo("``",!1),qe=/^[\n\r]/,Ze=To(["\n","\r"],!1,!1),ze=yo(".",!1),Qe=/^[0-9a-fA-F]/,Je=To([["0","9"],["a","f"],["A","F"]],!1,!1),rn=/^[eE]/,tn=To(["e","E"],!1,!1),en=/^[+\-]/,nn=To(["+","-"],!1,!1),sn=yo("NULL",!0),un=yo("NOT NULL",!0),on=yo("TRUE",!0),an=yo("TO",!0),ln=yo("FALSE",!0),cn=yo("SHOW",!0),fn=yo("DROP",!0),bn=yo("USE",!0),vn=yo("ALTER",!0),Ln=yo("SELECT",!0),Cn=yo("CREATE",!0),dn=yo("TEMPORARY",!0),pn=yo("INSERT",!0),wn=yo("RECURSIVE",!1),En=yo("REPLACE",!0),An=yo("RENAME",!0),hn=yo("IGNORE",!0),yn=(yo("EXPLAIN",!0),yo("PARTITION",!0)),Tn=yo("INTO",!0),mn=yo("FROM",!0),In=yo("UNLOCK",!0),Nn=yo("TABLE",!0),Rn=yo("TABLES",!0),Sn=yo("DATABASE",!0),_n=yo("SCHEME",!0),On=yo("LEFT",!0),gn=yo("RIGHT",!0),xn=yo("FULL",!0),Un=yo("INNER",!0),Mn=yo("CROSS",!0),kn=yo("JOIN",!0),Dn=yo("OUTER",!0),$n=yo("UNION",!0),Pn=yo("MINUS",!0),Fn=yo("INTERSECT",!0),Gn=yo("VALUES",!0),Hn=yo("USING",!0),jn=yo("WHERE",!0),Yn=yo("GO",!0),Bn=yo("GROUP",!0),Wn=yo("BY",!0),Xn=yo("ORDER",!0),Vn=yo("HAVING",!0),Kn=yo("LIMIT",!0),qn=yo("OFFSET",!0),Zn=yo("ASC",!0),zn=yo("DESC",!0),Qn=yo("DESCRIBE",!0),Jn=yo("ALL",!0),rs=yo("DISTINCT",!0),ts=yo("BETWEEN",!0),es=yo("IS",!0),ns=yo("LIKE",!0),ss=yo("RLIKE",!0),us=yo("REGEXP",!0),os=yo("EXISTS",!0),as=yo("AND",!0),is=yo("OR",!0),ls=yo("COUNT",!0),cs=yo("GROUP_CONCAT",!0),fs=yo("MAX",!0),bs=yo("MIN",!0),vs=yo("SUM",!0),Ls=yo("AVG",!0),Cs=yo("CALL",!0),ds=yo("CASE",!0),ps=yo("WHEN",!0),ws=yo("THEN",!0),Es=yo("ELSE",!0),As=yo("END",!0),hs=yo("CAST",!0),ys=yo("VARBINARY",!0),Ts=yo("BIT",!0),ms=yo("CHAR",!0),Is=yo("VARCHAR",!0),Ns=yo("NUMERIC",!0),Rs=yo("DECIMAL",!0),Ss=yo("SIGNED",!0),_s=yo("UNSIGNED",!0),Os=yo("INT",!0),gs=yo("ZEROFILL",!0),xs=yo("INTEGER",!0),Us=yo("JSON",!0),Ms=yo("SMALLINT",!0),ks=yo("TINYINT",!0),Ds=yo("TINYTEXT",!0),$s=yo("TEXT",!0),Ps=yo("MEDIUMTEXT",!0),Fs=yo("LONGTEXT",!0),Gs=yo("BIGINT",!0),Hs=yo("ENUM",!0),js=yo("FLOAT",!0),Ys=yo("DOUBLE",!0),Bs=yo("DATE",!0),Ws=yo("DATETIME",!0),Xs=yo("ROWS",!0),Vs=yo("TIME",!0),Ks=yo("TIMESTAMP",!0),qs=yo("TRUNCATE",!0),Zs=yo("USER",!0),zs=yo("CURRENT_DATE",!0),Qs=(yo("ADDDATE",!0),yo("INTERVAL",!0)),Js=yo("YEAR",!0),ru=yo("MONTH",!0),tu=yo("WEEK",!0),eu=yo("DAY",!0),nu=yo("HOUR",!0),su=yo("MINUTE",!0),uu=yo("SECOND",!0),ou=yo("CURRENT_TIME",!0),au=yo("CURRENT_TIMESTAMP",!0),iu=yo("CURRENT_USER",!0),lu=yo("SESSION_USER",!0),cu=yo("SYSTEM_USER",!0),fu=yo("GLOBAL",!0),bu=yo("SESSION",!0),vu=yo("PERSIST",!0),Lu=yo("PERSIST_ONLY",!0),Cu=yo("VIEW",!0),du=yo("GEOMETRY",!0),pu=yo("POINT",!0),wu=yo("LINESTRING",!0),Eu=yo("POLYGON",!0),Au=yo("MULTIPOINT",!0),hu=yo("MULTILINESTRING",!0),yu=yo("MULTIPOLYGON",!0),Tu=yo("GEOMETRYCOLLECTION",!0),mu=yo("@",!1),Iu=yo("@@",!1),Nu=yo("$",!1),Ru=yo("return",!0),Su=yo(":=",!1),_u=yo("DUAL",!0),Ou=yo("ADD",!0),gu=yo("COLUMN",!0),xu=yo("INDEX",!0),Uu=yo("FULLTEXT",!0),Mu=yo("SPATIAL",!0),ku=yo("COMMENT",!0),Du=yo("CONSTRAINT",!0),$u=yo("REFERENCES",!0),Pu=yo("SQL_CALC_FOUND_ROWS",!0),Fu=yo("SQL_CACHE",!0),Gu=yo("SQL_NO_CACHE",!0),Hu=yo("SQL_SMALL_RESULT",!0),ju=yo("SQL_BIG_RESULT",!0),Yu=yo("SQL_BUFFER_RESULT",!0),Bu=yo(",",!1),Wu=yo("[",!1),Xu=yo("]",!1),Vu=yo(";",!1),Ku=yo("->",!1),qu=yo("->>",!1),Zu=yo("||",!1),zu=yo("&&",!1),Qu=yo("XOR",!0),Ju=yo("/*",!1),ro=yo("*/",!1),to=yo("--",!1),eo=yo("#",!1),no={type:"any"},so=/^[ \t\n\r]/,uo=To([" ","\t","\n","\r"],!1,!1),oo=yo("boolean",!0),ao=yo("blob",!0),io=yo("tinyblob",!0),lo=yo("mediumblob",!0),co=yo("longblob",!0),fo=function(r,t){return{dataType:r,length:parseInt(t.join(""),10)}},bo=function(r){return{dataType:r}},vo=/^[0-6]/,Lo=To([["0","6"]],!1,!1),Co=function(r){return{dataType:r}},po=0,wo=[{line:1,column:1}],Eo=0,Ao=[],ho=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule]}function yo(r,t){return{type:"literal",text:r,ignoreCase:t}}function To(r,t,e){return{type:"class",parts:r,inverted:t,ignoreCase:e}}function mo(t){var e,n=wo[t];if(n)return n;for(e=t-1;!wo[e];)e--;for(n={line:(n=wo[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return wo[t]=n,n}function Io(r,t){var e=mo(r),n=mo(t);return{start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function No(r){po<Eo||(po>Eo&&(Eo=po,Ao=[]),Ao.push(r))}function Ro(r,t,e){return new s(s.buildMessage(r,t),r,t,e)}function So(){var r,t,e,n,s,o,a,i;if(r=po,(t=_o())!==u)if(Cc()!==u){for(e=[],n=po,(s=Cc())!==u&&(o=fl())!==u&&(a=Cc())!==u&&(i=_o())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=fl())!==u&&(a=Cc())!==u&&(i=_o())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,r=t=function(r,t){if(!t||0===t.length)return r;delete r.tableList,delete r.columnList;let e=r;for(let r=0;r<t.length;r++)delete t[r][3].tableList,delete t[r][3].columnList,e.go_next=t[r][3],e.go="go",e=e.go_next;return{tableList:Array.from(Wc),columnList:Yc(Xc),ast:r}}(t,e)):(po=r,r=u)}else po=r,r=u;else po=r,r=u;return r}function _o(){var r,t;return r=po,Cc()!==u?((t=function(){var r,t,e,n,s,o,a,i;if(r=po,(t=go())!==u){if(e=[],n=po,(s=Cc())!==u&&(o=fc())!==u&&(a=Cc())!==u&&(i=go())!==u?n=s=[s,o,a,i]:(po=n,n=u),n!==u)for(;n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=fc())!==u&&(a=Cc())!==u&&(i=go())!==u?n=s=[s,o,a,i]:(po=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return{tableList:Array.from(Wc),columnList:Yc(Xc),ast:e}}(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())===u&&(t=Oo())===u&&(t=go()),t!==u?(r,r=t):(po=r,r=u)):(po=r,r=u),r}function Oo(){var t;return(t=function(){var t,e,n,s,o,a,i;t=po,(e=Wi())!==u&&Cc()!==u&&(n=nl())!==u&&Cc()!==u?((s=function(){var t,e,n;t=po,"if"===r.substr(po,2).toLowerCase()?(e=r.substr(po,2),po+=2):(e=u,0===ho&&No(G));e!==u&&Cc()!==u?("exists"===r.substr(po,6).toLowerCase()?(n=r.substr(po,6),po+=6):(n=u,0===ho&&No(H)),n!==u?(t,t=e="if exists"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(s=null),s!==u&&Cc()!==u&&(o=pa())!==u?(t,c=e,f=n,b=s,(v=o)&&v.forEach(r=>Wc.add(`${c}::${r.db}::${r.table}`)),e={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:c.toLowerCase(),keyword:f.toLowerCase(),prefix:b,name:v}},t=e):(po=t,t=u)):(po=t,t=u);var c,f,b,v;t===u&&(t=po,(e=Wi())!==u&&Cc()!==u&&(n=Jl())!==u&&Cc()!==u&&(s=si())!==u&&Cc()!==u&&(o=ul())!==u&&Cc()!==u&&(a=ha())!==u&&Cc()!==u?((i=function(){var r,t,e,n,s,o;r=po,(t=Ho())===u&&(t=jo());if(t!==u){for(e=[],n=po,(s=Cc())!==u?((o=Ho())===u&&(o=jo()),o!==u?n=s=[s,o]:(po=n,n=u)):(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u?((o=Ho())===u&&(o=jo()),o!==u?n=s=[s,o]:(po=n,n=u)):(po=n,n=u);e!==u?(r,t=l(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())===u&&(i=null),i!==u&&Cc()!==u?(t,e=function(r,t,e,n,s){return{tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:s}}}(e,n,s,a,i),t=e):(po=t,t=u)):(po=t,t=u));return t}())===u&&(t=function(){var t;(t=function(){var r,t,e,n,s,o,a,l,c,f;r=po,(t=Vi())!==u&&Cc()!==u?((e=Ki())===u&&(e=null),e!==u&&Cc()!==u&&nl()!==u&&Cc()!==u?((n=ko())===u&&(n=null),n!==u&&Cc()!==u&&(s=ha())!==u&&Cc()!==u&&(o=function r(){var t,e;(t=function(){var r,t;r=po,Al()!==u&&Cc()!==u&&(t=pa())!==u?(r,r={type:"like",table:t}):(po=r,r=u);return r}())===u&&(t=po,lc()!==u&&Cc()!==u&&(e=r())!==u&&Cc()!==u&&cc()!==u?(t,(n=e).parentheses=!0,t=n):(po=t,t=u));var n;return t}())!==u?(r,b=t,v=e,L=n,d=o,(C=s)&&Wc.add(`create::${C.db}::${C.table}`),t={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:b[0].toLowerCase(),keyword:"table",temporary:v&&v[0].toLowerCase(),if_not_exists:L,table:[C],like:d}},r=t):(po=r,r=u)):(po=r,r=u)):(po=r,r=u);var b,v,L,C,d;r===u&&(r=po,(t=Vi())!==u&&Cc()!==u?((e=Ki())===u&&(e=null),e!==u&&Cc()!==u&&nl()!==u&&Cc()!==u?((n=ko())===u&&(n=null),n!==u&&Cc()!==u&&(s=ha())!==u&&Cc()!==u?((o=function(){var r,t,e,n,s,o,a,i,l;if(r=po,(t=lc())!==u)if(Cc()!==u)if((e=Do())!==u){for(n=[],s=po,(o=Cc())!==u&&(a=ac())!==u&&(i=Cc())!==u&&(l=Do())!==u?s=o=[o,a,i,l]:(po=s,s=u);s!==u;)n.push(s),s=po,(o=Cc())!==u&&(a=ac())!==u&&(i=Cc())!==u&&(l=Do())!==u?s=o=[o,a,i,l]:(po=s,s=u);n!==u&&(s=Cc())!==u&&(o=cc())!==u?(r,t=T(e,n),r=t):(po=r,r=u)}else po=r,r=u;else po=r,r=u;else po=r,r=u;return r}())===u&&(o=null),o!==u&&Cc()!==u?((a=function(){var r,t,e,n,s,o,a,l;if(r=po,(t=zo())!==u){for(e=[],n=po,(s=Cc())!==u?((o=ac())===u&&(o=null),o!==u&&(a=Cc())!==u&&(l=zo())!==u?n=s=[s,o,a,l]:(po=n,n=u)):(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u?((o=ac())===u&&(o=null),o!==u&&(a=Cc())!==u&&(l=zo())!==u?n=s=[s,o,a,l]:(po=n,n=u)):(po=n,n=u);e!==u?(r,t=i(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())===u&&(a=null),a!==u&&Cc()!==u?((l=zi())===u&&(l=qi()),l===u&&(l=null),l!==u&&Cc()!==u?((c=el())===u&&(c=null),c!==u&&Cc()!==u?((f=Uo())===u&&(f=null),f!==u?(r,t=function(r,t,e,n,s,u,o,a,i){return n&&Wc.add(`create::${n.db}::${n.table}`),{tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e,table:[n],ignore_replace:o&&o[0].toLowerCase(),as:a&&a[0].toLowerCase(),query_expr:i&&i.ast,create_definitions:s,table_options:u}}}(t,e,n,s,o,a,l,c,f),r=t):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u));return r}())===u&&(t=function(){var r,t,e,n,s,o,a,l,c,f,b,v;r=po,(t=Vi())!==u&&Cc()!==u?((e=nc())===u&&(e=tc())===u&&(e=ec()),e===u&&(e=null),e!==u&&Cc()!==u&&(n=Jl())!==u&&Cc()!==u&&(s=oi())!==u&&Cc()!==u?((o=La())===u&&(o=null),o!==u&&Cc()!==u&&(a=ul())!==u&&Cc()!==u&&(l=ha())!==u&&Cc()!==u&&lc()!==u&&Cc()!==u&&(c=function(){var r,t,e,n,s,o,a,l;if(r=po,(t=Mo())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(l=Mo())!==u?n=s=[s,o,a,l]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(l=Mo())!==u?n=s=[s,o,a,l]:(po=n,n=u);e!==u?(r,t=i(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())!==u&&Cc()!==u&&cc()!==u&&Cc()!==u?((f=Ca())===u&&(f=null),f!==u&&Cc()!==u?((b=Ho())===u&&(b=null),b!==u&&Cc()!==u?((v=jo())===u&&(v=null),v!==u&&Cc()!==u?(r,L=t,C=e,d=n,p=s,w=o,E=a,A=l,h=c,y=f,T=b,m=v,t={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:L[0].toLowerCase(),index_type:C&&C.toLowerCase(),keyword:d.toLowerCase(),index:p,on_kw:E[0].toLowerCase(),table:A,index_columns:h,index_using:w,index_options:y,algorithm_option:T,lock_option:m}},r=t):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u);var L,C,d,p,w,E,A,h,y,T,m;return r}())===u&&(t=function(){var t,e,n,s,o,a;t=po,(e=Vi())!==u&&Cc()!==u?((n=function(){var t,e,n,s;t=po,"database"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(Sn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="DATABASE"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=po,"scheme"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(_n));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="SCHEME"):(po=t,t=u)):(po=t,t=u);return t}()),n!==u&&Cc()!==u?((s=ko())===u&&(s=null),s!==u&&Cc()!==u&&(o=bi())!==u&&Cc()!==u?((a=function(){var r,t,e,n,s,o;if(r=po,(t=Zo())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=Zo())!==u?n=s=[s,o]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=Zo())!==u?n=s=[s,o]:(po=n,n=u);e!==u?(r,t=l(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())===u&&(a=null),a!==u?(t,i=e,c=s,f=o,b=a,e={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:i[0].toLowerCase(),keyword:"database",if_not_exists:c,database:f,create_definitions:b}},t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u);var i,c,f,b;return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,T,m,I,N,R,S,_,O,g,x,U,M;t=po,(e=Vi())!==u&&Cc()!==u?(n=po,(s=ml())!==u&&(o=Cc())!==u&&(a=qi())!==u?n=s=[s,o,a]:(po=n,n=u),n===u&&(n=null),n!==u&&(s=Cc())!==u?(o=po,"algorithm"===r.substr(po,9).toLowerCase()?(a=r.substr(po,9),po+=9):(a=u,0===ho&&No(C)),a!==u&&(i=Cc())!==u&&(l=Zl())!==u&&(c=Cc())!==u?("undefined"===r.substr(po,9).toLowerCase()?(T=r.substr(po,9),po+=9):(T=u,0===ho&&No(d)),T===u&&("merge"===r.substr(po,5).toLowerCase()?(T=r.substr(po,5),po+=5):(T=u,0===ho&&No(p)),T===u&&("temptable"===r.substr(po,9).toLowerCase()?(T=r.substr(po,9),po+=9):(T=u,0===ho&&No(w)))),T!==u?o=a=[a,i,l,c,T]:(po=o,o=u)):(po=o,o=u),o===u&&(o=null),o!==u&&(a=Cc())!==u?(i=po,"definer"===r.substr(po,7).toLowerCase()?(l=r.substr(po,7),po+=7):(l=u,0===ho&&No(E)),l!==u&&(c=Cc())!==u&&(T=Zl())!==u&&(m=Cc())!==u&&(I=oi())!==u?i=l=[l,c,T,m,I]:(po=i,i=u),i===u&&(i=null),i!==u&&(l=Cc())!==u?(c=po,"sql"===r.substr(po,3).toLowerCase()?(T=r.substr(po,3),po+=3):(T=u,0===ho&&No(A)),T!==u&&(m=Cc())!==u?("security"===r.substr(po,8).toLowerCase()?(I=r.substr(po,8),po+=8):(I=u,0===ho&&No(h)),I!==u&&(N=Cc())!==u?("definer"===r.substr(po,7).toLowerCase()?(R=r.substr(po,7),po+=7):(R=u,0===ho&&No(E)),R===u&&("invoker"===r.substr(po,7).toLowerCase()?(R=r.substr(po,7),po+=7):(R=u,0===ho&&No(y))),R!==u?c=T=[T,m,I,N,R]:(po=c,c=u)):(po=c,c=u)):(po=c,c=u),c===u&&(c=null),c!==u&&(T=Cc())!==u&&(m=Vl())!==u&&(I=Cc())!==u&&(N=ha())!==u&&(R=Cc())!==u?(S=po,(_=lc())!==u&&(O=Cc())!==u&&(g=ui())!==u&&(x=Cc())!==u&&(U=cc())!==u?S=_=[_,O,g,x,U]:(po=S,S=u),S===u&&(S=null),S!==u&&(_=Cc())!==u&&(O=el())!==u&&(g=Cc())!==u&&(x=ua())!==u&&(U=Cc())!==u?((M=function(){var t,e,n,s,o;t=po,(e=cl())!==u&&Cc()!==u?("cascaded"===r.substr(po,8).toLowerCase()?(n=r.substr(po,8),po+=8):(n=u,0===ho&&No(f)),n===u&&("local"===r.substr(po,5).toLowerCase()?(n=r.substr(po,5),po+=5):(n=u,0===ho&&No(b))),n!==u&&Cc()!==u?("check"===r.substr(po,5).toLowerCase()?(s=r.substr(po,5),po+=5):(s=u,0===ho&&No(v)),s!==u&&Cc()!==u?("OPTION"===r.substr(po,6)?(o="OPTION",po+=6):(o=u,0===ho&&No(L)),o!==u?(t,e=`with ${n.toLowerCase()} check option`,t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u);t===u&&(t=po,(e=cl())!==u&&Cc()!==u?("check"===r.substr(po,5).toLowerCase()?(n=r.substr(po,5),po+=5):(n=u,0===ho&&No(v)),n!==u&&Cc()!==u?("OPTION"===r.substr(po,6)?(s="OPTION",po+=6):(s=u,0===ho&&No(L)),s!==u?(t,t=e="with check option"):(po=t,t=u)):(po=t,t=u)):(po=t,t=u));return t}())===u&&(M=null),M!==u?(t,k=e,D=n,$=o,P=i,F=c,H=S,j=x,Y=M,(G=N).view=G.table,delete G.table,e={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:k[0].toLowerCase(),keyword:"view",replace:D&&"or replace",algorithm:$&&$[4],definer:P&&P[4],sql_security:F&&F[4],columns:H&&H[2],select:j,view:G,with:Y}},t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u);var k,D,$,P,F,G,H,j,Y;return t}());return t}())===u&&(t=function(){var t,e,n,s;t=po,(e=function(){var t,e,n,s;t=po,"truncate"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(qs));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="TRUNCATE"):(po=t,t=u)):(po=t,t=u);return t}())!==u&&Cc()!==u?((n=nl())===u&&(n=null),n!==u&&Cc()!==u&&(s=pa())!==u?(t,o=e,a=n,(i=s)&&i.forEach(r=>Wc.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(po=t,t=u)):(po=t,t=u);var o,a,i;return t}())===u&&(t=function(){var r,t,e;r=po,(t=Zi())!==u&&Cc()!==u&&nl()!==u&&Cc()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=po,(t=va())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=va())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=va())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,t=T(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())!==u?(r,(n=e).forEach(r=>r.forEach(r=>r.table&&Wc.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:"rename",table:n}},r=t):(po=r,r=u);var n;return r}())===u&&(t=function(){var t,e,n;t=po,(e=function(){var t,e,n,s;t=po,"call"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(Cs));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="CALL"):(po=t,t=u)):(po=t,t=u);return t}())!==u&&Cc()!==u&&(n=_c())!==u?(t,s=n,e={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:"call",expr:s}},t=e):(po=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n;t=po,(e=function(){var t,e,n,s;t=po,"use"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(bn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&Cc()!==u&&(n=oi())!==u?(t,s=n,Wc.add(`use::${s}::null`),e={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:"use",db:s}},t=e):(po=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n,s;t=po,(e=function(){var t,e,n,s;t=po,"alter"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(vn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&Cc()!==u&&nl()!==u&&Cc()!==u&&(n=ha())!==u&&Cc()!==u&&(s=function(){var r,t,e,n,s,o,a,i;if(r=po,(t=Go())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=Go())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=Go())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,t=T(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())!==u?(t,o=n,a=s,Wc.add(`alter::${o.db}::${o.table}`),e={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:"alter",table:[o],expr:a}},t=e):(po=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n,s;t=po,(e=tl())!==u&&Cc()!==u?((n=function(){var t,e,n,s;t=po,"global"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(fu));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="GLOBAL"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=po,"session"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(bu));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="SESSION"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=po,"local"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(b));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="LOCAL"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=po,"persist"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(vu));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="PERSIST"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=po,"persist_only"===r.substr(po,12).toLowerCase()?(e=r.substr(po,12),po+=12):(e=u,0===ho&&No(Lu));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="PERSIST_ONLY"):(po=t,t=u)):(po=t,t=u);return t}()),n===u&&(n=null),n!==u&&Cc()!==u&&(s=Tc())!==u?(t,o=n,(a=s).keyword=o,e={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:"set",expr:a}},t=e):(po=t,t=u)):(po=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n;t=po,(e=function(){var t,e,n,s;t=po,"lock"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(W));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&Cc()!==u&&sl()!==u&&Cc()!==u&&(n=function(){var r,t,e,n,s,o,a,i;if(r=po,(t=Qo())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=Qo())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=Qo())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,t=Fr(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())!==u?(t,s=n,e={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:"lock",keyword:"tables",tables:s}},t=e):(po=t,t=u);var s;return t}())===u&&(t=function(){var t,e;t=po,(e=function(){var t,e,n,s;t=po,"unlock"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(In));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&Cc()!==u&&sl()!==u?(t,e={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:"unlock",keyword:"tables"}},t=e):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c;t=po,(e=Bi())!==u&&Cc()!==u?("binary"===r.substr(po,6).toLowerCase()?(n=r.substr(po,6),po+=6):(n=u,0===ho&&No(Gr)),n===u&&("master"===r.substr(po,6).toLowerCase()?(n=r.substr(po,6),po+=6):(n=u,0===ho&&No(Hr))),n!==u&&(s=Cc())!==u?("logs"===r.substr(po,4).toLowerCase()?(o=r.substr(po,4),po+=4):(o=u,0===ho&&No(jr)),o!==u?(t,f=n,e={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:"show",suffix:"logs",keyword:f.toLowerCase()}},t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u);var f;t===u&&(t=po,(e=Bi())!==u&&Cc()!==u?("binlog"===r.substr(po,6).toLowerCase()?(n=r.substr(po,6),po+=6):(n=u,0===ho&&No(Yr)),n!==u&&(s=Cc())!==u?("events"===r.substr(po,6).toLowerCase()?(o=r.substr(po,6),po+=6):(o=u,0===ho&&No(Br)),o!==u&&(a=Cc())!==u?((i=Qa())===u&&(i=null),i!==u&&Cc()!==u?((l=ba())===u&&(l=null),l!==u&&Cc()!==u?((c=_a())===u&&(c=null),c!==u?(t,b=i,v=l,L=c,e={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:"show",suffix:"events",keyword:"binlog",in:b,from:v,limit:L}},t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,(e=Bi())!==u&&Cc()!==u?(n=po,"character"===r.substr(po,9).toLowerCase()?(s=r.substr(po,9),po+=9):(s=u,0===ho&&No(dr)),s!==u&&(o=Cc())!==u?("set"===r.substr(po,3).toLowerCase()?(a=r.substr(po,3),po+=3):(a=u,0===ho&&No(pr)),a!==u?n=s=[s,o,a]:(po=n,n=u)):(po=n,n=u),n===u&&("collation"===r.substr(po,9).toLowerCase()?(n=r.substr(po,9),po+=9):(n=u,0===ho&&No(Wr))),n!==u&&(s=Cc())!==u?((o=za())===u&&(o=Ta()),o===u&&(o=null),o!==u?(t,e=function(r,t){let e=Array.isArray(r)&&r||[r];return{tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:"show",suffix:e[2]&&e[2].toLowerCase(),keyword:e[0].toLowerCase(),expr:t}}}(n,o),t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,(e=Bi())!==u&&Cc()!==u&&(n=Vi())!==u&&(s=Cc())!==u&&(o=Vl())!==u&&(a=Cc())!==u&&(i=ha())!==u?(t,e=function(r){return{tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:"show",keyword:"create",suffix:"view",view:r}}}(i),t=e):(po=t,t=u),t===u&&(t=function(){var t,e,n,s;t=po,(e=Bi())!==u&&Cc()!==u?("grants"===r.substr(po,6).toLowerCase()?(n=r.substr(po,6),po+=6):(n=u,0===ho&&No(Xr)),n!==u&&Cc()!==u?((s=function(){var t,e,n,s,o,a,i;t=po,"for"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(tr));e!==u&&Cc()!==u&&(n=oi())!==u&&Cc()!==u?(s=po,(o=Kl())!==u&&(a=Cc())!==u&&(i=oi())!==u?s=o=[o,a,i]:(po=s,s=u),s===u&&(s=null),s!==u&&(o=Cc())!==u?((a=function(){var r,t;r=po,ll()!==u&&Cc()!==u&&(t=function(){var r,t,e,n,s,o,a,i;if(r=po,(t=oi())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=oi())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=oi())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,t=Fr(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())!==u?(r,r=t):(po=r,r=u);return r}())===u&&(a=null),a!==u?(t,c=a,e={user:n,host:(l=s)&&l[2],role_list:c},t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u);var l,c;return t}())===u&&(s=null),s!==u?(t,o=s,e={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:"show",keyword:"grants",for:o}},t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u);var o;return t}()))));var b,v,L;return t}())===u&&(t=function(){var t,e,n;t=po,(e=Ll())===u&&(e=function(){var t,e,n,s;t=po,"describe"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(Qn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="DESCRIBE"):(po=t,t=u)):(po=t,t=u);return t}());e!==u&&Cc()!==u&&(n=oi())!==u?(t,s=n,e={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:"desc",table:s}},t=e):(po=t,t=u);var s;return t}()),t}function go(){var t;return(t=Uo())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=po,(t=Cc())!==u?((e=ra())===u&&(e=null),e!==u&&Cc()!==u&&Xi()!==u&&Cc()!==u&&(n=pa())!==u&&Cc()!==u&&tl()!==u&&Cc()!==u&&(s=Oa())!==u&&Cc()!==u?((o=Ta())===u&&(o=null),o!==u&&Cc()!==u?((a=Na())===u&&(a=null),a!==u&&Cc()!==u?((i=_a())===u&&(i=null),i!==u?(r,t=function(r,t,e,n,s,u){const o={};return t&&t.forEach(r=>{const{db:t,as:e,table:n,join:s}=r,u=s?"select":"update";t&&(o[n]=t),n&&Wc.add(`${u}::${t}::${n}`)}),e&&e.forEach(r=>{if(r.table){const t=jc(r.table);Wc.add(`update::${o[t]||null}::${t}`)}Xc.add(`update::${r.table}::${r.column}`)}),{tableList:Array.from(Wc),columnList:Yc(Xc),ast:{with:r,type:"update",table:t,set:e,where:n,orderby:s,limit:u}}}(e,n,s,o,a,i),r=t):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a,i,l;r=po,(t=ka())!==u&&Cc()!==u?((e=zi())===u&&(e=null),e!==u&&Cc()!==u?((n=Ji())===u&&(n=null),n!==u&&Cc()!==u&&(s=ha())!==u&&Cc()!==u?((o=Ua())===u&&(o=null),o!==u&&Cc()!==u&&lc()!==u&&Cc()!==u&&(a=ui())!==u&&Cc()!==u&&cc()!==u&&Cc()!==u&&(i=xa())!==u&&Cc()!==u?((l=Ma())===u&&(l=null),l!==u?(r,t=function(r,t,e,n,s,u,o,a){if(n&&(Wc.add(`insert::${n.db}::${n.table}`),n.as=null),u){let r=n&&n.table||null;Array.isArray(o)&&o.forEach((r,t)=>{if(r.value.length!=u.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),u.forEach(t=>Xc.add(`insert::${r}::${t}`))}const i=[t,e].filter(r=>r).map(r=>r[0]&&r[0].toLowerCase()).join(" ");return{tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:r,table:[n],columns:u,values:o,partition:s,prefix:i,on_duplicate_update:a}}}(t,e,n,s,o,a,i,l),r=t):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=po,(t=ka())!==u&&Cc()!==u?((e=zi())===u&&(e=null),e!==u&&Cc()!==u?((n=Ji())===u&&(n=null),n!==u&&Cc()!==u&&(s=ha())!==u&&Cc()!==u?((o=Ua())===u&&(o=null),o!==u&&Cc()!==u&&(a=xa())!==u&&Cc()!==u?((i=Ma())===u&&(i=null),i!==u?(r,t=function(r,t,e,n,s,u,o){n&&(Wc.add(`insert::${n.db}::${n.table}`),Xc.add(`insert::${n.table}::(.*)`),n.as=null);const a=[t,e].filter(r=>r).map(r=>r[0]&&r[0].toLowerCase()).join(" ");return{tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:r,table:[n],columns:null,values:u,partition:s,prefix:a,on_duplicate_update:o}}}(t,e,n,s,o,a,i),r=t):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a;r=po,(t=ka())!==u&&Cc()!==u?((e=Ji())===u&&(e=null),e!==u&&Cc()!==u&&(n=ha())!==u&&Cc()!==u?((s=Ua())===u&&(s=null),s!==u&&Cc()!==u&&tl()!==u&&Cc()!==u&&(o=Oa())!==u&&Cc()!==u?((a=Ma())===u&&(a=null),a!==u?(r,i=t,l=e,f=s,b=o,v=a,(c=n)&&(Wc.add(`insert::${c.db}::${c.table}`),Xc.add(`insert::${c.table}::(.*)`),c.as=null),t={tableList:Array.from(Wc),columnList:Yc(Xc),ast:{type:i,table:[c],columns:null,partition:f,prefix:null===l?"":l[0],set:b,on_duplicate_update:v}},r=t):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u);var i,l,c,f,b,v;return r}())===u&&(t=function(){var t,e,n,s,o,a,i,l;t=po,(e=Cc())!==u?((n=ra())===u&&(n=null),n!==u&&Cc()!==u&&function(){var t,e,n,s;t=po,"delete"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(lr));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}()!==u&&Cc()!==u?((s=pa())===u&&(s=null),s!==u&&Cc()!==u&&(o=ba())!==u&&Cc()!==u?((a=Ta())===u&&(a=null),a!==u&&Cc()!==u?((i=Na())===u&&(i=null),i!==u&&Cc()!==u?((l=_a())===u&&(l=null),l!==u?(t,e=function(r,t,e,n,s,u){if(e&&e.forEach(r=>{const{db:t,as:e,table:n,join:s}=r,u=s?"select":"delete";n&&Wc.add(`${u}::${t}::${n}`),s||Xc.add(`delete::${n}::(.*)`)}),null===t&&1===e.length){const r=e[0];t=[{db:r.db,table:r.table,as:r.as,addition:!0}]}return{tableList:Array.from(Wc),columnList:Yc(Xc),ast:{with:r,type:"delete",table:t,from:e,where:n,orderby:s,limit:u}}}(n,s,o,a,i,l),t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=Oo())===u&&(t=function(){var r,t;r=[],t=yc();for(;t!==u;)r.push(t),t=yc();return r}()),t}function xo(){var t,e;return t=po,(e=il())!==u&&Cc()!==u&&Cl()!==u?(t,t=e="union all"):(po=t,t=u),t===u&&(t=po,(e=il())!==u&&(t,e="union"),(t=e)===u&&(t=po,(e=function(){var t,e,n,s;t=po,"minus"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(Pn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&(t,e="minus"),(t=e)===u&&(t=po,(e=function(){var t,e,n,s;t=po,"intersect"===r.substr(po,9).toLowerCase()?(e=r.substr(po,9),po+=9):(e=u,0===ho&&No(Fn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&(t,e="intersect"),t=e))),t}function Uo(){var r,t,e,n,s,o,a,i;if(r=po,(t=Jo())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=xo())!==u&&(a=Cc())!==u&&(i=Jo())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=xo())!==u&&(a=Cc())!==u&&(i=Jo())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u&&(n=Cc())!==u?((s=Na())===u&&(s=null),s!==u&&(o=Cc())!==u?((a=_a())===u&&(a=null),a!==u?(r,r=t=function(r,t,e,n){let s=r;for(let r=0;r<t.length;r++)s._next=t[r][3],s.set_op=t[r][1],s=s._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(Wc),columnList:Yc(Xc),ast:r}}(t,e,s,a)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)}else po=r,r=u;return r}function Mo(){var r,t,e,n;return r=po,(t=Ya())!==u?((e=vl())===u&&(e=Ll()),e===u&&(e=null),e!==u?(r,r=t={column:t,order:(n=e)&&n.toLowerCase()||"asc"}):(po=r,r=u)):(po=r,r=u),r===u&&(r=function(){var r,t,e;r=po,(t=si())!==u&&Cc()!==u?((e=vl())===u&&(e=Ll()),e===u&&(e=null),e!==u?(r,t=function(r,t){return{column:r,order:t&&t.toLowerCase()||"asc"}}(t,e),r=t):(po=r,r=u)):(po=r,r=u);return r}()),r}function ko(){var t,e;return t=po,"if"===r.substr(po,2).toLowerCase()?(e=r.substr(po,2),po+=2):(e=u,0===ho&&No(c)),e!==u&&Cc()!==u&&yl()!==u&&Cc()!==u&&hl()!==u?(t,t=e="IF NOT EXISTS"):(po=t,t=u),t}function Do(){var r;return(r=Wo())===u&&(r=Po())===u&&(r=Yo())===u&&(r=Bo()),r}function $o(){var t,e,n,s,o,a,i;return t=po,(e=function(){var t,e;t=po,(e=function(){var t,e,n,s;t=po,"not null"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(un));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&(t,e={type:"not null",value:"not null"});return t=e}())===u&&(e=Oi()),e!==u&&(t,(i=e)&&!i.value&&(i.value="null"),e={nullable:i}),(t=e)===u&&(t=po,(e=function(){var r,t;r=po,ji()!==u&&Cc()!==u?((t=_i())===u&&(t=Ya()),t!==u?(r,r={type:"default",value:t}):(po=r,r=u)):(po=r,r=u);return r}())!==u&&(t,e={default_val:e}),(t=e)===u&&(t=po,"auto_increment"===r.substr(po,14).toLowerCase()?(e=r.substr(po,14),po+=14):(e=u,0===ho&&No(m)),e!==u&&(t,e={auto_increment:e.toLowerCase()}),(t=e)===u&&(t=po,e=po,"unique"===r.substr(po,6).toLowerCase()?(n=r.substr(po,6),po+=6):(n=u,0===ho&&No(I)),n!==u&&(s=Cc())!==u?("key"===r.substr(po,3).toLowerCase()?(o=r.substr(po,3),po+=3):(o=u,0===ho&&No(N)),o===u&&(o=null),o!==u?e=n=[n,s,o]:(po=e,e=u)):(po=e,e=u),e===u&&(e=po,"primary"===r.substr(po,7).toLowerCase()?(n=r.substr(po,7),po+=7):(n=u,0===ho&&No(R)),n===u&&(n=null),n!==u&&(s=Cc())!==u?("key"===r.substr(po,3).toLowerCase()?(o=r.substr(po,3),po+=3):(o=u,0===ho&&No(N)),o!==u?e=n=[n,s,o]:(po=e,e=u)):(po=e,e=u)),e!==u&&(t,e=function(r){const t=[];return r&&t.push(r[0],r[2]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===u&&(t=po,(e=wc())!==u&&(t,e={comment:e}),(t=e)===u&&(t=po,(e=Fo())!==u&&(t,e={collate:e}),(t=e)===u&&(t=po,(e=function(){var t,e,n;t=po,"column_format"===r.substr(po,13).toLowerCase()?(e=r.substr(po,13),po+=13):(e=u,0===ho&&No(S));e!==u&&Cc()!==u?("fixed"===r.substr(po,5).toLowerCase()?(n=r.substr(po,5),po+=5):(n=u,0===ho&&No(_)),n===u&&("dynamic"===r.substr(po,7).toLowerCase()?(n=r.substr(po,7),po+=7):(n=u,0===ho&&No(O)),n===u&&("default"===r.substr(po,7).toLowerCase()?(n=r.substr(po,7),po+=7):(n=u,0===ho&&No(g)))),n!==u?(t,e={type:"column_format",value:n.toLowerCase()},t=e):(po=t,t=u)):(po=t,t=u);return t}())!==u&&(t,e={column_format:e}),(t=e)===u&&(t=po,(e=function(){var t,e,n;t=po,"storage"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(x));e!==u&&Cc()!==u?("disk"===r.substr(po,4).toLowerCase()?(n=r.substr(po,4),po+=4):(n=u,0===ho&&No(U)),n===u&&("memory"===r.substr(po,6).toLowerCase()?(n=r.substr(po,6),po+=6):(n=u,0===ho&&No(M))),n!==u?(t,e={type:"storage",value:n.toLowerCase()},t=e):(po=t,t=u)):(po=t,t=u);return t}())!==u&&(t,e={storage:e}),(t=e)===u&&(t=po,(e=Vo())!==u&&(t,e={reference_definition:e}),(t=e)===u&&(t=po,(e=function(){var t,e,n,s,o,a,i,l;t=po,(e=Xo())===u&&(e=null);e!==u&&Cc()!==u?("check"===r.substr(po,5).toLowerCase()?(n=r.substr(po,5),po+=5):(n=u,0===ho&&No(v)),n!==u&&Cc()!==u&&lc()!==u&&Cc()!==u&&(s=Ya())!==u&&Cc()!==u&&cc()!==u&&Cc()!==u?(o=po,(a=yl())===u&&(a=null),a!==u&&(i=Cc())!==u?("enforced"===r.substr(po,8).toLowerCase()?(l=r.substr(po,8),po+=8):(l=u,0===ho&&No(sr)),l!==u?o=a=[a,i,l]:(po=o,o=u)):(po=o,o=u),o===u&&(o=null),o!==u?(t,e=function(r,t,e,n){const s=[];return n&&s.push(n[0],n[2]),{constraint_type:t.toLowerCase(),keyword:r&&r.keyword,constraint:r&&r.constraint,definition:[e],enforced:s.filter(r=>r).join(" ").toLowerCase(),resource:"constraint"}}(e,n,s,o),t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u);return t}())!==u&&(t,e={check:e}),(t=e)===u&&(t=po,(e=qo())!==u&&(n=Cc())!==u?((s=Zl())===u&&(s=null),s!==u&&(o=Cc())!==u&&(a=bi())!==u?(t,t=e=function(r,t,e){return{character_set:{type:r,value:e,symbol:t}}}(e,s,a)):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,(e=function(){var t,e,n,s,o,a,i,l;t=po,e=po,(n=function(){var t,e,n,s,o;t=po,e=po,"generated"===r.substr(po,9).toLowerCase()?(n=r.substr(po,9),po+=9):(n=u,0===ho&&No(k));n!==u&&(s=Cc())!==u?("always"===r.substr(po,6).toLowerCase()?(o=r.substr(po,6),po+=6):(o=u,0===ho&&No(D)),o!==u?e=n=[n,s,o]:(po=e,e=u)):(po=e,e=u);e!==u&&(t,e=e.join("").toLowerCase());return t=e}())===u&&(n=null);n!==u&&(s=Cc())!==u?("as"===r.substr(po,2).toLowerCase()?(o=r.substr(po,2),po+=2):(o=u,0===ho&&No($)),o!==u?e=n=[n,s,o]:(po=e,e=u)):(po=e,e=u);if(e!==u)if((n=Cc())!==u)if((s=lc())!==u)if((o=Cc())!==u)if((a=_i())===u&&(a=Ya()),a!==u)if(Cc()!==u)if(cc()!==u)if(Cc()!==u){for(i=[],"stored"===r.substr(po,6).toLowerCase()?(l=r.substr(po,6),po+=6):(l=u,0===ho&&No(P)),l===u&&("virtual"===r.substr(po,7).toLowerCase()?(l=r.substr(po,7),po+=7):(l=u,0===ho&&No(F)));l!==u;)i.push(l),"stored"===r.substr(po,6).toLowerCase()?(l=r.substr(po,6),po+=6):(l=u,0===ho&&No(P)),l===u&&("virtual"===r.substr(po,7).toLowerCase()?(l=r.substr(po,7),po+=7):(l=u,0===ho&&No(F)));i!==u?(t,c=i,e={type:"generated",expr:a,value:e.filter(r=>"string"==typeof r).join(" ").toLowerCase(),storage_type:c&&c[0]&&c[0].toLowerCase()},t=e):(po=t,t=u)}else po=t,t=u;else po=t,t=u;else po=t,t=u;else po=t,t=u;else po=t,t=u;else po=t,t=u;else po=t,t=u;else po=t,t=u;var c;return t}())!==u&&(t,e={generated:e}),t=e))))))))))),t}function Po(){var r,t,e,n,s,o,a;return r=po,(t=si())!==u&&Cc()!==u&&(e=Uc())!==u&&Cc()!==u?((n=function(){var r,t,e,n,s,o;if(r=po,(t=$o())!==u)if(Cc()!==u){for(e=[],n=po,(s=Cc())!==u&&(o=$o())!==u?n=s=[s,o]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=$o())!==u?n=s=[s,o]:(po=n,n=u);e!==u?(r,r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(po=r,r=u)}else po=r,r=u;else po=r,r=u;return r}())===u&&(n=null),n!==u?(r,s=t,o=e,a=n,Xc.add(`create::${s.table}::${s.column}`),r=t={column:s,definition:o,resource:"column",...a||{}}):(po=r,r=u)):(po=r,r=u),r}function Fo(){var t,e,n;return t=po,function(){var t,e,n,s;t=po,"collate"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(Er));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="COLLATE"):(po=t,t=u)):(po=t,t=u);return t}()!==u&&Cc()!==u?((e=Zl())===u&&(e=null),e!==u&&Cc()!==u&&(n=bi())!==u?(t,t={type:"collate",symbol:e,value:n}):(po=t,t=u)):(po=t,t=u),t}function Go(){var t,e,n;return(t=function(){var r,t;r=po,zl()!==u&&Cc()!==u&&(t=Wo())!==u?(r,r={action:"add",create_definitions:t,resource:"constraint",type:"alter"}):(po=r,r=u);return r}())===u&&(t=function(){var t,e,n,s;t=po,(e=Wi())!==u&&Cc()!==u?("check"===r.substr(po,5).toLowerCase()?(n=r.substr(po,5),po+=5):(n=u,0===ho&&No(v)),n!==u&&Cc()!==u&&(s=bi())!==u?(t,e={action:"drop",constraint:s,keyword:n.toLowerCase(),resource:"constraint",type:"alter"},t=e):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n;t=po,Wi()!==u&&Cc()!==u?("primary"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(R)),e!==u&&Cc()!==u&&rc()!==u?(t,t={action:"drop",key:"",keyword:"primary key",resource:"key",type:"alter"}):(po=t,t=u)):(po=t,t=u);t===u&&(t=po,Wi()!==u&&Cc()!==u?("foreign"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(Q)),e!==u&&Cc()!==u&&rc()!==u&&Cc()!==u&&(n=bi())!==u?(t,t={action:"drop",key:n,keyword:"foreign key",resource:"key",type:"alter"}):(po=t,t=u)):(po=t,t=u));return t}())===u&&(t=function(){var t,e,n,s;t=po,cl()!==u&&Cc()!==u?("check"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(v)),e!==u&&Cc()!==u?("check"===r.substr(po,5).toLowerCase()?(n=r.substr(po,5),po+=5):(n=u,0===ho&&No(v)),n!==u&&Cc()!==u&&uc()!==u&&Cc()!==u&&(s=bi())!==u?(t,t={action:"with",constraint:s,keyword:"check check",resource:"constraint",type:"alter"}):(po=t,t=u)):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n;t=po,"nocheck"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(J));e!==u&&Cc()!==u&&uc()!==u&&Cc()!==u&&(n=bi())!==u?(t,t=e={action:"nocheck",constraint:n,resource:"constraint",type:"alter"}):(po=t,t=u);return t}())===u&&(t=function(){var r,t,e,n;r=po,(t=zl())!==u&&Cc()!==u?((e=Ql())===u&&(e=null),e!==u&&Cc()!==u&&(n=Po())!==u?(r,s=e,o=n,t={action:"add",...o,keyword:s,resource:"column",type:"alter"},r=t):(po=r,r=u)):(po=r,r=u);var s,o;return r}())===u&&(t=function(){var r,t,e;r=po,Wi()!==u&&Cc()!==u?((t=Ql())===u&&(t=null),t!==u&&Cc()!==u&&(e=si())!==u?(r,r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(po=r,r=u)):(po=r,r=u);return r}())===u&&(t=function(){var r,t,e;r=po,(t=zl())!==u&&Cc()!==u&&(e=Yo())!==u?(r,n=e,t={action:"add",type:"alter",...n},r=t):(po=r,r=u);var n;return r}())===u&&(t=function(){var r,t,e;r=po,(t=zl())!==u&&Cc()!==u&&(e=Bo())!==u?(r,n=e,t={action:"add",type:"alter",...n},r=t):(po=r,r=u);var n;return r}())===u&&(t=function(){var r,t,e,n,s;r=po,(t=Zi())!==u&&Cc()!==u&&Ql()!==u&&Cc()!==u&&(e=si())!==u&&Cc()!==u?((n=Yi())===u&&(n=el()),n===u&&(n=null),n!==u&&Cc()!==u&&(s=si())!==u?(r,a=s,t={action:"rename",type:"alter",resource:"column",keyword:"column",old_column:e,prefix:(o=n)&&o[0].toLowerCase(),column:a},r=t):(po=r,r=u)):(po=r,r=u);var o,a;return r}())===u&&(t=function(){var r,t,e,n;r=po,(t=Zi())!==u&&Cc()!==u?((e=Yi())===u&&(e=el()),e===u&&(e=null),e!==u&&Cc()!==u&&(n=oi())!==u?(r,o=n,t={action:"rename",type:"alter",resource:"table",keyword:(s=e)&&s[0].toLowerCase(),table:o},r=t):(po=r,r=u)):(po=r,r=u);var s,o;return r}())===u&&(t=Ho())===u&&(t=jo())===u&&(t=function(){var t,e,n,s,o,a,i,l,c;t=po,"change"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(q));e!==u&&Cc()!==u?((n=Ql())===u&&(n=null),n!==u&&Cc()!==u&&(s=si())!==u&&Cc()!==u&&(o=Po())!==u&&Cc()!==u?(a=po,"first"===r.substr(po,5).toLowerCase()?(i=r.substr(po,5),po+=5):(i=u,0===ho&&No(Z)),i===u&&("after"===r.substr(po,5).toLowerCase()?(i=r.substr(po,5),po+=5):(i=u,0===ho&&No(z))),i!==u&&(l=Cc())!==u&&(c=si())!==u?a=i=[i,l,c]:(po=a,a=u),a===u&&(a=null),a!==u?(t,f=n,b=o,v=a,e={action:"change",old_column:s,...b,keyword:f,resource:"column",type:"alter",first_after:v&&{keyword:v[0],column:v[2]}},t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u);var f,b,v;return t}())===u&&(t=po,(e=zo())!==u&&(t,(n=e).resource=n.keyword,n[n.keyword]=n.value,delete n.value,e={type:"alter",...n}),t=e),t}function Ho(){var t,e,n,s;return t=po,"algorithm"===r.substr(po,9).toLowerCase()?(e=r.substr(po,9),po+=9):(e=u,0===ho&&No(C)),e!==u&&Cc()!==u?((n=Zl())===u&&(n=null),n!==u&&Cc()!==u?("default"===r.substr(po,7).toLowerCase()?(s=r.substr(po,7),po+=7):(s=u,0===ho&&No(g)),s===u&&("instant"===r.substr(po,7).toLowerCase()?(s=r.substr(po,7),po+=7):(s=u,0===ho&&No(j)),s===u&&("inplace"===r.substr(po,7).toLowerCase()?(s=r.substr(po,7),po+=7):(s=u,0===ho&&No(Y)),s===u&&("copy"===r.substr(po,4).toLowerCase()?(s=r.substr(po,4),po+=4):(s=u,0===ho&&No(B))))),s!==u?(t,t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:s}):(po=t,t=u)):(po=t,t=u)):(po=t,t=u),t}function jo(){var t,e,n,s;return t=po,"lock"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(W)),e!==u&&Cc()!==u?((n=Zl())===u&&(n=null),n!==u&&Cc()!==u?("default"===r.substr(po,7).toLowerCase()?(s=r.substr(po,7),po+=7):(s=u,0===ho&&No(g)),s===u&&("none"===r.substr(po,4).toLowerCase()?(s=r.substr(po,4),po+=4):(s=u,0===ho&&No(X)),s===u&&("shared"===r.substr(po,6).toLowerCase()?(s=r.substr(po,6),po+=6):(s=u,0===ho&&No(V)),s===u&&("exclusive"===r.substr(po,9).toLowerCase()?(s=r.substr(po,9),po+=9):(s=u,0===ho&&No(K))))),s!==u?(t,t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:s}):(po=t,t=u)):(po=t,t=u)):(po=t,t=u),t}function Yo(){var r,t,e,n,s,o,a,i;return r=po,(t=Jl())===u&&(t=rc()),t!==u&&Cc()!==u?((e=ci())===u&&(e=null),e!==u&&Cc()!==u?((n=La())===u&&(n=null),n!==u&&Cc()!==u&&(s=function(){var r,t;r=po,lc()!==u&&Cc()!==u&&(t=function(){var r,t,e,n,s,o,a,i;if(r=po,(t=na())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=na())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=na())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,t=T(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())!==u&&Cc()!==u&&cc()!==u?(r,r=t):(po=r,r=u);return r}())!==u&&Cc()!==u?((o=Ca())===u&&(o=null),o!==u&&Cc()!==u?(r,a=n,i=o,r=t={index:e,definition:s,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u),r}function Bo(){var r,t,e,n,s,o,a,i,l;return r=po,(t=tc())===u&&(t=ec()),t!==u&&Cc()!==u?((e=Jl())===u&&(e=rc()),e===u&&(e=null),e!==u&&Cc()!==u?((n=ci())===u&&(n=null),n!==u&&Cc()!==u&&(s=ea())!==u&&Cc()!==u?((o=Ca())===u&&(o=null),o!==u?(r,a=t,l=o,r=t={index:n,definition:s,keyword:(i=e)&&`${a.toLowerCase()} ${i.toLowerCase()}`||a.toLowerCase(),index_options:l,resource:"index"}):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u),r}function Wo(){var t;return(t=function(){var t,e,n,s,o,a,i,l;t=po,(e=Xo())===u&&(e=null);e!==u&&Cc()!==u?(n=po,"primary"===r.substr(po,7).toLowerCase()?(s=r.substr(po,7),po+=7):(s=u,0===ho&&No(R)),s!==u&&(o=Cc())!==u?("key"===r.substr(po,3).toLowerCase()?(a=r.substr(po,3),po+=3):(a=u,0===ho&&No(N)),a!==u?n=s=[s,o,a]:(po=n,n=u)):(po=n,n=u),n!==u&&(s=Cc())!==u?((o=La())===u&&(o=null),o!==u&&(a=Cc())!==u&&(i=ea())!==u&&Cc()!==u?((l=Ca())===u&&(l=null),l!==u?(t,f=n,b=o,v=i,L=l,e={constraint:(c=e)&&c.constraint,definition:v,constraint_type:`${f[0].toLowerCase()} ${f[2].toLowerCase()}`,keyword:c&&c.keyword,index_type:b,resource:"constraint",index_options:L},t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u);var c,f,b,v,L;return t}())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=po,(t=Xo())===u&&(t=null);t!==u&&Cc()!==u&&(e=nc())!==u&&Cc()!==u?((n=Jl())===u&&(n=rc()),n===u&&(n=null),n!==u&&Cc()!==u?((s=ci())===u&&(s=null),s!==u&&Cc()!==u?((o=La())===u&&(o=null),o!==u&&Cc()!==u&&(a=ea())!==u&&Cc()!==u?((i=Ca())===u&&(i=null),i!==u?(r,c=e,f=n,b=s,v=o,L=a,C=i,t={constraint:(l=t)&&l.constraint,definition:L,constraint_type:f&&`${c.toLowerCase()} ${f.toLowerCase()}`||c.toLowerCase(),keyword:l&&l.keyword,index_type:v,index:b,resource:"constraint",index_options:C},r=t):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u);var l,c,f,b,v,L,C;return r}())===u&&(t=function(){var t,e,n,s,o,a;t=po,(e=Xo())===u&&(e=null);e!==u&&Cc()!==u?("foreign key"===r.substr(po,11).toLowerCase()?(n=r.substr(po,11),po+=11):(n=u,0===ho&&No(nr)),n!==u&&Cc()!==u?((s=ci())===u&&(s=null),s!==u&&Cc()!==u&&(o=ea())!==u&&Cc()!==u?((a=Vo())===u&&(a=null),a!==u?(t,l=n,c=s,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:l,keyword:i&&i.keyword,index:c,resource:"constraint",reference_definition:b},t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u);var i,l,c,f,b;return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f;t=po,(e=Xo())===u&&(e=null);e!==u&&Cc()!==u?("check"===r.substr(po,5).toLowerCase()?(n=r.substr(po,5),po+=5):(n=u,0===ho&&No(v)),n!==u&&Cc()!==u?(s=po,"not"===r.substr(po,3).toLowerCase()?(o=r.substr(po,3),po+=3):(o=u,0===ho&&No(rr)),o!==u&&(a=Cc())!==u?("for"===r.substr(po,3).toLowerCase()?(i=r.substr(po,3),po+=3):(i=u,0===ho&&No(tr)),i!==u&&(l=Cc())!==u?("replication"===r.substr(po,11).toLowerCase()?(c=r.substr(po,11),po+=11):(c=u,0===ho&&No(er)),c!==u&&(f=Cc())!==u?s=o=[o,a,i,l,c,f]:(po=s,s=u)):(po=s,s=u)):(po=s,s=u),s===u&&(s=null),s!==u&&(o=lc())!==u&&(a=Cc())!==u&&(i=Ya())!==u&&(l=Cc())!==u&&(c=cc())!==u?(t,b=e,L=s,C=i,e={constraint_type:n.toLowerCase(),keyword:b&&b.keyword,constraint:b&&b.constraint,index_type:L&&{keyword:"not for replication"},definition:[C],resource:"constraint"},t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u);var b,L,C;return t}()),t}function Xo(){var r,t,e,n;return r=po,(t=uc())!==u&&Cc()!==u?((e=oi())===u&&(e=null),e!==u?(r,n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(po=r,r=u)):(po=r,r=u),r}function Vo(){var t,e,n,s,o,a,i,l,c,f,b;return t=po,(e=function(){var t,e,n,s;t=po,"references"===r.substr(po,10).toLowerCase()?(e=r.substr(po,10),po+=10):(e=u,0===ho&&No($u));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="REFERENCES"):(po=t,t=u)):(po=t,t=u);return t}())!==u&&Cc()!==u&&(n=pa())!==u&&Cc()!==u&&(s=ea())!==u&&Cc()!==u?("match full"===r.substr(po,10).toLowerCase()?(o=r.substr(po,10),po+=10):(o=u,0===ho&&No(ur)),o===u&&("match partial"===r.substr(po,13).toLowerCase()?(o=r.substr(po,13),po+=13):(o=u,0===ho&&No(or)),o===u&&("match simple"===r.substr(po,12).toLowerCase()?(o=r.substr(po,12),po+=12):(o=u,0===ho&&No(ar)))),o===u&&(o=null),o!==u&&Cc()!==u?((a=Ko())===u&&(a=null),a!==u&&Cc()!==u?((i=Ko())===u&&(i=null),i!==u?(t,l=o,c=a,f=i,t=e={definition:s,table:n,keyword:e.toLowerCase(),match:l&&l.toLowerCase(),on_delete:c,on_update:f}):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,(e=Ko())!==u&&(t,e={[(b=e).type.split(" ").join("_")]:b}),t=e),t}function Ko(){var t,e,n,s,o,a;return t=po,"on"===r.substr(po,2).toLowerCase()?(e=r.substr(po,2),po+=2):(e=u,0===ho&&No(ir)),e!==u&&dc()!==u?("delete"===r.substr(po,6).toLowerCase()?(n=r.substr(po,6),po+=6):(n=u,0===ho&&No(lr)),n===u&&("update"===r.substr(po,6).toLowerCase()?(n=r.substr(po,6),po+=6):(n=u,0===ho&&No(cr))),n!==u&&dc()!==u&&(s=function(){var t,e;t=po,"restrict"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(fr));e===u&&("cascade"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(br)),e===u&&("set null"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(vr)),e===u&&("no action"===r.substr(po,9).toLowerCase()?(e=r.substr(po,9),po+=9):(e=u,0===ho&&No(Lr)),e===u&&("set default"===r.substr(po,11).toLowerCase()?(e=r.substr(po,11),po+=11):(e=u,0===ho&&No(Cr)),e===u&&(e=Xl())))));e!==u&&(t,e=e.toLowerCase());return t=e}())!==u?(t,o=n,a=s,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(po=t,t=u)):(po=t,t=u),t}function qo(){var t,e,n;return t=po,"character"===r.substr(po,9).toLowerCase()?(e=r.substr(po,9),po+=9):(e=u,0===ho&&No(dr)),e!==u&&Cc()!==u?("set"===r.substr(po,3).toLowerCase()?(n=r.substr(po,3),po+=3):(n=u,0===ho&&No(pr)),n!==u?(t,t=e="CHARACTER SET"):(po=t,t=u)):(po=t,t=u),t}function Zo(){var t,e,n,s,o,a,i,l,c;return t=po,(e=ji())===u&&(e=null),e!==u&&Cc()!==u?((n=qo())===u&&("charset"===r.substr(po,7).toLowerCase()?(n=r.substr(po,7),po+=7):(n=u,0===ho&&No(wr)),n===u&&("collate"===r.substr(po,7).toLowerCase()?(n=r.substr(po,7),po+=7):(n=u,0===ho&&No(Er)))),n!==u&&Cc()!==u?((s=Zl())===u&&(s=null),s!==u&&Cc()!==u&&(o=bi())!==u?(t,i=n,l=s,c=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:l,value:c}):(po=t,t=u)):(po=t,t=u)):(po=t,t=u),t}function zo(){var t,e,n,s,o,a,i,l,c;return t=po,"auto_increment"===r.substr(po,14).toLowerCase()?(e=r.substr(po,14),po+=14):(e=u,0===ho&&No(m)),e===u&&("avg_row_length"===r.substr(po,14).toLowerCase()?(e=r.substr(po,14),po+=14):(e=u,0===ho&&No(Ar)),e===u&&("key_block_size"===r.substr(po,14).toLowerCase()?(e=r.substr(po,14),po+=14):(e=u,0===ho&&No(hr)),e===u&&("max_rows"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(yr)),e===u&&("min_rows"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(Tr)),e===u&&("stats_sample_pages"===r.substr(po,18).toLowerCase()?(e=r.substr(po,18),po+=18):(e=u,0===ho&&No(mr))))))),e!==u&&Cc()!==u?((n=Zl())===u&&(n=null),n!==u&&Cc()!==u&&(s=ki())!==u?(t,l=n,c=s,t=e={keyword:e.toLowerCase(),symbol:l,value:c.value}):(po=t,t=u)):(po=t,t=u),t===u&&(t=Zo())===u&&(t=po,(e=sc())===u&&("connection"===r.substr(po,10).toLowerCase()?(e=r.substr(po,10),po+=10):(e=u,0===ho&&No(Ir))),e!==u&&Cc()!==u?((n=Zl())===u&&(n=null),n!==u&&Cc()!==u&&(s=gi())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,s)):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,"compression"===r.substr(po,11).toLowerCase()?(e=r.substr(po,11),po+=11):(e=u,0===ho&&No(Nr)),e!==u&&Cc()!==u?((n=Zl())===u&&(n=null),n!==u&&Cc()!==u?(s=po,39===r.charCodeAt(po)?(o="'",po++):(o=u,0===ho&&No(Rr)),o!==u?("zlib"===r.substr(po,4).toLowerCase()?(a=r.substr(po,4),po+=4):(a=u,0===ho&&No(Sr)),a===u&&("lz4"===r.substr(po,3).toLowerCase()?(a=r.substr(po,3),po+=3):(a=u,0===ho&&No(_r)),a===u&&("none"===r.substr(po,4).toLowerCase()?(a=r.substr(po,4),po+=4):(a=u,0===ho&&No(X)))),a!==u?(39===r.charCodeAt(po)?(i="'",po++):(i=u,0===ho&&No(Rr)),i!==u?s=o=[o,a,i]:(po=s,s=u)):(po=s,s=u)):(po=s,s=u),s!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,s)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,"engine"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(Or)),e!==u&&Cc()!==u?((n=Zl())===u&&(n=null),n!==u&&Cc()!==u&&(s=bi())!==u?(t,t=e=gr(e,n,s)):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,"row_format"===r.substr(po,10).toLowerCase()?(e=r.substr(po,10),po+=10):(e=u,0===ho&&No(xr)),e!==u&&Cc()!==u?((n=Zl())===u&&(n=null),n!==u&&Cc()!==u?((s=ji())===u&&("dynamic"===r.substr(po,7).toLowerCase()?(s=r.substr(po,7),po+=7):(s=u,0===ho&&No(O)),s===u&&("fixed"===r.substr(po,5).toLowerCase()?(s=r.substr(po,5),po+=5):(s=u,0===ho&&No(_)),s===u&&("compressed"===r.substr(po,10).toLowerCase()?(s=r.substr(po,10),po+=10):(s=u,0===ho&&No(Ur)),s===u&&("redundant"===r.substr(po,9).toLowerCase()?(s=r.substr(po,9),po+=9):(s=u,0===ho&&No(Mr)),s===u&&("compact"===r.substr(po,7).toLowerCase()?(s=r.substr(po,7),po+=7):(s=u,0===ho&&No(kr))))))),s!==u?(t,t=e=gr(e,n,s)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u))))),t}function Qo(){var t,e,n,s,o;return t=po,(e=Ea())!==u&&Cc()!==u&&(n=function(){var t,e,n;return t=po,"read"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(Dr)),e!==u&&Cc()!==u?("local"===r.substr(po,5).toLowerCase()?(n=r.substr(po,5),po+=5):(n=u,0===ho&&No(b)),n===u&&(n=null),n!==u?(t,t=e={type:"read",suffix:n&&"local"}):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,"low_priority"===r.substr(po,12).toLowerCase()?(e=r.substr(po,12),po+=12):(e=u,0===ho&&No($r)),e===u&&(e=null),e!==u&&Cc()!==u?("write"===r.substr(po,5).toLowerCase()?(n=r.substr(po,5),po+=5):(n=u,0===ho&&No(Pr)),n!==u?(t,t=e={type:"write",prefix:e&&"low_priority"}):(po=t,t=u)):(po=t,t=u)),t}())!==u?(t,s=e,o=n,Wc.add(`lock::${s.db}::${s.table}`),t=e={table:s,lock_type:o}):(po=t,t=u),t}function Jo(){var t,e,n,s,o,a,i;return(t=ua())===u&&(t=po,e=po,40===r.charCodeAt(po)?(n="(",po++):(n=u,0===ho&&No(Vr)),n!==u&&(s=Cc())!==u&&(o=Jo())!==u&&(a=Cc())!==u?(41===r.charCodeAt(po)?(i=")",po++):(i=u,0===ho&&No(Kr)),i!==u?e=n=[n,s,o,a,i]:(po=e,e=u)):(po=e,e=u),e!==u&&(t,e={...e[2],parentheses_symbol:!0}),t=e),t}function ra(){var t,e,n,s,o,a,i,l,c;if(t=po,cl()!==u)if(Cc()!==u)if((e=ta())!==u){for(n=[],s=po,(o=Cc())!==u&&(a=ac())!==u&&(i=Cc())!==u&&(l=ta())!==u?s=o=[o,a,i,l]:(po=s,s=u);s!==u;)n.push(s),s=po,(o=Cc())!==u&&(a=ac())!==u&&(i=Cc())!==u&&(l=ta())!==u?s=o=[o,a,i,l]:(po=s,s=u);n!==u?(t,t=T(e,n)):(po=t,t=u)}else po=t,t=u;else po=t,t=u;else po=t,t=u;return t===u&&(t=po,Cc()!==u&&cl()!==u&&(e=Cc())!==u&&(n=function(){var t,e,n,s;t=po,"RECURSIVE"===r.substr(po,9)?(e="RECURSIVE",po+=9):(e=u,0===ho&&No(wn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&(s=Cc())!==u&&(o=ta())!==u?(t,(c=o).recursive=!0,t=[c]):(po=t,t=u)),t}function ta(){var r,t,e,n,s;return r=po,(t=gi())===u&&(t=bi()),t!==u&&Cc()!==u?((e=ea())===u&&(e=null),e!==u&&Cc()!==u&&el()!==u&&Cc()!==u&&lc()!==u&&Cc()!==u&&(n=Uo())!==u&&Cc()!==u&&cc()!==u?(r,"string"==typeof(s=t)&&(s={type:"default",value:s}),r=t={name:s,stmt:n,columns:e}):(po=r,r=u)):(po=r,r=u),r}function ea(){var r,t;return r=po,lc()!==u&&Cc()!==u&&(t=function(){var r;(r=ma())===u&&(r=function(){var r,t,e,n,s,o,a,i;if(r=po,(t=_i())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=_i())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=_i())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,t=T(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}());return r}())!==u&&Cc()!==u&&cc()!==u?(r,r=t):(po=r,r=u),r}function na(){var t,e,n,s,o,a,i;if(t=po,(e=li())!==u)if(Cc()!==u)if((n=lc())!==u)if(Cc()!==u){if(s=[],qr.test(r.charAt(po))?(o=r.charAt(po),po++):(o=u,0===ho&&No(Zr)),o!==u)for(;o!==u;)s.push(o),qr.test(r.charAt(po))?(o=r.charAt(po),po++):(o=u,0===ho&&No(Zr));else s=u;s!==u&&(o=Cc())!==u&&cc()!==u&&Cc()!==u?((a=vl())===u&&(a=Ll()),a===u&&(a=null),a!==u?(t,i=a,t=e={type:"column_ref",column:e,suffix:`(${parseInt(s.join(""),10)})`,order_by:i}):(po=t,t=u)):(po=t,t=u)}else po=t,t=u;else po=t,t=u;else po=t,t=u;else po=t,t=u;return t===u&&(t=po,(e=li())!==u&&Cc()!==u?((n=vl())===u&&(n=Ll()),n===u&&(n=null),n!==u?(t,t=e=function(r,t){return{type:"column_ref",column:r,order_by:t}}(e,n)):(po=t,t=u)):(po=t,t=u)),t}function sa(){var t,e,n,s;return t=po,(e=function(){var t,e,n,s,o,a;return t=po,e=po,"for"===r.substr(po,3).toLowerCase()?(n=r.substr(po,3),po+=3):(n=u,0===ho&&No(tr)),n!==u&&(s=Cc())!==u&&(o=Xi())!==u?e=n=[n,s,o]:(po=e,e=u),e!==u&&(t,e=`${(a=e)[0]} ${a[2][0]}`),t=e}())===u&&(e=function(){var t,e,n,s,o,a,i,l,c,f;return t=po,e=po,"lock"===r.substr(po,4).toLowerCase()?(n=r.substr(po,4),po+=4):(n=u,0===ho&&No(W)),n!==u&&(s=Cc())!==u?("in"===r.substr(po,2).toLowerCase()?(o=r.substr(po,2),po+=2):(o=u,0===ho&&No(zr)),o!==u&&(a=Cc())!==u?("share"===r.substr(po,5).toLowerCase()?(i=r.substr(po,5),po+=5):(i=u,0===ho&&No(Qr)),i!==u&&(l=Cc())!==u?("mode"===r.substr(po,4).toLowerCase()?(c=r.substr(po,4),po+=4):(c=u,0===ho&&No(Jr)),c!==u?e=n=[n,s,o,a,i,l,c]:(po=e,e=u)):(po=e,e=u)):(po=e,e=u)):(po=e,e=u),e!==u&&(t,e=`${(f=e)[0]} ${f[2]} ${f[4]} ${f[6]}`),t=e}()),e!==u&&Cc()!==u?((n=function(){var t,e,n,s,o,a,i;return t=po,e=po,"wait"===r.substr(po,4).toLowerCase()?(n=r.substr(po,4),po+=4):(n=u,0===ho&&No(rt)),n!==u&&(s=Cc())!==u&&(o=ki())!==u?e=n=[n,s,o]:(po=e,e=u),e!==u&&(t,e=`${(a=e)[0]} ${a[2].value}`),(t=e)===u&&("nowait"===r.substr(po,6).toLowerCase()?(t=r.substr(po,6),po+=6):(t=u,0===ho&&No(tt)),t===u&&(t=po,e=po,"skip"===r.substr(po,4).toLowerCase()?(n=r.substr(po,4),po+=4):(n=u,0===ho&&No(et)),n!==u&&(s=Cc())!==u?("locked"===r.substr(po,6).toLowerCase()?(o=r.substr(po,6),po+=6):(o=u,0===ho&&No(nt)),o!==u?e=n=[n,s,o]:(po=e,e=u)):(po=e,e=u),e!==u&&(t,e=`${(i=e)[0]} ${i[2]}`),t=e)),t}())===u&&(n=null),n!==u?(t,t=e=e+((s=n)?" "+s:"")):(po=t,t=u)):(po=t,t=u),t}function ua(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C,d,p;return t=po,Cc()!==u?((e=ra())===u&&(e=null),e!==u&&Cc()!==u&&function(){var t,e,n,s;t=po,"select"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(Ln));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}()!==u&&dc()!==u?((n=function(){var r,t,e,n,s,o;if(r=po,(t=oa())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=oa())!==u?n=s=[s,o]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=oa())!==u?n=s=[s,o]:(po=n,n=u);e!==u?(r,t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())===u&&(n=null),n!==u&&Cc()!==u?((s=dl())===u&&(s=null),s!==u&&Cc()!==u&&(o=aa())!==u&&Cc()!==u?((a=fa())===u&&(a=null),a!==u&&Cc()!==u?((i=ba())===u&&(i=null),i!==u&&Cc()!==u?((l=fa())===u&&(l=null),l!==u&&Cc()!==u?((c=Ta())===u&&(c=null),c!==u&&Cc()!==u?((f=function(){var t,e,n;t=po,(e=function(){var t,e,n,s;t=po,"group"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(Bn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&Cc()!==u&&bl()!==u&&Cc()!==u&&(n=Pa())!==u?(t,e=n.value,t=e):(po=t,t=u);return t}())===u&&(f=null),f!==u&&Cc()!==u?((b=function(){var t,e;t=po,function(){var t,e,n,s;t=po,"having"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(Vn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}()!==u&&Cc()!==u&&(e=Ba())!==u?(t,t=e):(po=t,t=u);return t}())===u&&(b=null),b!==u&&Cc()!==u?((v=Na())===u&&(v=null),v!==u&&Cc()!==u?((L=_a())===u&&(L=null),L!==u&&Cc()!==u?((C=sa())===u&&(C=null),C!==u&&Cc()!==u?((d=function(){var t,e,n;t=po,"window"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(ce));e!==u&&Cc()!==u&&(n=function(){var r,t,e,n,s,o,a,i;if(r=po,(t=Ei())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=Ei())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=Ei())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,t=Gc(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())!==u?(t,t=e={keyword:"window",type:"window",expr:n}):(po=t,t=u);return t}())===u&&(d=null),d!==u&&Cc()!==u?((p=fa())===u&&(p=null),p!==u?(t,t=function(r,t,e,n,s,u,o,a,i,l,c,f,b,v,L){if(s&&o||s&&L||o&&L||s&&o&&L)throw new Error("A given SQL statement can contain at most one INTO clause");return u&&u.forEach(r=>r.table&&Wc.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,into:{...s||o||L||{},position:(s?"column":o&&"from")||L&&"end"},from:u,where:a,groupby:i,having:l,orderby:c,limit:f,locking_read:b&&b,window:v}}(e,n,s,o,a,i,l,c,f,b,v,L,C,d,p)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u),t}function oa(){var t,e;return t=po,(e=function(){var t;"sql_calc_found_rows"===r.substr(po,19).toLowerCase()?(t=r.substr(po,19),po+=19):(t=u,0===ho&&No(Pu));return t}())===u&&((e=function(){var t;"sql_cache"===r.substr(po,9).toLowerCase()?(t=r.substr(po,9),po+=9):(t=u,0===ho&&No(Fu));return t}())===u&&(e=function(){var t;"sql_no_cache"===r.substr(po,12).toLowerCase()?(t=r.substr(po,12),po+=12):(t=u,0===ho&&No(Gu));return t}()),e===u&&(e=function(){var t;"sql_big_result"===r.substr(po,14).toLowerCase()?(t=r.substr(po,14),po+=14):(t=u,0===ho&&No(ju));return t}())===u&&(e=function(){var t;"sql_small_result"===r.substr(po,16).toLowerCase()?(t=r.substr(po,16),po+=16):(t=u,0===ho&&No(Hu));return t}())===u&&(e=function(){var t;"sql_buffer_result"===r.substr(po,17).toLowerCase()?(t=r.substr(po,17),po+=17):(t=u,0===ho&&No(Yu));return t}())),e!==u&&(t,e=e),t=e}function aa(){var r,t,e,n,s,o,a,i,l,c;if(r=po,(t=Cl())===u&&(t=po,(e=ic())!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t===u&&(t=ic())),t!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=la())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=la())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,l=t,c=e,Xc.add("select::null::(.*)"),r=t=c&&c.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},Gc(l[0],c)):l[0]):(po=r,r=u)}else po=r,r=u;if(r===u)if(r=po,(t=la())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=la())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=la())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,r=t=T(t,e)):(po=r,r=u)}else po=r,r=u;return r}function ia(){var t,e,n,s,o,a,i;return t=po,"match"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(ct)),e!==u&&Cc()!==u&&lc()!==u&&Cc()!==u&&(n=ma())!==u&&Cc()!==u&&cc()!==u&&Cc()!==u?("AGAINST"===r.substr(po,7)?(s="AGAINST",po+=7):(s=u,0===ho&&No(ft)),s!==u&&Cc()!==u&&lc()!==u&&Cc()!==u&&(o=Ya())!==u&&Cc()!==u?((a=function(){var t,e,n,s,o,a,i;return t=po,wl()!==u&&Cc()!==u?("natural"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(st)),e!==u&&Cc()!==u?("language"===r.substr(po,8).toLowerCase()?(n=r.substr(po,8),po+=8):(n=u,0===ho&&No(ut)),n!==u&&Cc()!==u?("mode"===r.substr(po,4).toLowerCase()?(s=r.substr(po,4),po+=4):(s=u,0===ho&&No(Jr)),s!==u&&Cc()!==u?("with"===r.substr(po,4).toLowerCase()?(o=r.substr(po,4),po+=4):(o=u,0===ho&&No(ot)),o!==u&&Cc()!==u?("query"===r.substr(po,5).toLowerCase()?(a=r.substr(po,5),po+=5):(a=u,0===ho&&No(at)),a!==u&&Cc()!==u?("expansion"===r.substr(po,9).toLowerCase()?(i=r.substr(po,9),po+=9):(i=u,0===ho&&No(it)),i!==u?(t,t={type:"origin",value:"IN NATURAL LANGUAGE MODE WITH QUERY EXPANSION"}):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,wl()!==u&&Cc()!==u?("natural"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(st)),e!==u&&Cc()!==u?("language"===r.substr(po,8).toLowerCase()?(n=r.substr(po,8),po+=8):(n=u,0===ho&&No(ut)),n!==u&&Cc()!==u?("mode"===r.substr(po,4).toLowerCase()?(s=r.substr(po,4),po+=4):(s=u,0===ho&&No(Jr)),s!==u?(t,t={type:"origin",value:"IN NATURAL LANGUAGE MODE"}):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,wl()!==u&&Cc()!==u?("boolean"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(lt)),e!==u&&Cc()!==u?("mode"===r.substr(po,4).toLowerCase()?(n=r.substr(po,4),po+=4):(n=u,0===ho&&No(Jr)),n!==u?(t,t={type:"origin",value:"IN BOOLEAN MODE"}):(po=t,t=u)):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,cl()!==u&&Cc()!==u?("query"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(at)),e!==u&&Cc()!==u?("expansion"===r.substr(po,9).toLowerCase()?(n=r.substr(po,9),po+=9):(n=u,0===ho&&No(it)),n!==u?(t,t={type:"origin",value:"WITH QUERY EXPANSION"}):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)))),t}())===u&&(a=null),a!==u&&Cc()!==u&&cc()!==u&&Cc()!==u?((i=ca())===u&&(i=null),i!==u?(t,t=e={against:"against",columns:n,expr:o,match:"match",mode:a,type:"fulltext_search",as:i}):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u),t}function la(){var r,t,e,n,s;return r=po,(t=ia())!==u&&(r,t=function(r){const{as:t,...e}=r;return{expr:e,as:t}}(t)),(r=t)===u&&(r=po,t=po,(e=oi())!==u&&(n=Cc())!==u&&(s=oc())!==u?t=e=[e,n,s]:(po=t,t=u),t===u&&(t=null),t!==u&&(e=Cc())!==u&&(n=ic())!==u?(r,r=t=function(r){const t=r&&r[0]||null;return Xc.add(`select::${t}::(.*)`),{expr:{type:"column_ref",table:t,column:"*"},as:null}}(t)):(po=r,r=u),r===u&&(r=po,(t=Tc())!==u&&(r,t={expr:t,as:null}),(r=t)===u&&(r=po,(t=function(){var r,t,e,n,s,o,a,i;if(r=po,(t=Ya())!==u){if(e=[],n=po,(s=Cc())!==u?((o=Tl())===u&&(o=ml())===u&&(o=Lc()),o!==u&&(a=Cc())!==u&&(i=Ya())!==u?n=s=[s,o,a,i]:(po=n,n=u)):(po=n,n=u),n!==u)for(;n!==u;)e.push(n),n=po,(s=Cc())!==u?((o=Tl())===u&&(o=ml())===u&&(o=Lc()),o!==u&&(a=Cc())!==u&&(i=Ya())!==u?n=s=[s,o,a,i]:(po=n,n=u)):(po=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=t.length;let n=t[e-1][3];for(let s=e-1;s>=0;s--){const e=0===s?r:t[s-1][3];n=Pc(t[s][1],e,n)}return n}(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())===u&&(t=Ya()),t!==u&&(e=Cc())!==u?((n=ca())===u&&(n=null),n!==u?(r,r=t={expr:t,as:n}):(po=r,r=u)):(po=r,r=u)))),r}function ca(){var r,t,e;return r=po,(t=el())!==u&&Cc()!==u&&(e=function(){var r,t;r=po,(t=bi())!==u?(po,(function(r){if(!0===Dc[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return!1}(t)?u:void 0)!==u?(r,r=t=t):(po=r,r=u)):(po=r,r=u);r===u&&(r=po,(t=ai())!==u&&(r,t=t),r=t);return r}())!==u?(r,r=t=e):(po=r,r=u),r===u&&(r=po,(t=el())===u&&(t=null),t!==u&&Cc()!==u&&(e=oi())!==u?(r,r=t=e):(po=r,r=u)),r}function fa(){var t,e,n;return t=po,Ji()!==u&&Cc()!==u&&(e=function(){var r,t,e,n,s,o,a,l;if(r=po,(t=gc())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(l=gc())!==u?n=s=[s,o,a,l]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(l=gc())!==u?n=s=[s,o,a,l]:(po=n,n=u);e!==u?(r,t=i(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())!==u?(t,t={keyword:"var",type:"into",expr:e}):(po=t,t=u),t===u&&(t=po,Ji()!==u&&Cc()!==u?("outfile"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(bt)),e===u&&("dumpfile"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(vt))),e===u&&(e=null),e!==u&&Cc()!==u?((n=gi())===u&&(n=oi()),n!==u?(t,t={keyword:e,type:"into",expr:n}):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)),t}function ba(){var r,t;return r=po,rl()!==u&&Cc()!==u&&(t=pa())!==u?(r,r=t):(po=r,r=u),r}function va(){var r,t,e;return r=po,(t=ha())!==u&&Cc()!==u&&Yi()!==u&&Cc()!==u&&(e=ha())!==u?(r,r=t=[t,e]):(po=r,r=u),r}function La(){var t,e;return t=po,ll()!==u&&Cc()!==u?("btree"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(Lt)),e===u&&("hash"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(Ct))),e!==u?(t,t={keyword:"using",type:e.toLowerCase()}):(po=t,t=u)):(po=t,t=u),t}function Ca(){var r,t,e,n,s,o;if(r=po,(t=da())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=da())!==u?n=s=[s,o]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=da())!==u?n=s=[s,o]:(po=n,n=u);e!==u?(r,r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(po=r,r=u)}else po=r,r=u;return r}function da(){var t,e,n,s,o,a;return t=po,(e=function(){var t,e,n,s;t=po,"key_block_size"===r.substr(po,14).toLowerCase()?(e=r.substr(po,14),po+=14):(e=u,0===ho&&No(hr));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="KEY_BLOCK_SIZE"):(po=t,t=u)):(po=t,t=u);return t}())!==u&&Cc()!==u?((n=Zl())===u&&(n=null),n!==u&&Cc()!==u&&(s=ki())!==u?(t,o=n,a=s,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(po=t,t=u)):(po=t,t=u),t===u&&(t=La())===u&&(t=po,"with"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(ot)),e!==u&&Cc()!==u?("parser"===r.substr(po,6).toLowerCase()?(n=r.substr(po,6),po+=6):(n=u,0===ho&&No(dt)),n!==u&&Cc()!==u&&(s=bi())!==u?(t,t=e={type:"with parser",expr:s}):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,"visible"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(pt)),e===u&&("invisible"===r.substr(po,9).toLowerCase()?(e=r.substr(po,9),po+=9):(e=u,0===ho&&No(wt))),e!==u&&(t,e=function(r){return{type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===u&&(t=wc()))),t}function pa(){var r,t,e,n;if(r=po,(t=Ea())!==u){for(e=[],n=wa();n!==u;)e.push(n),n=wa();e!==u?(r,r=t=Et(t,e)):(po=r,r=u)}else po=r,r=u;return r}function wa(){var r,t,e;return r=po,Cc()!==u&&(t=ac())!==u&&Cc()!==u&&(e=Ea())!==u?(r,r=e):(po=r,r=u),r===u&&(r=po,Cc()!==u&&(t=function(){var r,t,e,n,s,o,a,i,l,c,f;if(r=po,(t=Aa())!==u)if(Cc()!==u)if((e=Ea())!==u)if(Cc()!==u)if((n=ll())!==u)if(Cc()!==u)if(lc()!==u)if(Cc()!==u)if((s=bi())!==u){for(o=[],a=po,(i=Cc())!==u&&(l=ac())!==u&&(c=Cc())!==u&&(f=bi())!==u?a=i=[i,l,c,f]:(po=a,a=u);a!==u;)o.push(a),a=po,(i=Cc())!==u&&(l=ac())!==u&&(c=Cc())!==u&&(f=bi())!==u?a=i=[i,l,c,f]:(po=a,a=u);o!==u&&(a=Cc())!==u&&(i=cc())!==u?(r,b=t,L=s,C=o,(v=e).join=b,v.using=Gc(L,C),r=t=v):(po=r,r=u)}else po=r,r=u;else po=r,r=u;else po=r,r=u;else po=r,r=u;else po=r,r=u;else po=r,r=u;else po=r,r=u;else po=r,r=u;else po=r,r=u;var b,v,L,C;r===u&&(r=po,(t=Aa())!==u&&Cc()!==u&&(e=Ea())!==u&&Cc()!==u?((n=ya())===u&&(n=null),n!==u?(r,t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(po=r,r=u)):(po=r,r=u),r===u&&(r=po,(t=Aa())!==u&&Cc()!==u&&(e=lc())!==u&&Cc()!==u&&(n=Uo())!==u&&Cc()!==u&&cc()!==u&&Cc()!==u?((s=ca())===u&&(s=null),s!==u&&(o=Cc())!==u?((a=ya())===u&&(a=null),a!==u?(r,t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,s,a),r=t):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)));return r}())!==u?(r,r=t):(po=r,r=u)),r}function Ea(){var t,e,n,s,o,a;return t=po,(e=function(){var t;"dual"===r.substr(po,4).toLowerCase()?(t=r.substr(po,4),po+=4):(t=u,0===ho&&No(_u));return t}())!==u&&(t,e={type:"dual"}),(t=e)===u&&(t=po,(e=ha())!==u&&Cc()!==u?((n=ca())===u&&(n=null),n!==u?(t,a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,(e=lc())!==u&&Cc()!==u&&(n=ha())!==u&&Cc()!==u&&cc()!==u&&Cc()!==u?((s=ca())===u&&(s=null),s!==u?(t,t=e=function(r,t,e){return"var"===r.type?(r.as=e,r.parentheses=!0,r):{db:r.db,table:r.table,as:e,parentheses:!0}}(n,0,s)):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,(e=Da())!==u&&Cc()!==u?((n=ca())===u&&(n=null),n!==u?(t,t=e=function(r,t){return{expr:{type:"values",values:r,prefix:"row"},as:t}}(e,n)):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,(e=lc())!==u&&Cc()!==u?((n=Uo())===u&&(n=Da()),n!==u&&Cc()!==u&&cc()!==u&&Cc()!==u?((s=ca())===u&&(s=null),s!==u?(t,t=e=function(r,t){return Array.isArray(r)&&(r={type:"values",values:r,prefix:"row"}),r.parentheses=!0,{expr:r,as:t}}(n,s)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u))))),t}function Aa(){var t,e,n,s;return t=po,(e=function(){var t,e,n,s;t=po,"left"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(On));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&(n=Cc())!==u?((s=al())===u&&(s=null),s!==u&&Cc()!==u&&ol()!==u?(t,t=e="LEFT JOIN"):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,(e=function(){var t,e,n,s;t=po,"right"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(gn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&(n=Cc())!==u?((s=al())===u&&(s=null),s!==u&&Cc()!==u&&ol()!==u?(t,t=e="RIGHT JOIN"):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,(e=function(){var t,e,n,s;t=po,"full"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(xn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&(n=Cc())!==u?((s=al())===u&&(s=null),s!==u&&Cc()!==u&&ol()!==u?(t,t=e="FULL JOIN"):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,(e=function(){var t,e,n,s;t=po,"cross"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(Mn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&(n=Cc())!==u&&(s=ol())!==u?(t,t=e="CROSS JOIN"):(po=t,t=u),t===u&&(t=po,e=po,(n=function(){var t,e,n,s;t=po,"inner"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(Un));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&(s=Cc())!==u?e=n=[n,s]:(po=e,e=u),e===u&&(e=null),e!==u&&(n=ol())!==u?(t,t=e="INNER JOIN"):(po=t,t=u))))),t}function ha(){var r,t,e,n,s,o,a,i;return r=po,(t=oi())!==u?(e=po,(n=Cc())!==u&&(s=oc())!==u&&(o=Cc())!==u&&(a=oi())!==u?e=n=[n,s,o,a]:(po=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(po=r,r=u)):(po=r,r=u),r===u&&(r=po,(t=gc())!==u&&(r,(i=t).db=null,i.table=i.name,t=i),r=t),r}function ya(){var r,t;return r=po,ul()!==u&&Cc()!==u&&(t=Ba())!==u?(r,r=t):(po=r,r=u),r}function Ta(){var t,e;return t=po,function(){var t,e,n,s;t=po,"where"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(jn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}()!==u&&Cc()!==u&&(e=Ba())!==u?(t,t=e):(po=t,t=u),t}function ma(){var r,t,e,n,s,o,a,i;if(r=po,(t=si())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=si())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=si())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,r=t=T(t,e)):(po=r,r=u)}else po=r,r=u;return r}function Ia(){var r,t;return r=po,Qi()!==u&&Cc()!==u&&bl()!==u&&Cc()!==u&&(t=aa())!==u?(r,r=t):(po=r,r=u),r}function Na(){var t,e;return t=po,function(){var t,e,n,s;t=po,"order"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(Xn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}()!==u&&Cc()!==u&&bl()!==u&&Cc()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=po,(t=Ra())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=Ra())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=Ra())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,t=T(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())!==u?(t,t=e):(po=t,t=u),t}function Ra(){var r,t,e;return r=po,(t=Ya())!==u&&Cc()!==u?((e=Ll())===u&&(e=vl()),e===u&&(e=null),e!==u?(r,r=t=function(r,t){const e={expr:r,type:"ASC"};return"DESC"===t&&(e.type="DESC"),e}(t,e)):(po=r,r=u)):(po=r,r=u),r}function Sa(){var t,e;return(t=ki())===u&&(t=di())===u&&(t=po,63===r.charCodeAt(po)?(e="?",po++):(e=u,0===ho&&No(At)),e!==u&&(t,e={type:"origin",value:"?"}),t=e),t}function _a(){var t,e,n,s,o,a;return t=po,function(){var t,e,n,s;t=po,"limit"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(Kn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}()!==u&&Cc()!==u&&(e=Sa())!==u&&Cc()!==u?(n=po,(s=ac())===u&&(s=function(){var t,e,n,s;t=po,"offset"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(qn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="OFFSET"):(po=t,t=u)):(po=t,t=u);return t}()),s!==u&&(o=Cc())!==u&&(a=Sa())!==u?n=s=[s,o,a]:(po=n,n=u),n===u&&(n=null),n!==u?(t,t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(po=t,t=u)):(po=t,t=u),t}function Oa(){var r,t,e,n,s,o,a,i;if(r=po,(t=ga())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=ga())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=ga())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,r=t=T(t,e)):(po=r,r=u)}else po=r,r=u;return r}function ga(){var t,e,n,s,o,a,i,l;return t=po,e=po,(n=oi())!==u&&(s=Cc())!==u&&(o=oc())!==u?e=n=[n,s,o]:(po=e,e=u),e===u&&(e=null),e!==u&&(n=Cc())!==u&&(s=ci())!==u&&(o=Cc())!==u?(61===r.charCodeAt(po)?(a="=",po++):(a=u,0===ho&&No(ht)),a!==u&&Cc()!==u&&(i=Ja())!==u?(t,t=e={column:s,value:i,table:(l=e)&&l[0]}):(po=t,t=u)):(po=t,t=u),t}function xa(){var r;return(r=Da())===u&&(r=ua()),r}function Ua(){var r,t,e,n,s,o,a,i,l;if(r=po,Qi()!==u)if(Cc()!==u)if((t=lc())!==u)if(Cc()!==u)if((e=bi())!==u){for(n=[],s=po,(o=Cc())!==u&&(a=ac())!==u&&(i=Cc())!==u&&(l=bi())!==u?s=o=[o,a,i,l]:(po=s,s=u);s!==u;)n.push(s),s=po,(o=Cc())!==u&&(a=ac())!==u&&(i=Cc())!==u&&(l=bi())!==u?s=o=[o,a,i,l]:(po=s,s=u);n!==u&&(s=Cc())!==u&&(o=cc())!==u?(r,r=Gc(e,n)):(po=r,r=u)}else po=r,r=u;else po=r,r=u;else po=r,r=u;else po=r,r=u;else po=r,r=u;return r===u&&(r=po,Qi()!==u&&Cc()!==u&&(t=$a())!==u?(r,r=t):(po=r,r=u)),r}function Ma(){var t,e,n;return t=po,ul()!==u&&Cc()!==u?("duplicate"===r.substr(po,9).toLowerCase()?(e=r.substr(po,9),po+=9):(e=u,0===ho&&No(yt)),e!==u&&Cc()!==u&&rc()!==u&&Cc()!==u&&Xi()!==u&&Cc()!==u&&(n=Oa())!==u?(t,t={keyword:"on duplicate key update",set:n}):(po=t,t=u)):(po=t,t=u),t}function ka(){var t,e;return t=po,(e=function(){var t,e,n,s;t=po,"insert"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(pn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&(t,e="insert"),(t=e)===u&&(t=po,(e=qi())!==u&&(t,e="replace"),t=e),t}function Da(){var t,e;return t=po,function(){var t,e,n,s;t=po,"values"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(Gn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}()!==u&&Cc()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=po,(t=$a())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=$a())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=$a())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,t=T(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())!==u?(t,t=e):(po=t,t=u),t}function $a(){var t,e,n;return t=po,"row"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(Tt)),e===u&&(e=null),e!==u&&Cc()!==u&&lc()!==u&&Cc()!==u&&(n=Pa())!==u&&Cc()!==u&&cc()!==u?(t,t=e=n):(po=t,t=u),t}function Pa(){var r,t,e,n,s,o,a,i;if(r=po,(t=Ya())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=Ya())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=Ya())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,r=t=function(r,t){const e={type:"expr_list"};return e.value=Gc(r,t),e}(t,e)):(po=r,r=u)}else po=r,r=u;return r}function Fa(){var t,e,n;return t=po,function(){var t,e,n,s;t=po,"interval"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(Qs));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="INTERVAL"):(po=t,t=u)):(po=t,t=u);return t}()!==u&&Cc()!==u&&(e=Ya())!==u&&Cc()!==u&&(n=function(){var t;(t=function(){var t,e,n,s;t=po,"year"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(Js));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="YEAR"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=po,"month"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(ru));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="MONTH"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=po,"week"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(tu));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="WEEK"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=po,"day"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(eu));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="DAY"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=po,"hour"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(nu));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="HOUR"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=po,"minute"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(su));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="MINUTE"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=po,"second"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(uu));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="SECOND"):(po=t,t=u)):(po=t,t=u);return t}());return t}())!==u?(t,t={type:"interval",expr:e,unit:n.toLowerCase()}):(po=t,t=u),t}function Ga(){var r,t,e,n,s,o;if(r=po,(t=Ha())!==u)if(Cc()!==u){for(e=[],n=po,(s=Cc())!==u&&(o=Ha())!==u?n=s=[s,o]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=Ha())!==u?n=s=[s,o]:(po=n,n=u);e!==u?(r,r=t=l(t,e)):(po=r,r=u)}else po=r,r=u;else po=r,r=u;return r}function Ha(){var t,e,n;return t=po,function(){var t,e,n,s;t=po,"when"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(ps));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}()!==u&&Cc()!==u&&(e=Ba())!==u&&Cc()!==u&&function(){var t,e,n,s;t=po,"then"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(ws));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}()!==u&&Cc()!==u&&(n=Ya())!==u?(t,t={type:"when",cond:e,result:n}):(po=t,t=u),t}function ja(){var t,e;return t=po,function(){var t,e,n,s;t=po,"else"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(Es));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}()!==u&&Cc()!==u&&(e=Ya())!==u?(t,t={type:"else",result:e}):(po=t,t=u),t}function Ya(){var r;return(r=function(){var r,t,e,n,s,o,a,i;if(r=po,(t=ni())!==u){if(e=[],n=po,(s=Cc())!==u&&(o=Lc())!==u&&(a=Cc())!==u&&(i=ni())!==u?n=s=[s,o,a,i]:(po=n,n=u),n!==u)for(;n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=Lc())!==u&&(a=Cc())!==u&&(i=ni())!==u?n=s=[s,o,a,i]:(po=n,n=u);else e=u;e!==u&&(n=Cc())!==u?((s=Ka())===u&&(s=null),s!==u?(r,t=function(r,t,e){const n=Hc(r,t);return null===e?n:"arithmetic"===e.type?Hc(n,e.tail):Pc(e.op,n,e.right)}(t,e,s),r=t):(po=r,r=u)):(po=r,r=u)}else po=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o,a,i;if(r=po,(t=Wa())!==u){for(e=[],n=po,(s=dc())!==u&&(o=ml())!==u&&(a=Cc())!==u&&(i=Wa())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=dc())!==u&&(o=ml())!==u&&(a=Cc())!==u&&(i=Wa())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,t=mt(t,e),r=t):(po=r,r=u)}else po=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o;if(r=po,(t=ri())!==u){if(e=[],n=po,(s=Cc())!==u&&(o=ni())!==u?n=s=[s,o]:(po=n,n=u),n!==u)for(;n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ni())!==u?n=s=[s,o]:(po=n,n=u);else e=u;e!==u?(r,t=$c(t,e[0][1]),r=t):(po=r,r=u)}else po=r,r=u;return r}())===u&&(r=Uo()),r}function Ba(){var r,t,e,n,s,o,a,i;if(r=po,(t=Ya())!==u){for(e=[],n=po,(s=Cc())!==u?((o=Tl())===u&&(o=ml())===u&&(o=ac()),o!==u&&(a=Cc())!==u&&(i=Ya())!==u?n=s=[s,o,a,i]:(po=n,n=u)):(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u?((o=Tl())===u&&(o=ml())===u&&(o=ac()),o!==u&&(a=Cc())!==u&&(i=Ya())!==u?n=s=[s,o,a,i]:(po=n,n=u)):(po=n,n=u);e!==u?(r,r=t=function(r,t){const e=t.length;let n=r,s="";for(let r=0;r<e;++r)","===t[r][1]?(s=",",Array.isArray(n)||(n=[n]),n.push(t[r][3])):n=Pc(t[r][1],n,t[r][3]);if(","===s){const r={type:"expr_list"};return r.value=n,r}return n}(t,e)):(po=r,r=u)}else po=r,r=u;return r}function Wa(){var r,t,e,n,s,o,a,i;if(r=po,(t=Xa())!==u){for(e=[],n=po,(s=dc())!==u&&(o=Tl())!==u&&(a=Cc())!==u&&(i=Xa())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=dc())!==u&&(o=Tl())!==u&&(a=Cc())!==u&&(i=Xa())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,r=t=Hc(t,e)):(po=r,r=u)}else po=r,r=u;return r}function Xa(){var t,e,n,s,o;return(t=Va())===u&&(t=function(){var r,t,e;r=po,(t=function(){var r,t,e,n,s;r=po,t=po,(e=yl())!==u&&(n=Cc())!==u&&(s=hl())!==u?t=e=[e,n,s]:(po=t,t=u);t!==u&&(r,t=Nt(t));(r=t)===u&&(r=hl());return r}())!==u&&Cc()!==u&&lc()!==u&&Cc()!==u&&(e=Uo())!==u&&Cc()!==u&&cc()!==u?(r,n=t,(s=e).parentheses=!0,t=$c(n,s),r=t):(po=r,r=u);var n,s;return r}())===u&&(t=po,(e=yl())===u&&(e=po,33===r.charCodeAt(po)?(n="!",po++):(n=u,0===ho&&No(It)),n!==u?(s=po,ho++,61===r.charCodeAt(po)?(o="=",po++):(o=u,0===ho&&No(ht)),ho--,o===u?s=void 0:(po=s,s=u),s!==u?e=n=[n,s]:(po=e,e=u)):(po=e,e=u)),e!==u&&(n=Cc())!==u&&(s=Xa())!==u?(t,t=e=$c("NOT",s)):(po=t,t=u)),t}function Va(){var r,t,e,n,s;return r=po,(t=Ja())!==u&&Cc()!==u?((e=Ka())===u&&(e=null),e!==u?(r,n=t,r=t=null===(s=e)?n:"arithmetic"===s.type?Hc(n,s.tail):Pc(s.op,n,s.right)):(po=r,r=u)):(po=r,r=u),r===u&&(r=gi())===u&&(r=si()),r}function Ka(){var t;return(t=function(){var r,t,e,n,s,o,a;r=po,t=[],e=po,(n=Cc())!==u&&(s=qa())!==u&&(o=Cc())!==u&&(a=Ja())!==u?e=n=[n,s,o,a]:(po=e,e=u);if(e!==u)for(;e!==u;)t.push(e),e=po,(n=Cc())!==u&&(s=qa())!==u&&(o=Cc())!==u&&(a=Ja())!==u?e=n=[n,s,o,a]:(po=e,e=u);else t=u;t!==u&&(r,t={type:"arithmetic",tail:t});return r=t}())===u&&(t=Qa())===u&&(t=function(){var r,t,e,n;r=po,(t=function(){var r,t,e,n,s;r=po,t=po,(e=yl())!==u&&(n=Cc())!==u&&(s=pl())!==u?t=e=[e,n,s]:(po=t,t=u);t!==u&&(r,t=Nt(t));(r=t)===u&&(r=pl());return r}())!==u&&Cc()!==u&&(e=Ja())!==u&&Cc()!==u&&Tl()!==u&&Cc()!==u&&(n=Ja())!==u?(r,r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(po=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s;r=po,(t=El())!==u&&(e=Cc())!==u&&(n=Ja())!==u?(r,r=t={op:"IS",right:n}):(po=r,r=u);r===u&&(r=po,t=po,(e=El())!==u&&(n=Cc())!==u&&(s=yl())!==u?t=e=[e,n,s]:(po=t,t=u),t!==u&&(e=Cc())!==u&&(n=Ja())!==u?(r,t=function(r){return{op:"IS NOT",right:r}}(n),r=t):(po=r,r=u));return r}())===u&&(t=za())===u&&(t=function(){var t,e,n,s;t=po,(e=function(){var t,e,n;t=po,(e=yl())===u&&(e=null);e!==u&&Cc()!==u?((n=function(){var t,e,n,s;t=po,"regexp"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(us));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="REGEXP"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=po,"rlike"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(ss));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="RLIKE"):(po=t,t=u)):(po=t,t=u);return t}()),n!==u?(t,o=n,t=e=(s=e)?`${s} ${o}`:o):(po=t,t=u)):(po=t,t=u);var s,o;return t}())!==u&&Cc()!==u?("binary"===r.substr(po,6).toLowerCase()?(n=r.substr(po,6),po+=6):(n=u,0===ho&&No(Gr)),n===u&&(n=null),n!==u&&Cc()!==u?((s=Ri())===u&&(s=gi())===u&&(s=si()),s!==u?(t,o=e,t=e={op:(a=n)?`${o} ${a}`:o,right:s}):(po=t,t=u)):(po=t,t=u)):(po=t,t=u);var o,a;return t}()),t}function qa(){var t;return">="===r.substr(po,2)?(t=">=",po+=2):(t=u,0===ho&&No(Rt)),t===u&&(62===r.charCodeAt(po)?(t=">",po++):(t=u,0===ho&&No(St)),t===u&&("<="===r.substr(po,2)?(t="<=",po+=2):(t=u,0===ho&&No(_t)),t===u&&("<>"===r.substr(po,2)?(t="<>",po+=2):(t=u,0===ho&&No(Ot)),t===u&&(60===r.charCodeAt(po)?(t="<",po++):(t=u,0===ho&&No(gt)),t===u&&(61===r.charCodeAt(po)?(t="=",po++):(t=u,0===ho&&No(ht)),t===u&&("!="===r.substr(po,2)?(t="!=",po+=2):(t=u,0===ho&&No(xt)))))))),t}function Za(){var r,t,e,n,s;return r=po,t=po,(e=yl())!==u&&(n=Cc())!==u&&(s=wl())!==u?t=e=[e,n,s]:(po=t,t=u),t!==u&&(r,t=Nt(t)),(r=t)===u&&(r=wl()),r}function za(){var r,t,e;return r=po,(t=function(){var r,t,e,n,s;return r=po,t=po,(e=yl())!==u&&(n=Cc())!==u&&(s=Al())!==u?t=e=[e,n,s]:(po=t,t=u),t!==u&&(r,t=Nt(t)),(r=t)===u&&(r=Al()),r}())!==u&&Cc()!==u?((e=_i())===u&&(e=Va()),e!==u?(r,r=t={op:t,right:e}):(po=r,r=u)):(po=r,r=u),r}function Qa(){var r,t,e,n;return r=po,(t=Za())!==u&&Cc()!==u&&(e=lc())!==u&&Cc()!==u&&(n=Pa())!==u&&Cc()!==u&&cc()!==u?(r,r=t={op:t,right:n}):(po=r,r=u),r===u&&(r=po,(t=Za())!==u&&Cc()!==u?((e=gc())===u&&(e=si())===u&&(e=gi()),e!==u?(r,r=t=function(r,t){return{op:r,right:t}}(t,e)):(po=r,r=u)):(po=r,r=u)),r}function Ja(){var r,t,e,n,s,o,a,i;if(r=po,(t=ti())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ri())!==u&&(a=Cc())!==u&&(i=ti())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ri())!==u&&(a=Cc())!==u&&(i=ti())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,r=t=mt(t,e)):(po=r,r=u)}else po=r,r=u;return r}function ri(){var t;return 43===r.charCodeAt(po)?(t="+",po++):(t=u,0===ho&&No(Ut)),t===u&&(45===r.charCodeAt(po)?(t="-",po++):(t=u,0===ho&&No(Mt)),t===u&&(126===r.charCodeAt(po)?(t="~",po++):(t=u,0===ho&&No(kt)))),t}function ti(){var r,t,e,n,s,o,a,i;if(r=po,(t=ni())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ei())!==u&&(a=Cc())!==u&&(i=ni())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ei())!==u&&(a=Cc())!==u&&(i=ni())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,r=t=Hc(t,e)):(po=r,r=u)}else po=r,r=u;return r}function ei(){var t,e;return 42===r.charCodeAt(po)?(t="*",po++):(t=u,0===ho&&No(Dt)),t===u&&(47===r.charCodeAt(po)?(t="/",po++):(t=u,0===ho&&No($t)),t===u&&(37===r.charCodeAt(po)?(t="%",po++):(t=u,0===ho&&No(Pt)),t===u&&(t=po,"div"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(Ft)),e!==u&&(t,e="DIV"),(t=e)===u&&(38===r.charCodeAt(po)?(t="&",po++):(t=u,0===ho&&No(Gt)),t===u&&(">>"===r.substr(po,2)?(t=">>",po+=2):(t=u,0===ho&&No(Ht)),t===u&&("<<"===r.substr(po,2)?(t="<<",po+=2):(t=u,0===ho&&No(jt)),t===u&&(94===r.charCodeAt(po)?(t="^",po++):(t=u,0===ho&&No(Yt)),t===u&&(124===r.charCodeAt(po)?(t="|",po++):(t=u,0===ho&&No(Bt)),t===u&&(126===r.charCodeAt(po)?(t="~",po++):(t=u,0===ho&&No(kt))))))))))),t}function ni(){var t,e,n,s;return(t=function(){var t,e,n,s,o,a,i;t=po,(e=Rl())!==u&&Cc()!==u&&lc()!==u&&Cc()!==u&&(n=Ya())!==u&&Cc()!==u&&el()!==u&&Cc()!==u&&(s=Mc())!==u&&Cc()!==u&&(o=qo())!==u&&Cc()!==u&&(a=bi())!==u&&Cc()!==u&&cc()!==u&&Cc()!==u?((i=Fo())===u&&(i=null),i!==u?(t,e=function(r,t,e,n,s,u){const{dataType:o,length:a}=e;let i=o;return void 0!==a&&(i=`${i}(${a})`),{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:`${i} ${n} ${s.toUpperCase()}`},collate:u}}(e,n,s,o,a,i),t=e):(po=t,t=u)):(po=t,t=u);t===u&&(t=po,(e=Rl())!==u&&Cc()!==u&&lc()!==u&&Cc()!==u&&(n=Ya())!==u&&Cc()!==u&&el()!==u&&Cc()!==u&&(s=Uc())!==u&&Cc()!==u&&(o=cc())!==u?(t,l=n,c=s,e={type:"cast",keyword:e.toLowerCase(),expr:l,symbol:"as",target:c},t=e):(po=t,t=u),t===u&&(t=po,(e=Rl())!==u&&Cc()!==u&&lc()!==u&&Cc()!==u&&(n=Ya())!==u&&Cc()!==u&&el()!==u&&Cc()!==u&&(s=xl())!==u&&Cc()!==u&&(o=lc())!==u&&Cc()!==u&&(a=Di())!==u&&Cc()!==u&&cc()!==u&&Cc()!==u&&(i=cc())!==u?(t,e=function(r,t,e){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+")"}}}(e,n,a),t=e):(po=t,t=u),t===u&&(t=po,(e=Rl())!==u&&Cc()!==u&&lc()!==u&&Cc()!==u&&(n=Ya())!==u&&Cc()!==u&&el()!==u&&Cc()!==u&&(s=xl())!==u&&Cc()!==u&&(o=lc())!==u&&Cc()!==u&&(a=Di())!==u&&Cc()!==u&&ac()!==u&&Cc()!==u&&(i=Di())!==u&&Cc()!==u&&cc()!==u&&Cc()!==u&&cc()!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+", "+n+")"}}}(e,n,a,i),t=e):(po=t,t=u),t===u&&(t=po,(e=Rl())!==u&&Cc()!==u&&lc()!==u&&Cc()!==u&&(n=Ya())!==u&&Cc()!==u&&el()!==u&&Cc()!==u&&(s=function(){var t;(t=function(){var t,e,n,s;t=po,"signed"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(Ss));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="SIGNED"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=Ul());return t}())!==u&&Cc()!==u?((o=kl())===u&&(o=null),o!==u&&Cc()!==u&&(a=cc())!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:e+(n?" "+n:"")}}}(e,n,s,o),t=e):(po=t,t=u)):(po=t,t=u)))));var l,c;return t}())===u&&(t=_i())===u&&(t=ia())===u&&(t=function(){var t;(t=function(){var t,e,n,s;t=po,(e=function(){var t,e,n,s;t=po,"count"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(ls));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="COUNT"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(e=function(){var t,e,n,s;t=po,"group_concat"===r.substr(po,12).toLowerCase()?(e=r.substr(po,12),po+=12):(e=u,0===ho&&No(cs));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="GROUP_CONCAT"):(po=t,t=u)):(po=t,t=u);return t}());e!==u&&Cc()!==u&&lc()!==u&&Cc()!==u&&(n=function(){var t,e,n,s,o,a,i;t=po,(e=function(){var t,e;t=po,42===r.charCodeAt(po)?(e="*",po++):(e=u,0===ho&&No(Dt));e!==u&&(t,e={type:"star",value:"*"});return t=e}())!==u&&(t,e={expr:e});(t=e)===u&&(t=po,(e=dl())===u&&(e=null),e!==u&&Cc()!==u&&(n=lc())!==u&&Cc()!==u&&(s=Ya())!==u&&Cc()!==u&&(o=cc())!==u&&Cc()!==u?((a=Na())===u&&(a=null),a!==u&&Cc()!==u?((i=Ii())===u&&(i=null),i!==u?(t,t=e={distinct:e,expr:s,orderby:a,parentheses:!0,separator:i}):(po=t,t=u)):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,(e=dl())===u&&(e=null),e!==u&&Cc()!==u&&(n=Ya())!==u&&Cc()!==u?((s=Na())===u&&(s=null),s!==u&&Cc()!==u?((o=Ii())===u&&(o=null),o!==u?(t,e=function(r,t,e,n){return{distinct:r,expr:t,orderby:e,separator:n}}(e,n,s,o),t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u)));return t}())!==u&&Cc()!==u&&cc()!==u&&Cc()!==u?((s=wi())===u&&(s=null),s!==u?(t,t=e={type:"aggr_func",name:e,args:n,over:s}):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=po,(e=function(){var t;(t=function(){var t,e,n,s;t=po,"sum"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(vs));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="SUM"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=po,"max"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(fs));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="MAX"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=po,"min"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(bs));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="MIN"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=po,"avg"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(Ls));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="AVG"):(po=t,t=u)):(po=t,t=u);return t}());return t}())!==u&&Cc()!==u&&lc()!==u&&Cc()!==u&&(n=Ja())!==u&&Cc()!==u&&cc()!==u&&Cc()!==u?((s=wi())===u&&(s=null),s!==u?(t,t=e={type:"aggr_func",name:e,args:{expr:n},over:s}):(po=t,t=u)):(po=t,t=u);return t}());return t}())===u&&(t=Ri())===u&&(t=function(){var r,t,e,n,s,o,a,i;return r=po,Il()!==u&&Cc()!==u&&(t=Ga())!==u&&Cc()!==u?((e=ja())===u&&(e=null),e!==u&&Cc()!==u&&(n=Nl())!==u&&Cc()!==u?((s=Il())===u&&(s=null),s!==u?(r,a=t,(i=e)&&a.push(i),r={type:"case",expr:null,args:a}):(po=r,r=u)):(po=r,r=u)):(po=r,r=u),r===u&&(r=po,Il()!==u&&Cc()!==u&&(t=Ya())!==u&&Cc()!==u&&(e=Ga())!==u&&Cc()!==u?((n=ja())===u&&(n=null),n!==u&&Cc()!==u&&(s=Nl())!==u&&Cc()!==u?((o=Il())===u&&(o=null),o!==u?(r,r=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(t,e,n)):(po=r,r=u)):(po=r,r=u)):(po=r,r=u)),r}())===u&&(t=Fa())===u&&(t=si())===u&&(t=di())===u&&(t=po,lc()!==u&&(e=Cc())!==u&&(n=Ba())!==u&&Cc()!==u&&cc()!==u?(t,(s=n).parentheses=!0,t=s):(po=t,t=u),t===u&&(t=gc())===u&&(t=po,Cc()!==u?(63===r.charCodeAt(po)?(e="?",po++):(e=u,0===ho&&No(At)),e!==u?(t,t={type:"origin",value:e}):(po=t,t=u)):(po=t,t=u))),t}function si(){var r,t,e,n,s,o,a,i,l,c,f;if(r=po,t=po,(e=oi())!==u&&(n=Cc())!==u&&(s=oc())!==u&&(o=Cc())!==u?t=e=[e,n,s,o]:(po=t,t=u),t===u&&(t=null),t!==u)if((e=ci())!==u)if((n=Cc())!==u){if(s=[],o=po,(a=vc())===u&&(a=bc()),a!==u&&(i=Cc())!==u?((l=gi())===u&&(l=ki()),l!==u?o=a=[a,i,l]:(po=o,o=u)):(po=o,o=u),o!==u)for(;o!==u;)s.push(o),o=po,(a=vc())===u&&(a=bc()),a!==u&&(i=Cc())!==u?((l=gi())===u&&(l=ki()),l!==u?o=a=[a,i,l]:(po=o,o=u)):(po=o,o=u);else s=u;s!==u&&(o=Cc())!==u?((a=Fo())===u&&(a=null),a!==u?(r,r=t=function(r,t,e,n){const s=r&&r[0]||null;return Xc.add(`select::${s}::${t}`),{type:"column_ref",table:s,column:t,collate:n,arrows:e.map(r=>r[0]),properties:e.map(r=>r[2])}}(t,e,s,a)):(po=r,r=u)):(po=r,r=u)}else po=r,r=u;else po=r,r=u;else po=r,r=u;return r===u&&(r=po,(t=bi())===u&&(t=ii()),t!==u&&(e=Cc())!==u&&(n=oc())!==u&&(s=Cc())!==u&&(o=li())!==u?(r,c=t,f=o,Xc.add(`select::${c}::${f}`),r=t={type:"column_ref",table:c,column:f}):(po=r,r=u),r===u&&(r=po,(t=ci())!==u&&(r,t=function(r){return Xc.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t)),r}function ui(){var r,t,e,n,s,o,a,i;if(r=po,(t=ci())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=ci())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=ci())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,r=t=T(t,e)):(po=r,r=u)}else po=r,r=u;return r}function oi(){var r,t;return r=po,(t=bi())!==u?(po,(Wt(t)?u:void 0)!==u?(r,r=t=t):(po=r,r=u)):(po=r,r=u),r===u&&(r=ai()),r}function ai(){var t;return(t=function(){var t,e,n,s;t=po,34===r.charCodeAt(po)?(e='"',po++):(e=u,0===ho&&No(Xt));if(e!==u){if(n=[],Vt.test(r.charAt(po))?(s=r.charAt(po),po++):(s=u,0===ho&&No(Kt)),s!==u)for(;s!==u;)n.push(s),Vt.test(r.charAt(po))?(s=r.charAt(po),po++):(s=u,0===ho&&No(Kt));else n=u;n!==u?(34===r.charCodeAt(po)?(s='"',po++):(s=u,0===ho&&No(Xt)),s!==u?(t,e=qt(n),t=e):(po=t,t=u)):(po=t,t=u)}else po=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=po,39===r.charCodeAt(po)?(e="'",po++):(e=u,0===ho&&No(Rr));if(e!==u){if(n=[],Zt.test(r.charAt(po))?(s=r.charAt(po),po++):(s=u,0===ho&&No(zt)),s!==u)for(;s!==u;)n.push(s),Zt.test(r.charAt(po))?(s=r.charAt(po),po++):(s=u,0===ho&&No(zt));else n=u;n!==u?(39===r.charCodeAt(po)?(s="'",po++):(s=u,0===ho&&No(Rr)),s!==u?(t,e=qt(n),t=e):(po=t,t=u)):(po=t,t=u)}else po=t,t=u;return t}())===u&&(t=ii()),t}function ii(){var t,e,n,s;if(t=po,96===r.charCodeAt(po)?(e="`",po++):(e=u,0===ho&&No(Qt)),e!==u){if(n=[],Jt.test(r.charAt(po))?(s=r.charAt(po),po++):(s=u,0===ho&&No(re)),s===u&&(s=Mi()),s!==u)for(;s!==u;)n.push(s),Jt.test(r.charAt(po))?(s=r.charAt(po),po++):(s=u,0===ho&&No(re)),s===u&&(s=Mi());else n=u;n!==u?(96===r.charCodeAt(po)?(s="`",po++):(s=u,0===ho&&No(Qt)),s!==u?(t,t=e=qt(n)):(po=t,t=u)):(po=t,t=u)}else po=t,t=u;return t}function li(){var r,t;return r=po,(t=fi())!==u&&(r,t=t),(r=t)===u&&(r=ai()),r}function ci(){var r,t;return r=po,(t=fi())!==u?(po,(Wt(t)?u:void 0)!==u?(r,r=t=t):(po=r,r=u)):(po=r,r=u),r===u&&(r=ii()),r}function fi(){var r,t,e,n;if(r=po,(t=vi())!==u){for(e=[],n=Ci();n!==u;)e.push(n),n=Ci();e!==u?(r,r=t=te(t,e)):(po=r,r=u)}else po=r,r=u;return r}function bi(){var r,t,e,n;if(r=po,(t=vi())!==u){for(e=[],n=Li();n!==u;)e.push(n),n=Li();e!==u?(r,r=t=te(t,e)):(po=r,r=u)}else po=r,r=u;return r}function vi(){var t;return ee.test(r.charAt(po))?(t=r.charAt(po),po++):(t=u,0===ho&&No(ne)),t}function Li(){var t;return se.test(r.charAt(po))?(t=r.charAt(po),po++):(t=u,0===ho&&No(ue)),t}function Ci(){var t;return oe.test(r.charAt(po))?(t=r.charAt(po),po++):(t=u,0===ho&&No(ae)),t}function di(){var t,e,n,s;return t=po,e=po,58===r.charCodeAt(po)?(n=":",po++):(n=u,0===ho&&No(ie)),n!==u&&(s=bi())!==u?e=n=[n,s]:(po=e,e=u),e!==u&&(t,e={type:"param",value:e[1]}),t=e}function pi(){var r,t,e;return r=po,ul()!==u&&Cc()!==u&&Xi()!==u&&Cc()!==u&&(t=Xl())!==u&&Cc()!==u&&lc()!==u&&Cc()!==u?((e=Pa())===u&&(e=null),e!==u&&Cc()!==u&&cc()!==u?(r,r={type:"on update",keyword:t,parentheses:!0,expr:e}):(po=r,r=u)):(po=r,r=u),r===u&&(r=po,ul()!==u&&Cc()!==u&&Xi()!==u&&Cc()!==u&&(t=Xl())!==u?(r,r=function(r){return{type:"on update",keyword:r}}(t)):(po=r,r=u)),r}function wi(){var t,e,n;return t=po,"over"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(le)),e!==u&&Cc()!==u&&(n=Ai())!==u?(t,t=e={type:"window",as_window_specification:n}):(po=t,t=u),t===u&&(t=pi()),t}function Ei(){var r,t,e;return r=po,(t=bi())!==u&&Cc()!==u&&el()!==u&&Cc()!==u&&(e=Ai())!==u?(r,r=t={name:t,as_window_specification:e}):(po=r,r=u),r}function Ai(){var r,t;return(r=bi())===u&&(r=po,lc()!==u&&Cc()!==u?((t=function(){var r,t,e,n;r=po,(t=Ia())===u&&(t=null);t!==u&&Cc()!==u?((e=Na())===u&&(e=null),e!==u&&Cc()!==u?((n=function(){var r,t,e,n,s;r=po,(t=Yl())!==u&&Cc()!==u?((e=hi())===u&&(e=yi()),e!==u?(r,t="rows "+e.value,r=t):(po=r,r=u)):(po=r,r=u);r===u&&(r=po,(t=Yl())!==u&&Cc()!==u&&(e=pl())!==u&&Cc()!==u&&(n=yi())!==u&&Cc()!==u&&Tl()!==u&&Cc()!==u&&(s=hi())!==u?(r,o=s,t=`rows between ${n.value} and ${o.value}`,r=t):(po=r,r=u));var o;return r}())===u&&(n=null),n!==u?(r,r=t={name:null,partitionby:t,orderby:e,window_frame_clause:n}):(po=r,r=u)):(po=r,r=u)):(po=r,r=u);return r}())===u&&(t=null),t!==u&&Cc()!==u&&cc()!==u?(r,r={window_specification:t||{},parentheses:!0}):(po=r,r=u)):(po=r,r=u)),r}function hi(){var t,e,n,s;return t=po,(e=mi())!==u&&Cc()!==u?("following"===r.substr(po,9).toLowerCase()?(n=r.substr(po,9),po+=9):(n=u,0===ho&&No(fe)),n!==u?(t,(s=e).value+=" FOLLOWING",t=e=s):(po=t,t=u)):(po=t,t=u),t===u&&(t=Ti()),t}function yi(){var t,e,n,s;return t=po,(e=mi())!==u&&Cc()!==u?("preceding"===r.substr(po,9).toLowerCase()?(n=r.substr(po,9),po+=9):(n=u,0===ho&&No(be)),n!==u?(t,(s=e).value+=" PRECEDING",t=e=s):(po=t,t=u)):(po=t,t=u),t===u&&(t=Ti()),t}function Ti(){var t,e,n;return t=po,"current"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(ve)),e!==u&&Cc()!==u?("row"===r.substr(po,3).toLowerCase()?(n=r.substr(po,3),po+=3):(n=u,0===ho&&No(Tt)),n!==u?(t,t=e={type:"single_quote_string",value:"current row"}):(po=t,t=u)):(po=t,t=u),t}function mi(){var t,e;return t=po,"unbounded"===r.substr(po,9).toLowerCase()?(e=r.substr(po,9),po+=9):(e=u,0===ho&&No(Le)),e!==u&&(t,e={type:"single_quote_string",value:e.toUpperCase()}),(t=e)===u&&(t=ki()),t}function Ii(){var t,e,n;return t=po,"separator"===r.substr(po,9).toLowerCase()?(e=r.substr(po,9),po+=9):(e=u,0===ho&&No(Ce)),e===u&&(e=null),e!==u&&Cc()!==u&&(n=gi())!==u?(t,t=e={keyword:e,value:n}):(po=t,t=u),t}function Ni(){var t,e,n;return t=po,(e=function(){var t;return"both"===r.substr(po,4).toLowerCase()?(t=r.substr(po,4),po+=4):(t=u,0===ho&&No(de)),t===u&&("leading"===r.substr(po,7).toLowerCase()?(t=r.substr(po,7),po+=7):(t=u,0===ho&&No(pe)),t===u&&("trailing"===r.substr(po,8).toLowerCase()?(t=r.substr(po,8),po+=8):(t=u,0===ho&&No(we)))),t}())===u&&(e=null),e!==u&&Cc()!==u?((n=gi())===u&&(n=null),n!==u&&Cc()!==u&&rl()!==u?(t,t=e=function(r,t,e){let n=[];return r&&n.push({type:"origin",value:r}),t&&n.push(t),n.push({type:"origin",value:"from"}),{type:"expr_list",value:n}}(e,n)):(po=t,t=u)):(po=t,t=u),t}function Ri(){var t,e,n,s,o;return(t=function(){var t,e,n,s;return t=po,"trim"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(Ee)),e!==u&&Cc()!==u&&lc()!==u&&Cc()!==u?((n=Ni())===u&&(n=null),n!==u&&Cc()!==u&&(s=Ya())!==u&&Cc()!==u&&cc()!==u?(t,t=e=function(r,t){let e=r||{type:"expr_list",value:[]};return e.value.push(t),{type:"function",name:"TRIM",args:e}}(n,s)):(po=t,t=u)):(po=t,t=u),t}())===u&&(t=po,"convert"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(Ae)),e!==u&&Cc()!==u&&(n=lc())!==u&&Cc()!==u&&(s=function(){var r,t,e,n,s,o;return r=po,(t=si())===u&&(t=gi()),t!==u&&Cc()!==u&&ac()!==u&&Cc()!==u&&(e=Mc())!==u&&Cc()!==u&&(n=qo())!==u&&Cc()!==u&&(s=bi())!==u?(r,r=t=function(r,t,e,n){const{dataType:s,length:u}=t;let o=s;return void 0!==u&&(o=`${o}(${u})`),{type:"expr_list",value:[r,{type:"origin",value:`${o} ${e} ${n}`}]}}(t,e,n,s)):(po=r,r=u),r===u&&(r=po,(t=si())===u&&(t=gi()),t!==u&&Cc()!==u&&ac()!==u&&Cc()!==u&&(e=Uc())!==u?(r,o=e,r=t={type:"expr_list",value:[t,{type:"datatype",...o}]}):(po=r,r=u),r===u&&(r=po,(t=si())===u&&(t=gi()),t!==u&&Cc()!==u&&ll()!==u&&Cc()!==u&&(e=bi())!==u?(r,r=t=function(r,t){return r.suffix="USING "+t,{type:"expr_list",value:[r]}}(t,e)):(po=r,r=u))),r}())!==u&&Cc()!==u&&cc()!==u&&Cc()!==u?((o=Fo())===u&&(o=null),o!==u?(t,t=e={type:"function",name:"CONVERT",args:s,collate:o}):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,(e=Sc())!==u&&Cc()!==u&&(n=lc())!==u&&Cc()!==u?((s=Ba())===u&&(s=null),s!==u&&Cc()!==u&&cc()!==u&&Cc()!==u?((o=wi())===u&&(o=null),o!==u?(t,t=e=function(r,t,e){return t&&"expr_list"!==t.type&&(t={type:"expr_list",value:[t]}),("TIMESTAMPDIFF"===r.toUpperCase()||"TIMESTAMPADD"===r.toUpperCase())&&t.value&&t.value[0]&&(t.value[0]={type:"origin",value:t.value[0].column}),{type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,s,o)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,(e=function(){var t;(t=Si())===u&&(t=function(){var t,e,n,s;t=po,"current_user"===r.substr(po,12).toLowerCase()?(e=r.substr(po,12),po+=12):(e=u,0===ho&&No(iu));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="CURRENT_USER"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=po,"user"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(Zs));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="USER"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=po,"session_user"===r.substr(po,12).toLowerCase()?(e=r.substr(po,12),po+=12):(e=u,0===ho&&No(lu));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="SESSION_USER"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=po,"system_user"===r.substr(po,11).toLowerCase()?(e=r.substr(po,11),po+=11):(e=u,0===ho&&No(cu));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="SYSTEM_USER"):(po=t,t=u)):(po=t,t=u);return t}());return t}())!==u&&Cc()!==u&&(n=lc())!==u&&Cc()!==u?((s=Pa())===u&&(s=null),s!==u&&Cc()!==u&&cc()!==u&&Cc()!==u?((o=wi())===u&&(o=null),o!==u?(t,t=e=function(r,t,e){return{type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,s,o)):(po=t,t=u)):(po=t,t=u)):(po=t,t=u),t===u&&(t=po,(e=Si())!==u&&Cc()!==u?((n=pi())===u&&(n=null),n!==u?(t,t=e={type:"function",name:e,over:n}):(po=t,t=u)):(po=t,t=u))))),t}function Si(){var t;return(t=function(){var t,e,n,s;t=po,"current_date"===r.substr(po,12).toLowerCase()?(e=r.substr(po,12),po+=12):(e=u,0===ho&&No(zs));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="CURRENT_DATE"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=po,"current_time"===r.substr(po,12).toLowerCase()?(e=r.substr(po,12),po+=12):(e=u,0===ho&&No(ou));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="CURRENT_TIME"):(po=t,t=u)):(po=t,t=u);return t}())===u&&(t=Xl()),t}function _i(){var t,e,n,s,o,a,i,l,c;return t=po,"binary"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(he)),e===u&&("_binary"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(ye))),e===u&&(e=null),e!==u&&Cc()!==u&&(n=gi())!==u?(s=po,(o=Cc())!==u&&(a=Fo())!==u?s=o=[o,a]:(po=s,s=u),s===u&&(s=null),s!==u?(t,l=n,c=s,(i=e)&&(l.prefix=i.toLowerCase()),c&&(l.suffix={collate:c[1]}),t=e=l):(po=t,t=u)):(po=t,t=u),t===u&&(t=ki())===u&&(t=function(){var t,e;t=po,(e=function(){var t,e,n,s;t=po,"true"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(on));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!0});(t=e)===u&&(t=po,(e=function(){var t,e,n,s;t=po,"false"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(ln));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!1}),t=e);return t}())===u&&(t=Oi())===u&&(t=function(){var t,e,n,s,o,a;t=po,(e=Bl())===u&&(e=Hl())===u&&(e=Wl())===u&&(e=jl());if(e!==u)if(Cc()!==u){if(n=po,39===r.charCodeAt(po)?(s="'",po++):(s=u,0===ho&&No(Rr)),s!==u){for(o=[],a=Ui();a!==u;)o.push(a),a=Ui();o!==u?(39===r.charCodeAt(po)?(a="'",po++):(a=u,0===ho&&No(Rr)),a!==u?n=s=[s,o,a]:(po=n,n=u)):(po=n,n=u)}else po=n,n=u;n!==u?(t,e=Oe(e,n),t=e):(po=t,t=u)}else po=t,t=u;else po=t,t=u;if(t===u)if(t=po,(e=Bl())===u&&(e=Hl())===u&&(e=Wl())===u&&(e=jl()),e!==u)if(Cc()!==u){if(n=po,34===r.charCodeAt(po)?(s='"',po++):(s=u,0===ho&&No(Xt)),s!==u){for(o=[],a=xi();a!==u;)o.push(a),a=xi();o!==u?(34===r.charCodeAt(po)?(a='"',po++):(a=u,0===ho&&No(Xt)),a!==u?n=s=[s,o,a]:(po=n,n=u)):(po=n,n=u)}else po=n,n=u;n!==u?(t,e=Oe(e,n),t=e):(po=t,t=u)}else po=t,t=u;else po=t,t=u;return t}()),t}function Oi(){var t,e;return t=po,(e=function(){var t,e,n,s;t=po,"null"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(sn));e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u);return t}())!==u&&(t,e={type:"null",value:null}),t=e}function gi(){var t,e,n,s,o,a,i,l;if(t=po,"_binary"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(ye)),e===u&&("_latin1"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(Te))),e===u&&(e=null),e!==u)if((n=Cc())!==u)if("x"===r.substr(po,1).toLowerCase()?(s=r.charAt(po),po++):(s=u,0===ho&&No(me)),s!==u){if(o=po,39===r.charCodeAt(po)?(a="'",po++):(a=u,0===ho&&No(Rr)),a!==u){for(i=[],Ie.test(r.charAt(po))?(l=r.charAt(po),po++):(l=u,0===ho&&No(Ne));l!==u;)i.push(l),Ie.test(r.charAt(po))?(l=r.charAt(po),po++):(l=u,0===ho&&No(Ne));i!==u?(39===r.charCodeAt(po)?(l="'",po++):(l=u,0===ho&&No(Rr)),l!==u?o=a=[a,i,l]:(po=o,o=u)):(po=o,o=u)}else po=o,o=u;o!==u?(t,t=e={type:"hex_string",prefix:e,value:o[1].join("")}):(po=t,t=u)}else po=t,t=u;else po=t,t=u;else po=t,t=u;if(t===u){if(t=po,"_binary"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(ye)),e===u&&("_latin1"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(Te))),e===u&&(e=null),e!==u)if((n=Cc())!==u)if("b"===r.substr(po,1).toLowerCase()?(s=r.charAt(po),po++):(s=u,0===ho&&No(Re)),s!==u){if(o=po,39===r.charCodeAt(po)?(a="'",po++):(a=u,0===ho&&No(Rr)),a!==u){for(i=[],Ie.test(r.charAt(po))?(l=r.charAt(po),po++):(l=u,0===ho&&No(Ne));l!==u;)i.push(l),Ie.test(r.charAt(po))?(l=r.charAt(po),po++):(l=u,0===ho&&No(Ne));i!==u?(39===r.charCodeAt(po)?(l="'",po++):(l=u,0===ho&&No(Rr)),l!==u?o=a=[a,i,l]:(po=o,o=u)):(po=o,o=u)}else po=o,o=u;o!==u?(t,t=e=function(r,t,e){return{type:"bit_string",prefix:r,value:e[1].join("")}}(e,0,o)):(po=t,t=u)}else po=t,t=u;else po=t,t=u;else po=t,t=u;if(t===u){if(t=po,"_binary"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(ye)),e===u&&("_latin1"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(Te))),e===u&&(e=null),e!==u)if((n=Cc())!==u)if("0x"===r.substr(po,2).toLowerCase()?(s=r.substr(po,2),po+=2):(s=u,0===ho&&No(Se)),s!==u){for(o=[],Ie.test(r.charAt(po))?(a=r.charAt(po),po++):(a=u,0===ho&&No(Ne));a!==u;)o.push(a),Ie.test(r.charAt(po))?(a=r.charAt(po),po++):(a=u,0===ho&&No(Ne));o!==u?(t,t=e=function(r,t,e){return{type:"full_hex_string",prefix:r,value:e.join("")}}(e,0,o)):(po=t,t=u)}else po=t,t=u;else po=t,t=u;else po=t,t=u;if(t===u){if(t=po,"n"===r.substr(po,1).toLowerCase()?(e=r.charAt(po),po++):(e=u,0===ho&&No(_e)),e!==u){if(n=po,39===r.charCodeAt(po)?(s="'",po++):(s=u,0===ho&&No(Rr)),s!==u){for(o=[],a=Ui();a!==u;)o.push(a),a=Ui();o!==u?(39===r.charCodeAt(po)?(a="'",po++):(a=u,0===ho&&No(Rr)),a!==u?n=s=[s,o,a]:(po=n,n=u)):(po=n,n=u)}else po=n,n=u;n!==u?(t,t=e=function(r,t){return{type:"natural_string",value:t[1].join("")}}(0,n)):(po=t,t=u)}else po=t,t=u;if(t===u){if(t=po,e=po,39===r.charCodeAt(po)?(n="'",po++):(n=u,0===ho&&No(Rr)),n!==u){for(s=[],o=Ui();o!==u;)s.push(o),o=Ui();s!==u?(39===r.charCodeAt(po)?(o="'",po++):(o=u,0===ho&&No(Rr)),o!==u?e=n=[n,s,o]:(po=e,e=u)):(po=e,e=u)}else po=e,e=u;if(e!==u&&(t,e=function(r){return{type:"single_quote_string",value:r[1].join("")}}(e)),(t=e)===u){if(t=po,e=po,34===r.charCodeAt(po)?(n='"',po++):(n=u,0===ho&&No(Xt)),n!==u){for(s=[],o=xi();o!==u;)s.push(o),o=xi();s!==u?(34===r.charCodeAt(po)?(o='"',po++):(o=u,0===ho&&No(Xt)),o!==u?e=n=[n,s,o]:(po=e,e=u)):(po=e,e=u)}else po=e,e=u;e!==u&&(t,e=function(r){return{type:"string",value:r[1].join("")}}(e)),t=e}}}}}return t}function xi(){var t;return ge.test(r.charAt(po))?(t=r.charAt(po),po++):(t=u,0===ho&&No(xe)),t===u&&(t=Mi()),t}function Ui(){var t;return Ue.test(r.charAt(po))?(t=r.charAt(po),po++):(t=u,0===ho&&No(Me)),t===u&&(t=Mi()),t}function Mi(){var t,e,n,s,o,a,i,l,c,f;return t=po,"\\'"===r.substr(po,2)?(e="\\'",po+=2):(e=u,0===ho&&No(ke)),e!==u&&(t,e="\\'"),(t=e)===u&&(t=po,'\\"'===r.substr(po,2)?(e='\\"',po+=2):(e=u,0===ho&&No(De)),e!==u&&(t,e='\\"'),(t=e)===u&&(t=po,"\\\\"===r.substr(po,2)?(e="\\\\",po+=2):(e=u,0===ho&&No($e)),e!==u&&(t,e="\\\\"),(t=e)===u&&(t=po,"\\/"===r.substr(po,2)?(e="\\/",po+=2):(e=u,0===ho&&No(Pe)),e!==u&&(t,e="\\/"),(t=e)===u&&(t=po,"\\b"===r.substr(po,2)?(e="\\b",po+=2):(e=u,0===ho&&No(Fe)),e!==u&&(t,e="\b"),(t=e)===u&&(t=po,"\\f"===r.substr(po,2)?(e="\\f",po+=2):(e=u,0===ho&&No(Ge)),e!==u&&(t,e="\f"),(t=e)===u&&(t=po,"\\n"===r.substr(po,2)?(e="\\n",po+=2):(e=u,0===ho&&No(He)),e!==u&&(t,e="\n"),(t=e)===u&&(t=po,"\\r"===r.substr(po,2)?(e="\\r",po+=2):(e=u,0===ho&&No(je)),e!==u&&(t,e="\r"),(t=e)===u&&(t=po,"\\t"===r.substr(po,2)?(e="\\t",po+=2):(e=u,0===ho&&No(Ye)),e!==u&&(t,e="\t"),(t=e)===u&&(t=po,"\\u"===r.substr(po,2)?(e="\\u",po+=2):(e=u,0===ho&&No(Be)),e!==u&&(n=Hi())!==u&&(s=Hi())!==u&&(o=Hi())!==u&&(a=Hi())!==u?(t,i=n,l=s,c=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+l+c+f))):(po=t,t=u),t===u&&(t=po,92===r.charCodeAt(po)?(e="\\",po++):(e=u,0===ho&&No(We)),e!==u&&(t,e="\\"),(t=e)===u&&(t=po,"''"===r.substr(po,2)?(e="''",po+=2):(e=u,0===ho&&No(Xe)),e!==u&&(t,e="''"),(t=e)===u&&(t=po,'""'===r.substr(po,2)?(e='""',po+=2):(e=u,0===ho&&No(Ve)),e!==u&&(t,e='""'),(t=e)===u&&(t=po,"``"===r.substr(po,2)?(e="``",po+=2):(e=u,0===ho&&No(Ke)),e!==u&&(t,e="``"),t=e))))))))))))),t}function ki(){var r,t,e;return r=po,(t=function(){var r,t,e,n;r=po,(t=Di())!==u&&(e=$i())!==u&&(n=Pi())!==u?(r,r=t={type:"bigint",value:t+e+n}):(po=r,r=u);r===u&&(r=po,(t=Di())!==u&&(e=$i())!==u?(r,t=function(r,t){const e=r+t;return Fc(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(po=r,r=u),r===u&&(r=po,(t=Di())!==u&&(e=Pi())!==u?(r,t=function(r,t){return{type:"bigint",value:r+t}}(t,e),r=t):(po=r,r=u),r===u&&(r=po,(t=Di())!==u&&(r,t=function(r){return Fc(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==u&&(r,t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function Di(){var t,e,n;return(t=Fi())===u&&(t=Gi())===u&&(t=po,45===r.charCodeAt(po)?(e="-",po++):(e=u,0===ho&&No(Mt)),e===u&&(43===r.charCodeAt(po)?(e="+",po++):(e=u,0===ho&&No(Ut))),e!==u&&(n=Fi())!==u?(t,t=e=e+n):(po=t,t=u),t===u&&(t=po,45===r.charCodeAt(po)?(e="-",po++):(e=u,0===ho&&No(Mt)),e===u&&(43===r.charCodeAt(po)?(e="+",po++):(e=u,0===ho&&No(Ut))),e!==u&&(n=Gi())!==u?(t,t=e=function(r,t){return r+t}(e,n)):(po=t,t=u))),t}function $i(){var t,e,n;return t=po,46===r.charCodeAt(po)?(e=".",po++):(e=u,0===ho&&No(ze)),e!==u&&(n=Fi())!==u?(t,t=e="."+n):(po=t,t=u),t}function Pi(){var t,e,n;return t=po,(e=function(){var t,e,n;t=po,rn.test(r.charAt(po))?(e=r.charAt(po),po++):(e=u,0===ho&&No(tn));e!==u?(en.test(r.charAt(po))?(n=r.charAt(po),po++):(n=u,0===ho&&No(nn)),n===u&&(n=null),n!==u?(t,t=e=e+(null!==(s=n)?s:"")):(po=t,t=u)):(po=t,t=u);var s;return t}())!==u&&(n=Fi())!==u?(t,t=e=e+n):(po=t,t=u),t}function Fi(){var r,t,e;if(r=po,t=[],(e=Gi())!==u)for(;e!==u;)t.push(e),e=Gi();else t=u;return t!==u&&(r,t=t.join("")),r=t}function Gi(){var t;return qr.test(r.charAt(po))?(t=r.charAt(po),po++):(t=u,0===ho&&No(Zr)),t}function Hi(){var t;return Qe.test(r.charAt(po))?(t=r.charAt(po),po++):(t=u,0===ho&&No(Je)),t}function ji(){var t,e,n,s;return t=po,"default"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(g)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function Yi(){var t,e,n,s;return t=po,"to"===r.substr(po,2).toLowerCase()?(e=r.substr(po,2),po+=2):(e=u,0===ho&&No(an)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function Bi(){var t,e,n,s;return t=po,"show"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(cn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function Wi(){var t,e,n,s;return t=po,"drop"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(fn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="DROP"):(po=t,t=u)):(po=t,t=u),t}function Xi(){var t,e,n,s;return t=po,"update"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(cr)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function Vi(){var t,e,n,s;return t=po,"create"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(Cn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function Ki(){var t,e,n,s;return t=po,"temporary"===r.substr(po,9).toLowerCase()?(e=r.substr(po,9),po+=9):(e=u,0===ho&&No(dn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function qi(){var t,e,n,s;return t=po,"replace"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(En)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function Zi(){var t,e,n,s;return t=po,"rename"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(An)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function zi(){var t,e,n,s;return t=po,"ignore"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(hn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function Qi(){var t,e,n,s;return t=po,"partition"===r.substr(po,9).toLowerCase()?(e=r.substr(po,9),po+=9):(e=u,0===ho&&No(yn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="PARTITION"):(po=t,t=u)):(po=t,t=u),t}function Ji(){var t,e,n,s;return t=po,"into"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(Tn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function rl(){var t,e,n,s;return t=po,"from"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(mn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function tl(){var t,e,n,s;return t=po,"set"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(pr)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function el(){var t,e,n,s;return t=po,"as"===r.substr(po,2).toLowerCase()?(e=r.substr(po,2),po+=2):(e=u,0===ho&&No($)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function nl(){var t,e,n,s;return t=po,"table"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(Nn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="TABLE"):(po=t,t=u)):(po=t,t=u),t}function sl(){var t,e,n,s;return t=po,"tables"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(Rn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="TABLES"):(po=t,t=u)):(po=t,t=u),t}function ul(){var t,e,n,s;return t=po,"on"===r.substr(po,2).toLowerCase()?(e=r.substr(po,2),po+=2):(e=u,0===ho&&No(ir)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function ol(){var t,e,n,s;return t=po,"join"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(kn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function al(){var t,e,n,s;return t=po,"outer"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(Dn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function il(){var t,e,n,s;return t=po,"union"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No($n)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function ll(){var t,e,n,s;return t=po,"using"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(Hn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function cl(){var t,e,n,s;return t=po,"with"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(ot)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function fl(){var t,e,n,s;return t=po,"go"===r.substr(po,2).toLowerCase()?(e=r.substr(po,2),po+=2):(e=u,0===ho&&No(Yn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="GO"):(po=t,t=u)):(po=t,t=u),t}function bl(){var t,e,n,s;return t=po,"by"===r.substr(po,2).toLowerCase()?(e=r.substr(po,2),po+=2):(e=u,0===ho&&No(Wn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function vl(){var t,e,n,s;return t=po,"asc"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(Zn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="ASC"):(po=t,t=u)):(po=t,t=u),t}function Ll(){var t,e,n,s;return t=po,"desc"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(zn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="DESC"):(po=t,t=u)):(po=t,t=u),t}function Cl(){var t,e,n,s;return t=po,"all"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(Jn)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="ALL"):(po=t,t=u)):(po=t,t=u),t}function dl(){var t,e,n,s;return t=po,"distinct"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(rs)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="DISTINCT"):(po=t,t=u)):(po=t,t=u),t}function pl(){var t,e,n,s;return t=po,"between"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(ts)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="BETWEEN"):(po=t,t=u)):(po=t,t=u),t}function wl(){var t,e,n,s;return t=po,"in"===r.substr(po,2).toLowerCase()?(e=r.substr(po,2),po+=2):(e=u,0===ho&&No(zr)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="IN"):(po=t,t=u)):(po=t,t=u),t}function El(){var t,e,n,s;return t=po,"is"===r.substr(po,2).toLowerCase()?(e=r.substr(po,2),po+=2):(e=u,0===ho&&No(es)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="IS"):(po=t,t=u)):(po=t,t=u),t}function Al(){var t,e,n,s;return t=po,"like"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(ns)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="LIKE"):(po=t,t=u)):(po=t,t=u),t}function hl(){var t,e,n,s;return t=po,"exists"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(os)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="EXISTS"):(po=t,t=u)):(po=t,t=u),t}function yl(){var t,e,n,s;return t=po,"not"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(rr)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="NOT"):(po=t,t=u)):(po=t,t=u),t}function Tl(){var t,e,n,s;return t=po,"and"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(as)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="AND"):(po=t,t=u)):(po=t,t=u),t}function ml(){var t,e,n,s;return t=po,"or"===r.substr(po,2).toLowerCase()?(e=r.substr(po,2),po+=2):(e=u,0===ho&&No(is)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="OR"):(po=t,t=u)):(po=t,t=u),t}function Il(){var t,e,n,s;return t=po,"case"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(ds)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function Nl(){var t,e,n,s;return t=po,"end"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(As)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?t=e=[e,n]:(po=t,t=u)):(po=t,t=u),t}function Rl(){var t,e,n,s;return t=po,"cast"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(hs)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="CAST"):(po=t,t=u)):(po=t,t=u),t}function Sl(){var t,e,n,s;return t=po,"binary"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(Gr)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="BINARY"):(po=t,t=u)):(po=t,t=u),t}function _l(){var t,e,n,s;return t=po,"char"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(ms)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="CHAR"):(po=t,t=u)):(po=t,t=u),t}function Ol(){var t,e,n,s;return t=po,"varchar"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(Is)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="VARCHAR"):(po=t,t=u)):(po=t,t=u),t}function gl(){var t,e,n,s;return t=po,"numeric"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(Ns)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="NUMERIC"):(po=t,t=u)):(po=t,t=u),t}function xl(){var t,e,n,s;return t=po,"decimal"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(Rs)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="DECIMAL"):(po=t,t=u)):(po=t,t=u),t}function Ul(){var t,e,n,s;return t=po,"unsigned"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(_s)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="UNSIGNED"):(po=t,t=u)):(po=t,t=u),t}function Ml(){var t,e,n,s;return t=po,"int"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(Os)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="INT"):(po=t,t=u)):(po=t,t=u),t}function kl(){var t,e,n,s;return t=po,"integer"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(xs)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="INTEGER"):(po=t,t=u)):(po=t,t=u),t}function Dl(){var t,e,n,s;return t=po,"smallint"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(Ms)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="SMALLINT"):(po=t,t=u)):(po=t,t=u),t}function $l(){var t,e,n,s;return t=po,"tinyint"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(ks)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="TINYINT"):(po=t,t=u)):(po=t,t=u),t}function Pl(){var t,e,n,s;return t=po,"bigint"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(Gs)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="BIGINT"):(po=t,t=u)):(po=t,t=u),t}function Fl(){var t,e,n,s;return t=po,"float"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(js)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="FLOAT"):(po=t,t=u)):(po=t,t=u),t}function Gl(){var t,e,n,s;return t=po,"double"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(Ys)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="DOUBLE"):(po=t,t=u)):(po=t,t=u),t}function Hl(){var t,e,n,s;return t=po,"date"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(Bs)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="DATE"):(po=t,t=u)):(po=t,t=u),t}function jl(){var t,e,n,s;return t=po,"datetime"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(Ws)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="DATETIME"):(po=t,t=u)):(po=t,t=u),t}function Yl(){var t,e,n,s;return t=po,"rows"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(Xs)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="ROWS"):(po=t,t=u)):(po=t,t=u),t}function Bl(){var t,e,n,s;return t=po,"time"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(Vs)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="TIME"):(po=t,t=u)):(po=t,t=u),t}function Wl(){var t,e,n,s;return t=po,"timestamp"===r.substr(po,9).toLowerCase()?(e=r.substr(po,9),po+=9):(e=u,0===ho&&No(Ks)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="TIMESTAMP"):(po=t,t=u)):(po=t,t=u),t}function Xl(){var t,e,n,s;return t=po,"current_timestamp"===r.substr(po,17).toLowerCase()?(e=r.substr(po,17),po+=17):(e=u,0===ho&&No(au)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="CURRENT_TIMESTAMP"):(po=t,t=u)):(po=t,t=u),t}function Vl(){var t,e,n,s;return t=po,"view"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(Cu)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="VIEW"):(po=t,t=u)):(po=t,t=u),t}function Kl(){var t;return 64===r.charCodeAt(po)?(t="@",po++):(t=u,0===ho&&No(mu)),t}function ql(){var t;return(t=function(){var t;return"@@"===r.substr(po,2)?(t="@@",po+=2):(t=u,0===ho&&No(Iu)),t}())===u&&(t=Kl())===u&&(t=function(){var t;return 36===r.charCodeAt(po)?(t="$",po++):(t=u,0===ho&&No(Nu)),t}()),t}function Zl(){var t;return 61===r.charCodeAt(po)?(t="=",po++):(t=u,0===ho&&No(ht)),t}function zl(){var t,e,n,s;return t=po,"add"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(Ou)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="ADD"):(po=t,t=u)):(po=t,t=u),t}function Ql(){var t,e,n,s;return t=po,"column"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(gu)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="COLUMN"):(po=t,t=u)):(po=t,t=u),t}function Jl(){var t,e,n,s;return t=po,"index"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(xu)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="INDEX"):(po=t,t=u)):(po=t,t=u),t}function rc(){var t,e,n,s;return t=po,"key"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(N)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="KEY"):(po=t,t=u)):(po=t,t=u),t}function tc(){var t,e,n,s;return t=po,"fulltext"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(Uu)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="FULLTEXT"):(po=t,t=u)):(po=t,t=u),t}function ec(){var t,e,n,s;return t=po,"spatial"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(Mu)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="SPATIAL"):(po=t,t=u)):(po=t,t=u),t}function nc(){var t,e,n,s;return t=po,"unique"===r.substr(po,6).toLowerCase()?(e=r.substr(po,6),po+=6):(e=u,0===ho&&No(I)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="UNIQUE"):(po=t,t=u)):(po=t,t=u),t}function sc(){var t,e,n,s;return t=po,"comment"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(ku)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="COMMENT"):(po=t,t=u)):(po=t,t=u),t}function uc(){var t,e,n,s;return t=po,"constraint"===r.substr(po,10).toLowerCase()?(e=r.substr(po,10),po+=10):(e=u,0===ho&&No(Du)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="CONSTRAINT"):(po=t,t=u)):(po=t,t=u),t}function oc(){var t;return 46===r.charCodeAt(po)?(t=".",po++):(t=u,0===ho&&No(ze)),t}function ac(){var t;return 44===r.charCodeAt(po)?(t=",",po++):(t=u,0===ho&&No(Bu)),t}function ic(){var t;return 42===r.charCodeAt(po)?(t="*",po++):(t=u,0===ho&&No(Dt)),t}function lc(){var t;return 40===r.charCodeAt(po)?(t="(",po++):(t=u,0===ho&&No(Vr)),t}function cc(){var t;return 41===r.charCodeAt(po)?(t=")",po++):(t=u,0===ho&&No(Kr)),t}function fc(){var t;return 59===r.charCodeAt(po)?(t=";",po++):(t=u,0===ho&&No(Vu)),t}function bc(){var t;return"->"===r.substr(po,2)?(t="->",po+=2):(t=u,0===ho&&No(Ku)),t}function vc(){var t;return"->>"===r.substr(po,3)?(t="->>",po+=3):(t=u,0===ho&&No(qu)),t}function Lc(){var t;return(t=function(){var t;return"||"===r.substr(po,2)?(t="||",po+=2):(t=u,0===ho&&No(Zu)),t}())===u&&(t=function(){var t;return"&&"===r.substr(po,2)?(t="&&",po+=2):(t=u,0===ho&&No(zu)),t}())===u&&(t=function(){var t,e,n,s;return t=po,"xor"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(Qu)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="XOR"):(po=t,t=u)):(po=t,t=u),t}()),t}function Cc(){var r,t;for(r=[],(t=Ac())===u&&(t=pc());t!==u;)r.push(t),(t=Ac())===u&&(t=pc());return r}function dc(){var r,t;if(r=[],(t=Ac())===u&&(t=pc()),t!==u)for(;t!==u;)r.push(t),(t=Ac())===u&&(t=pc());else r=u;return r}function pc(){var t;return(t=function(){var t,e,n,s,o,a;t=po,"/*"===r.substr(po,2)?(e="/*",po+=2):(e=u,0===ho&&No(Ju));if(e!==u){for(n=[],s=po,o=po,ho++,"*/"===r.substr(po,2)?(a="*/",po+=2):(a=u,0===ho&&No(ro)),ho--,a===u?o=void 0:(po=o,o=u),o!==u&&(a=Ec())!==u?s=o=[o,a]:(po=s,s=u);s!==u;)n.push(s),s=po,o=po,ho++,"*/"===r.substr(po,2)?(a="*/",po+=2):(a=u,0===ho&&No(ro)),ho--,a===u?o=void 0:(po=o,o=u),o!==u&&(a=Ec())!==u?s=o=[o,a]:(po=s,s=u);n!==u?("*/"===r.substr(po,2)?(s="*/",po+=2):(s=u,0===ho&&No(ro)),s!==u?t=e=[e,n,s]:(po=t,t=u)):(po=t,t=u)}else po=t,t=u;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=po,"--"===r.substr(po,2)?(e="--",po+=2):(e=u,0===ho&&No(to));if(e!==u){for(n=[],s=po,o=po,ho++,a=hc(),ho--,a===u?o=void 0:(po=o,o=u),o!==u&&(a=Ec())!==u?s=o=[o,a]:(po=s,s=u);s!==u;)n.push(s),s=po,o=po,ho++,a=hc(),ho--,a===u?o=void 0:(po=o,o=u),o!==u&&(a=Ec())!==u?s=o=[o,a]:(po=s,s=u);n!==u?t=e=[e,n]:(po=t,t=u)}else po=t,t=u;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=po,35===r.charCodeAt(po)?(e="#",po++):(e=u,0===ho&&No(eo));if(e!==u){for(n=[],s=po,o=po,ho++,a=hc(),ho--,a===u?o=void 0:(po=o,o=u),o!==u&&(a=Ec())!==u?s=o=[o,a]:(po=s,s=u);s!==u;)n.push(s),s=po,o=po,ho++,a=hc(),ho--,a===u?o=void 0:(po=o,o=u),o!==u&&(a=Ec())!==u?s=o=[o,a]:(po=s,s=u);n!==u?t=e=[e,n]:(po=t,t=u)}else po=t,t=u;return t}()),t}function wc(){var r,t,e,n,s,o,a;return r=po,(t=sc())!==u&&Cc()!==u?((e=Zl())===u&&(e=null),e!==u&&Cc()!==u&&(n=gi())!==u?(r,o=e,a=n,r=t={type:(s=t).toLowerCase(),keyword:s.toLowerCase(),symbol:o,value:a}):(po=r,r=u)):(po=r,r=u),r}function Ec(){var t;return r.length>po?(t=r.charAt(po),po++):(t=u,0===ho&&No(no)),t}function Ac(){var t;return so.test(r.charAt(po))?(t=r.charAt(po),po++):(t=u,0===ho&&No(uo)),t}function hc(){var t,e;if((t=function(){var t,e;t=po,ho++,r.length>po?(e=r.charAt(po),po++):(e=u,0===ho&&No(no));ho--,e===u?t=void 0:(po=t,t=u);return t}())===u)if(t=[],qe.test(r.charAt(po))?(e=r.charAt(po),po++):(e=u,0===ho&&No(Ze)),e!==u)for(;e!==u;)t.push(e),qe.test(r.charAt(po))?(e=r.charAt(po),po++):(e=u,0===ho&&No(Ze));else t=u;return t}function yc(){var t,e;return t=po,po,Bc=[],( true?void 0:0)!==u&&Cc()!==u?((e=Tc())===u&&(e=function(){var t,e;t=po,function(){var t;return"return"===r.substr(po,6).toLowerCase()?(t=r.substr(po,6),po+=6):(t=u,0===ho&&No(Ru)),t}()!==u&&Cc()!==u&&(e=mc())!==u?(t,t={type:"return",expr:e}):(po=t,t=u);return t}()),e!==u?(t,t={stmt:e,vars:Bc}):(po=t,t=u)):(po=t,t=u),t}function Tc(){var t,e,n,s;return t=po,(e=gc())===u&&(e=xc()),e!==u&&Cc()!==u?((n=function(){var t;return":="===r.substr(po,2)?(t=":=",po+=2):(t=u,0===ho&&No(Su)),t}())===u&&(n=Zl()),n!==u&&Cc()!==u&&(s=mc())!==u?(t,t=e={type:"assign",left:e,symbol:n,right:s}):(po=t,t=u)):(po=t,t=u),t}function mc(){var t;return(t=Jo())===u&&(t=function(){var r,t,e,n,s;r=po,(t=gc())!==u&&Cc()!==u&&(e=Aa())!==u&&Cc()!==u&&(n=gc())!==u&&Cc()!==u&&(s=ya())!==u?(r,r=t={type:"join",ltable:t,rtable:n,op:e,on:s}):(po=r,r=u);return r}())===u&&(t=Ic())===u&&(t=function(){var t,e;t=po,function(){var t;return 91===r.charCodeAt(po)?(t="[",po++):(t=u,0===ho&&No(Wu)),t}()!==u&&Cc()!==u&&(e=Oc())!==u&&Cc()!==u&&function(){var t;return 93===r.charCodeAt(po)?(t="]",po++):(t=u,0===ho&&No(Xu)),t}()!==u?(t,t={type:"array",value:e}):(po=t,t=u);return t}()),t}function Ic(){var r,t,e,n,s,o,a,i;if(r=po,(t=Nc())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ri())!==u&&(a=Cc())!==u&&(i=Nc())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ri())!==u&&(a=Cc())!==u&&(i=Nc())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,r=t=mt(t,e)):(po=r,r=u)}else po=r,r=u;return r}function Nc(){var r,t,e,n,s,o,a,i;if(r=po,(t=Rc())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ei())!==u&&(a=Cc())!==u&&(i=Rc())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ei())!==u&&(a=Cc())!==u&&(i=Rc())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,r=t=mt(t,e)):(po=r,r=u)}else po=r,r=u;return r}function Rc(){var r,t,e;return(r=_i())===u&&(r=gc())===u&&(r=si())===u&&(r=_c())===u&&(r=di())===u&&(r=po,lc()!==u&&Cc()!==u&&(t=Ic())!==u&&Cc()!==u&&cc()!==u?(r,(e=t).parentheses=!0,r=e):(po=r,r=u)),r}function Sc(){var r,t,e,n,s,o,a;return r=po,(t=bi())===u&&(t=ai()),t!==u?(e=po,(n=Cc())!==u&&(s=oc())!==u&&(o=Cc())!==u?((a=bi())===u&&(a=ai()),a!==u?e=n=[n,s,o,a]:(po=e,e=u)):(po=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(po=r,r=u)):(po=r,r=u),r===u&&(r=po,(t=bi())!==u&&(r,t=function(r){const t=r.toUpperCase();return!0===Dc[t]?t:r}(t)),(r=t)===u&&(r=ai())),r}function _c(){var r,t,e;return r=po,(t=Sc())!==u&&Cc()!==u&&lc()!==u&&Cc()!==u?((e=Oc())===u&&(e=null),e!==u&&Cc()!==u&&cc()!==u?(r,r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(po=r,r=u)):(po=r,r=u),r===u&&(r=po,(t=Sc())!==u&&(r,t=function(r){return{type:"function",name:r,args:null}}(t)),r=t),r}function Oc(){var r,t,e,n,s,o,a,i;if(r=po,(t=Rc())!==u){for(e=[],n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=Rc())!==u?n=s=[s,o,a,i]:(po=n,n=u);n!==u;)e.push(n),n=po,(s=Cc())!==u&&(o=ac())!==u&&(a=Cc())!==u&&(i=Rc())!==u?n=s=[s,o,a,i]:(po=n,n=u);e!==u?(r,r=t=T(t,e)):(po=r,r=u)}else po=r,r=u;return r}function gc(){var r,t,e,n,s;return r=po,(t=ql())!==u&&(e=xc())!==u?(r,n=t,s=e,r=t={type:"var",...s,prefix:n}):(po=r,r=u),r}function xc(){var t,e,n,s,o;return t=po,(e=bi())!==u&&(n=function(){var t,e,n,s,o;t=po,e=[],n=po,46===r.charCodeAt(po)?(s=".",po++):(s=u,0===ho&&No(ze));s!==u&&(o=bi())!==u?n=s=[s,o]:(po=n,n=u);for(;n!==u;)e.push(n),n=po,46===r.charCodeAt(po)?(s=".",po++):(s=u,0===ho&&No(ze)),s!==u&&(o=bi())!==u?n=s=[s,o]:(po=n,n=u);e!==u&&(t,e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==u?(t,s=e,o=n,Bc.push(s),t=e={type:"var",name:s,members:o,prefix:null}):(po=t,t=u),t===u&&(t=po,(e=ki())!==u&&(t,e={type:"var",name:e.value,members:[],quoted:null,prefix:null}),t=e),t}function Uc(){var t;return(t=Mc())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f,b,v;t=po,(e=gl())===u&&(e=xl())===u&&(e=Ml())===u&&(e=kl())===u&&(e=Dl())===u&&(e=$l())===u&&(e=Pl())===u&&(e=Fl())===u&&(e=Gl())===u&&(e=function(){var t,e,n,s;return t=po,"bit"===r.substr(po,3).toLowerCase()?(e=r.substr(po,3),po+=3):(e=u,0===ho&&No(Ts)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="BIT"):(po=t,t=u)):(po=t,t=u),t}());if(e!==u)if((n=Cc())!==u)if((s=lc())!==u)if((o=Cc())!==u){if(a=[],qr.test(r.charAt(po))?(i=r.charAt(po),po++):(i=u,0===ho&&No(Zr)),i!==u)for(;i!==u;)a.push(i),qr.test(r.charAt(po))?(i=r.charAt(po),po++):(i=u,0===ho&&No(Zr));else a=u;if(a!==u)if((i=Cc())!==u){if(l=po,(c=ac())!==u)if((f=Cc())!==u){if(b=[],qr.test(r.charAt(po))?(v=r.charAt(po),po++):(v=u,0===ho&&No(Zr)),v!==u)for(;v!==u;)b.push(v),qr.test(r.charAt(po))?(v=r.charAt(po),po++):(v=u,0===ho&&No(Zr));else b=u;b!==u?l=c=[c,f,b]:(po=l,l=u)}else po=l,l=u;else po=l,l=u;l===u&&(l=null),l!==u&&(c=Cc())!==u&&(f=cc())!==u&&(b=Cc())!==u?((v=kc())===u&&(v=null),v!==u?(t,L=l,C=v,e={dataType:e,length:parseInt(a.join(""),10),scale:L&&parseInt(L[2].join(""),10),parentheses:!0,suffix:C},t=e):(po=t,t=u)):(po=t,t=u)}else po=t,t=u;else po=t,t=u}else po=t,t=u;else po=t,t=u;else po=t,t=u;else po=t,t=u;var L,C;if(t===u){if(t=po,(e=gl())===u&&(e=xl())===u&&(e=Ml())===u&&(e=kl())===u&&(e=Dl())===u&&(e=$l())===u&&(e=Pl())===u&&(e=Fl())===u&&(e=Gl()),e!==u){if(n=[],qr.test(r.charAt(po))?(s=r.charAt(po),po++):(s=u,0===ho&&No(Zr)),s!==u)for(;s!==u;)n.push(s),qr.test(r.charAt(po))?(s=r.charAt(po),po++):(s=u,0===ho&&No(Zr));else n=u;n!==u&&(s=Cc())!==u?((o=kc())===u&&(o=null),o!==u?(t,e=function(r,t,e){return{dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(po=t,t=u)):(po=t,t=u)}else po=t,t=u;t===u&&(t=po,(e=gl())===u&&(e=xl())===u&&(e=Ml())===u&&(e=kl())===u&&(e=Dl())===u&&(e=$l())===u&&(e=Pl())===u&&(e=Fl())===u&&(e=Gl()),e!==u&&(n=Cc())!==u?((s=kc())===u&&(s=null),s!==u&&(o=Cc())!==u?(t,e=function(r,t){return{dataType:r,suffix:t}}(e,s),t=e):(po=t,t=u)):(po=t,t=u))}return t}())===u&&(t=function(){var t,e,n,s;t=po,(e=Hl())===u&&(e=jl())===u&&(e=Bl())===u&&(e=Wl());e!==u&&Cc()!==u&&lc()!==u&&Cc()!==u?(vo.test(r.charAt(po))?(n=r.charAt(po),po++):(n=u,0===ho&&No(Lo)),n!==u&&Cc()!==u&&cc()!==u&&Cc()!==u?((s=kc())===u&&(s=null),s!==u?(t,e={dataType:e,length:parseInt(n,10),parentheses:!0},t=e):(po=t,t=u)):(po=t,t=u)):(po=t,t=u);t===u&&(t=po,(e=Hl())===u&&(e=jl())===u&&(e=Bl())===u&&(e=Wl()),e!==u&&(t,e=bo(e)),t=e);return t}())===u&&(t=function(){var t,e;t=po,(e=function(){var t,e,n,s;return t=po,"json"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(Us)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="JSON"):(po=t,t=u)):(po=t,t=u),t}())!==u&&(t,e=bo(e));return t=e}())===u&&(t=function(){var t,e;t=po,(e=function(){var t,e,n,s;return t=po,"tinytext"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(Ds)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="TINYTEXT"):(po=t,t=u)):(po=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=po,"text"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No($s)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="TEXT"):(po=t,t=u)):(po=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=po,"mediumtext"===r.substr(po,10).toLowerCase()?(e=r.substr(po,10),po+=10):(e=u,0===ho&&No(Ps)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="MEDIUMTEXT"):(po=t,t=u)):(po=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=po,"longtext"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(Fs)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="LONGTEXT"):(po=t,t=u)):(po=t,t=u),t}());e!==u&&(t,e=Co(e));return t=e}())===u&&(t=function(){var t,e,n;t=po,(e=function(){var t,e,n,s;return t=po,"enum"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(Hs)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="ENUM"):(po=t,t=u)):(po=t,t=u),t}())!==u&&Cc()!==u&&(n=$a())!==u?(t,s=e,(o=n).parentheses=!0,t=e={dataType:s,expr:o}):(po=t,t=u);var s,o;return t}())===u&&(t=function(){var t,e;t=po,"boolean"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(oo));e!==u&&(t,e={dataType:"BOOLEAN"});return t=e}())===u&&(t=function(){var t,e,n,s;t=po,(e=Sl())===u&&(e=function(){var t,e,n,s;return t=po,"varbinary"===r.substr(po,9).toLowerCase()?(e=r.substr(po,9),po+=9):(e=u,0===ho&&No(ys)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="VARBINARY"):(po=t,t=u)):(po=t,t=u),t}());if(e!==u)if(Cc()!==u)if(lc()!==u)if(Cc()!==u){if(n=[],qr.test(r.charAt(po))?(s=r.charAt(po),po++):(s=u,0===ho&&No(Zr)),s!==u)for(;s!==u;)n.push(s),qr.test(r.charAt(po))?(s=r.charAt(po),po++):(s=u,0===ho&&No(Zr));else n=u;n!==u&&(s=Cc())!==u&&cc()!==u?(t,e=fo(e,n),t=e):(po=t,t=u)}else po=t,t=u;else po=t,t=u;else po=t,t=u;else po=t,t=u;t===u&&(t=po,(e=Sl())!==u&&(t,e=bo(e)),t=e);return t}())===u&&(t=function(){var t,e;t=po,"blob"===r.substr(po,4).toLowerCase()?(e=r.substr(po,4),po+=4):(e=u,0===ho&&No(ao));e===u&&("tinyblob"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(io)),e===u&&("mediumblob"===r.substr(po,10).toLowerCase()?(e=r.substr(po,10),po+=10):(e=u,0===ho&&No(lo)),e===u&&("longblob"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(co)))));e!==u&&(t,e={dataType:e.toUpperCase()});return t=e}())===u&&(t=function(){var t,e;t=po,(e=function(){var t,e,n,s;return t=po,"geometry"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(du)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="GEOMETRY"):(po=t,t=u)):(po=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=po,"point"===r.substr(po,5).toLowerCase()?(e=r.substr(po,5),po+=5):(e=u,0===ho&&No(pu)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="POINT"):(po=t,t=u)):(po=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=po,"linestring"===r.substr(po,10).toLowerCase()?(e=r.substr(po,10),po+=10):(e=u,0===ho&&No(wu)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="LINESTRING"):(po=t,t=u)):(po=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=po,"polygon"===r.substr(po,7).toLowerCase()?(e=r.substr(po,7),po+=7):(e=u,0===ho&&No(Eu)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="POLYGON"):(po=t,t=u)):(po=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=po,"multipoint"===r.substr(po,10).toLowerCase()?(e=r.substr(po,10),po+=10):(e=u,0===ho&&No(Au)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="MULTIPOINT"):(po=t,t=u)):(po=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=po,"multilinestring"===r.substr(po,15).toLowerCase()?(e=r.substr(po,15),po+=15):(e=u,0===ho&&No(hu)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="MULTILINESTRING"):(po=t,t=u)):(po=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=po,"multipolygon"===r.substr(po,12).toLowerCase()?(e=r.substr(po,12),po+=12):(e=u,0===ho&&No(yu)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="MULTIPOLYGON"):(po=t,t=u)):(po=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=po,"geometrycollection"===r.substr(po,18).toLowerCase()?(e=r.substr(po,18),po+=18):(e=u,0===ho&&No(Tu)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="GEOMETRYCOLLECTION"):(po=t,t=u)):(po=t,t=u),t}());e!==u&&(t,e=Co(e));return t=e}()),t}function Mc(){var t,e,n,s;if(t=po,(e=_l())===u&&(e=Ol()),e!==u)if(Cc()!==u)if(lc()!==u)if(Cc()!==u){if(n=[],qr.test(r.charAt(po))?(s=r.charAt(po),po++):(s=u,0===ho&&No(Zr)),s!==u)for(;s!==u;)n.push(s),qr.test(r.charAt(po))?(s=r.charAt(po),po++):(s=u,0===ho&&No(Zr));else n=u;n!==u&&(s=Cc())!==u&&cc()!==u?(t,t=e=fo(e,n)):(po=t,t=u)}else po=t,t=u;else po=t,t=u;else po=t,t=u;else po=t,t=u;return t===u&&(t=po,(e=_l())!==u&&(t,e=bo(e)),(t=e)===u&&(t=po,(e=Ol())!==u&&(t,e=bo(e)),t=e)),t}function kc(){var t,e,n;return t=po,(e=Ul())===u&&(e=null),e!==u&&Cc()!==u?((n=function(){var t,e,n,s;return t=po,"zerofill"===r.substr(po,8).toLowerCase()?(e=r.substr(po,8),po+=8):(e=u,0===ho&&No(gs)),e!==u?(n=po,ho++,s=vi(),ho--,s===u?n=void 0:(po=n,n=u),n!==u?(t,t=e="ZEROFILL"):(po=t,t=u)):(po=t,t=u),t}())===u&&(n=null),n!==u?(t,t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(po=t,t=u)):(po=t,t=u),t}const Dc={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,ANALYZE:!0,ACCESSIBLE:!0,BEFORE:!0,BETWEEN:!0,BIGINT:!0,BLOB:!0,BOTH:!0,BY:!0,BOOLEAN:!0,CALL:!0,CASCADE:!0,CASE:!0,CHAR:!0,CHECK:!0,COLLATE:!0,CONDITION:!0,CONSTRAINT:!0,CONTINUE:!0,CONVERT:!0,CREATE:!0,CROSS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,CURSOR:!0,DATABASE:!0,DATABASES:!0,DAY_HOUR:!0,DAY_MICROSECOND:!0,DAY_MINUTE:!0,DAY_SECOND:!0,DEC:!0,DECIMAL:!0,DECLARE:!0,DEFAULT:!0,DELAYED:!0,DELETE:!0,DESC:!0,DESCRIBE:!0,DETERMINISTIC:!0,DISTINCT:!0,DISTINCTROW:!0,DIV:!0,DROP:!0,DOUBLE:!0,DUAL:!0,ELSE:!0,EACH:!0,ELSEIF:!0,ENCLOSED:!0,ESCAPED:!0,EXCEPT:!0,EXISTS:!0,EXIT:!0,EXPLAIN:!0,FALSE:!0,FULL:!0,FROM:!0,FETCH:!0,FLOAT:!0,FLOAT4:!0,FLOAT8:!0,FOR:!0,FORCE:!0,FOREIGN:!0,FULLTEXT:!0,FUNCTION:!0,GENERATED:!0,GET:!0,GO:!0,GRANT:!0,GROUP:!0,GROUPING:!0,GROUPS:!0,HAVING:!0,HIGH_PRIORITY:!0,HOUR_MICROSECOND:!0,HOUR_MINUTE:!0,HOUR_SECOND:!0,IGNORE:!0,IN:!0,INNER:!0,INFILE:!0,INOUT:!0,INSENSITIVE:!0,INSERT:!0,INTERSECT:!0,INT:!0,INT1:!0,INT2:!0,INT3:!0,INT4:!0,INT8:!0,INTEGER:!0,INTERVAL:!0,INTO:!0,IO_AFTER_GTIDS:!0,IO_BEFORE_GTIDS:!0,IS:!0,ITERATE:!0,JOIN:!0,JSON_TABLE:!0,KEY:!0,KEYS:!0,KILL:!0,LAG:!0,LAST_VALUE:!0,LATERAL:!0,LEAD:!0,LEADING:!0,LEAVE:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LINEAR:!0,LINES:!0,LOAD:!0,LOCALTIME:!0,LOCALTIMESTAMP:!0,LOCK:!0,LONG:!0,LONGBLOB:!0,LONGTEXT:!0,LOOP:!0,LOW_PRIORITY:!0,MASTER_BIND:!0,MATCH:!0,MAXVALUE:!0,MEDIUMBLOB:!0,MEDIUMINT:!0,MEDIUMTEXT:!0,MIDDLEINT:!0,MINUTE_MICROSECOND:!0,MINUTE_SECOND:!0,MINUS:!0,MOD:!0,MODIFIES:!0,NATURAL:!0,NOT:!0,NO_WRITE_TO_BINLOG:!0,NTH_VALUE:!0,NTILE:!0,NULL:!0,NUMERIC:!0,OF:!0,ON:!0,OPTIMIZE:!0,OPTIMIZER_COSTS:!0,OPTION:!0,OPTIONALLY:!0,OR:!0,ORDER:!0,OUT:!0,OUTER:!0,OUTFILE:!0,OVER:!0,PARTITION:!0,PERCENT_RANK:!0,PRECISION:!0,PRIMARY:!0,PROCEDURE:!0,PURGE:!0,RANGE:!0,RANK:!0,READ:!0,READS:!0,READ_WRITE:!0,REAL:!0,RECURSIVE:!0,REFERENCES:!0,REGEXP:!0,RELEASE:!0,RENAME:!0,REPEAT:!0,REPLACE:!0,REQUIRE:!0,RESIGNAL:!0,RESTRICT:!0,RETURN:!0,REVOKE:!0,RIGHT:!0,RLIKE:!0,ROW:!0,ROWS:!0,ROW_NUMBER:!0,SCHEMA:!0,SCHEMAS:!0,SELECT:!0,SENSITIVE:!0,SEPARATOR:!0,SET:!0,SHOW:!0,SIGNAL:!0,SMALLINT:!0,SPATIAL:!0,SPECIFIC:!0,SQL:!0,SQLEXCEPTION:!0,SQLSTATE:!0,SQLWARNING:!0,SQL_BIG_RESULT:!0,SSL:!0,STARTING:!0,STORED:!0,STRAIGHT_JOIN:!0,SYSTEM:!0,TABLE:!0,TERMINATED:!0,THEN:!0,TINYBLOB:!0,TINYINT:!0,TINYTEXT:!0,TO:!0,TRAILING:!0,TRIGGER:!0,TRUE:!0,UNION:!0,UNIQUE:!0,UNLOCK:!0,UNSIGNED:!0,UPDATE:!0,USAGE:!0,USE:!0,USING:!0,UTC_DATE:!0,UTC_TIME:!0,UTC_TIMESTAMP:!0,VALUES:!0,VARBINARY:!0,VARCHAR:!0,VARCHARACTER:!0,VARYING:!0,VIRTUAL:!0,WHEN:!0,WHERE:!0,WHILE:!0,WINDOW:!0,WITH:!0,WRITE:!0,XOR:!0,YEAR_MONTH:!0,ZEROFILL:!0};function $c(r,t){return{type:"unary_expr",operator:r,expr:t}}function Pc(r,t,e){return{type:"binary_expr",operator:r,left:t,right:e}}function Fc(r){const t=n(Number.MAX_SAFE_INTEGER);return!(n(r)<t)}function Gc(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)delete t[r][e].tableList,delete t[r][e].columnList,n.push(t[r][e]);return n}function Hc(r,t){let e=r;for(let r=0;r<t.length;r++)e=Pc(t[r][1],e,t[r][3]);return e}function jc(r){const t=Vc[r];return t||(r||null)}function Yc(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=jc(r[1])),t.add(r.join("::"))}return Array.from(t)}let Bc=[];const Wc=new Set,Xc=new Set,Vc={};if((e=a())!==u&&po===r.length)return e;throw e!==u&&po<r.length&&No({type:"end"}),Ro(Ao,Eo<r.length?r.charAt(Eo):null,Eo<r.length?Io(Eo,Eo+1):Io(Eo,Eo))}}},function(r,t,e){"use strict";var n=e(0);function s(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,s)}!function(r,t){function e(){this.constructor=r}e.prototype=t.prototype,r.prototype=new e}(s,Error),s.buildMessage=function(r,t){var e={literal:function(r){return'"'+s(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?u(r.parts[t][0])+"-"+u(r.parts[t][1]):u(r.parts[t]);return"["+(r.inverted?"^":"")+e+"]"},any:function(r){return"any character"},end:function(r){return"end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function s(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}function u(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}return"Expected "+function(r){var t,n,s,u=new Array(r.length);for(t=0;t<r.length;t++)u[t]=(s=r[t],e[s.type](s));if(u.sort(),u.length>0){for(t=1,n=1;t<u.length;t++)u[t-1]!==u[t]&&(u[n]=u[t],n++);u.length=n}switch(u.length){case 1:return u[0];case 2:return u[0]+" or "+u[1];default:return u.slice(0,-1).join(", ")+", or "+u[u.length-1]}}(r)+" but "+function(r){return r?'"'+s(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:s,parse:function(r,t){t=void 0!==t?t:{};var e,u={},o={start:ho},a=ho,i=function(r,t){return Sc(r,t)},l=function(r,t){return Sc(r,t,1)},c=Lo("IF",!0),f=Lo("CASCADED",!0),b=Lo("LOCAL",!0),v=Lo("CHECK",!0),L=Lo("OPTION",!1),C=Lo("ALGORITHM",!0),d=Lo("UNDEFINED",!0),p=Lo("MERGE",!0),w=Lo("TEMPTABLE",!0),E=Lo("DEFINER",!0),A=Lo("SQL",!0),h=Lo("SECURITY",!0),y=Lo("INVOKER",!0),T=function(r,t){return Sc(r,t)},m=Lo("AUTO_INCREMENT",!0),I=Lo("UNIQUE",!0),N=Lo("KEY",!0),R=Lo("PRIMARY",!0),S=Lo("COLUMN_FORMAT",!0),_=Lo("FIXED",!0),O=Lo("DYNAMIC",!0),g=Lo("DEFAULT",!0),x=Lo("STORAGE",!0),U=Lo("DISK",!0),M=Lo("MEMORY",!0),k=Lo("GENERATED",!0),D=Lo("ALWAYS",!0),$=Lo("AS",!0),P=Lo("STORED",!0),F=Lo("VIRTUAL",!0),G=Lo("if",!0),H=Lo("exists",!0),j=Lo("INSTANT",!0),Y=Lo("INPLACE",!0),B=Lo("COPY",!0),W=Lo("LOCK",!0),X=Lo("NONE",!0),V=Lo("SHARED",!0),K=Lo("EXCLUSIVE",!0),q=Lo("CHANGE",!0),Z=Lo("FIRST",!0),z=Lo("AFTER",!0),Q=/^[0-9]/,J=Co([["0","9"]],!1,!1),rr=Lo("PRIMARY KEY",!0),tr=Lo("FOREIGN KEY",!0),er=Lo("ENFORCED",!0),nr=Lo("MATCH FULL",!0),sr=Lo("MATCH PARTIAL",!0),ur=Lo("MATCH SIMPLE",!0),or=Lo("ON",!0),ar=Lo("DELETE",!0),ir=Lo("UPDATE",!0),lr=Lo("RESTRICT",!0),cr=Lo("CASCADE",!0),fr=Lo("SET NULL",!0),br=Lo("NO ACTION",!0),vr=Lo("SET DEFAULT",!0),Lr=Lo("CHARACTER",!0),Cr=Lo("SET",!0),dr=Lo("CHARSET",!0),pr=Lo("COLLATE",!0),wr=Lo("AVG_ROW_LENGTH",!0),Er=Lo("KEY_BLOCK_SIZE",!0),Ar=Lo("MAX_ROWS",!0),hr=Lo("MIN_ROWS",!0),yr=Lo("STATS_SAMPLE_PAGES",!0),Tr=Lo("CONNECTION",!0),mr=Lo("COMPRESSION",!0),Ir=Lo("'",!1),Nr=Lo("ZLIB",!0),Rr=Lo("LZ4",!0),Sr=Lo("ENGINE",!0),_r=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}},Or=Lo("ROW_FORMAT",!0),gr=Lo("COMPRESSED",!0),xr=Lo("REDUNDANT",!0),Ur=Lo("COMPACT",!0),Mr=Lo("BINARY",!0),kr=Lo("MASTER",!0),Dr=Lo("LOGS",!0),$r=Lo("BINLOG",!0),Pr=Lo("EVENTS",!0),Fr=Lo("COLLATION",!0),Gr=Lo("GRANTS",!0),Hr=Lo("FOR",!0),jr=function(r,t){return Sc(r,t)},Yr=Lo("READ",!0),Br=Lo("LOW_PRIORITY",!0),Wr=Lo("WRITE",!0),Xr=Lo("(",!1),Vr=Lo(")",!1),Kr=Lo("IN",!0),qr=Lo("SHARE",!0),Zr=Lo("MODE",!0),zr=Lo("WAIT",!0),Qr=Lo("NOWAIT",!0),Jr=Lo("SKIP",!0),rt=Lo("LOCKED",!0),tt=Lo("NATURAL",!0),et=Lo("LANGUAGE",!0),nt=Lo("WITH",!0),st=Lo("QUERY",!0),ut=Lo("EXPANSION",!0),ot=Lo("BOOLEAN",!0),at=Lo("MATCH",!0),it=Lo("AGAINST",!1),lt=Lo("OUTFILE",!0),ct=Lo("DUMPFILE",!0),ft=Lo("BTREE",!0),bt=Lo("HASH",!0),vt=Lo("PARSER",!0),Lt=Lo("VISIBLE",!0),Ct=Lo("INVISIBLE",!0),dt=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;kc[t]=t,e&&(kc[e]=t),function(r){const t=gc(r);r.clear(),t.forEach(t=>r.add(t))}(Mc)}),t},pt=Lo("?",!1),wt=Lo("=",!1),Et=Lo("DUPLICATE",!0),At=Lo("ROW",!0),ht=function(r,t){return _c(r,t)},yt=Lo("!",!1),Tt=function(r){return r[0]+" "+r[2]},mt=Lo(">=",!1),It=Lo(">",!1),Nt=Lo("<=",!1),Rt=Lo("<>",!1),St=Lo("<",!1),_t=Lo("!=",!1),Ot=Lo("+",!1),gt=Lo("-",!1),xt=Lo("~",!1),Ut=Lo("*",!1),Mt=Lo("/",!1),kt=Lo("%",!1),Dt=Lo("div",!0),$t=Lo("&",!1),Pt=Lo(">>",!1),Ft=Lo("<<",!1),Gt=Lo("^",!1),Ht=Lo("|",!1),jt=function(r){return!0===mc[r.toUpperCase()]},Yt=Lo('"',!1),Bt=/^[^"]/,Wt=Co(['"'],!0,!1),Xt=function(r){return r.join("")},Vt=/^[^']/,Kt=Co(["'"],!0,!1),qt=Lo("`",!1),Zt=/^[^`\\]/,zt=Co(["`","\\"],!0,!1),Qt=function(r,t){return r+t.join("")},Jt=/^[A-Za-z_]/,re=Co([["A","Z"],["a","z"],"_"],!1,!1),te=/^[A-Za-z0-9_$]/,ee=Co([["A","Z"],["a","z"],["0","9"],"_","$"],!1,!1),ne=/^[A-Za-z0-9_:]/,se=Co([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),ue=Lo(":",!1),oe=Lo("OVER",!0),ae=Lo("WINDOW",!0),ie=Lo("FOLLOWING",!0),le=Lo("PRECEDING",!0),ce=Lo("CURRENT",!0),fe=Lo("UNBOUNDED",!0),be=Lo("SEPARATOR",!0),ve=Lo("BOTH",!0),Le=Lo("LEADING",!0),Ce=Lo("TRAILING",!0),de=Lo("trim",!0),pe=Lo("convert",!0),we=Lo("binary",!0),Ee=Lo("_binary",!0),Ae=Lo("_latin1",!0),he=Lo("X",!0),ye=/^[0-9A-Fa-f]/,Te=Co([["0","9"],["A","F"],["a","f"]],!1,!1),me=Lo("b",!0),Ie=Lo("0x",!0),Ne=Lo("N",!0),Re=function(r,t){return{type:r.toLowerCase(),value:t[1].join("")}},Se=/^[^"\\\0-\x1F\x7F]/,_e=Co(['"',"\\",["\0",""],""],!0,!1),Oe=/^[^'\\]/,ge=Co(["'","\\"],!0,!1),xe=Lo("\\'",!1),Ue=Lo('\\"',!1),Me=Lo("\\\\",!1),ke=Lo("\\/",!1),De=Lo("\\b",!1),$e=Lo("\\f",!1),Pe=Lo("\\n",!1),Fe=Lo("\\r",!1),Ge=Lo("\\t",!1),He=Lo("\\u",!1),je=Lo("\\",!1),Ye=Lo("''",!1),Be=Lo('""',!1),We=Lo("``",!1),Xe=/^[\n\r]/,Ve=Co(["\n","\r"],!1,!1),Ke=Lo(".",!1),qe=/^[0-9a-fA-F]/,Ze=Co([["0","9"],["a","f"],["A","F"]],!1,!1),ze=/^[eE]/,Qe=Co(["e","E"],!1,!1),Je=/^[+\-]/,rn=Co(["+","-"],!1,!1),tn=Lo("NULL",!0),en=Lo("NOT NULL",!0),nn=Lo("TRUE",!0),sn=Lo("TO",!0),un=Lo("FALSE",!0),on=Lo("SHOW",!0),an=Lo("DROP",!0),ln=Lo("USE",!0),cn=Lo("ALTER",!0),fn=Lo("SELECT",!0),bn=Lo("CREATE",!0),vn=Lo("TEMPORARY",!0),Ln=Lo("INSERT",!0),Cn=Lo("RECURSIVE",!1),dn=Lo("REPLACE",!0),pn=Lo("RENAME",!0),wn=Lo("IGNORE",!0),En=(Lo("EXPLAIN",!0),Lo("PARTITION",!0)),An=Lo("INTO",!0),hn=Lo("FROM",!0),yn=Lo("UNLOCK",!0),Tn=Lo("TABLE",!0),mn=Lo("TABLES",!0),In=Lo("DATABASE",!0),Nn=Lo("SCHEME",!0),Rn=Lo("LEFT",!0),Sn=Lo("RIGHT",!0),_n=Lo("FULL",!0),On=Lo("INNER",!0),gn=Lo("CROSS",!0),xn=Lo("JOIN",!0),Un=Lo("OUTER",!0),Mn=Lo("UNION",!0),kn=Lo("MINUS",!0),Dn=Lo("INTERSECT",!0),$n=Lo("VALUES",!0),Pn=Lo("USING",!0),Fn=Lo("WHERE",!0),Gn=Lo("GROUP",!0),Hn=Lo("BY",!0),jn=Lo("ORDER",!0),Yn=Lo("HAVING",!0),Bn=Lo("LIMIT",!0),Wn=Lo("OFFSET",!0),Xn=Lo("ASC",!0),Vn=Lo("DESC",!0),Kn=Lo("DESCRIBE",!0),qn=Lo("ALL",!0),Zn=Lo("DISTINCT",!0),zn=Lo("BETWEEN",!0),Qn=Lo("IS",!0),Jn=Lo("LIKE",!0),rs=Lo("RLIKE",!0),ts=Lo("REGEXP",!0),es=Lo("EXISTS",!0),ns=Lo("NOT",!0),ss=Lo("AND",!0),us=Lo("OR",!0),os=Lo("COUNT",!0),as=Lo("GROUP_CONCAT",!0),is=Lo("MAX",!0),ls=Lo("MIN",!0),cs=Lo("SUM",!0),fs=Lo("AVG",!0),bs=Lo("CALL",!0),vs=Lo("CASE",!0),Ls=Lo("WHEN",!0),Cs=Lo("THEN",!0),ds=Lo("ELSE",!0),ps=Lo("END",!0),ws=Lo("CAST",!0),Es=Lo("CHAR",!0),As=Lo("VARCHAR",!0),hs=Lo("NUMERIC",!0),ys=Lo("DECIMAL",!0),Ts=Lo("SIGNED",!0),ms=Lo("UNSIGNED",!0),Is=Lo("INT",!0),Ns=Lo("ZEROFILL",!0),Rs=Lo("INTEGER",!0),Ss=Lo("JSON",!0),_s=Lo("SMALLINT",!0),Os=Lo("TINYINT",!0),gs=Lo("TINYTEXT",!0),xs=Lo("TEXT",!0),Us=Lo("MEDIUMTEXT",!0),Ms=Lo("LONGTEXT",!0),ks=Lo("BIGINT",!0),Ds=Lo("ENUM",!0),$s=Lo("FLOAT",!0),Ps=Lo("DOUBLE",!0),Fs=Lo("DATE",!0),Gs=Lo("DATETIME",!0),Hs=Lo("ROWS",!0),js=Lo("TIME",!0),Ys=Lo("TIMESTAMP",!0),Bs=Lo("TRUNCATE",!0),Ws=Lo("USER",!0),Xs=Lo("CURRENT_DATE",!0),Vs=(Lo("ADDDATE",!0),Lo("INTERVAL",!0)),Ks=Lo("YEAR",!0),qs=Lo("MONTH",!0),Zs=Lo("WEEK",!0),zs=Lo("DAY",!0),Qs=Lo("HOUR",!0),Js=Lo("MINUTE",!0),ru=Lo("SECOND",!0),tu=Lo("CURRENT_TIME",!0),eu=Lo("CURRENT_TIMESTAMP",!0),nu=Lo("CURRENT_USER",!0),su=Lo("SESSION_USER",!0),uu=Lo("SYSTEM_USER",!0),ou=Lo("GLOBAL",!0),au=Lo("SESSION",!0),iu=Lo("PERSIST",!0),lu=Lo("PERSIST_ONLY",!0),cu=Lo("VIEW",!0),fu=Lo("GEOMETRY",!0),bu=Lo("POINT",!0),vu=Lo("LINESTRING",!0),Lu=Lo("POLYGON",!0),Cu=Lo("MULTIPOINT",!0),du=Lo("MULTILINESTRING",!0),pu=Lo("MULTIPOLYGON",!0),wu=Lo("GEOMETRYCOLLECTION",!0),Eu=Lo("@",!1),Au=Lo("@@",!1),hu=Lo("$",!1),yu=Lo("return",!0),Tu=Lo(":=",!1),mu=Lo("DUAL",!0),Iu=Lo("ADD",!0),Nu=Lo("COLUMN",!0),Ru=Lo("INDEX",!0),Su=Lo("FULLTEXT",!0),_u=Lo("SPATIAL",!0),Ou=Lo("COMMENT",!0),gu=Lo("CONSTRAINT",!0),xu=Lo("REFERENCES",!0),Uu=Lo("SQL_CALC_FOUND_ROWS",!0),Mu=Lo("SQL_CACHE",!0),ku=Lo("SQL_NO_CACHE",!0),Du=Lo("SQL_SMALL_RESULT",!0),$u=Lo("SQL_BIG_RESULT",!0),Pu=Lo("SQL_BUFFER_RESULT",!0),Fu=Lo(",",!1),Gu=Lo("[",!1),Hu=Lo("]",!1),ju=Lo(";",!1),Yu=Lo("||",!1),Bu=Lo("&&",!1),Wu=Lo("XOR",!0),Xu=Lo("/*",!1),Vu=Lo("*/",!1),Ku=Lo("--",!1),qu=Lo("#",!1),Zu={type:"any"},zu=/^[ \t\n\r]/,Qu=Co([" ","\t","\n","\r"],!1,!1),Ju=Lo("boolean",!0),ro=Lo("blob",!0),to=Lo("tinyblob",!0),eo=Lo("mediumblob",!0),no=Lo("longblob",!0),so=Lo("varbinary",!0),uo=function(r){return{dataType:r}},oo=/^[0-6]/,ao=Co([["0","6"]],!1,!1),io=function(r){return{dataType:r}},lo=0,co=[{line:1,column:1}],fo=0,bo=[],vo=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule]}function Lo(r,t){return{type:"literal",text:r,ignoreCase:t}}function Co(r,t,e){return{type:"class",parts:r,inverted:t,ignoreCase:e}}function po(t){var e,n=co[t];if(n)return n;for(e=t-1;!co[e];)e--;for(n={line:(n=co[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return co[t]=n,n}function wo(r,t){var e=po(r),n=po(t);return{start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Eo(r){lo<fo||(lo>fo&&(fo=lo,bo=[]),bo.push(r))}function Ao(r,t,e){return new s(s.buildMessage(r,t),r,t,e)}function ho(){var r,t;return r=lo,nc()!==u?((t=function(){var r,t,e,n,s,o,a,i;if(r=lo,(t=To())!==u){if(e=[],n=lo,(s=nc())!==u&&(o=tc())!==u&&(a=nc())!==u&&(i=To())!==u?n=s=[s,o,a,i]:(lo=n,n=u),n!==u)for(;n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=tc())!==u&&(a=nc())!==u&&(i=To())!==u?n=s=[s,o,a,i]:(lo=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return{tableList:Array.from(Uc),columnList:gc(Mc),ast:e}}(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())===u&&(t=yo())===u&&(t=To()),t!==u?(r,r=t):(lo=r,r=u)):(lo=r,r=u),r}function yo(){var t;return(t=function(){var t,e,n,s,o,a,i;t=lo,(e=$i())!==u&&nc()!==u&&(n=qi())!==u&&nc()!==u?((s=function(){var t,e,n;t=lo,"if"===r.substr(lo,2).toLowerCase()?(e=r.substr(lo,2),lo+=2):(e=u,0===vo&&Eo(G));e!==u&&nc()!==u?("exists"===r.substr(lo,6).toLowerCase()?(n=r.substr(lo,6),lo+=6):(n=u,0===vo&&Eo(H)),n!==u?(t,t=e="if exists"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(s=null),s!==u&&nc()!==u&&(o=la())!==u?(t,c=e,f=n,b=s,(v=o)&&v.forEach(r=>Uc.add(`${c}::${r.db}::${r.table}`)),e={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:c.toLowerCase(),keyword:f.toLowerCase(),prefix:b,name:v}},t=e):(lo=t,t=u)):(lo=t,t=u);var c,f,b,v;t===u&&(t=lo,(e=$i())!==u&&nc()!==u&&(n=Bl())!==u&&nc()!==u&&(s=Za())!==u&&nc()!==u&&(o=zi())!==u&&nc()!==u&&(a=va())!==u&&nc()!==u?((i=function(){var r,t,e,n,s,o;r=lo,(t=Uo())===u&&(t=Mo());if(t!==u){for(e=[],n=lo,(s=nc())!==u?((o=Uo())===u&&(o=Mo()),o!==u?n=s=[s,o]:(lo=n,n=u)):(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u?((o=Uo())===u&&(o=Mo()),o!==u?n=s=[s,o]:(lo=n,n=u)):(lo=n,n=u);e!==u?(r,t=l(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())===u&&(i=null),i!==u&&nc()!==u?(t,e=function(r,t,e,n,s){return{tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:s}}}(e,n,s,a,i),t=e):(lo=t,t=u)):(lo=t,t=u));return t}())===u&&(t=function(){var t;(t=function(){var r,t,e,n,s,o,a,l,c,f;r=lo,(t=Fi())!==u&&nc()!==u?((e=Gi())===u&&(e=null),e!==u&&nc()!==u&&qi()!==u&&nc()!==u?((n=Ro())===u&&(n=null),n!==u&&nc()!==u&&(s=la())!==u&&nc()!==u&&(o=function(){var r,t,e,n,s,o,a,i,l;if(r=lo,(t=Jl())!==u)if(nc()!==u)if((e=So())!==u){for(n=[],s=lo,(o=nc())!==u&&(a=zl())!==u&&(i=nc())!==u&&(l=So())!==u?s=o=[o,a,i,l]:(lo=s,s=u);s!==u;)n.push(s),s=lo,(o=nc())!==u&&(a=zl())!==u&&(i=nc())!==u&&(l=So())!==u?s=o=[o,a,i,l]:(lo=s,s=u);n!==u&&(s=nc())!==u&&(o=rc())!==u?(r,t=T(e,n),r=t):(lo=r,r=u)}else lo=r,r=u;else lo=r,r=u;else lo=r,r=u;return r}())!==u&&nc()!==u?((a=function(){var r,t,e,n,s,o,a,l;if(r=lo,(t=Bo())!==u){for(e=[],n=lo,(s=nc())!==u?((o=zl())===u&&(o=null),o!==u&&(a=nc())!==u&&(l=Bo())!==u?n=s=[s,o,a,l]:(lo=n,n=u)):(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u?((o=zl())===u&&(o=null),o!==u&&(a=nc())!==u&&(l=Bo())!==u?n=s=[s,o,a,l]:(lo=n,n=u)):(lo=n,n=u);e!==u?(r,t=i(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())===u&&(a=null),a!==u&&nc()!==u?((l=Yi())===u&&(l=Hi()),l===u&&(l=null),l!==u&&nc()!==u?((c=Ki())===u&&(c=null),c!==u&&nc()!==u?((f=Io())===u&&(f=null),f!==u?(r,b=t,v=e,L=n,d=o,p=a,w=l,E=c,A=f,(C=s)&&C.forEach(r=>Uc.add(`create::${r.db}::${r.table}`)),t={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:b[0].toLowerCase(),keyword:"table",temporary:v&&v[0].toLowerCase(),if_not_exists:L,table:C,ignore_replace:w&&w[0].toLowerCase(),as:E&&E[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:d,table_options:p}},r=t):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u);var b,v,L,C,d,p,w,E,A;r===u&&(r=lo,(t=Fi())!==u&&nc()!==u?((e=Gi())===u&&(e=null),e!==u&&nc()!==u&&qi()!==u&&nc()!==u?((n=Ro())===u&&(n=null),n!==u&&nc()!==u&&(s=la())!==u&&nc()!==u&&(o=function r(){var t,e;(t=function(){var r,t,e;r=lo,(t=bl())!==u&&nc()!==u&&(e=la())!==u?(r,t=function(r){return{type:"like",table:r}}(e),r=t):(lo=r,r=u);return r}())===u&&(t=lo,Jl()!==u&&nc()!==u&&(e=r())!==u&&nc()!==u&&rc()!==u?(t,(n=e).parentheses=!0,t=n):(lo=t,t=u));var n;return t}())!==u?(r,t=function(r,t,e,n,s){return n&&n.forEach(r=>Uc.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e,table:n,like:s}}}(t,e,n,s,o),r=t):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u));return r}())===u&&(t=function(){var r,t,e,n,s,o,a,l,c,f,b,v;r=lo,(t=Fi())!==u&&nc()!==u?((e=Kl())===u&&(e=Xl())===u&&(e=Vl()),e===u&&(e=null),e!==u&&nc()!==u&&(n=Bl())!==u&&nc()!==u&&(s=Qa())!==u&&nc()!==u?((o=oa())===u&&(o=null),o!==u&&nc()!==u&&(a=zi())!==u&&nc()!==u&&(l=va())!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(c=function(){var r,t,e,n,s,o,a,l;if(r=lo,(t=No())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(l=No())!==u?n=s=[s,o,a,l]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(l=No())!==u?n=s=[s,o,a,l]:(lo=n,n=u);e!==u?(r,t=i(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())!==u&&nc()!==u&&rc()!==u&&nc()!==u?((f=aa())===u&&(f=null),f!==u&&nc()!==u?((b=Uo())===u&&(b=null),b!==u&&nc()!==u?((v=Mo())===u&&(v=null),v!==u&&nc()!==u?(r,L=t,C=e,d=n,p=s,w=o,E=a,A=l,h=c,y=f,T=b,m=v,t={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:L[0].toLowerCase(),index_type:C&&C.toLowerCase(),keyword:d.toLowerCase(),index:p,on_kw:E[0].toLowerCase(),table:A,index_columns:h,index_using:w,index_options:y,algorithm_option:T,lock_option:m}},r=t):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u);var L,C,d,p,w,E,A,h,y,T,m;return r}())===u&&(t=function(){var t,e,n,s,o,a;t=lo,(e=Fi())!==u&&nc()!==u?((n=function(){var t,e,n,s;t=lo,"database"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(In));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="DATABASE"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=lo,"scheme"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(Nn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="SCHEME"):(lo=t,t=u)):(lo=t,t=u);return t}()),n!==u&&nc()!==u?((s=Ro())===u&&(s=null),s!==u&&nc()!==u&&(o=si())!==u&&nc()!==u?((a=function(){var r,t,e,n,s,o;if(r=lo,(t=Yo())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=Yo())!==u?n=s=[s,o]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=Yo())!==u?n=s=[s,o]:(lo=n,n=u);e!==u?(r,t=l(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())===u&&(a=null),a!==u?(t,i=e,c=s,f=o,b=a,e={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:i[0].toLowerCase(),keyword:"database",if_not_exists:c,database:f,create_definitions:b}},t=e):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u);var i,c,f,b;return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,T,m,I,N,R,S,_,O,g,x,U,M;t=lo,(e=Fi())!==u&&nc()!==u?(n=lo,(s=dl())!==u&&(o=nc())!==u&&(a=Hi())!==u?n=s=[s,o,a]:(lo=n,n=u),n===u&&(n=null),n!==u&&(s=nc())!==u?(o=lo,"algorithm"===r.substr(lo,9).toLowerCase()?(a=r.substr(lo,9),lo+=9):(a=u,0===vo&&Eo(C)),a!==u&&(i=nc())!==u&&(l=Hl())!==u&&(c=nc())!==u?("undefined"===r.substr(lo,9).toLowerCase()?(T=r.substr(lo,9),lo+=9):(T=u,0===vo&&Eo(d)),T===u&&("merge"===r.substr(lo,5).toLowerCase()?(T=r.substr(lo,5),lo+=5):(T=u,0===vo&&Eo(p)),T===u&&("temptable"===r.substr(lo,9).toLowerCase()?(T=r.substr(lo,9),lo+=9):(T=u,0===vo&&Eo(w)))),T!==u?o=a=[a,i,l,c,T]:(lo=o,o=u)):(lo=o,o=u),o===u&&(o=null),o!==u&&(a=nc())!==u?(i=lo,"definer"===r.substr(lo,7).toLowerCase()?(l=r.substr(lo,7),lo+=7):(l=u,0===vo&&Eo(E)),l!==u&&(c=nc())!==u&&(T=Hl())!==u&&(m=nc())!==u&&(I=Qa())!==u?i=l=[l,c,T,m,I]:(lo=i,i=u),i===u&&(i=null),i!==u&&(l=nc())!==u?(c=lo,"sql"===r.substr(lo,3).toLowerCase()?(T=r.substr(lo,3),lo+=3):(T=u,0===vo&&Eo(A)),T!==u&&(m=nc())!==u?("security"===r.substr(lo,8).toLowerCase()?(I=r.substr(lo,8),lo+=8):(I=u,0===vo&&Eo(h)),I!==u&&(N=nc())!==u?("definer"===r.substr(lo,7).toLowerCase()?(R=r.substr(lo,7),lo+=7):(R=u,0===vo&&Eo(E)),R===u&&("invoker"===r.substr(lo,7).toLowerCase()?(R=r.substr(lo,7),lo+=7):(R=u,0===vo&&Eo(y))),R!==u?c=T=[T,m,I,N,R]:(lo=c,c=u)):(lo=c,c=u)):(lo=c,c=u),c===u&&(c=null),c!==u&&(T=nc())!==u&&(m=Pl())!==u&&(I=nc())!==u&&(N=va())!==u&&(R=nc())!==u?(S=lo,(_=Jl())!==u&&(O=nc())!==u&&(g=za())!==u&&(x=nc())!==u&&(U=rc())!==u?S=_=[_,O,g,x,U]:(lo=S,S=u),S===u&&(S=null),S!==u&&(_=nc())!==u&&(O=Ki())!==u&&(g=nc())!==u&&(x=zo())!==u&&(U=nc())!==u?((M=function(){var t,e,n,s,o;t=lo,(e=nl())!==u&&nc()!==u?("cascaded"===r.substr(lo,8).toLowerCase()?(n=r.substr(lo,8),lo+=8):(n=u,0===vo&&Eo(f)),n===u&&("local"===r.substr(lo,5).toLowerCase()?(n=r.substr(lo,5),lo+=5):(n=u,0===vo&&Eo(b))),n!==u&&nc()!==u?("check"===r.substr(lo,5).toLowerCase()?(s=r.substr(lo,5),lo+=5):(s=u,0===vo&&Eo(v)),s!==u&&nc()!==u?("OPTION"===r.substr(lo,6)?(o="OPTION",lo+=6):(o=u,0===vo&&Eo(L)),o!==u?(t,e=`with ${n.toLowerCase()} check option`,t=e):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u);t===u&&(t=lo,(e=nl())!==u&&nc()!==u?("check"===r.substr(lo,5).toLowerCase()?(n=r.substr(lo,5),lo+=5):(n=u,0===vo&&Eo(v)),n!==u&&nc()!==u?("OPTION"===r.substr(lo,6)?(s="OPTION",lo+=6):(s=u,0===vo&&Eo(L)),s!==u?(t,t=e="with check option"):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u));return t}())===u&&(M=null),M!==u?(t,k=e,D=n,$=o,P=i,F=c,H=S,j=x,Y=M,(G=N).view=G.table,delete G.table,e={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:k[0].toLowerCase(),keyword:"view",replace:D&&"or replace",algorithm:$&&$[4],definer:P&&P[4],sql_security:F&&F[4],columns:H&&H[2],select:j,view:G,with:Y}},t=e):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u);var k,D,$,P,F,G,H,j,Y;return t}());return t}())===u&&(t=function(){var t,e,n,s;t=lo,(e=function(){var t,e,n,s;t=lo,"truncate"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(Bs));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="TRUNCATE"):(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&nc()!==u?((n=qi())===u&&(n=null),n!==u&&nc()!==u&&(s=la())!==u?(t,o=e,a=n,(i=s)&&i.forEach(r=>Uc.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(lo=t,t=u)):(lo=t,t=u);var o,a,i;return t}())===u&&(t=function(){var r,t,e;r=lo,(t=ji())!==u&&nc()!==u&&qi()!==u&&nc()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=lo,(t=ua())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=ua())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=ua())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,t=T(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())!==u?(r,(n=e).forEach(r=>r.forEach(r=>r.table&&Uc.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:"rename",table:n}},r=t):(lo=r,r=u);var n;return r}())===u&&(t=function(){var t,e,n;t=lo,(e=function(){var t,e,n,s;t=lo,"call"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(bs));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="CALL"):(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&nc()!==u&&(n=pc())!==u?(t,s=n,e={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:"call",expr:s}},t=e):(lo=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n;t=lo,(e=function(){var t,e,n,s;t=lo,"use"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(ln));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&nc()!==u&&(n=Qa())!==u?(t,s=n,Uc.add(`use::${s}::null`),e={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:"use",db:s}},t=e):(lo=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n,s;t=lo,(e=function(){var t,e,n,s;t=lo,"alter"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(cn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&nc()!==u&&qi()!==u&&nc()!==u&&(n=va())!==u&&nc()!==u&&(s=function(){var r,t,e,n,s,o,a,i;if(r=lo,(t=xo())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=xo())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=xo())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,t=T(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())!==u?(t,o=n,a=s,Uc.add(`alter::${o.db}::${o.table}`),e={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:"alter",table:[o],expr:a}},t=e):(lo=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n,s;t=lo,(e=Vi())!==u&&nc()!==u?((n=function(){var t,e,n,s;t=lo,"global"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(ou));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="GLOBAL"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=lo,"session"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(au));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="SESSION"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=lo,"local"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(b));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="LOCAL"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=lo,"persist"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(iu));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="PERSIST"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=lo,"persist_only"===r.substr(lo,12).toLowerCase()?(e=r.substr(lo,12),lo+=12):(e=u,0===vo&&Eo(lu));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="PERSIST_ONLY"):(lo=t,t=u)):(lo=t,t=u);return t}()),n===u&&(n=null),n!==u&&nc()!==u&&(s=fc())!==u?(t,o=n,(a=s).keyword=o,e={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:"set",expr:a}},t=e):(lo=t,t=u)):(lo=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n;t=lo,(e=function(){var t,e,n,s;t=lo,"lock"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(W));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&nc()!==u&&Zi()!==u&&nc()!==u&&(n=function(){var r,t,e,n,s,o,a,i;if(r=lo,(t=Wo())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=Wo())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=Wo())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,t=jr(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())!==u?(t,s=n,e={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:"lock",keyword:"tables",tables:s}},t=e):(lo=t,t=u);var s;return t}())===u&&(t=function(){var t,e;t=lo,(e=function(){var t,e,n,s;t=lo,"unlock"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(yn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&nc()!==u&&Zi()!==u?(t,e={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:"unlock",keyword:"tables"}},t=e):(lo=t,t=u);return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c;t=lo,(e=Di())!==u&&nc()!==u?("binary"===r.substr(lo,6).toLowerCase()?(n=r.substr(lo,6),lo+=6):(n=u,0===vo&&Eo(Mr)),n===u&&("master"===r.substr(lo,6).toLowerCase()?(n=r.substr(lo,6),lo+=6):(n=u,0===vo&&Eo(kr))),n!==u&&(s=nc())!==u?("logs"===r.substr(lo,4).toLowerCase()?(o=r.substr(lo,4),lo+=4):(o=u,0===vo&&Eo(Dr)),o!==u?(t,f=n,e={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:"show",suffix:"logs",keyword:f.toLowerCase()}},t=e):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u);var f;t===u&&(t=lo,(e=Di())!==u&&nc()!==u?("binlog"===r.substr(lo,6).toLowerCase()?(n=r.substr(lo,6),lo+=6):(n=u,0===vo&&Eo($r)),n!==u&&(s=nc())!==u?("events"===r.substr(lo,6).toLowerCase()?(o=r.substr(lo,6),lo+=6):(o=u,0===vo&&Eo(Pr)),o!==u&&(a=nc())!==u?((i=Ba())===u&&(i=null),i!==u&&nc()!==u?((l=sa())===u&&(l=null),l!==u&&nc()!==u?((c=ha())===u&&(c=null),c!==u?(t,b=i,v=l,L=c,e={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:"show",suffix:"events",keyword:"binlog",in:b,from:v,limit:L}},t=e):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,(e=Di())!==u&&nc()!==u?(n=lo,"character"===r.substr(lo,9).toLowerCase()?(s=r.substr(lo,9),lo+=9):(s=u,0===vo&&Eo(Lr)),s!==u&&(o=nc())!==u?("set"===r.substr(lo,3).toLowerCase()?(a=r.substr(lo,3),lo+=3):(a=u,0===vo&&Eo(Cr)),a!==u?n=s=[s,o,a]:(lo=n,n=u)):(lo=n,n=u),n===u&&("collation"===r.substr(lo,9).toLowerCase()?(n=r.substr(lo,9),lo+=9):(n=u,0===vo&&Eo(Fr))),n!==u&&(s=nc())!==u?((o=Ya())===u&&(o=Ca()),o===u&&(o=null),o!==u?(t,e=function(r,t){let e=Array.isArray(r)&&r||[r];return{tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:"show",suffix:e[2]&&e[2].toLowerCase(),keyword:e[0].toLowerCase(),expr:t}}}(n,o),t=e):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,(e=Di())!==u&&nc()!==u&&(n=Fi())!==u&&(s=nc())!==u&&(o=Pl())!==u&&(a=nc())!==u&&(i=va())!==u?(t,e=function(r){return{tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:"show",keyword:"create",suffix:"view",view:r}}}(i),t=e):(lo=t,t=u),t===u&&(t=function(){var t,e,n,s;t=lo,(e=Di())!==u&&nc()!==u?("grants"===r.substr(lo,6).toLowerCase()?(n=r.substr(lo,6),lo+=6):(n=u,0===vo&&Eo(Gr)),n!==u&&nc()!==u?((s=function(){var t,e,n,s,o,a,i;t=lo,"for"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(Hr));e!==u&&nc()!==u&&(n=Qa())!==u&&nc()!==u?(s=lo,(o=Fl())!==u&&(a=nc())!==u&&(i=Qa())!==u?s=o=[o,a,i]:(lo=s,s=u),s===u&&(s=null),s!==u&&(o=nc())!==u?((a=function(){var r,t;r=lo,el()!==u&&nc()!==u&&(t=function(){var r,t,e,n,s,o,a,i;if(r=lo,(t=Qa())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=Qa())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=Qa())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,t=jr(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())!==u?(r,r=t):(lo=r,r=u);return r}())===u&&(a=null),a!==u?(t,c=a,e={user:n,host:(l=s)&&l[2],role_list:c},t=e):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u);var l,c;return t}())===u&&(s=null),s!==u?(t,o=s,e={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:"show",keyword:"grants",for:o}},t=e):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u);var o;return t}()))));var b,v,L;return t}())===u&&(t=function(){var t,e,n;t=lo,(e=ol())===u&&(e=function(){var t,e,n,s;t=lo,"describe"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(Kn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="DESCRIBE"):(lo=t,t=u)):(lo=t,t=u);return t}());e!==u&&nc()!==u&&(n=Qa())!==u?(t,s=n,e={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:"desc",table:s}},t=e):(lo=t,t=u);var s;return t}()),t}function To(){var t;return(t=Io())===u&&(t=function(){var r,t,e,n,s,o;r=lo,(t=nc())!==u?((e=Vo())===u&&(e=null),e!==u&&nc()!==u&&Pi()!==u&&nc()!==u&&(n=la())!==u&&nc()!==u&&Vi()!==u&&nc()!==u&&(s=ya())!==u&&nc()!==u?((o=Ca())===u&&(o=null),o!==u?(r,t=function(r,t,e,n){const s={};return t&&t.forEach(r=>{const{db:t,as:e,table:n,join:u}=r,o=u?"select":"update";t&&(s[n]=t),n&&Uc.add(`${o}::${t}::${n}`)}),e&&e.forEach(r=>{if(r.table){const t=Oc(r.table);Uc.add(`update::${s[t]||null}::${t}`)}Mc.add(`update::${r.table}::${r.column}`)}),{tableList:Array.from(Uc),columnList:gc(Mc),ast:{with:r,type:"update",table:t,set:e,where:n}}}(e,n,s,o),r=t):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a,i,l;r=lo,(t=Ra())!==u&&nc()!==u?((e=Yi())===u&&(e=null),e!==u&&nc()!==u?((n=Wi())===u&&(n=null),n!==u&&nc()!==u&&(s=va())!==u&&nc()!==u?((o=Ia())===u&&(o=null),o!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(a=za())!==u&&nc()!==u&&rc()!==u&&nc()!==u&&(i=ma())!==u&&nc()!==u?((l=Na())===u&&(l=null),l!==u?(r,t=function(r,t,e,n,s,u,o,a){if(n&&(Uc.add(`insert::${n.db}::${n.table}`),n.as=null),u){let r=n&&n.table||null;Array.isArray(o)&&o.forEach((r,t)=>{if(r.value.length!=u.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),u.forEach(t=>Mc.add(`insert::${r}::${t}`))}let i=[t,e].filter(r=>r).map(r=>r[0]&&r[0].toLowerCase()).join(" ");return{tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:r,table:[n],columns:u,values:o,partition:s,prefix:i,on_duplicate_update:a}}}(t,e,n,s,o,a,i,l),r=t):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=lo,(t=Ra())!==u&&nc()!==u?((e=Yi())===u&&(e=null),e!==u&&nc()!==u?((n=Wi())===u&&(n=null),n!==u&&nc()!==u&&(s=va())!==u&&nc()!==u?((o=Ia())===u&&(o=null),o!==u&&nc()!==u&&(a=ma())!==u&&nc()!==u?((i=Na())===u&&(i=null),i!==u?(r,t=function(r,t,e,n,s,u,o){n&&(Uc.add(`insert::${n.db}::${n.table}`),Mc.add(`insert::${n.table}::(.*)`),n.as=null);const a=[t,e].filter(r=>r).map(r=>r[0]&&r[0].toLowerCase()).join(" ");return{tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:r,table:[n],columns:null,values:u,partition:s,prefix:a,on_duplicate_update:o}}}(t,e,n,s,o,a,i),r=t):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a;r=lo,(t=Ra())!==u&&nc()!==u?((e=Wi())===u&&(e=null),e!==u&&nc()!==u&&(n=va())!==u&&nc()!==u?((s=Ia())===u&&(s=null),s!==u&&nc()!==u&&Vi()!==u&&nc()!==u&&(o=ya())!==u&&nc()!==u?((a=Na())===u&&(a=null),a!==u?(r,i=t,l=e,f=s,b=o,v=a,(c=n)&&(Uc.add(`insert::${c.db}::${c.table}`),Mc.add(`insert::${c.table}::(.*)`),c.as=null),t={tableList:Array.from(Uc),columnList:gc(Mc),ast:{type:i,table:[c],columns:null,partition:f,prefix:null===l?"":l[0],set:b,on_duplicate_update:v}},r=t):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u);var i,l,c,f,b,v;return r}())===u&&(t=function(){var t,e,n,s,o,a;t=lo,(e=nc())!==u?((n=Vo())===u&&(n=null),n!==u&&nc()!==u&&function(){var t,e,n,s;t=lo,"delete"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(ar));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}()!==u&&nc()!==u?((s=la())===u&&(s=null),s!==u&&nc()!==u&&(o=sa())!==u&&nc()!==u?((a=Ca())===u&&(a=null),a!==u?(t,e=function(r,t,e,n){if(e&&e.forEach(r=>{const{db:t,as:e,table:n,join:s}=r,u=s?"select":"delete";n&&Uc.add(`${u}::${t}::${n}`),s||Mc.add(`delete::${n}::(.*)`)}),null===t&&1===e.length){const r=e[0];t=[{db:r.db,table:r.table,as:r.as,addition:!0}]}return{tableList:Array.from(Uc),columnList:gc(Mc),ast:{with:r,type:"delete",table:t,from:e,where:n}}}(n,s,o,a),t=e):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=yo())===u&&(t=function(){var r,t;r=[],t=cc();for(;t!==u;)r.push(t),t=cc();return r}()),t}function mo(){var t,e;return t=lo,(e=rl())!==u&&nc()!==u&&al()!==u?(t,t=e="union all"):(lo=t,t=u),t===u&&(t=lo,(e=rl())!==u&&(t,e="union"),(t=e)===u&&(t=lo,(e=function(){var t,e,n,s;t=lo,"minus"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(kn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(t,e="minus"),(t=e)===u&&(t=lo,(e=function(){var t,e,n,s;t=lo,"intersect"===r.substr(lo,9).toLowerCase()?(e=r.substr(lo,9),lo+=9):(e=u,0===vo&&Eo(Dn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(t,e="intersect"),t=e))),t}function Io(){var r,t,e,n,s,o,a,i;if(r=lo,(t=Xo())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=mo())!==u&&(a=nc())!==u&&(i=Xo())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=mo())!==u&&(a=nc())!==u&&(i=Xo())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u&&(n=nc())!==u?((s=wa())===u&&(s=null),s!==u&&(o=nc())!==u?((a=ha())===u&&(a=null),a!==u?(r,r=t=function(r,t,e,n){let s=r;for(let r=0;r<t.length;r++)s._next=t[r][3],s.set_op=t[r][1],s=s._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(Uc),columnList:gc(Mc),ast:r}}(t,e,s,a)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)}else lo=r,r=u;return r}function No(){var r,t,e,n;return r=lo,(t=ka())!==u?((e=ul())===u&&(e=ol()),e===u&&(e=null),e!==u?(r,r=t={column:t,order:(n=e)&&n.toLowerCase()||"asc"}):(lo=r,r=u)):(lo=r,r=u),r===u&&(r=function(){var r,t,e;r=lo,(t=Za())!==u&&nc()!==u?((e=ul())===u&&(e=ol()),e===u&&(e=null),e!==u?(r,t=function(r,t){return{column:r,order:t&&t.toLowerCase()||"asc"}}(t,e),r=t):(lo=r,r=u)):(lo=r,r=u);return r}()),r}function Ro(){var t,e;return t=lo,"if"===r.substr(lo,2).toLowerCase()?(e=r.substr(lo,2),lo+=2):(e=u,0===vo&&Eo(c)),e!==u&&nc()!==u&&Ll()!==u&&nc()!==u&&vl()!==u?(t,t=e="IF NOT EXISTS"):(lo=t,t=u),t}function So(){var t;return(t=Oo())===u&&(t=$o())===u&&(t=Po())===u&&(t=function(){var t;(t=function(){var t,e,n,s,o,a;t=lo,(e=Fo())===u&&(e=null);e!==u&&nc()!==u?("primary key"===r.substr(lo,11).toLowerCase()?(n=r.substr(lo,11),lo+=11):(n=u,0===vo&&Eo(rr)),n!==u&&nc()!==u?((s=oa())===u&&(s=null),s!==u&&nc()!==u&&(o=qo())!==u&&nc()!==u?((a=aa())===u&&(a=null),a!==u?(t,l=n,c=s,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:l.toLowerCase(),keyword:i&&i.keyword,index_type:c,resource:"constraint",index_options:b},t=e):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u);var i,l,c,f,b;return t}())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=lo,(t=Fo())===u&&(t=null);t!==u&&nc()!==u&&(e=Kl())!==u&&nc()!==u?((n=Bl())===u&&(n=Wl()),n===u&&(n=null),n!==u&&nc()!==u?((s=ei())===u&&(s=null),s!==u&&nc()!==u?((o=oa())===u&&(o=null),o!==u&&nc()!==u&&(a=qo())!==u&&nc()!==u?((i=aa())===u&&(i=null),i!==u?(r,c=e,f=n,b=s,v=o,L=a,C=i,t={constraint:(l=t)&&l.constraint,definition:L,constraint_type:f&&`${c.toLowerCase()} ${f.toLowerCase()}`||c.toLowerCase(),keyword:l&&l.keyword,index_type:v,index:b,resource:"constraint",index_options:C},r=t):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u);var l,c,f,b,v,L,C;return r}())===u&&(t=function(){var t,e,n,s,o,a;t=lo,(e=Fo())===u&&(e=null);e!==u&&nc()!==u?("foreign key"===r.substr(lo,11).toLowerCase()?(n=r.substr(lo,11),lo+=11):(n=u,0===vo&&Eo(tr)),n!==u&&nc()!==u?((s=ei())===u&&(s=null),s!==u&&nc()!==u&&(o=qo())!==u&&nc()!==u?((a=Go())===u&&(a=null),a!==u?(t,l=n,c=s,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:l,keyword:i&&i.keyword,index:c,resource:"constraint",reference_definition:b},t=e):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u);var i,l,c,f,b;return t}());return t}()),t}function _o(){var t,e,n,s,o,a,i;return t=lo,(e=function(){var t,e;t=lo,(e=function(){var t,e,n,s;t=lo,"not null"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(en));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(t,e={type:"not null",value:"not null"});return t=e}())===u&&(e=yi()),e!==u&&(t,(i=e)&&!i.value&&(i.value="null"),e={nullable:i}),(t=e)===u&&(t=lo,(e=function(){var r,t;r=lo,Mi()!==u&&nc()!==u?((t=hi())===u&&(t=ka()),t!==u?(r,r={type:"default",value:t}):(lo=r,r=u)):(lo=r,r=u);return r}())!==u&&(t,e={default_val:e}),(t=e)===u&&(t=lo,"auto_increment"===r.substr(lo,14).toLowerCase()?(e=r.substr(lo,14),lo+=14):(e=u,0===vo&&Eo(m)),e!==u&&(t,e={auto_increment:e.toLowerCase()}),(t=e)===u&&(t=lo,e=lo,"unique"===r.substr(lo,6).toLowerCase()?(n=r.substr(lo,6),lo+=6):(n=u,0===vo&&Eo(I)),n!==u&&(s=nc())!==u?("key"===r.substr(lo,3).toLowerCase()?(o=r.substr(lo,3),lo+=3):(o=u,0===vo&&Eo(N)),o===u&&(o=null),o!==u?e=n=[n,s,o]:(lo=e,e=u)):(lo=e,e=u),e===u&&(e=lo,"primary"===r.substr(lo,7).toLowerCase()?(n=r.substr(lo,7),lo+=7):(n=u,0===vo&&Eo(R)),n===u&&(n=null),n!==u&&(s=nc())!==u?("key"===r.substr(lo,3).toLowerCase()?(o=r.substr(lo,3),lo+=3):(o=u,0===vo&&Eo(N)),o!==u?e=n=[n,s,o]:(lo=e,e=u)):(lo=e,e=u)),e!==u&&(t,e=function(r){const t=[];return r&&t.push(r[0],r[2]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===u&&(t=lo,(e=oc())!==u&&(t,e={comment:e}),(t=e)===u&&(t=lo,(e=go())!==u&&(t,e={collate:e}),(t=e)===u&&(t=lo,(e=function(){var t,e,n;t=lo,"column_format"===r.substr(lo,13).toLowerCase()?(e=r.substr(lo,13),lo+=13):(e=u,0===vo&&Eo(S));e!==u&&nc()!==u?("fixed"===r.substr(lo,5).toLowerCase()?(n=r.substr(lo,5),lo+=5):(n=u,0===vo&&Eo(_)),n===u&&("dynamic"===r.substr(lo,7).toLowerCase()?(n=r.substr(lo,7),lo+=7):(n=u,0===vo&&Eo(O)),n===u&&("default"===r.substr(lo,7).toLowerCase()?(n=r.substr(lo,7),lo+=7):(n=u,0===vo&&Eo(g)))),n!==u?(t,e={type:"column_format",value:n.toLowerCase()},t=e):(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(t,e={column_format:e}),(t=e)===u&&(t=lo,(e=function(){var t,e,n;t=lo,"storage"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(x));e!==u&&nc()!==u?("disk"===r.substr(lo,4).toLowerCase()?(n=r.substr(lo,4),lo+=4):(n=u,0===vo&&Eo(U)),n===u&&("memory"===r.substr(lo,6).toLowerCase()?(n=r.substr(lo,6),lo+=6):(n=u,0===vo&&Eo(M))),n!==u?(t,e={type:"storage",value:n.toLowerCase()},t=e):(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(t,e={storage:e}),(t=e)===u&&(t=lo,(e=Go())!==u&&(t,e={reference_definition:e}),(t=e)===u&&(t=lo,(e=function(){var t,e,n,s,o,a,i,l;t=lo,(e=Fo())===u&&(e=null);e!==u&&nc()!==u?("check"===r.substr(lo,5).toLowerCase()?(n=r.substr(lo,5),lo+=5):(n=u,0===vo&&Eo(v)),n!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(s=ka())!==u&&nc()!==u&&rc()!==u&&nc()!==u?(o=lo,(a=Ll())===u&&(a=null),a!==u&&(i=nc())!==u?("enforced"===r.substr(lo,8).toLowerCase()?(l=r.substr(lo,8),lo+=8):(l=u,0===vo&&Eo(er)),l!==u?o=a=[a,i,l]:(lo=o,o=u)):(lo=o,o=u),o===u&&(o=null),o!==u?(t,e=function(r,t,e,n){const s=[];return n&&s.push(n[0],n[2]),{constraint_type:t.toLowerCase(),keyword:r&&r.keyword,constraint:r&&r.constraint,definition:[e],enforced:s.filter(r=>r).join(" ").toLowerCase(),resource:"constraint"}}(e,n,s,o),t=e):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(t,e={check:e}),(t=e)===u&&(t=lo,(e=jo())!==u&&(n=nc())!==u?((s=Hl())===u&&(s=null),s!==u&&(o=nc())!==u&&(a=si())!==u?(t,t=e=function(r,t,e){return{character_set:{type:r,value:e,symbol:t}}}(e,s,a)):(lo=t,t=u)):(lo=t,t=u))))))))))),t}function Oo(){var t,e,n,s,o,a,i,l,c;return t=lo,(e=Za())!==u&&nc()!==u&&(n=hc())!==u&&nc()!==u?((s=function(){var t,e,n,s,o,a,i,l;t=lo,e=lo,(n=function(){var t,e,n,s,o;t=lo,e=lo,"generated"===r.substr(lo,9).toLowerCase()?(n=r.substr(lo,9),lo+=9):(n=u,0===vo&&Eo(k));n!==u&&(s=nc())!==u?("always"===r.substr(lo,6).toLowerCase()?(o=r.substr(lo,6),lo+=6):(o=u,0===vo&&Eo(D)),o!==u?e=n=[n,s,o]:(lo=e,e=u)):(lo=e,e=u);e!==u&&(t,e=e.join("").toLowerCase());return t=e}())===u&&(n=null);n!==u&&(s=nc())!==u?("as"===r.substr(lo,2).toLowerCase()?(o=r.substr(lo,2),lo+=2):(o=u,0===vo&&Eo($)),o!==u?e=n=[n,s,o]:(lo=e,e=u)):(lo=e,e=u);if(e!==u)if((n=nc())!==u)if((s=Jl())!==u)if((o=nc())!==u)if((a=hi())===u&&(a=ka()),a!==u)if(nc()!==u)if(rc()!==u)if(nc()!==u){for(i=[],"stored"===r.substr(lo,6).toLowerCase()?(l=r.substr(lo,6),lo+=6):(l=u,0===vo&&Eo(P)),l===u&&("virtual"===r.substr(lo,7).toLowerCase()?(l=r.substr(lo,7),lo+=7):(l=u,0===vo&&Eo(F)));l!==u;)i.push(l),"stored"===r.substr(lo,6).toLowerCase()?(l=r.substr(lo,6),lo+=6):(l=u,0===vo&&Eo(P)),l===u&&("virtual"===r.substr(lo,7).toLowerCase()?(l=r.substr(lo,7),lo+=7):(l=u,0===vo&&Eo(F)));i!==u?(t,c=i,e={type:"generated",expr:a,value:e.filter(r=>"string"==typeof r).join(" ").toLowerCase(),storage_type:c&&c[0]&&c[0].toLowerCase()},t=e):(lo=t,t=u)}else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;var c;return t}())===u&&(s=null),s!==u&&nc()!==u?((o=function(){var r,t,e,n,s,o;if(r=lo,(t=_o())!==u)if(nc()!==u){for(e=[],n=lo,(s=nc())!==u&&(o=_o())!==u?n=s=[s,o]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=_o())!==u?n=s=[s,o]:(lo=n,n=u);e!==u?(r,r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(lo=r,r=u)}else lo=r,r=u;else lo=r,r=u;return r}())===u&&(o=null),o!==u?(t,a=e,i=n,l=s,c=o,Mc.add(`create::${a.table}::${a.column}`),t=e={column:a,definition:i,generated:l,resource:"column",...c||{}}):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t}function go(){var t,e,n;return t=lo,function(){var t,e,n,s;t=lo,"collate"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(pr));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="COLLATE"):(lo=t,t=u)):(lo=t,t=u);return t}()!==u&&nc()!==u?((e=Hl())===u&&(e=null),e!==u&&nc()!==u&&(n=si())!==u?(t,t={type:"collate",symbol:e,value:n}):(lo=t,t=u)):(lo=t,t=u),t}function xo(){var t,e,n;return(t=function(){var r,t,e,n,s;r=lo,(t=jl())!==u&&nc()!==u?((e=Yl())===u&&(e=null),e!==u&&nc()!==u?((n=Ro())===u&&(n=null),n!==u&&nc()!==u&&(s=Oo())!==u?(r,o=e,a=n,i=s,t={action:"add",...i,keyword:o,if_not_exists:a,resource:"column",type:"alter"},r=t):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u);var o,a,i;return r}())===u&&(t=function(){var r,t,e;r=lo,$i()!==u&&nc()!==u?((t=Yl())===u&&(t=null),t!==u&&nc()!==u&&(e=Za())!==u?(r,r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(lo=r,r=u)):(lo=r,r=u);return r}())===u&&(t=function(){var r,t,e;r=lo,(t=jl())!==u&&nc()!==u&&(e=$o())!==u?(r,n=e,t={action:"add",type:"alter",...n},r=t):(lo=r,r=u);var n;return r}())===u&&(t=function(){var r,t,e;r=lo,(t=jl())!==u&&nc()!==u&&(e=Po())!==u?(r,n=e,t={action:"add",type:"alter",...n},r=t):(lo=r,r=u);var n;return r}())===u&&(t=function(){var r,t,e,n,s;r=lo,(t=ji())!==u&&nc()!==u&&Yl()!==u&&nc()!==u&&(e=Za())!==u&&nc()!==u?((n=ki())===u&&(n=Ki()),n===u&&(n=null),n!==u&&nc()!==u&&(s=Za())!==u?(r,a=s,t={action:"rename",type:"alter",resource:"column",keyword:"column",old_column:e,prefix:(o=n)&&o[0].toLowerCase(),column:a},r=t):(lo=r,r=u)):(lo=r,r=u);var o,a;return r}())===u&&(t=function(){var r,t,e,n;r=lo,(t=ji())!==u&&nc()!==u?((e=ki())===u&&(e=Ki()),e===u&&(e=null),e!==u&&nc()!==u&&(n=Qa())!==u?(r,o=n,t={action:"rename",type:"alter",resource:"table",keyword:(s=e)&&s[0].toLowerCase(),table:o},r=t):(lo=r,r=u)):(lo=r,r=u);var s,o;return r}())===u&&(t=Uo())===u&&(t=Mo())===u&&(t=function(){var t,e,n,s,o,a,i,l,c;t=lo,"change"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(q));e!==u&&nc()!==u?((n=Yl())===u&&(n=null),n!==u&&nc()!==u&&(s=Za())!==u&&nc()!==u&&(o=Oo())!==u&&nc()!==u?(a=lo,"first"===r.substr(lo,5).toLowerCase()?(i=r.substr(lo,5),lo+=5):(i=u,0===vo&&Eo(Z)),i===u&&("after"===r.substr(lo,5).toLowerCase()?(i=r.substr(lo,5),lo+=5):(i=u,0===vo&&Eo(z))),i!==u&&(l=nc())!==u&&(c=Za())!==u?a=i=[i,l,c]:(lo=a,a=u),a===u&&(a=null),a!==u?(t,f=n,b=o,v=a,e={action:"change",old_column:s,...b,keyword:f,resource:"column",type:"alter",first_after:v&&{keyword:v[0],column:v[2]}},t=e):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u);var f,b,v;return t}())===u&&(t=lo,(e=Bo())!==u&&(t,(n=e).resource=n.keyword,n[n.keyword]=n.value,delete n.value,e={type:"alter",...n}),t=e),t}function Uo(){var t,e,n,s;return t=lo,"algorithm"===r.substr(lo,9).toLowerCase()?(e=r.substr(lo,9),lo+=9):(e=u,0===vo&&Eo(C)),e!==u&&nc()!==u?((n=Hl())===u&&(n=null),n!==u&&nc()!==u?("default"===r.substr(lo,7).toLowerCase()?(s=r.substr(lo,7),lo+=7):(s=u,0===vo&&Eo(g)),s===u&&("instant"===r.substr(lo,7).toLowerCase()?(s=r.substr(lo,7),lo+=7):(s=u,0===vo&&Eo(j)),s===u&&("inplace"===r.substr(lo,7).toLowerCase()?(s=r.substr(lo,7),lo+=7):(s=u,0===vo&&Eo(Y)),s===u&&("copy"===r.substr(lo,4).toLowerCase()?(s=r.substr(lo,4),lo+=4):(s=u,0===vo&&Eo(B))))),s!==u?(t,t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:s}):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t}function Mo(){var t,e,n,s;return t=lo,"lock"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(W)),e!==u&&nc()!==u?((n=Hl())===u&&(n=null),n!==u&&nc()!==u?("default"===r.substr(lo,7).toLowerCase()?(s=r.substr(lo,7),lo+=7):(s=u,0===vo&&Eo(g)),s===u&&("none"===r.substr(lo,4).toLowerCase()?(s=r.substr(lo,4),lo+=4):(s=u,0===vo&&Eo(X)),s===u&&("shared"===r.substr(lo,6).toLowerCase()?(s=r.substr(lo,6),lo+=6):(s=u,0===vo&&Eo(V)),s===u&&("exclusive"===r.substr(lo,9).toLowerCase()?(s=r.substr(lo,9),lo+=9):(s=u,0===vo&&Eo(K))))),s!==u?(t,t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:s}):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t}function ko(){var t,e,n,s,o,a,i;if(t=lo,(e=ti())!==u)if(nc()!==u)if((n=Jl())!==u)if(nc()!==u){if(s=[],Q.test(r.charAt(lo))?(o=r.charAt(lo),lo++):(o=u,0===vo&&Eo(J)),o!==u)for(;o!==u;)s.push(o),Q.test(r.charAt(lo))?(o=r.charAt(lo),lo++):(o=u,0===vo&&Eo(J));else s=u;s!==u&&(o=nc())!==u&&rc()!==u&&nc()!==u?((a=ul())===u&&(a=ol()),a===u&&(a=null),a!==u?(t,i=a,t=e={type:"column_ref",column:e,suffix:`(${parseInt(s.join(""),10)})`,order_by:i}):(lo=t,t=u)):(lo=t,t=u)}else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;return t===u&&(t=lo,(e=ti())!==u&&nc()!==u?((n=ul())===u&&(n=ol()),n===u&&(n=null),n!==u?(t,t=e=function(r,t){return{type:"column_ref",column:r,order_by:t}}(e,n)):(lo=t,t=u)):(lo=t,t=u)),t}function Do(){var r,t;return r=lo,Jl()!==u&&nc()!==u&&(t=function(){var r,t,e,n,s,o,a,i;if(r=lo,(t=ko())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=ko())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=ko())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,r=t=T(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}())!==u&&nc()!==u&&rc()!==u?(r,r=t):(lo=r,r=u),r}function $o(){var r,t,e,n,s,o,a,i;return r=lo,(t=Bl())===u&&(t=Wl()),t!==u&&nc()!==u?((e=ei())===u&&(e=null),e!==u&&nc()!==u?((n=oa())===u&&(n=null),n!==u&&nc()!==u&&(s=Do())!==u&&nc()!==u?((o=aa())===u&&(o=null),o!==u&&nc()!==u?(r,a=n,i=o,r=t={index:e,definition:s,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u),r}function Po(){var r,t,e,n,s,o,a,i,l;return r=lo,(t=Xl())===u&&(t=Vl()),t!==u&&nc()!==u?((e=Bl())===u&&(e=Wl()),e===u&&(e=null),e!==u&&nc()!==u?((n=ei())===u&&(n=null),n!==u&&nc()!==u&&(s=qo())!==u&&nc()!==u?((o=aa())===u&&(o=null),o!==u&&nc()!==u?(r,a=t,l=o,r=t={index:n,definition:s,keyword:(i=e)&&`${a.toLowerCase()} ${i.toLowerCase()}`||a.toLowerCase(),index_options:l,resource:"index"}):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u),r}function Fo(){var t,e,n,s;return t=lo,(e=function(){var t,e,n,s;t=lo,"constraint"===r.substr(lo,10).toLowerCase()?(e=r.substr(lo,10),lo+=10):(e=u,0===vo&&Eo(gu));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="CONSTRAINT"):(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&nc()!==u?((n=Qa())===u&&(n=null),n!==u?(t,s=n,t=e={keyword:e.toLowerCase(),constraint:s}):(lo=t,t=u)):(lo=t,t=u),t}function Go(){var t,e,n,s,o,a,i,l,c,f,b;return t=lo,(e=function(){var t,e,n,s;t=lo,"references"===r.substr(lo,10).toLowerCase()?(e=r.substr(lo,10),lo+=10):(e=u,0===vo&&Eo(xu));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="REFERENCES"):(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&nc()!==u&&(n=la())!==u&&nc()!==u&&(s=qo())!==u&&nc()!==u?("match full"===r.substr(lo,10).toLowerCase()?(o=r.substr(lo,10),lo+=10):(o=u,0===vo&&Eo(nr)),o===u&&("match partial"===r.substr(lo,13).toLowerCase()?(o=r.substr(lo,13),lo+=13):(o=u,0===vo&&Eo(sr)),o===u&&("match simple"===r.substr(lo,12).toLowerCase()?(o=r.substr(lo,12),lo+=12):(o=u,0===vo&&Eo(ur)))),o===u&&(o=null),o!==u&&nc()!==u?((a=Ho())===u&&(a=null),a!==u&&nc()!==u?((i=Ho())===u&&(i=null),i!==u?(t,l=o,c=a,f=i,t=e={definition:s,table:n,keyword:e.toLowerCase(),match:l&&l.toLowerCase(),on_delete:c,on_update:f}):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,(e=Ho())!==u&&(t,e={[(b=e).type.split(" ").join("_")]:b}),t=e),t}function Ho(){var t,e,n,s,o,a;return t=lo,"on"===r.substr(lo,2).toLowerCase()?(e=r.substr(lo,2),lo+=2):(e=u,0===vo&&Eo(or)),e!==u&&sc()!==u?("delete"===r.substr(lo,6).toLowerCase()?(n=r.substr(lo,6),lo+=6):(n=u,0===vo&&Eo(ar)),n===u&&("update"===r.substr(lo,6).toLowerCase()?(n=r.substr(lo,6),lo+=6):(n=u,0===vo&&Eo(ir))),n!==u&&sc()!==u&&(s=function(){var t,e;t=lo,"restrict"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(lr));e===u&&("cascade"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(cr)),e===u&&("set null"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(fr)),e===u&&("no action"===r.substr(lo,9).toLowerCase()?(e=r.substr(lo,9),lo+=9):(e=u,0===vo&&Eo(br)),e===u&&("set default"===r.substr(lo,11).toLowerCase()?(e=r.substr(lo,11),lo+=11):(e=u,0===vo&&Eo(vr)),e===u&&(e=$l())))));e!==u&&(t,e=e.toLowerCase());return t=e}())!==u?(t,o=n,a=s,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(lo=t,t=u)):(lo=t,t=u),t}function jo(){var t,e,n;return t=lo,"character"===r.substr(lo,9).toLowerCase()?(e=r.substr(lo,9),lo+=9):(e=u,0===vo&&Eo(Lr)),e!==u&&nc()!==u?("set"===r.substr(lo,3).toLowerCase()?(n=r.substr(lo,3),lo+=3):(n=u,0===vo&&Eo(Cr)),n!==u?(t,t=e="CHARACTER SET"):(lo=t,t=u)):(lo=t,t=u),t}function Yo(){var t,e,n,s,o,a,i,l,c;return t=lo,(e=Mi())===u&&(e=null),e!==u&&nc()!==u?((n=jo())===u&&("charset"===r.substr(lo,7).toLowerCase()?(n=r.substr(lo,7),lo+=7):(n=u,0===vo&&Eo(dr)),n===u&&("collate"===r.substr(lo,7).toLowerCase()?(n=r.substr(lo,7),lo+=7):(n=u,0===vo&&Eo(pr)))),n!==u&&nc()!==u?((s=Hl())===u&&(s=null),s!==u&&nc()!==u&&(o=si())!==u?(t,i=n,l=s,c=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:l,value:c}):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t}function Bo(){var t,e,n,s,o,a,i,l,c;return t=lo,"auto_increment"===r.substr(lo,14).toLowerCase()?(e=r.substr(lo,14),lo+=14):(e=u,0===vo&&Eo(m)),e===u&&("avg_row_length"===r.substr(lo,14).toLowerCase()?(e=r.substr(lo,14),lo+=14):(e=u,0===vo&&Eo(wr)),e===u&&("key_block_size"===r.substr(lo,14).toLowerCase()?(e=r.substr(lo,14),lo+=14):(e=u,0===vo&&Eo(Er)),e===u&&("max_rows"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(Ar)),e===u&&("min_rows"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(hr)),e===u&&("stats_sample_pages"===r.substr(lo,18).toLowerCase()?(e=r.substr(lo,18),lo+=18):(e=u,0===vo&&Eo(yr))))))),e!==u&&nc()!==u?((n=Hl())===u&&(n=null),n!==u&&nc()!==u&&(s=Ri())!==u?(t,l=n,c=s,t=e={keyword:e.toLowerCase(),symbol:l,value:c.value}):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=Yo())===u&&(t=lo,(e=ql())===u&&("connection"===r.substr(lo,10).toLowerCase()?(e=r.substr(lo,10),lo+=10):(e=u,0===vo&&Eo(Tr))),e!==u&&nc()!==u?((n=Hl())===u&&(n=null),n!==u&&nc()!==u&&(s=Ti())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,s)):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,"compression"===r.substr(lo,11).toLowerCase()?(e=r.substr(lo,11),lo+=11):(e=u,0===vo&&Eo(mr)),e!==u&&nc()!==u?((n=Hl())===u&&(n=null),n!==u&&nc()!==u?(s=lo,39===r.charCodeAt(lo)?(o="'",lo++):(o=u,0===vo&&Eo(Ir)),o!==u?("zlib"===r.substr(lo,4).toLowerCase()?(a=r.substr(lo,4),lo+=4):(a=u,0===vo&&Eo(Nr)),a===u&&("lz4"===r.substr(lo,3).toLowerCase()?(a=r.substr(lo,3),lo+=3):(a=u,0===vo&&Eo(Rr)),a===u&&("none"===r.substr(lo,4).toLowerCase()?(a=r.substr(lo,4),lo+=4):(a=u,0===vo&&Eo(X)))),a!==u?(39===r.charCodeAt(lo)?(i="'",lo++):(i=u,0===vo&&Eo(Ir)),i!==u?s=o=[o,a,i]:(lo=s,s=u)):(lo=s,s=u)):(lo=s,s=u),s!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,s)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,"engine"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(Sr)),e!==u&&nc()!==u?((n=Hl())===u&&(n=null),n!==u&&nc()!==u&&(s=si())!==u?(t,t=e=_r(e,n,s)):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,"row_format"===r.substr(lo,10).toLowerCase()?(e=r.substr(lo,10),lo+=10):(e=u,0===vo&&Eo(Or)),e!==u&&nc()!==u?((n=Hl())===u&&(n=null),n!==u&&nc()!==u?((s=Mi())===u&&("dynamic"===r.substr(lo,7).toLowerCase()?(s=r.substr(lo,7),lo+=7):(s=u,0===vo&&Eo(O)),s===u&&("fixed"===r.substr(lo,5).toLowerCase()?(s=r.substr(lo,5),lo+=5):(s=u,0===vo&&Eo(_)),s===u&&("compressed"===r.substr(lo,10).toLowerCase()?(s=r.substr(lo,10),lo+=10):(s=u,0===vo&&Eo(gr)),s===u&&("redundant"===r.substr(lo,9).toLowerCase()?(s=r.substr(lo,9),lo+=9):(s=u,0===vo&&Eo(xr)),s===u&&("compact"===r.substr(lo,7).toLowerCase()?(s=r.substr(lo,7),lo+=7):(s=u,0===vo&&Eo(Ur))))))),s!==u?(t,t=e=_r(e,n,s)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u))))),t}function Wo(){var t,e,n,s,o;return t=lo,(e=fa())!==u&&nc()!==u&&(n=function(){var t,e,n;return t=lo,"read"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(Yr)),e!==u&&nc()!==u?("local"===r.substr(lo,5).toLowerCase()?(n=r.substr(lo,5),lo+=5):(n=u,0===vo&&Eo(b)),n===u&&(n=null),n!==u?(t,t=e={type:"read",suffix:n&&"local"}):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,"low_priority"===r.substr(lo,12).toLowerCase()?(e=r.substr(lo,12),lo+=12):(e=u,0===vo&&Eo(Br)),e===u&&(e=null),e!==u&&nc()!==u?("write"===r.substr(lo,5).toLowerCase()?(n=r.substr(lo,5),lo+=5):(n=u,0===vo&&Eo(Wr)),n!==u?(t,t=e={type:"write",prefix:e&&"low_priority"}):(lo=t,t=u)):(lo=t,t=u)),t}())!==u?(t,s=e,o=n,Uc.add(`lock::${s.db}::${s.table}`),t=e={table:s,lock_type:o}):(lo=t,t=u),t}function Xo(){var t,e,n,s,o,a,i;return(t=zo())===u&&(t=lo,e=lo,40===r.charCodeAt(lo)?(n="(",lo++):(n=u,0===vo&&Eo(Xr)),n!==u&&(s=nc())!==u&&(o=Xo())!==u&&(a=nc())!==u?(41===r.charCodeAt(lo)?(i=")",lo++):(i=u,0===vo&&Eo(Vr)),i!==u?e=n=[n,s,o,a,i]:(lo=e,e=u)):(lo=e,e=u),e!==u&&(t,e={...e[2],parentheses_symbol:!0}),t=e),t}function Vo(){var t,e,n,s,o,a,i,l,c;if(t=lo,nl()!==u)if(nc()!==u)if((e=Ko())!==u){for(n=[],s=lo,(o=nc())!==u&&(a=zl())!==u&&(i=nc())!==u&&(l=Ko())!==u?s=o=[o,a,i,l]:(lo=s,s=u);s!==u;)n.push(s),s=lo,(o=nc())!==u&&(a=zl())!==u&&(i=nc())!==u&&(l=Ko())!==u?s=o=[o,a,i,l]:(lo=s,s=u);n!==u?(t,t=T(e,n)):(lo=t,t=u)}else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;return t===u&&(t=lo,nc()!==u&&nl()!==u&&(e=nc())!==u&&(n=function(){var t,e,n,s;t=lo,"RECURSIVE"===r.substr(lo,9)?(e="RECURSIVE",lo+=9):(e=u,0===vo&&Eo(Cn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(s=nc())!==u&&(o=Ko())!==u?(t,(c=o).recursive=!0,t=[c]):(lo=t,t=u)),t}function Ko(){var r,t,e,n,s;return r=lo,(t=Ti())===u&&(t=si()),t!==u&&nc()!==u?((e=qo())===u&&(e=null),e!==u&&nc()!==u&&Ki()!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(n=Io())!==u&&nc()!==u&&rc()!==u?(r,"string"==typeof(s=t)&&(s={type:"default",value:s}),r=t={name:s,stmt:n,columns:e}):(lo=r,r=u)):(lo=r,r=u),r}function qo(){var r,t;return r=lo,Jl()!==u&&nc()!==u&&(t=function(){var r;(r=da())===u&&(r=function(){var r,t,e,n,s,o,a,i;if(r=lo,(t=hi())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=hi())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=hi())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,t=T(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}());return r}())!==u&&nc()!==u&&rc()!==u?(r,r=t):(lo=r,r=u),r}function Zo(){var t,e,n,s;return t=lo,(e=function(){var t,e,n,s,o,a;return t=lo,e=lo,"for"===r.substr(lo,3).toLowerCase()?(n=r.substr(lo,3),lo+=3):(n=u,0===vo&&Eo(Hr)),n!==u&&(s=nc())!==u&&(o=Pi())!==u?e=n=[n,s,o]:(lo=e,e=u),e!==u&&(t,e=`${(a=e)[0]} ${a[2][0]}`),t=e}())===u&&(e=function(){var t,e,n,s,o,a,i,l,c,f;return t=lo,e=lo,"lock"===r.substr(lo,4).toLowerCase()?(n=r.substr(lo,4),lo+=4):(n=u,0===vo&&Eo(W)),n!==u&&(s=nc())!==u?("in"===r.substr(lo,2).toLowerCase()?(o=r.substr(lo,2),lo+=2):(o=u,0===vo&&Eo(Kr)),o!==u&&(a=nc())!==u?("share"===r.substr(lo,5).toLowerCase()?(i=r.substr(lo,5),lo+=5):(i=u,0===vo&&Eo(qr)),i!==u&&(l=nc())!==u?("mode"===r.substr(lo,4).toLowerCase()?(c=r.substr(lo,4),lo+=4):(c=u,0===vo&&Eo(Zr)),c!==u?e=n=[n,s,o,a,i,l,c]:(lo=e,e=u)):(lo=e,e=u)):(lo=e,e=u)):(lo=e,e=u),e!==u&&(t,e=`${(f=e)[0]} ${f[2]} ${f[4]} ${f[6]}`),t=e}()),e!==u&&nc()!==u?((n=function(){var t,e,n,s,o,a,i;return t=lo,e=lo,"wait"===r.substr(lo,4).toLowerCase()?(n=r.substr(lo,4),lo+=4):(n=u,0===vo&&Eo(zr)),n!==u&&(s=nc())!==u&&(o=Ri())!==u?e=n=[n,s,o]:(lo=e,e=u),e!==u&&(t,e=`${(a=e)[0]} ${a[2].value}`),(t=e)===u&&("nowait"===r.substr(lo,6).toLowerCase()?(t=r.substr(lo,6),lo+=6):(t=u,0===vo&&Eo(Qr)),t===u&&(t=lo,e=lo,"skip"===r.substr(lo,4).toLowerCase()?(n=r.substr(lo,4),lo+=4):(n=u,0===vo&&Eo(Jr)),n!==u&&(s=nc())!==u?("locked"===r.substr(lo,6).toLowerCase()?(o=r.substr(lo,6),lo+=6):(o=u,0===vo&&Eo(rt)),o!==u?e=n=[n,s,o]:(lo=e,e=u)):(lo=e,e=u),e!==u&&(t,e=`${(i=e)[0]} ${i[2]}`),t=e)),t}())===u&&(n=null),n!==u?(t,t=e=e+((s=n)?" "+s:"")):(lo=t,t=u)):(lo=t,t=u),t}function zo(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C,d,p;return t=lo,nc()!==u?((e=Vo())===u&&(e=null),e!==u&&nc()!==u&&function(){var t,e,n,s;t=lo,"select"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(fn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}()!==u&&sc()!==u?((n=function(){var r,t,e,n,s,o;if(r=lo,(t=Qo())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=Qo())!==u?n=s=[s,o]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=Qo())!==u?n=s=[s,o]:(lo=n,n=u);e!==u?(r,t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())===u&&(n=null),n!==u&&nc()!==u?((s=il())===u&&(s=null),s!==u&&nc()!==u&&(o=Jo())!==u&&nc()!==u?((a=na())===u&&(a=null),a!==u&&nc()!==u?((i=sa())===u&&(i=null),i!==u&&nc()!==u?((l=na())===u&&(l=null),l!==u&&nc()!==u?((c=Ca())===u&&(c=null),c!==u&&nc()!==u?((f=function(){var t,e,n;t=lo,(e=function(){var t,e,n,s;t=lo,"group"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(Gn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&nc()!==u&&sl()!==u&&nc()!==u&&(n=Oa())!==u?(t,e=n.value,t=e):(lo=t,t=u);return t}())===u&&(f=null),f!==u&&nc()!==u?((b=function(){var t,e;t=lo,function(){var t,e,n,s;t=lo,"having"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(Yn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}()!==u&&nc()!==u&&(e=Da())!==u?(t,t=e):(lo=t,t=u);return t}())===u&&(b=null),b!==u&&nc()!==u?((v=wa())===u&&(v=null),v!==u&&nc()!==u?((L=ha())===u&&(L=null),L!==u&&nc()!==u?((C=Zo())===u&&(C=null),C!==u&&nc()!==u?((d=function(){var t,e,n;t=lo,"window"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(ae));e!==u&&nc()!==u&&(n=function(){var r,t,e,n,s,o,a,i;if(r=lo,(t=fi())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=fi())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=fi())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,t=Sc(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())!==u?(t,t=e={keyword:"window",type:"window",expr:n}):(lo=t,t=u);return t}())===u&&(d=null),d!==u&&nc()!==u?((p=na())===u&&(p=null),p!==u?(t,t=function(r,t,e,n,s,u,o,a,i,l,c,f,b,v,L){if(s&&o||s&&L||o&&L||s&&o&&L)throw new Error("A given SQL statement can contain at most one INTO clause");return u&&u.forEach(r=>r.table&&Uc.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,into:{...s||o||L||{},position:(s?"column":o&&"from")||L&&"end"},from:u,where:a,groupby:i,having:l,orderby:c,limit:f,locking_read:b&&b,window:v}}(e,n,s,o,a,i,l,c,f,b,v,L,C,d,p)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t}function Qo(){var t,e;return t=lo,(e=function(){var t;"sql_calc_found_rows"===r.substr(lo,19).toLowerCase()?(t=r.substr(lo,19),lo+=19):(t=u,0===vo&&Eo(Uu));return t}())===u&&((e=function(){var t;"sql_cache"===r.substr(lo,9).toLowerCase()?(t=r.substr(lo,9),lo+=9):(t=u,0===vo&&Eo(Mu));return t}())===u&&(e=function(){var t;"sql_no_cache"===r.substr(lo,12).toLowerCase()?(t=r.substr(lo,12),lo+=12):(t=u,0===vo&&Eo(ku));return t}()),e===u&&(e=function(){var t;"sql_big_result"===r.substr(lo,14).toLowerCase()?(t=r.substr(lo,14),lo+=14):(t=u,0===vo&&Eo($u));return t}())===u&&(e=function(){var t;"sql_small_result"===r.substr(lo,16).toLowerCase()?(t=r.substr(lo,16),lo+=16):(t=u,0===vo&&Eo(Du));return t}())===u&&(e=function(){var t;"sql_buffer_result"===r.substr(lo,17).toLowerCase()?(t=r.substr(lo,17),lo+=17):(t=u,0===vo&&Eo(Pu));return t}())),e!==u&&(t,e=e),t=e}function Jo(){var r,t,e,n,s,o,a,i,l,c;if(r=lo,(t=al())===u&&(t=lo,(e=Ql())!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t===u&&(t=Ql())),t!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=ta())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=ta())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,l=t,c=e,Mc.add("select::null::(.*)"),r=t=c&&c.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},Sc(l[0],c)):l[0]):(lo=r,r=u)}else lo=r,r=u;if(r===u)if(r=lo,(t=ta())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=ta())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=ta())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,r=t=T(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function ra(){var t,e,n,s,o,a,i;return t=lo,"match"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(at)),e!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(n=da())!==u&&nc()!==u&&rc()!==u&&nc()!==u?("AGAINST"===r.substr(lo,7)?(s="AGAINST",lo+=7):(s=u,0===vo&&Eo(it)),s!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(o=ka())!==u&&nc()!==u?((a=function(){var t,e,n,s,o,a,i;return t=lo,cl()!==u&&nc()!==u?("natural"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(tt)),e!==u&&nc()!==u?("language"===r.substr(lo,8).toLowerCase()?(n=r.substr(lo,8),lo+=8):(n=u,0===vo&&Eo(et)),n!==u&&nc()!==u?("mode"===r.substr(lo,4).toLowerCase()?(s=r.substr(lo,4),lo+=4):(s=u,0===vo&&Eo(Zr)),s!==u&&nc()!==u?("with"===r.substr(lo,4).toLowerCase()?(o=r.substr(lo,4),lo+=4):(o=u,0===vo&&Eo(nt)),o!==u&&nc()!==u?("query"===r.substr(lo,5).toLowerCase()?(a=r.substr(lo,5),lo+=5):(a=u,0===vo&&Eo(st)),a!==u&&nc()!==u?("expansion"===r.substr(lo,9).toLowerCase()?(i=r.substr(lo,9),lo+=9):(i=u,0===vo&&Eo(ut)),i!==u?(t,t={type:"origin",value:"IN NATURAL LANGUAGE MODE WITH QUERY EXPANSION"}):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,cl()!==u&&nc()!==u?("natural"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(tt)),e!==u&&nc()!==u?("language"===r.substr(lo,8).toLowerCase()?(n=r.substr(lo,8),lo+=8):(n=u,0===vo&&Eo(et)),n!==u&&nc()!==u?("mode"===r.substr(lo,4).toLowerCase()?(s=r.substr(lo,4),lo+=4):(s=u,0===vo&&Eo(Zr)),s!==u?(t,t={type:"origin",value:"IN NATURAL LANGUAGE MODE"}):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,cl()!==u&&nc()!==u?("boolean"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(ot)),e!==u&&nc()!==u?("mode"===r.substr(lo,4).toLowerCase()?(n=r.substr(lo,4),lo+=4):(n=u,0===vo&&Eo(Zr)),n!==u?(t,t={type:"origin",value:"IN BOOLEAN MODE"}):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,nl()!==u&&nc()!==u?("query"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(st)),e!==u&&nc()!==u?("expansion"===r.substr(lo,9).toLowerCase()?(n=r.substr(lo,9),lo+=9):(n=u,0===vo&&Eo(ut)),n!==u?(t,t={type:"origin",value:"WITH QUERY EXPANSION"}):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)))),t}())===u&&(a=null),a!==u&&nc()!==u&&rc()!==u&&nc()!==u?((i=ea())===u&&(i=null),i!==u?(t,t=e={against:"against",columns:n,expr:o,match:"match",mode:a,type:"fulltext_search",as:i}):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t}function ta(){var r,t,e,n,s;return r=lo,(t=ra())!==u&&(r,t=function(r){const{as:t,...e}=r;return{expr:e,as:t}}(t)),(r=t)===u&&(r=lo,t=lo,(e=Qa())!==u&&(n=nc())!==u&&(s=Zl())!==u?t=e=[e,n,s]:(lo=t,t=u),t===u&&(t=null),t!==u&&(e=nc())!==u&&(n=Ql())!==u?(r,r=t=function(r){const t=r&&r[0]||null;return Mc.add(`select::${t}::(.*)`),{expr:{type:"column_ref",table:t,column:"*"},as:null}}(t)):(lo=r,r=u),r===u&&(r=lo,(t=fc())!==u&&(r,t={expr:t,as:null}),(r=t)===u&&(r=lo,(t=function(){var r,t,e,n,s,o,a,i;if(r=lo,(t=ka())!==u){if(e=[],n=lo,(s=nc())!==u?((o=Cl())===u&&(o=dl())===u&&(o=ec()),o!==u&&(a=nc())!==u&&(i=ka())!==u?n=s=[s,o,a,i]:(lo=n,n=u)):(lo=n,n=u),n!==u)for(;n!==u;)e.push(n),n=lo,(s=nc())!==u?((o=Cl())===u&&(o=dl())===u&&(o=ec()),o!==u&&(a=nc())!==u&&(i=ka())!==u?n=s=[s,o,a,i]:(lo=n,n=u)):(lo=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=t.length;let n=t[e-1][3];for(let s=e-1;s>=0;s--){const e=0===s?r:t[s-1][3];n=Nc(t[s][1],e,n)}return n}(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())===u&&(t=ka()),t!==u&&(e=nc())!==u?((n=ea())===u&&(n=null),n!==u?(r,r=t={expr:t,as:n}):(lo=r,r=u)):(lo=r,r=u)))),r}function ea(){var r,t,e;return r=lo,(t=Ki())!==u&&nc()!==u&&(e=function(){var r,t;r=lo,(t=si())!==u?(lo,(function(r){if(!0===mc[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return!1}(t)?u:void 0)!==u?(r,r=t=t):(lo=r,r=u)):(lo=r,r=u);r===u&&(r=Ja());return r}())!==u?(r,r=t=e):(lo=r,r=u),r===u&&(r=lo,(t=Ki())===u&&(t=null),t!==u&&nc()!==u&&(e=Qa())!==u?(r,r=t=e):(lo=r,r=u)),r}function na(){var t,e,n;return t=lo,Wi()!==u&&nc()!==u&&(e=function(){var r,t,e,n,s,o,a,l;if(r=lo,(t=Ec())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(l=Ec())!==u?n=s=[s,o,a,l]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(l=Ec())!==u?n=s=[s,o,a,l]:(lo=n,n=u);e!==u?(r,t=i(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())!==u?(t,t={keyword:"var",type:"into",expr:e}):(lo=t,t=u),t===u&&(t=lo,Wi()!==u&&nc()!==u?("outfile"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(lt)),e===u&&("dumpfile"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(ct))),e===u&&(e=null),e!==u&&nc()!==u?((n=Ti())===u&&(n=Qa()),n!==u?(t,t={keyword:e,type:"into",expr:n}):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)),t}function sa(){var r,t;return r=lo,Xi()!==u&&nc()!==u&&(t=la())!==u?(r,r=t):(lo=r,r=u),r}function ua(){var r,t,e;return r=lo,(t=va())!==u&&nc()!==u&&ki()!==u&&nc()!==u&&(e=va())!==u?(r,r=t=[t,e]):(lo=r,r=u),r}function oa(){var t,e;return t=lo,el()!==u&&nc()!==u?("btree"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(ft)),e===u&&("hash"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(bt))),e!==u?(t,t={keyword:"using",type:e.toLowerCase()}):(lo=t,t=u)):(lo=t,t=u),t}function aa(){var r,t,e,n,s,o;if(r=lo,(t=ia())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=ia())!==u?n=s=[s,o]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=ia())!==u?n=s=[s,o]:(lo=n,n=u);e!==u?(r,r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function ia(){var t,e,n,s,o,a;return t=lo,(e=function(){var t,e,n,s;t=lo,"key_block_size"===r.substr(lo,14).toLowerCase()?(e=r.substr(lo,14),lo+=14):(e=u,0===vo&&Eo(Er));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="KEY_BLOCK_SIZE"):(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&nc()!==u?((n=Hl())===u&&(n=null),n!==u&&nc()!==u&&(s=Ri())!==u?(t,o=n,a=s,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=oa())===u&&(t=lo,"with"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(nt)),e!==u&&nc()!==u?("parser"===r.substr(lo,6).toLowerCase()?(n=r.substr(lo,6),lo+=6):(n=u,0===vo&&Eo(vt)),n!==u&&nc()!==u&&(s=si())!==u?(t,t=e={type:"with parser",expr:s}):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,"visible"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(Lt)),e===u&&("invisible"===r.substr(lo,9).toLowerCase()?(e=r.substr(lo,9),lo+=9):(e=u,0===vo&&Eo(Ct))),e!==u&&(t,e=function(r){return{type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===u&&(t=oc()))),t}function la(){var r,t,e,n;if(r=lo,(t=fa())!==u){for(e=[],n=ca();n!==u;)e.push(n),n=ca();e!==u?(r,r=t=dt(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function ca(){var r,t,e;return r=lo,nc()!==u&&(t=zl())!==u&&nc()!==u&&(e=fa())!==u?(r,r=e):(lo=r,r=u),r===u&&(r=lo,nc()!==u&&(t=function(){var r,t,e,n,s,o,a,i,l,c,f;if(r=lo,(t=ba())!==u)if(nc()!==u)if((e=fa())!==u)if(nc()!==u)if((n=el())!==u)if(nc()!==u)if(Jl()!==u)if(nc()!==u)if((s=si())!==u){for(o=[],a=lo,(i=nc())!==u&&(l=zl())!==u&&(c=nc())!==u&&(f=si())!==u?a=i=[i,l,c,f]:(lo=a,a=u);a!==u;)o.push(a),a=lo,(i=nc())!==u&&(l=zl())!==u&&(c=nc())!==u&&(f=si())!==u?a=i=[i,l,c,f]:(lo=a,a=u);o!==u&&(a=nc())!==u&&(i=rc())!==u?(r,b=t,L=s,C=o,(v=e).join=b,v.using=Sc(L,C),r=t=v):(lo=r,r=u)}else lo=r,r=u;else lo=r,r=u;else lo=r,r=u;else lo=r,r=u;else lo=r,r=u;else lo=r,r=u;else lo=r,r=u;else lo=r,r=u;else lo=r,r=u;var b,v,L,C;r===u&&(r=lo,(t=ba())!==u&&nc()!==u&&(e=fa())!==u&&nc()!==u?((n=La())===u&&(n=null),n!==u?(r,t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(lo=r,r=u)):(lo=r,r=u),r===u&&(r=lo,(t=ba())!==u&&nc()!==u&&(e=Jl())!==u&&nc()!==u&&(n=Io())!==u&&nc()!==u&&rc()!==u&&nc()!==u?((s=ea())===u&&(s=null),s!==u&&(o=nc())!==u?((a=La())===u&&(a=null),a!==u?(r,t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,s,a),r=t):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)));return r}())!==u?(r,r=t):(lo=r,r=u)),r}function fa(){var t,e,n,s,o,a;return t=lo,(e=function(){var t;"dual"===r.substr(lo,4).toLowerCase()?(t=r.substr(lo,4),lo+=4):(t=u,0===vo&&Eo(mu));return t}())!==u&&(t,e={type:"dual"}),(t=e)===u&&(t=lo,(e=va())!==u&&nc()!==u?((n=ea())===u&&(n=null),n!==u?(t,a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,(e=Jl())!==u&&nc()!==u&&(n=va())!==u&&nc()!==u&&rc()!==u&&nc()!==u?((s=ea())===u&&(s=null),s!==u?(t,t=e=function(r,t,e){return"var"===r.type?(r.as=e,r.parentheses=!0,r):{db:r.db,table:r.table,as:e,parentheses:!0}}(n,0,s)):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,(e=Sa())!==u&&nc()!==u?((n=ea())===u&&(n=null),n!==u?(t,t=e=function(r,t){return{expr:{type:"values",values:r,prefix:"row"},as:t}}(e,n)):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,(e=Jl())!==u&&nc()!==u?((n=Io())===u&&(n=Sa()),n!==u&&nc()!==u&&rc()!==u&&nc()!==u?((s=ea())===u&&(s=null),s!==u?(t,t=e=function(r,t){return Array.isArray(r)&&(r={type:"values",values:r,prefix:"row"}),r.parentheses=!0,{expr:r,as:t}}(n,s)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u))))),t}function ba(){var t,e,n,s;return t=lo,(e=function(){var t,e,n,s;t=lo,"left"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(Rn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(n=nc())!==u?((s=Ji())===u&&(s=null),s!==u&&nc()!==u&&Qi()!==u?(t,t=e="LEFT JOIN"):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,(e=function(){var t,e,n,s;t=lo,"right"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(Sn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(n=nc())!==u?((s=Ji())===u&&(s=null),s!==u&&nc()!==u&&Qi()!==u?(t,t=e="RIGHT JOIN"):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,(e=function(){var t,e,n,s;t=lo,"full"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(_n));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(n=nc())!==u?((s=Ji())===u&&(s=null),s!==u&&nc()!==u&&Qi()!==u?(t,t=e="FULL JOIN"):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,(e=function(){var t,e,n,s;t=lo,"cross"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(gn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(n=nc())!==u&&(s=Qi())!==u?(t,t=e="CROSS JOIN"):(lo=t,t=u),t===u&&(t=lo,e=lo,(n=function(){var t,e,n,s;t=lo,"inner"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(On));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(s=nc())!==u?e=n=[n,s]:(lo=e,e=u),e===u&&(e=null),e!==u&&(n=Qi())!==u?(t,t=e="INNER JOIN"):(lo=t,t=u))))),t}function va(){var r,t,e,n,s,o,a,i;return r=lo,(t=Qa())!==u?(e=lo,(n=nc())!==u&&(s=Zl())!==u&&(o=nc())!==u&&(a=Qa())!==u?e=n=[n,s,o,a]:(lo=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(lo=r,r=u)):(lo=r,r=u),r===u&&(r=lo,(t=Ec())!==u&&(r,(i=t).db=null,i.table=i.name,t=i),r=t),r}function La(){var r,t;return r=lo,zi()!==u&&nc()!==u&&(t=Da())!==u?(r,r=t):(lo=r,r=u),r}function Ca(){var t,e;return t=lo,function(){var t,e,n,s;t=lo,"where"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(Fn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}()!==u&&nc()!==u&&(e=Da())!==u?(t,t=e):(lo=t,t=u),t}function da(){var r,t,e,n,s,o,a,i;if(r=lo,(t=Za())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=Za())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=Za())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,r=t=T(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function pa(){var r,t;return r=lo,Bi()!==u&&nc()!==u&&sl()!==u&&nc()!==u&&(t=Jo())!==u?(r,r=t):(lo=r,r=u),r}function wa(){var t,e;return t=lo,function(){var t,e,n,s;t=lo,"order"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(jn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}()!==u&&nc()!==u&&sl()!==u&&nc()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=lo,(t=Ea())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=Ea())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=Ea())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,t=T(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())!==u?(t,t=e):(lo=t,t=u),t}function Ea(){var r,t,e;return r=lo,(t=ka())!==u&&nc()!==u?((e=ol())===u&&(e=ul()),e===u&&(e=null),e!==u?(r,r=t=function(r,t){const e={expr:r,type:"ASC"};return"DESC"===t&&(e.type="DESC"),e}(t,e)):(lo=r,r=u)):(lo=r,r=u),r}function Aa(){var t,e;return(t=Ri())===u&&(t=ii())===u&&(t=lo,63===r.charCodeAt(lo)?(e="?",lo++):(e=u,0===vo&&Eo(pt)),e!==u&&(t,e={type:"origin",value:"?"}),t=e),t}function ha(){var t,e,n,s,o,a;return t=lo,function(){var t,e,n,s;t=lo,"limit"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(Bn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}()!==u&&nc()!==u&&(e=Aa())!==u&&nc()!==u?(n=lo,(s=zl())===u&&(s=function(){var t,e,n,s;t=lo,"offset"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(Wn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="OFFSET"):(lo=t,t=u)):(lo=t,t=u);return t}()),s!==u&&(o=nc())!==u&&(a=Aa())!==u?n=s=[s,o,a]:(lo=n,n=u),n===u&&(n=null),n!==u?(t,t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(lo=t,t=u)):(lo=t,t=u),t}function ya(){var r,t,e,n,s,o,a,i;if(r=lo,(t=Ta())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=Ta())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=Ta())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,r=t=T(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function Ta(){var t,e,n,s,o,a,i,l,c;return t=lo,e=lo,(n=Qa())!==u&&(s=nc())!==u&&(o=Zl())!==u?e=n=[n,s,o]:(lo=e,e=u),e===u&&(e=null),e!==u&&(n=nc())!==u&&(s=ei())!==u&&(o=nc())!==u?(61===r.charCodeAt(lo)?(a="=",lo++):(a=u,0===vo&&Eo(wt)),a!==u&&nc()!==u&&(i=Wa())!==u?(t,t=e={column:s,value:i,table:(c=e)&&c[0]}):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,e=lo,(n=Qa())!==u&&(s=nc())!==u&&(o=Zl())!==u?e=n=[n,s,o]:(lo=e,e=u),e===u&&(e=null),e!==u&&(n=nc())!==u&&(s=ei())!==u&&(o=nc())!==u?(61===r.charCodeAt(lo)?(a="=",lo++):(a=u,0===vo&&Eo(wt)),a!==u&&nc()!==u&&(i=tl())!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(l=Za())!==u&&nc()!==u&&rc()!==u?(t,t=e=function(r,t,e){return{column:t,value:e,table:r&&r[0],keyword:"values"}}(e,s,l)):(lo=t,t=u)):(lo=t,t=u)),t}function ma(){var r;return(r=Sa())===u&&(r=zo()),r}function Ia(){var r,t,e,n,s,o,a,i,l;if(r=lo,Bi()!==u)if(nc()!==u)if((t=Jl())!==u)if(nc()!==u)if((e=si())!==u){for(n=[],s=lo,(o=nc())!==u&&(a=zl())!==u&&(i=nc())!==u&&(l=si())!==u?s=o=[o,a,i,l]:(lo=s,s=u);s!==u;)n.push(s),s=lo,(o=nc())!==u&&(a=zl())!==u&&(i=nc())!==u&&(l=si())!==u?s=o=[o,a,i,l]:(lo=s,s=u);n!==u&&(s=nc())!==u&&(o=rc())!==u?(r,r=Sc(e,n)):(lo=r,r=u)}else lo=r,r=u;else lo=r,r=u;else lo=r,r=u;else lo=r,r=u;else lo=r,r=u;return r===u&&(r=lo,Bi()!==u&&nc()!==u&&(t=_a())!==u?(r,r=t):(lo=r,r=u)),r}function Na(){var t,e,n;return t=lo,zi()!==u&&nc()!==u?("duplicate"===r.substr(lo,9).toLowerCase()?(e=r.substr(lo,9),lo+=9):(e=u,0===vo&&Eo(Et)),e!==u&&nc()!==u&&Wl()!==u&&nc()!==u&&Pi()!==u&&nc()!==u&&(n=ya())!==u?(t,t={keyword:"on duplicate key update",set:n}):(lo=t,t=u)):(lo=t,t=u),t}function Ra(){var t,e;return t=lo,(e=function(){var t,e,n,s;t=lo,"insert"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(Ln));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(t,e="insert"),(t=e)===u&&(t=lo,(e=Hi())!==u&&(t,e="replace"),t=e),t}function Sa(){var r,t;return r=lo,tl()!==u&&nc()!==u&&(t=function(){var r,t,e,n,s,o,a,i;if(r=lo,(t=_a())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=_a())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=_a())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,t=T(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())!==u?(r,r=t):(lo=r,r=u),r}function _a(){var t,e,n;return t=lo,"row"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(At)),e===u&&(e=null),e!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(n=Oa())!==u&&nc()!==u&&rc()!==u?(t,t=e=n):(lo=t,t=u),t}function Oa(){var r,t,e,n,s,o,a,i;if(r=lo,(t=ka())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=ka())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=ka())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,r=t=function(r,t){const e={type:"expr_list"};return e.value=Sc(r,t),e}(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function ga(){var t,e,n;return t=lo,function(){var t,e,n,s;t=lo,"interval"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(Vs));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="INTERVAL"):(lo=t,t=u)):(lo=t,t=u);return t}()!==u&&nc()!==u&&(e=ka())!==u&&nc()!==u&&(n=function(){var t;(t=function(){var t,e,n,s;t=lo,"year"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(Ks));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="YEAR"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=lo,"month"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(qs));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="MONTH"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=lo,"week"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(Zs));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="WEEK"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=lo,"day"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(zs));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="DAY"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=lo,"hour"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(Qs));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="HOUR"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=lo,"minute"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(Js));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="MINUTE"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=lo,"second"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(ru));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="SECOND"):(lo=t,t=u)):(lo=t,t=u);return t}());return t}())!==u?(t,t={type:"interval",expr:e,unit:n.toLowerCase()}):(lo=t,t=u),t}function xa(){var r,t,e,n,s,o;if(r=lo,(t=Ua())!==u)if(nc()!==u){for(e=[],n=lo,(s=nc())!==u&&(o=Ua())!==u?n=s=[s,o]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=Ua())!==u?n=s=[s,o]:(lo=n,n=u);e!==u?(r,r=t=l(t,e)):(lo=r,r=u)}else lo=r,r=u;else lo=r,r=u;return r}function Ua(){var t,e,n;return t=lo,function(){var t,e,n,s;t=lo,"when"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(Ls));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}()!==u&&nc()!==u&&(e=Da())!==u&&nc()!==u&&function(){var t,e,n,s;t=lo,"then"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(Cs));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}()!==u&&nc()!==u&&(n=ka())!==u?(t,t={type:"when",cond:e,result:n}):(lo=t,t=u),t}function Ma(){var t,e;return t=lo,function(){var t,e,n,s;t=lo,"else"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(ds));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}()!==u&&nc()!==u&&(e=ka())!==u?(t,t={type:"else",result:e}):(lo=t,t=u),t}function ka(){var r;return(r=function(){var r,t,e,n,s,o,a,i;if(r=lo,(t=qa())!==u){if(e=[],n=lo,(s=nc())!==u&&(o=ec())!==u&&(a=nc())!==u&&(i=qa())!==u?n=s=[s,o,a,i]:(lo=n,n=u),n!==u)for(;n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=ec())!==u&&(a=nc())!==u&&(i=qa())!==u?n=s=[s,o,a,i]:(lo=n,n=u);else e=u;e!==u&&(n=nc())!==u?((s=Ga())===u&&(s=null),s!==u?(r,t=function(r,t,e){const n=_c(r,t);return null===e?n:"arithmetic"===e.type?_c(n,e.tail):Nc(e.op,n,e.right)}(t,e,s),r=t):(lo=r,r=u)):(lo=r,r=u)}else lo=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o,a,i;if(r=lo,(t=$a())!==u){for(e=[],n=lo,(s=sc())!==u&&(o=dl())!==u&&(a=nc())!==u&&(i=$a())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=sc())!==u&&(o=dl())!==u&&(a=nc())!==u&&(i=$a())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,t=ht(t,e),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o;if(r=lo,(t=Xa())!==u){if(e=[],n=lo,(s=nc())!==u&&(o=qa())!==u?n=s=[s,o]:(lo=n,n=u),n!==u)for(;n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=qa())!==u?n=s=[s,o]:(lo=n,n=u);else e=u;e!==u?(r,t=Ic(t,e[0][1]),r=t):(lo=r,r=u)}else lo=r,r=u;return r}())===u&&(r=Io()),r}function Da(){var r,t,e,n,s,o,a,i;if(r=lo,(t=ka())!==u){for(e=[],n=lo,(s=nc())!==u?((o=Cl())===u&&(o=dl())===u&&(o=zl()),o!==u&&(a=nc())!==u&&(i=ka())!==u?n=s=[s,o,a,i]:(lo=n,n=u)):(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u?((o=Cl())===u&&(o=dl())===u&&(o=zl()),o!==u&&(a=nc())!==u&&(i=ka())!==u?n=s=[s,o,a,i]:(lo=n,n=u)):(lo=n,n=u);e!==u?(r,r=t=function(r,t){const e=t.length;let n=r,s="";for(let r=0;r<e;++r)","===t[r][1]?(s=",",Array.isArray(n)||(n=[n]),n.push(t[r][3])):n=Nc(t[r][1],n,t[r][3]);if(","===s){const r={type:"expr_list"};return r.value=n,r}return n}(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function $a(){var r,t,e,n,s,o,a,i;if(r=lo,(t=Pa())!==u){for(e=[],n=lo,(s=sc())!==u&&(o=Cl())!==u&&(a=nc())!==u&&(i=Pa())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=sc())!==u&&(o=Cl())!==u&&(a=nc())!==u&&(i=Pa())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,r=t=ht(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function Pa(){var t,e,n,s,o;return(t=Fa())===u&&(t=function(){var r,t,e;r=lo,(t=function(){var r,t,e,n,s;r=lo,t=lo,(e=Ll())!==u&&(n=nc())!==u&&(s=vl())!==u?t=e=[e,n,s]:(lo=t,t=u);t!==u&&(r,t=Tt(t));(r=t)===u&&(r=vl());return r}())!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(e=Io())!==u&&nc()!==u&&rc()!==u?(r,n=t,(s=e).parentheses=!0,t=Ic(n,s),r=t):(lo=r,r=u);var n,s;return r}())===u&&(t=lo,(e=Ll())===u&&(e=lo,33===r.charCodeAt(lo)?(n="!",lo++):(n=u,0===vo&&Eo(yt)),n!==u?(s=lo,vo++,61===r.charCodeAt(lo)?(o="=",lo++):(o=u,0===vo&&Eo(wt)),vo--,o===u?s=void 0:(lo=s,s=u),s!==u?e=n=[n,s]:(lo=e,e=u)):(lo=e,e=u)),e!==u&&(n=nc())!==u&&(s=Pa())!==u?(t,t=e=Ic("NOT",s)):(lo=t,t=u)),t}function Fa(){var r,t,e,n,s;return r=lo,(t=Wa())!==u&&nc()!==u?((e=Ga())===u&&(e=null),e!==u?(r,n=t,r=t=null===(s=e)?n:"arithmetic"===s.type?_c(n,s.tail):Nc(s.op,n,s.right)):(lo=r,r=u)):(lo=r,r=u),r===u&&(r=Ti())===u&&(r=Za()),r}function Ga(){var t;return(t=function(){var r,t,e,n,s,o,a;r=lo,t=[],e=lo,(n=nc())!==u&&(s=Ha())!==u&&(o=nc())!==u&&(a=Wa())!==u?e=n=[n,s,o,a]:(lo=e,e=u);if(e!==u)for(;e!==u;)t.push(e),e=lo,(n=nc())!==u&&(s=Ha())!==u&&(o=nc())!==u&&(a=Wa())!==u?e=n=[n,s,o,a]:(lo=e,e=u);else t=u;t!==u&&(r,t={type:"arithmetic",tail:t});return r=t}())===u&&(t=Ba())===u&&(t=function(){var r,t,e,n;r=lo,(t=function(){var r,t,e,n,s;r=lo,t=lo,(e=Ll())!==u&&(n=nc())!==u&&(s=ll())!==u?t=e=[e,n,s]:(lo=t,t=u);t!==u&&(r,t=Tt(t));(r=t)===u&&(r=ll());return r}())!==u&&nc()!==u&&(e=Wa())!==u&&nc()!==u&&Cl()!==u&&nc()!==u&&(n=Wa())!==u?(r,r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(lo=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s;r=lo,(t=fl())!==u&&(e=nc())!==u&&(n=Wa())!==u?(r,r=t={op:"IS",right:n}):(lo=r,r=u);r===u&&(r=lo,t=lo,(e=fl())!==u&&(n=nc())!==u&&(s=Ll())!==u?t=e=[e,n,s]:(lo=t,t=u),t!==u&&(e=nc())!==u&&(n=Wa())!==u?(r,t=function(r){return{op:"IS NOT",right:r}}(n),r=t):(lo=r,r=u));return r}())===u&&(t=Ya())===u&&(t=function(){var t,e,n,s;t=lo,(e=function(){var t,e,n;t=lo,(e=Ll())===u&&(e=null);e!==u&&nc()!==u?((n=function(){var t,e,n,s;t=lo,"regexp"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(ts));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="REGEXP"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=lo,"rlike"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(rs));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="RLIKE"):(lo=t,t=u)):(lo=t,t=u);return t}()),n!==u?(t,o=n,t=e=(s=e)?`${s} ${o}`:o):(lo=t,t=u)):(lo=t,t=u);var s,o;return t}())!==u&&nc()!==u?("binary"===r.substr(lo,6).toLowerCase()?(n=r.substr(lo,6),lo+=6):(n=u,0===vo&&Eo(Mr)),n===u&&(n=null),n!==u&&nc()!==u?((s=Ei())===u&&(s=Ti())===u&&(s=Za()),s!==u?(t,o=e,t=e={op:(a=n)?`${o} ${a}`:o,right:s}):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u);var o,a;return t}()),t}function Ha(){var t;return">="===r.substr(lo,2)?(t=">=",lo+=2):(t=u,0===vo&&Eo(mt)),t===u&&(62===r.charCodeAt(lo)?(t=">",lo++):(t=u,0===vo&&Eo(It)),t===u&&("<="===r.substr(lo,2)?(t="<=",lo+=2):(t=u,0===vo&&Eo(Nt)),t===u&&("<>"===r.substr(lo,2)?(t="<>",lo+=2):(t=u,0===vo&&Eo(Rt)),t===u&&(60===r.charCodeAt(lo)?(t="<",lo++):(t=u,0===vo&&Eo(St)),t===u&&(61===r.charCodeAt(lo)?(t="=",lo++):(t=u,0===vo&&Eo(wt)),t===u&&("!="===r.substr(lo,2)?(t="!=",lo+=2):(t=u,0===vo&&Eo(_t)))))))),t}function ja(){var r,t,e,n,s;return r=lo,t=lo,(e=Ll())!==u&&(n=nc())!==u&&(s=cl())!==u?t=e=[e,n,s]:(lo=t,t=u),t!==u&&(r,t=Tt(t)),(r=t)===u&&(r=cl()),r}function Ya(){var r,t,e;return r=lo,(t=function(){var r,t,e,n,s;return r=lo,t=lo,(e=Ll())!==u&&(n=nc())!==u&&(s=bl())!==u?t=e=[e,n,s]:(lo=t,t=u),t!==u&&(r,t=Tt(t)),(r=t)===u&&(r=bl()),r}())!==u&&nc()!==u?((e=hi())===u&&(e=Fa()),e!==u?(r,r=t={op:t,right:e}):(lo=r,r=u)):(lo=r,r=u),r}function Ba(){var r,t,e,n;return r=lo,(t=ja())!==u&&nc()!==u&&(e=Jl())!==u&&nc()!==u&&(n=Oa())!==u&&nc()!==u&&rc()!==u?(r,r=t={op:t,right:n}):(lo=r,r=u),r===u&&(r=lo,(t=ja())!==u&&nc()!==u?((e=Ec())===u&&(e=Za())===u&&(e=Ti()),e!==u?(r,r=t=function(r,t){return{op:r,right:t}}(t,e)):(lo=r,r=u)):(lo=r,r=u)),r}function Wa(){var r,t,e,n,s,o,a,i;if(r=lo,(t=Va())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=Xa())!==u&&(a=nc())!==u&&(i=Va())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=Xa())!==u&&(a=nc())!==u&&(i=Va())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,r=t=ht(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function Xa(){var t;return 43===r.charCodeAt(lo)?(t="+",lo++):(t=u,0===vo&&Eo(Ot)),t===u&&(45===r.charCodeAt(lo)?(t="-",lo++):(t=u,0===vo&&Eo(gt)),t===u&&(126===r.charCodeAt(lo)?(t="~",lo++):(t=u,0===vo&&Eo(xt)))),t}function Va(){var r,t,e,n,s,o,a,i;if(r=lo,(t=qa())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=Ka())!==u&&(a=nc())!==u&&(i=qa())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=Ka())!==u&&(a=nc())!==u&&(i=qa())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,r=t=_c(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function Ka(){var t,e;return 42===r.charCodeAt(lo)?(t="*",lo++):(t=u,0===vo&&Eo(Ut)),t===u&&(47===r.charCodeAt(lo)?(t="/",lo++):(t=u,0===vo&&Eo(Mt)),t===u&&(37===r.charCodeAt(lo)?(t="%",lo++):(t=u,0===vo&&Eo(kt)),t===u&&(t=lo,"div"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(Dt)),e!==u&&(t,e="DIV"),(t=e)===u&&(38===r.charCodeAt(lo)?(t="&",lo++):(t=u,0===vo&&Eo($t)),t===u&&(">>"===r.substr(lo,2)?(t=">>",lo+=2):(t=u,0===vo&&Eo(Pt)),t===u&&("<<"===r.substr(lo,2)?(t="<<",lo+=2):(t=u,0===vo&&Eo(Ft)),t===u&&(94===r.charCodeAt(lo)?(t="^",lo++):(t=u,0===vo&&Eo(Gt)),t===u&&(124===r.charCodeAt(lo)?(t="|",lo++):(t=u,0===vo&&Eo(Ht)),t===u&&(126===r.charCodeAt(lo)?(t="~",lo++):(t=u,0===vo&&Eo(xt))))))))))),t}function qa(){var t,e,n,s;return(t=function(){var t,e,n,s,o,a,i;t=lo,(e=El())!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(n=ka())!==u&&nc()!==u&&Ki()!==u&&nc()!==u&&(s=yc())!==u&&nc()!==u&&(o=jo())!==u&&nc()!==u&&(a=si())!==u&&nc()!==u&&rc()!==u&&nc()!==u?((i=go())===u&&(i=null),i!==u?(t,e=function(r,t,e,n,s,u){const{dataType:o,length:a}=e;let i=o;return void 0!==a&&(i=`${i}(${a})`),{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:`${i} ${n} ${s.toUpperCase()}`},collate:u}}(e,n,s,o,a,i),t=e):(lo=t,t=u)):(lo=t,t=u);t===u&&(t=lo,(e=El())!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(n=ka())!==u&&nc()!==u&&Ki()!==u&&nc()!==u&&(s=hc())!==u&&nc()!==u&&(o=rc())!==u?(t,l=n,c=s,e={type:"cast",keyword:e.toLowerCase(),expr:l,target:c},t=e):(lo=t,t=u),t===u&&(t=lo,(e=El())!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(n=ka())!==u&&nc()!==u&&Ki()!==u&&nc()!==u&&(s=Tl())!==u&&nc()!==u&&(o=Jl())!==u&&nc()!==u&&(a=Si())!==u&&nc()!==u&&rc()!==u&&nc()!==u&&(i=rc())!==u?(t,e=function(r,t,e){return{type:"cast",keyword:r.toLowerCase(),expr:t,target:{dataType:"DECIMAL("+e+")"}}}(e,n,a),t=e):(lo=t,t=u),t===u&&(t=lo,(e=El())!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(n=ka())!==u&&nc()!==u&&Ki()!==u&&nc()!==u&&(s=Tl())!==u&&nc()!==u&&(o=Jl())!==u&&nc()!==u&&(a=Si())!==u&&nc()!==u&&zl()!==u&&nc()!==u&&(i=Si())!==u&&nc()!==u&&rc()!==u&&nc()!==u&&rc()!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,target:{dataType:"DECIMAL("+e+", "+n+")"}}}(e,n,a,i),t=e):(lo=t,t=u),t===u&&(t=lo,(e=El())!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(n=ka())!==u&&nc()!==u&&Ki()!==u&&nc()!==u&&(s=function(){var t;(t=function(){var t,e,n,s;t=lo,"signed"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(Ts));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="SIGNED"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=ml());return t}())!==u&&nc()!==u?((o=Nl())===u&&(o=null),o!==u&&nc()!==u&&(a=rc())!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,target:{dataType:e+(n?" "+n:"")}}}(e,n,s,o),t=e):(lo=t,t=u)):(lo=t,t=u)))));var l,c;return t}())===u&&(t=hi())===u&&(t=ra())===u&&(t=function(){var t;(t=function(){var t,e,n,s;t=lo,(e=function(){var t,e,n,s;t=lo,"count"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(os));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="COUNT"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(e=function(){var t,e,n,s;t=lo,"group_concat"===r.substr(lo,12).toLowerCase()?(e=r.substr(lo,12),lo+=12):(e=u,0===vo&&Eo(as));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="GROUP_CONCAT"):(lo=t,t=u)):(lo=t,t=u);return t}());e!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(n=function(){var t,e,n,s,o,a,i;t=lo,(e=function(){var t,e;t=lo,42===r.charCodeAt(lo)?(e="*",lo++):(e=u,0===vo&&Eo(Ut));e!==u&&(t,e={type:"star",value:"*"});return t=e}())!==u&&(t,e={expr:e});(t=e)===u&&(t=lo,(e=il())===u&&(e=null),e!==u&&nc()!==u&&(n=Jl())!==u&&nc()!==u&&(s=ka())!==u&&nc()!==u&&(o=rc())!==u&&nc()!==u?((a=wa())===u&&(a=null),a!==u&&nc()!==u?((i=pi())===u&&(i=null),i!==u?(t,t=e={distinct:e,expr:s,orderby:a,parentheses:!0,separator:i}):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,(e=il())===u&&(e=null),e!==u&&nc()!==u&&(n=ka())!==u&&nc()!==u?((s=wa())===u&&(s=null),s!==u&&nc()!==u?((o=pi())===u&&(o=null),o!==u?(t,e=function(r,t,e,n){return{distinct:r,expr:t,orderby:e,separator:n}}(e,n,s,o),t=e):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u)));return t}())!==u&&nc()!==u&&rc()!==u&&nc()!==u?((s=ci())===u&&(s=null),s!==u?(t,t=e={type:"aggr_func",name:e,args:n,over:s}):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=lo,(e=function(){var t;(t=function(){var t,e,n,s;t=lo,"sum"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(cs));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="SUM"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=lo,"max"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(is));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="MAX"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=lo,"min"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(ls));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="MIN"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=lo,"avg"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(fs));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="AVG"):(lo=t,t=u)):(lo=t,t=u);return t}());return t}())!==u&&nc()!==u&&Jl()!==u&&nc()!==u&&(n=Wa())!==u&&nc()!==u&&rc()!==u&&nc()!==u?((s=ci())===u&&(s=null),s!==u?(t,t=e={type:"aggr_func",name:e,args:{expr:n},over:s}):(lo=t,t=u)):(lo=t,t=u);return t}());return t}())===u&&(t=Ei())===u&&(t=function(){var r,t,e,n,s,o,a,i;return r=lo,pl()!==u&&nc()!==u&&(t=xa())!==u&&nc()!==u?((e=Ma())===u&&(e=null),e!==u&&nc()!==u&&(n=wl())!==u&&nc()!==u?((s=pl())===u&&(s=null),s!==u?(r,a=t,(i=e)&&a.push(i),r={type:"case",expr:null,args:a}):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u),r===u&&(r=lo,pl()!==u&&nc()!==u&&(t=ka())!==u&&nc()!==u&&(e=xa())!==u&&nc()!==u?((n=Ma())===u&&(n=null),n!==u&&nc()!==u&&(s=wl())!==u&&nc()!==u?((o=pl())===u&&(o=null),o!==u?(r,r=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(t,e,n)):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u)),r}())===u&&(t=ga())===u&&(t=Za())===u&&(t=ii())===u&&(t=lo,Jl()!==u&&(e=nc())!==u&&(n=Da())!==u&&nc()!==u&&rc()!==u?(t,(s=n).parentheses=!0,t=s):(lo=t,t=u),t===u&&(t=Ec())===u&&(t=lo,nc()!==u?(63===r.charCodeAt(lo)?(e="?",lo++):(e=u,0===vo&&Eo(pt)),e!==u?(t,t={type:"origin",value:e}):(lo=t,t=u)):(lo=t,t=u))),t}function Za(){var r,t,e,n,s;return r=lo,(t=si())===u&&(t=ri()),t!==u&&nc()!==u&&Zl()!==u&&nc()!==u&&(e=ti())!==u?(r,n=t,s=e,Mc.add(`select::${n}::${s}`),r=t={type:"column_ref",table:n,column:s}):(lo=r,r=u),r===u&&(r=lo,(t=ei())!==u&&(r,t=function(r){return Mc.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t),r}function za(){var r,t,e,n,s,o,a,i;if(r=lo,(t=ei())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=ei())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=ei())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,r=t=T(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function Qa(){var r,t;return r=lo,(t=si())!==u?(lo,(jt(t)?u:void 0)!==u?(r,r=t=t):(lo=r,r=u)):(lo=r,r=u),r===u&&(r=Ja()),r}function Ja(){var t;return(t=function(){var t,e,n,s;t=lo,34===r.charCodeAt(lo)?(e='"',lo++):(e=u,0===vo&&Eo(Yt));if(e!==u){if(n=[],Bt.test(r.charAt(lo))?(s=r.charAt(lo),lo++):(s=u,0===vo&&Eo(Wt)),s!==u)for(;s!==u;)n.push(s),Bt.test(r.charAt(lo))?(s=r.charAt(lo),lo++):(s=u,0===vo&&Eo(Wt));else n=u;n!==u?(34===r.charCodeAt(lo)?(s='"',lo++):(s=u,0===vo&&Eo(Yt)),s!==u?(t,e=Xt(n),t=e):(lo=t,t=u)):(lo=t,t=u)}else lo=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=lo,39===r.charCodeAt(lo)?(e="'",lo++):(e=u,0===vo&&Eo(Ir));if(e!==u){if(n=[],Vt.test(r.charAt(lo))?(s=r.charAt(lo),lo++):(s=u,0===vo&&Eo(Kt)),s!==u)for(;s!==u;)n.push(s),Vt.test(r.charAt(lo))?(s=r.charAt(lo),lo++):(s=u,0===vo&&Eo(Kt));else n=u;n!==u?(39===r.charCodeAt(lo)?(s="'",lo++):(s=u,0===vo&&Eo(Ir)),s!==u?(t,e=Xt(n),t=e):(lo=t,t=u)):(lo=t,t=u)}else lo=t,t=u;return t}())===u&&(t=ri()),t}function ri(){var t,e,n,s;if(t=lo,96===r.charCodeAt(lo)?(e="`",lo++):(e=u,0===vo&&Eo(qt)),e!==u){if(n=[],Zt.test(r.charAt(lo))?(s=r.charAt(lo),lo++):(s=u,0===vo&&Eo(zt)),s===u&&(s=Ni()),s!==u)for(;s!==u;)n.push(s),Zt.test(r.charAt(lo))?(s=r.charAt(lo),lo++):(s=u,0===vo&&Eo(zt)),s===u&&(s=Ni());else n=u;n!==u?(96===r.charCodeAt(lo)?(s="`",lo++):(s=u,0===vo&&Eo(qt)),s!==u?(t,t=e=Xt(n)):(lo=t,t=u)):(lo=t,t=u)}else lo=t,t=u;return t}function ti(){var r,t;return r=lo,(t=ni())!==u&&(r,t=t),(r=t)===u&&(r=Ja()),r}function ei(){var r,t;return r=lo,(t=ni())!==u?(lo,(jt(t)?u:void 0)!==u?(r,r=t=t):(lo=r,r=u)):(lo=r,r=u),r===u&&(r=ri()),r}function ni(){var r,t,e,n;if(r=lo,(t=ui())!==u){for(e=[],n=ai();n!==u;)e.push(n),n=ai();e!==u?(r,r=t=Qt(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function si(){var r,t,e,n;if(r=lo,(t=ui())!==u){for(e=[],n=oi();n!==u;)e.push(n),n=oi();e!==u?(r,r=t=Qt(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function ui(){var t;return Jt.test(r.charAt(lo))?(t=r.charAt(lo),lo++):(t=u,0===vo&&Eo(re)),t}function oi(){var t;return te.test(r.charAt(lo))?(t=r.charAt(lo),lo++):(t=u,0===vo&&Eo(ee)),t}function ai(){var t;return ne.test(r.charAt(lo))?(t=r.charAt(lo),lo++):(t=u,0===vo&&Eo(se)),t}function ii(){var t,e,n,s;return t=lo,e=lo,58===r.charCodeAt(lo)?(n=":",lo++):(n=u,0===vo&&Eo(ue)),n!==u&&(s=si())!==u?e=n=[n,s]:(lo=e,e=u),e!==u&&(t,e={type:"param",value:e[1]}),t=e}function li(){var r,t,e;return r=lo,zi()!==u&&nc()!==u&&Pi()!==u&&nc()!==u&&(t=$l())!==u&&nc()!==u&&Jl()!==u&&nc()!==u?((e=Oa())===u&&(e=null),e!==u&&nc()!==u&&rc()!==u?(r,r={type:"on update",keyword:t,parentheses:!0,expr:e}):(lo=r,r=u)):(lo=r,r=u),r===u&&(r=lo,zi()!==u&&nc()!==u&&Pi()!==u&&nc()!==u&&(t=$l())!==u?(r,r=function(r){return{type:"on update",keyword:r}}(t)):(lo=r,r=u)),r}function ci(){var t,e,n;return t=lo,"over"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(oe)),e!==u&&nc()!==u&&(n=bi())!==u?(t,t=e={type:"window",as_window_specification:n}):(lo=t,t=u),t===u&&(t=li()),t}function fi(){var r,t,e;return r=lo,(t=si())!==u&&nc()!==u&&Ki()!==u&&nc()!==u&&(e=bi())!==u?(r,r=t={name:t,as_window_specification:e}):(lo=r,r=u),r}function bi(){var r,t;return(r=si())===u&&(r=lo,Jl()!==u&&nc()!==u?((t=function(){var r,t,e,n;r=lo,(t=pa())===u&&(t=null);t!==u&&nc()!==u?((e=wa())===u&&(e=null),e!==u&&nc()!==u?((n=function(){var r,t,e,n,s;r=lo,(t=Ml())!==u&&nc()!==u?((e=vi())===u&&(e=Li()),e!==u?(r,t="rows "+e.value,r=t):(lo=r,r=u)):(lo=r,r=u);r===u&&(r=lo,(t=Ml())!==u&&nc()!==u&&(e=ll())!==u&&nc()!==u&&(n=Li())!==u&&nc()!==u&&Cl()!==u&&nc()!==u&&(s=vi())!==u?(r,o=s,t=`rows between ${n.value} and ${o.value}`,r=t):(lo=r,r=u));var o;return r}())===u&&(n=null),n!==u?(r,r=t={name:null,partitionby:t,orderby:e,window_frame_clause:n}):(lo=r,r=u)):(lo=r,r=u)):(lo=r,r=u);return r}())===u&&(t=null),t!==u&&nc()!==u&&rc()!==u?(r,r={window_specification:t||{},parentheses:!0}):(lo=r,r=u)):(lo=r,r=u)),r}function vi(){var t,e,n,s;return t=lo,(e=di())!==u&&nc()!==u?("following"===r.substr(lo,9).toLowerCase()?(n=r.substr(lo,9),lo+=9):(n=u,0===vo&&Eo(ie)),n!==u?(t,(s=e).value+=" FOLLOWING",t=e=s):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=Ci()),t}function Li(){var t,e,n,s;return t=lo,(e=di())!==u&&nc()!==u?("preceding"===r.substr(lo,9).toLowerCase()?(n=r.substr(lo,9),lo+=9):(n=u,0===vo&&Eo(le)),n!==u?(t,(s=e).value+=" PRECEDING",t=e=s):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=Ci()),t}function Ci(){var t,e,n;return t=lo,"current"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(ce)),e!==u&&nc()!==u?("row"===r.substr(lo,3).toLowerCase()?(n=r.substr(lo,3),lo+=3):(n=u,0===vo&&Eo(At)),n!==u?(t,t=e={type:"single_quote_string",value:"current row"}):(lo=t,t=u)):(lo=t,t=u),t}function di(){var t,e;return t=lo,"unbounded"===r.substr(lo,9).toLowerCase()?(e=r.substr(lo,9),lo+=9):(e=u,0===vo&&Eo(fe)),e!==u&&(t,e={type:"single_quote_string",value:e.toUpperCase()}),(t=e)===u&&(t=Ri()),t}function pi(){var t,e,n;return t=lo,"separator"===r.substr(lo,9).toLowerCase()?(e=r.substr(lo,9),lo+=9):(e=u,0===vo&&Eo(be)),e===u&&(e=null),e!==u&&nc()!==u&&(n=Ti())!==u?(t,t=e={keyword:e,value:n}):(lo=t,t=u),t}function wi(){var t,e,n;return t=lo,(e=function(){var t;return"both"===r.substr(lo,4).toLowerCase()?(t=r.substr(lo,4),lo+=4):(t=u,0===vo&&Eo(ve)),t===u&&("leading"===r.substr(lo,7).toLowerCase()?(t=r.substr(lo,7),lo+=7):(t=u,0===vo&&Eo(Le)),t===u&&("trailing"===r.substr(lo,8).toLowerCase()?(t=r.substr(lo,8),lo+=8):(t=u,0===vo&&Eo(Ce)))),t}())===u&&(e=null),e!==u&&nc()!==u?((n=Ti())===u&&(n=null),n!==u&&nc()!==u&&Xi()!==u?(t,t=e=function(r,t,e){let n=[];return r&&n.push({type:"origin",value:r}),t&&n.push(t),n.push({type:"origin",value:"from"}),{type:"expr_list",value:n}}(e,n)):(lo=t,t=u)):(lo=t,t=u),t}function Ei(){var t,e,n,s,o;return(t=function(){var t,e,n,s;return t=lo,"trim"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(de)),e!==u&&nc()!==u&&Jl()!==u&&nc()!==u?((n=wi())===u&&(n=null),n!==u&&nc()!==u&&(s=ka())!==u&&nc()!==u&&rc()!==u?(t,t=e=function(r,t){let e=r||{type:"expr_list",value:[]};return e.value.push(t),{type:"function",name:"TRIM",args:e}}(n,s)):(lo=t,t=u)):(lo=t,t=u),t}())===u&&(t=lo,"convert"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(pe)),e!==u&&nc()!==u&&(n=Jl())!==u&&nc()!==u&&(s=function(){var r,t,e,n,s,o;return r=lo,(t=Za())===u&&(t=Ti()),t!==u&&nc()!==u&&zl()!==u&&nc()!==u&&(e=yc())!==u&&nc()!==u&&(n=jo())!==u&&nc()!==u&&(s=si())!==u?(r,r=t=function(r,t,e,n){const{dataType:s,length:u}=t;let o=s;return void 0!==u&&(o=`${o}(${u})`),{type:"expr_list",value:[r,{type:"origin",value:`${o} ${e} ${n}`}]}}(t,e,n,s)):(lo=r,r=u),r===u&&(r=lo,(t=Za())===u&&(t=Ti()),t!==u&&nc()!==u&&zl()!==u&&nc()!==u&&(e=hc())!==u?(r,o=e,r=t={type:"expr_list",value:[t,{type:"datatype",...o}]}):(lo=r,r=u),r===u&&(r=lo,(t=Za())===u&&(t=Ti()),t!==u&&nc()!==u&&el()!==u&&nc()!==u&&(e=si())!==u?(r,r=t=function(r,t){return r.suffix="USING "+t,{type:"expr_list",value:[r]}}(t,e)):(lo=r,r=u))),r}())!==u&&nc()!==u&&rc()!==u&&nc()!==u?((o=go())===u&&(o=null),o!==u?(t,t=e={type:"function",name:"CONVERT",args:s,collate:o}):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,(e=dc())!==u&&nc()!==u&&(n=Jl())!==u&&nc()!==u?((s=Da())===u&&(s=null),s!==u&&nc()!==u&&rc()!==u&&nc()!==u?((o=ci())===u&&(o=null),o!==u?(t,t=e=function(r,t,e){return t&&"expr_list"!==t.type&&(t={type:"expr_list",value:[t]}),("TIMESTAMPDIFF"===r.toUpperCase()||"TIMESTAMPADD"===r.toUpperCase())&&t.value&&t.value[0]&&(t.value[0]={type:"origin",value:t.value[0].column}),{type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,s,o)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,(e=function(){var t;(t=Ai())===u&&(t=function(){var t,e,n,s;t=lo,"current_user"===r.substr(lo,12).toLowerCase()?(e=r.substr(lo,12),lo+=12):(e=u,0===vo&&Eo(nu));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="CURRENT_USER"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=lo,"user"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(Ws));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="USER"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=lo,"session_user"===r.substr(lo,12).toLowerCase()?(e=r.substr(lo,12),lo+=12):(e=u,0===vo&&Eo(su));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="SESSION_USER"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=lo,"system_user"===r.substr(lo,11).toLowerCase()?(e=r.substr(lo,11),lo+=11):(e=u,0===vo&&Eo(uu));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="SYSTEM_USER"):(lo=t,t=u)):(lo=t,t=u);return t}());return t}())!==u&&nc()!==u&&(n=Jl())!==u&&nc()!==u?((s=Oa())===u&&(s=null),s!==u&&nc()!==u&&rc()!==u&&nc()!==u?((o=ci())===u&&(o=null),o!==u?(t,t=e=function(r,t,e){return{type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,s,o)):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=lo,(e=Ai())!==u&&nc()!==u?((n=li())===u&&(n=null),n!==u?(t,t=e={type:"function",name:e,over:n}):(lo=t,t=u)):(lo=t,t=u))))),t}function Ai(){var t;return(t=function(){var t,e,n,s;t=lo,"current_date"===r.substr(lo,12).toLowerCase()?(e=r.substr(lo,12),lo+=12):(e=u,0===vo&&Eo(Xs));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="CURRENT_DATE"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=lo,"current_time"===r.substr(lo,12).toLowerCase()?(e=r.substr(lo,12),lo+=12):(e=u,0===vo&&Eo(tu));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="CURRENT_TIME"):(lo=t,t=u)):(lo=t,t=u);return t}())===u&&(t=$l()),t}function hi(){var t,e,n,s,o,a,i,l,c;return t=lo,"binary"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(we)),e===u&&("_binary"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(Ee))),e===u&&(e=null),e!==u&&nc()!==u&&(n=Ti())!==u?(s=lo,(o=nc())!==u&&(a=go())!==u?s=o=[o,a]:(lo=s,s=u),s===u&&(s=null),s!==u?(t,l=n,c=s,(i=e)&&(l.prefix=i.toLowerCase()),c&&(l.suffix={collate:c[1]}),t=e=l):(lo=t,t=u)):(lo=t,t=u),t===u&&(t=Ri())===u&&(t=function(){var t,e;t=lo,(e=function(){var t,e,n,s;t=lo,"true"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(nn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!0});(t=e)===u&&(t=lo,(e=function(){var t,e,n,s;t=lo,"false"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(un));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!1}),t=e);return t}())===u&&(t=yi())===u&&(t=function(){var t,e,n,s,o,a;t=lo,(e=kl())===u&&(e=xl())===u&&(e=Dl())===u&&(e=Ul());if(e!==u)if(nc()!==u){if(n=lo,39===r.charCodeAt(lo)?(s="'",lo++):(s=u,0===vo&&Eo(Ir)),s!==u){for(o=[],a=Ii();a!==u;)o.push(a),a=Ii();o!==u?(39===r.charCodeAt(lo)?(a="'",lo++):(a=u,0===vo&&Eo(Ir)),a!==u?n=s=[s,o,a]:(lo=n,n=u)):(lo=n,n=u)}else lo=n,n=u;n!==u?(t,e=Re(e,n),t=e):(lo=t,t=u)}else lo=t,t=u;else lo=t,t=u;if(t===u)if(t=lo,(e=kl())===u&&(e=xl())===u&&(e=Dl())===u&&(e=Ul()),e!==u)if(nc()!==u){if(n=lo,34===r.charCodeAt(lo)?(s='"',lo++):(s=u,0===vo&&Eo(Yt)),s!==u){for(o=[],a=mi();a!==u;)o.push(a),a=mi();o!==u?(34===r.charCodeAt(lo)?(a='"',lo++):(a=u,0===vo&&Eo(Yt)),a!==u?n=s=[s,o,a]:(lo=n,n=u)):(lo=n,n=u)}else lo=n,n=u;n!==u?(t,e=Re(e,n),t=e):(lo=t,t=u)}else lo=t,t=u;else lo=t,t=u;return t}()),t}function yi(){var t,e;return t=lo,(e=function(){var t,e,n,s;t=lo,"null"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(tn));e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u);return t}())!==u&&(t,e={type:"null",value:null}),t=e}function Ti(){var t,e,n,s,o,a,i,l;if(t=lo,"_binary"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(Ee)),e===u&&("_latin1"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(Ae))),e===u&&(e=null),e!==u)if((n=nc())!==u)if("x"===r.substr(lo,1).toLowerCase()?(s=r.charAt(lo),lo++):(s=u,0===vo&&Eo(he)),s!==u){if(o=lo,39===r.charCodeAt(lo)?(a="'",lo++):(a=u,0===vo&&Eo(Ir)),a!==u){for(i=[],ye.test(r.charAt(lo))?(l=r.charAt(lo),lo++):(l=u,0===vo&&Eo(Te));l!==u;)i.push(l),ye.test(r.charAt(lo))?(l=r.charAt(lo),lo++):(l=u,0===vo&&Eo(Te));i!==u?(39===r.charCodeAt(lo)?(l="'",lo++):(l=u,0===vo&&Eo(Ir)),l!==u?o=a=[a,i,l]:(lo=o,o=u)):(lo=o,o=u)}else lo=o,o=u;o!==u?(t,t=e={type:"hex_string",prefix:e,value:o[1].join("")}):(lo=t,t=u)}else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;if(t===u){if(t=lo,"_binary"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(Ee)),e===u&&("_latin1"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(Ae))),e===u&&(e=null),e!==u)if((n=nc())!==u)if("b"===r.substr(lo,1).toLowerCase()?(s=r.charAt(lo),lo++):(s=u,0===vo&&Eo(me)),s!==u){if(o=lo,39===r.charCodeAt(lo)?(a="'",lo++):(a=u,0===vo&&Eo(Ir)),a!==u){for(i=[],ye.test(r.charAt(lo))?(l=r.charAt(lo),lo++):(l=u,0===vo&&Eo(Te));l!==u;)i.push(l),ye.test(r.charAt(lo))?(l=r.charAt(lo),lo++):(l=u,0===vo&&Eo(Te));i!==u?(39===r.charCodeAt(lo)?(l="'",lo++):(l=u,0===vo&&Eo(Ir)),l!==u?o=a=[a,i,l]:(lo=o,o=u)):(lo=o,o=u)}else lo=o,o=u;o!==u?(t,t=e=function(r,t,e){return{type:"bit_string",prefix:r,value:e[1].join("")}}(e,0,o)):(lo=t,t=u)}else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;if(t===u){if(t=lo,"_binary"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(Ee)),e===u&&("_latin1"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(Ae))),e===u&&(e=null),e!==u)if((n=nc())!==u)if("0x"===r.substr(lo,2).toLowerCase()?(s=r.substr(lo,2),lo+=2):(s=u,0===vo&&Eo(Ie)),s!==u){for(o=[],ye.test(r.charAt(lo))?(a=r.charAt(lo),lo++):(a=u,0===vo&&Eo(Te));a!==u;)o.push(a),ye.test(r.charAt(lo))?(a=r.charAt(lo),lo++):(a=u,0===vo&&Eo(Te));o!==u?(t,t=e=function(r,t,e){return{type:"full_hex_string",prefix:r,value:e.join("")}}(e,0,o)):(lo=t,t=u)}else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;if(t===u){if(t=lo,"n"===r.substr(lo,1).toLowerCase()?(e=r.charAt(lo),lo++):(e=u,0===vo&&Eo(Ne)),e!==u){if(n=lo,39===r.charCodeAt(lo)?(s="'",lo++):(s=u,0===vo&&Eo(Ir)),s!==u){for(o=[],a=Ii();a!==u;)o.push(a),a=Ii();o!==u?(39===r.charCodeAt(lo)?(a="'",lo++):(a=u,0===vo&&Eo(Ir)),a!==u?n=s=[s,o,a]:(lo=n,n=u)):(lo=n,n=u)}else lo=n,n=u;n!==u?(t,t=e=function(r,t){return{type:"natural_string",value:t[1].join("")}}(0,n)):(lo=t,t=u)}else lo=t,t=u;if(t===u){if(t=lo,e=lo,39===r.charCodeAt(lo)?(n="'",lo++):(n=u,0===vo&&Eo(Ir)),n!==u){for(s=[],o=Ii();o!==u;)s.push(o),o=Ii();s!==u?(39===r.charCodeAt(lo)?(o="'",lo++):(o=u,0===vo&&Eo(Ir)),o!==u?e=n=[n,s,o]:(lo=e,e=u)):(lo=e,e=u)}else lo=e,e=u;if(e!==u&&(t,e=function(r){return{type:"single_quote_string",value:r[1].join("")}}(e)),(t=e)===u){if(t=lo,e=lo,34===r.charCodeAt(lo)?(n='"',lo++):(n=u,0===vo&&Eo(Yt)),n!==u){for(s=[],o=mi();o!==u;)s.push(o),o=mi();s!==u?(34===r.charCodeAt(lo)?(o='"',lo++):(o=u,0===vo&&Eo(Yt)),o!==u?e=n=[n,s,o]:(lo=e,e=u)):(lo=e,e=u)}else lo=e,e=u;e!==u&&(t,e=function(r){return{type:"string",value:r[1].join("")}}(e)),t=e}}}}}return t}function mi(){var t;return Se.test(r.charAt(lo))?(t=r.charAt(lo),lo++):(t=u,0===vo&&Eo(_e)),t===u&&(t=Ni()),t}function Ii(){var t;return Oe.test(r.charAt(lo))?(t=r.charAt(lo),lo++):(t=u,0===vo&&Eo(ge)),t===u&&(t=Ni()),t}function Ni(){var t,e,n,s,o,a,i,l,c,f;return t=lo,"\\'"===r.substr(lo,2)?(e="\\'",lo+=2):(e=u,0===vo&&Eo(xe)),e!==u&&(t,e="\\'"),(t=e)===u&&(t=lo,'\\"'===r.substr(lo,2)?(e='\\"',lo+=2):(e=u,0===vo&&Eo(Ue)),e!==u&&(t,e='\\"'),(t=e)===u&&(t=lo,"\\\\"===r.substr(lo,2)?(e="\\\\",lo+=2):(e=u,0===vo&&Eo(Me)),e!==u&&(t,e="\\\\"),(t=e)===u&&(t=lo,"\\/"===r.substr(lo,2)?(e="\\/",lo+=2):(e=u,0===vo&&Eo(ke)),e!==u&&(t,e="\\/"),(t=e)===u&&(t=lo,"\\b"===r.substr(lo,2)?(e="\\b",lo+=2):(e=u,0===vo&&Eo(De)),e!==u&&(t,e="\b"),(t=e)===u&&(t=lo,"\\f"===r.substr(lo,2)?(e="\\f",lo+=2):(e=u,0===vo&&Eo($e)),e!==u&&(t,e="\f"),(t=e)===u&&(t=lo,"\\n"===r.substr(lo,2)?(e="\\n",lo+=2):(e=u,0===vo&&Eo(Pe)),e!==u&&(t,e="\n"),(t=e)===u&&(t=lo,"\\r"===r.substr(lo,2)?(e="\\r",lo+=2):(e=u,0===vo&&Eo(Fe)),e!==u&&(t,e="\r"),(t=e)===u&&(t=lo,"\\t"===r.substr(lo,2)?(e="\\t",lo+=2):(e=u,0===vo&&Eo(Ge)),e!==u&&(t,e="\t"),(t=e)===u&&(t=lo,"\\u"===r.substr(lo,2)?(e="\\u",lo+=2):(e=u,0===vo&&Eo(He)),e!==u&&(n=Ui())!==u&&(s=Ui())!==u&&(o=Ui())!==u&&(a=Ui())!==u?(t,i=n,l=s,c=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+l+c+f))):(lo=t,t=u),t===u&&(t=lo,92===r.charCodeAt(lo)?(e="\\",lo++):(e=u,0===vo&&Eo(je)),e!==u&&(t,e="\\"),(t=e)===u&&(t=lo,"''"===r.substr(lo,2)?(e="''",lo+=2):(e=u,0===vo&&Eo(Ye)),e!==u&&(t,e="''"),(t=e)===u&&(t=lo,'""'===r.substr(lo,2)?(e='""',lo+=2):(e=u,0===vo&&Eo(Be)),e!==u&&(t,e='""'),(t=e)===u&&(t=lo,"``"===r.substr(lo,2)?(e="``",lo+=2):(e=u,0===vo&&Eo(We)),e!==u&&(t,e="``"),t=e))))))))))))),t}function Ri(){var r,t,e;return r=lo,(t=function(){var r,t,e,n;r=lo,(t=Si())!==u&&(e=_i())!==u&&(n=Oi())!==u?(r,r=t={type:"bigint",value:t+e+n}):(lo=r,r=u);r===u&&(r=lo,(t=Si())!==u&&(e=_i())!==u?(r,t=function(r,t){const e=r+t;return Rc(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(lo=r,r=u),r===u&&(r=lo,(t=Si())!==u&&(e=Oi())!==u?(r,t=function(r,t){return{type:"bigint",value:r+t}}(t,e),r=t):(lo=r,r=u),r===u&&(r=lo,(t=Si())!==u&&(r,t=function(r){return Rc(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==u&&(r,t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function Si(){var t,e,n;return(t=gi())===u&&(t=xi())===u&&(t=lo,45===r.charCodeAt(lo)?(e="-",lo++):(e=u,0===vo&&Eo(gt)),e===u&&(43===r.charCodeAt(lo)?(e="+",lo++):(e=u,0===vo&&Eo(Ot))),e!==u&&(n=gi())!==u?(t,t=e=e+n):(lo=t,t=u),t===u&&(t=lo,45===r.charCodeAt(lo)?(e="-",lo++):(e=u,0===vo&&Eo(gt)),e===u&&(43===r.charCodeAt(lo)?(e="+",lo++):(e=u,0===vo&&Eo(Ot))),e!==u&&(n=xi())!==u?(t,t=e=function(r,t){return r+t}(e,n)):(lo=t,t=u))),t}function _i(){var t,e,n;return t=lo,46===r.charCodeAt(lo)?(e=".",lo++):(e=u,0===vo&&Eo(Ke)),e!==u&&(n=gi())!==u?(t,t=e="."+n):(lo=t,t=u),t}function Oi(){var t,e,n;return t=lo,(e=function(){var t,e,n;t=lo,ze.test(r.charAt(lo))?(e=r.charAt(lo),lo++):(e=u,0===vo&&Eo(Qe));e!==u?(Je.test(r.charAt(lo))?(n=r.charAt(lo),lo++):(n=u,0===vo&&Eo(rn)),n===u&&(n=null),n!==u?(t,t=e=e+(null!==(s=n)?s:"")):(lo=t,t=u)):(lo=t,t=u);var s;return t}())!==u&&(n=gi())!==u?(t,t=e=e+n):(lo=t,t=u),t}function gi(){var r,t,e;if(r=lo,t=[],(e=xi())!==u)for(;e!==u;)t.push(e),e=xi();else t=u;return t!==u&&(r,t=t.join("")),r=t}function xi(){var t;return Q.test(r.charAt(lo))?(t=r.charAt(lo),lo++):(t=u,0===vo&&Eo(J)),t}function Ui(){var t;return qe.test(r.charAt(lo))?(t=r.charAt(lo),lo++):(t=u,0===vo&&Eo(Ze)),t}function Mi(){var t,e,n,s;return t=lo,"default"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(g)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function ki(){var t,e,n,s;return t=lo,"to"===r.substr(lo,2).toLowerCase()?(e=r.substr(lo,2),lo+=2):(e=u,0===vo&&Eo(sn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function Di(){var t,e,n,s;return t=lo,"show"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(on)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function $i(){var t,e,n,s;return t=lo,"drop"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(an)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="DROP"):(lo=t,t=u)):(lo=t,t=u),t}function Pi(){var t,e,n,s;return t=lo,"update"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(ir)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function Fi(){var t,e,n,s;return t=lo,"create"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(bn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function Gi(){var t,e,n,s;return t=lo,"temporary"===r.substr(lo,9).toLowerCase()?(e=r.substr(lo,9),lo+=9):(e=u,0===vo&&Eo(vn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function Hi(){var t,e,n,s;return t=lo,"replace"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(dn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function ji(){var t,e,n,s;return t=lo,"rename"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(pn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function Yi(){var t,e,n,s;return t=lo,"ignore"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(wn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function Bi(){var t,e,n,s;return t=lo,"partition"===r.substr(lo,9).toLowerCase()?(e=r.substr(lo,9),lo+=9):(e=u,0===vo&&Eo(En)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="PARTITION"):(lo=t,t=u)):(lo=t,t=u),t}function Wi(){var t,e,n,s;return t=lo,"into"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(An)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function Xi(){var t,e,n,s;return t=lo,"from"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(hn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function Vi(){var t,e,n,s;return t=lo,"set"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(Cr)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function Ki(){var t,e,n,s;return t=lo,"as"===r.substr(lo,2).toLowerCase()?(e=r.substr(lo,2),lo+=2):(e=u,0===vo&&Eo($)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function qi(){var t,e,n,s;return t=lo,"table"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(Tn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="TABLE"):(lo=t,t=u)):(lo=t,t=u),t}function Zi(){var t,e,n,s;return t=lo,"tables"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(mn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="TABLES"):(lo=t,t=u)):(lo=t,t=u),t}function zi(){var t,e,n,s;return t=lo,"on"===r.substr(lo,2).toLowerCase()?(e=r.substr(lo,2),lo+=2):(e=u,0===vo&&Eo(or)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function Qi(){var t,e,n,s;return t=lo,"join"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(xn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function Ji(){var t,e,n,s;return t=lo,"outer"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(Un)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function rl(){var t,e,n,s;return t=lo,"union"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(Mn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function tl(){var t,e,n,s;return t=lo,"values"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo($n)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function el(){var t,e,n,s;return t=lo,"using"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(Pn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function nl(){var t,e,n,s;return t=lo,"with"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(nt)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function sl(){var t,e,n,s;return t=lo,"by"===r.substr(lo,2).toLowerCase()?(e=r.substr(lo,2),lo+=2):(e=u,0===vo&&Eo(Hn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function ul(){var t,e,n,s;return t=lo,"asc"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(Xn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="ASC"):(lo=t,t=u)):(lo=t,t=u),t}function ol(){var t,e,n,s;return t=lo,"desc"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(Vn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="DESC"):(lo=t,t=u)):(lo=t,t=u),t}function al(){var t,e,n,s;return t=lo,"all"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(qn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="ALL"):(lo=t,t=u)):(lo=t,t=u),t}function il(){var t,e,n,s;return t=lo,"distinct"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(Zn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="DISTINCT"):(lo=t,t=u)):(lo=t,t=u),t}function ll(){var t,e,n,s;return t=lo,"between"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(zn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="BETWEEN"):(lo=t,t=u)):(lo=t,t=u),t}function cl(){var t,e,n,s;return t=lo,"in"===r.substr(lo,2).toLowerCase()?(e=r.substr(lo,2),lo+=2):(e=u,0===vo&&Eo(Kr)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="IN"):(lo=t,t=u)):(lo=t,t=u),t}function fl(){var t,e,n,s;return t=lo,"is"===r.substr(lo,2).toLowerCase()?(e=r.substr(lo,2),lo+=2):(e=u,0===vo&&Eo(Qn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="IS"):(lo=t,t=u)):(lo=t,t=u),t}function bl(){var t,e,n,s;return t=lo,"like"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(Jn)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="LIKE"):(lo=t,t=u)):(lo=t,t=u),t}function vl(){var t,e,n,s;return t=lo,"exists"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(es)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="EXISTS"):(lo=t,t=u)):(lo=t,t=u),t}function Ll(){var t,e,n,s;return t=lo,"not"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(ns)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="NOT"):(lo=t,t=u)):(lo=t,t=u),t}function Cl(){var t,e,n,s;return t=lo,"and"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(ss)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="AND"):(lo=t,t=u)):(lo=t,t=u),t}function dl(){var t,e,n,s;return t=lo,"or"===r.substr(lo,2).toLowerCase()?(e=r.substr(lo,2),lo+=2):(e=u,0===vo&&Eo(us)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="OR"):(lo=t,t=u)):(lo=t,t=u),t}function pl(){var t,e,n,s;return t=lo,"case"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(vs)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function wl(){var t,e,n,s;return t=lo,"end"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(ps)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?t=e=[e,n]:(lo=t,t=u)):(lo=t,t=u),t}function El(){var t,e,n,s;return t=lo,"cast"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(ws)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="CAST"):(lo=t,t=u)):(lo=t,t=u),t}function Al(){var t,e,n,s;return t=lo,"char"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(Es)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="CHAR"):(lo=t,t=u)):(lo=t,t=u),t}function hl(){var t,e,n,s;return t=lo,"varchar"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(As)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="VARCHAR"):(lo=t,t=u)):(lo=t,t=u),t}function yl(){var t,e,n,s;return t=lo,"numeric"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(hs)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="NUMERIC"):(lo=t,t=u)):(lo=t,t=u),t}function Tl(){var t,e,n,s;return t=lo,"decimal"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(ys)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="DECIMAL"):(lo=t,t=u)):(lo=t,t=u),t}function ml(){var t,e,n,s;return t=lo,"unsigned"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(ms)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="UNSIGNED"):(lo=t,t=u)):(lo=t,t=u),t}function Il(){var t,e,n,s;return t=lo,"int"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(Is)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="INT"):(lo=t,t=u)):(lo=t,t=u),t}function Nl(){var t,e,n,s;return t=lo,"integer"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(Rs)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="INTEGER"):(lo=t,t=u)):(lo=t,t=u),t}function Rl(){var t,e,n,s;return t=lo,"smallint"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(_s)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="SMALLINT"):(lo=t,t=u)):(lo=t,t=u),t}function Sl(){var t,e,n,s;return t=lo,"tinyint"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(Os)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="TINYINT"):(lo=t,t=u)):(lo=t,t=u),t}function _l(){var t,e,n,s;return t=lo,"bigint"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(ks)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="BIGINT"):(lo=t,t=u)):(lo=t,t=u),t}function Ol(){var t,e,n,s;return t=lo,"float"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo($s)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="FLOAT"):(lo=t,t=u)):(lo=t,t=u),t}function gl(){var t,e,n,s;return t=lo,"double"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(Ps)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="DOUBLE"):(lo=t,t=u)):(lo=t,t=u),t}function xl(){var t,e,n,s;return t=lo,"date"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(Fs)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="DATE"):(lo=t,t=u)):(lo=t,t=u),t}function Ul(){var t,e,n,s;return t=lo,"datetime"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(Gs)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="DATETIME"):(lo=t,t=u)):(lo=t,t=u),t}function Ml(){var t,e,n,s;return t=lo,"rows"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(Hs)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="ROWS"):(lo=t,t=u)):(lo=t,t=u),t}function kl(){var t,e,n,s;return t=lo,"time"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(js)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="TIME"):(lo=t,t=u)):(lo=t,t=u),t}function Dl(){var t,e,n,s;return t=lo,"timestamp"===r.substr(lo,9).toLowerCase()?(e=r.substr(lo,9),lo+=9):(e=u,0===vo&&Eo(Ys)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="TIMESTAMP"):(lo=t,t=u)):(lo=t,t=u),t}function $l(){var t,e,n,s;return t=lo,"current_timestamp"===r.substr(lo,17).toLowerCase()?(e=r.substr(lo,17),lo+=17):(e=u,0===vo&&Eo(eu)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="CURRENT_TIMESTAMP"):(lo=t,t=u)):(lo=t,t=u),t}function Pl(){var t,e,n,s;return t=lo,"view"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(cu)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="VIEW"):(lo=t,t=u)):(lo=t,t=u),t}function Fl(){var t;return 64===r.charCodeAt(lo)?(t="@",lo++):(t=u,0===vo&&Eo(Eu)),t}function Gl(){var t;return(t=function(){var t;return"@@"===r.substr(lo,2)?(t="@@",lo+=2):(t=u,0===vo&&Eo(Au)),t}())===u&&(t=Fl())===u&&(t=function(){var t;return 36===r.charCodeAt(lo)?(t="$",lo++):(t=u,0===vo&&Eo(hu)),t}()),t}function Hl(){var t;return 61===r.charCodeAt(lo)?(t="=",lo++):(t=u,0===vo&&Eo(wt)),t}function jl(){var t,e,n,s;return t=lo,"add"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(Iu)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="ADD"):(lo=t,t=u)):(lo=t,t=u),t}function Yl(){var t,e,n,s;return t=lo,"column"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(Nu)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="COLUMN"):(lo=t,t=u)):(lo=t,t=u),t}function Bl(){var t,e,n,s;return t=lo,"index"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(Ru)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="INDEX"):(lo=t,t=u)):(lo=t,t=u),t}function Wl(){var t,e,n,s;return t=lo,"key"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(N)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="KEY"):(lo=t,t=u)):(lo=t,t=u),t}function Xl(){var t,e,n,s;return t=lo,"fulltext"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(Su)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="FULLTEXT"):(lo=t,t=u)):(lo=t,t=u),t}function Vl(){var t,e,n,s;return t=lo,"spatial"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(_u)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="SPATIAL"):(lo=t,t=u)):(lo=t,t=u),t}function Kl(){var t,e,n,s;return t=lo,"unique"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(I)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="UNIQUE"):(lo=t,t=u)):(lo=t,t=u),t}function ql(){var t,e,n,s;return t=lo,"comment"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(Ou)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="COMMENT"):(lo=t,t=u)):(lo=t,t=u),t}function Zl(){var t;return 46===r.charCodeAt(lo)?(t=".",lo++):(t=u,0===vo&&Eo(Ke)),t}function zl(){var t;return 44===r.charCodeAt(lo)?(t=",",lo++):(t=u,0===vo&&Eo(Fu)),t}function Ql(){var t;return 42===r.charCodeAt(lo)?(t="*",lo++):(t=u,0===vo&&Eo(Ut)),t}function Jl(){var t;return 40===r.charCodeAt(lo)?(t="(",lo++):(t=u,0===vo&&Eo(Xr)),t}function rc(){var t;return 41===r.charCodeAt(lo)?(t=")",lo++):(t=u,0===vo&&Eo(Vr)),t}function tc(){var t;return 59===r.charCodeAt(lo)?(t=";",lo++):(t=u,0===vo&&Eo(ju)),t}function ec(){var t;return(t=function(){var t;return"||"===r.substr(lo,2)?(t="||",lo+=2):(t=u,0===vo&&Eo(Yu)),t}())===u&&(t=function(){var t;return"&&"===r.substr(lo,2)?(t="&&",lo+=2):(t=u,0===vo&&Eo(Bu)),t}())===u&&(t=function(){var t,e,n,s;return t=lo,"xor"===r.substr(lo,3).toLowerCase()?(e=r.substr(lo,3),lo+=3):(e=u,0===vo&&Eo(Wu)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="XOR"):(lo=t,t=u)):(lo=t,t=u),t}()),t}function nc(){var r,t;for(r=[],(t=ic())===u&&(t=uc());t!==u;)r.push(t),(t=ic())===u&&(t=uc());return r}function sc(){var r,t;if(r=[],(t=ic())===u&&(t=uc()),t!==u)for(;t!==u;)r.push(t),(t=ic())===u&&(t=uc());else r=u;return r}function uc(){var t;return(t=function(){var t,e,n,s,o,a;t=lo,"/*"===r.substr(lo,2)?(e="/*",lo+=2):(e=u,0===vo&&Eo(Xu));if(e!==u){for(n=[],s=lo,o=lo,vo++,"*/"===r.substr(lo,2)?(a="*/",lo+=2):(a=u,0===vo&&Eo(Vu)),vo--,a===u?o=void 0:(lo=o,o=u),o!==u&&(a=ac())!==u?s=o=[o,a]:(lo=s,s=u);s!==u;)n.push(s),s=lo,o=lo,vo++,"*/"===r.substr(lo,2)?(a="*/",lo+=2):(a=u,0===vo&&Eo(Vu)),vo--,a===u?o=void 0:(lo=o,o=u),o!==u&&(a=ac())!==u?s=o=[o,a]:(lo=s,s=u);n!==u?("*/"===r.substr(lo,2)?(s="*/",lo+=2):(s=u,0===vo&&Eo(Vu)),s!==u?t=e=[e,n,s]:(lo=t,t=u)):(lo=t,t=u)}else lo=t,t=u;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=lo,"--"===r.substr(lo,2)?(e="--",lo+=2):(e=u,0===vo&&Eo(Ku));if(e!==u){for(n=[],s=lo,o=lo,vo++,a=lc(),vo--,a===u?o=void 0:(lo=o,o=u),o!==u&&(a=ac())!==u?s=o=[o,a]:(lo=s,s=u);s!==u;)n.push(s),s=lo,o=lo,vo++,a=lc(),vo--,a===u?o=void 0:(lo=o,o=u),o!==u&&(a=ac())!==u?s=o=[o,a]:(lo=s,s=u);n!==u?t=e=[e,n]:(lo=t,t=u)}else lo=t,t=u;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=lo,35===r.charCodeAt(lo)?(e="#",lo++):(e=u,0===vo&&Eo(qu));if(e!==u){for(n=[],s=lo,o=lo,vo++,a=lc(),vo--,a===u?o=void 0:(lo=o,o=u),o!==u&&(a=ac())!==u?s=o=[o,a]:(lo=s,s=u);s!==u;)n.push(s),s=lo,o=lo,vo++,a=lc(),vo--,a===u?o=void 0:(lo=o,o=u),o!==u&&(a=ac())!==u?s=o=[o,a]:(lo=s,s=u);n!==u?t=e=[e,n]:(lo=t,t=u)}else lo=t,t=u;return t}()),t}function oc(){var r,t,e,n,s,o,a;return r=lo,(t=ql())!==u&&nc()!==u?((e=Hl())===u&&(e=null),e!==u&&nc()!==u&&(n=Ti())!==u?(r,o=e,a=n,r=t={type:(s=t).toLowerCase(),keyword:s.toLowerCase(),symbol:o,value:a}):(lo=r,r=u)):(lo=r,r=u),r}function ac(){var t;return r.length>lo?(t=r.charAt(lo),lo++):(t=u,0===vo&&Eo(Zu)),t}function ic(){var t;return zu.test(r.charAt(lo))?(t=r.charAt(lo),lo++):(t=u,0===vo&&Eo(Qu)),t}function lc(){var t,e;if((t=function(){var t,e;t=lo,vo++,r.length>lo?(e=r.charAt(lo),lo++):(e=u,0===vo&&Eo(Zu));vo--,e===u?t=void 0:(lo=t,t=u);return t}())===u)if(t=[],Xe.test(r.charAt(lo))?(e=r.charAt(lo),lo++):(e=u,0===vo&&Eo(Ve)),e!==u)for(;e!==u;)t.push(e),Xe.test(r.charAt(lo))?(e=r.charAt(lo),lo++):(e=u,0===vo&&Eo(Ve));else t=u;return t}function cc(){var t,e;return t=lo,lo,xc=[],( true?void 0:0)!==u&&nc()!==u?((e=fc())===u&&(e=function(){var t,e;t=lo,function(){var t;return"return"===r.substr(lo,6).toLowerCase()?(t=r.substr(lo,6),lo+=6):(t=u,0===vo&&Eo(yu)),t}()!==u&&nc()!==u&&(e=bc())!==u?(t,t={type:"return",expr:e}):(lo=t,t=u);return t}()),e!==u?(t,t={stmt:e,vars:xc}):(lo=t,t=u)):(lo=t,t=u),t}function fc(){var t,e,n,s;return t=lo,(e=Ec())===u&&(e=Ac()),e!==u&&nc()!==u?((n=function(){var t;return":="===r.substr(lo,2)?(t=":=",lo+=2):(t=u,0===vo&&Eo(Tu)),t}())===u&&(n=Hl()),n!==u&&nc()!==u&&(s=bc())!==u?(t,t=e={type:"assign",left:e,symbol:n,right:s}):(lo=t,t=u)):(lo=t,t=u),t}function bc(){var t;return(t=Xo())===u&&(t=function(){var r,t,e,n,s;r=lo,(t=Ec())!==u&&nc()!==u&&(e=ba())!==u&&nc()!==u&&(n=Ec())!==u&&nc()!==u&&(s=La())!==u?(r,r=t={type:"join",ltable:t,rtable:n,op:e,on:s}):(lo=r,r=u);return r}())===u&&(t=vc())===u&&(t=function(){var t,e;t=lo,function(){var t;return 91===r.charCodeAt(lo)?(t="[",lo++):(t=u,0===vo&&Eo(Gu)),t}()!==u&&nc()!==u&&(e=wc())!==u&&nc()!==u&&function(){var t;return 93===r.charCodeAt(lo)?(t="]",lo++):(t=u,0===vo&&Eo(Hu)),t}()!==u?(t,t={type:"array",value:e}):(lo=t,t=u);return t}()),t}function vc(){var r,t,e,n,s,o,a,i;if(r=lo,(t=Lc())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=Xa())!==u&&(a=nc())!==u&&(i=Lc())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=Xa())!==u&&(a=nc())!==u&&(i=Lc())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,r=t=ht(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function Lc(){var r,t,e,n,s,o,a,i;if(r=lo,(t=Cc())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=Ka())!==u&&(a=nc())!==u&&(i=Cc())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=Ka())!==u&&(a=nc())!==u&&(i=Cc())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,r=t=ht(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function Cc(){var r,t,e;return(r=hi())===u&&(r=Ec())===u&&(r=Za())===u&&(r=pc())===u&&(r=ii())===u&&(r=lo,Jl()!==u&&nc()!==u&&(t=vc())!==u&&nc()!==u&&rc()!==u?(r,(e=t).parentheses=!0,r=e):(lo=r,r=u)),r}function dc(){var r,t,e,n,s,o,a;return r=lo,(t=si())===u&&(t=Ja()),t!==u?(e=lo,(n=nc())!==u&&(s=Zl())!==u&&(o=nc())!==u?((a=si())===u&&(a=Ja()),a!==u?e=n=[n,s,o,a]:(lo=e,e=u)):(lo=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(lo=r,r=u)):(lo=r,r=u),r}function pc(){var r,t,e;return r=lo,(t=dc())!==u&&nc()!==u&&Jl()!==u&&nc()!==u?((e=wc())===u&&(e=null),e!==u&&nc()!==u&&rc()!==u?(r,r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(lo=r,r=u)):(lo=r,r=u),r===u&&(r=lo,(t=dc())!==u&&(r,t=function(r){return{type:"function",name:r,args:null}}(t)),r=t),r}function wc(){var r,t,e,n,s,o,a,i;if(r=lo,(t=Cc())!==u){for(e=[],n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=Cc())!==u?n=s=[s,o,a,i]:(lo=n,n=u);n!==u;)e.push(n),n=lo,(s=nc())!==u&&(o=zl())!==u&&(a=nc())!==u&&(i=Cc())!==u?n=s=[s,o,a,i]:(lo=n,n=u);e!==u?(r,r=t=T(t,e)):(lo=r,r=u)}else lo=r,r=u;return r}function Ec(){var r,t,e,n,s;return r=lo,(t=Gl())!==u&&(e=Ac())!==u?(r,n=t,s=e,r=t={type:"var",...s,prefix:n}):(lo=r,r=u),r}function Ac(){var t,e,n,s,o;return t=lo,(e=si())!==u&&(n=function(){var t,e,n,s,o;t=lo,e=[],n=lo,46===r.charCodeAt(lo)?(s=".",lo++):(s=u,0===vo&&Eo(Ke));s!==u&&(o=si())!==u?n=s=[s,o]:(lo=n,n=u);for(;n!==u;)e.push(n),n=lo,46===r.charCodeAt(lo)?(s=".",lo++):(s=u,0===vo&&Eo(Ke)),s!==u&&(o=si())!==u?n=s=[s,o]:(lo=n,n=u);e!==u&&(t,e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==u?(t,s=e,o=n,xc.push(s),t=e={type:"var",name:s,members:o,prefix:null}):(lo=t,t=u),t===u&&(t=lo,(e=Ri())!==u&&(t,e={type:"var",name:e.value,members:[],quoted:null,prefix:null}),t=e),t}function hc(){var t;return(t=yc())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f,b,v;t=lo,(e=yl())===u&&(e=Tl())===u&&(e=Il())===u&&(e=Nl())===u&&(e=Rl())===u&&(e=Sl())===u&&(e=_l())===u&&(e=Ol())===u&&(e=gl());if(e!==u)if((n=nc())!==u)if((s=Jl())!==u)if((o=nc())!==u){if(a=[],Q.test(r.charAt(lo))?(i=r.charAt(lo),lo++):(i=u,0===vo&&Eo(J)),i!==u)for(;i!==u;)a.push(i),Q.test(r.charAt(lo))?(i=r.charAt(lo),lo++):(i=u,0===vo&&Eo(J));else a=u;if(a!==u)if((i=nc())!==u){if(l=lo,(c=zl())!==u)if((f=nc())!==u){if(b=[],Q.test(r.charAt(lo))?(v=r.charAt(lo),lo++):(v=u,0===vo&&Eo(J)),v!==u)for(;v!==u;)b.push(v),Q.test(r.charAt(lo))?(v=r.charAt(lo),lo++):(v=u,0===vo&&Eo(J));else b=u;b!==u?l=c=[c,f,b]:(lo=l,l=u)}else lo=l,l=u;else lo=l,l=u;l===u&&(l=null),l!==u&&(c=nc())!==u&&(f=rc())!==u&&(b=nc())!==u?((v=Tc())===u&&(v=null),v!==u?(t,L=l,C=v,e={dataType:e,length:parseInt(a.join(""),10),scale:L&&parseInt(L[2].join(""),10),parentheses:!0,suffix:C},t=e):(lo=t,t=u)):(lo=t,t=u)}else lo=t,t=u;else lo=t,t=u}else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;var L,C;if(t===u){if(t=lo,(e=yl())===u&&(e=Tl())===u&&(e=Il())===u&&(e=Nl())===u&&(e=Rl())===u&&(e=Sl())===u&&(e=_l())===u&&(e=Ol())===u&&(e=gl()),e!==u){if(n=[],Q.test(r.charAt(lo))?(s=r.charAt(lo),lo++):(s=u,0===vo&&Eo(J)),s!==u)for(;s!==u;)n.push(s),Q.test(r.charAt(lo))?(s=r.charAt(lo),lo++):(s=u,0===vo&&Eo(J));else n=u;n!==u&&(s=nc())!==u?((o=Tc())===u&&(o=null),o!==u?(t,e=function(r,t,e){return{dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(lo=t,t=u)):(lo=t,t=u)}else lo=t,t=u;t===u&&(t=lo,(e=yl())===u&&(e=Tl())===u&&(e=Il())===u&&(e=Nl())===u&&(e=Rl())===u&&(e=Sl())===u&&(e=_l())===u&&(e=Ol())===u&&(e=gl()),e!==u&&(n=nc())!==u?((s=Tc())===u&&(s=null),s!==u&&(o=nc())!==u?(t,e=function(r,t){return{dataType:r,suffix:t}}(e,s),t=e):(lo=t,t=u)):(lo=t,t=u))}return t}())===u&&(t=function(){var t,e,n,s;t=lo,(e=xl())===u&&(e=Ul())===u&&(e=kl())===u&&(e=Dl());e!==u&&nc()!==u&&Jl()!==u&&nc()!==u?(oo.test(r.charAt(lo))?(n=r.charAt(lo),lo++):(n=u,0===vo&&Eo(ao)),n!==u&&nc()!==u&&rc()!==u&&nc()!==u?((s=Tc())===u&&(s=null),s!==u?(t,e={dataType:e,length:parseInt(n,10),parentheses:!0},t=e):(lo=t,t=u)):(lo=t,t=u)):(lo=t,t=u);t===u&&(t=lo,(e=xl())===u&&(e=Ul())===u&&(e=kl())===u&&(e=Dl()),e!==u&&(t,e=uo(e)),t=e);return t}())===u&&(t=function(){var t,e;t=lo,(e=function(){var t,e,n,s;return t=lo,"json"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(Ss)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="JSON"):(lo=t,t=u)):(lo=t,t=u),t}())!==u&&(t,e=uo(e));return t=e}())===u&&(t=function(){var t,e;t=lo,(e=function(){var t,e,n,s;return t=lo,"tinytext"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(gs)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="TINYTEXT"):(lo=t,t=u)):(lo=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=lo,"text"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(xs)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="TEXT"):(lo=t,t=u)):(lo=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=lo,"mediumtext"===r.substr(lo,10).toLowerCase()?(e=r.substr(lo,10),lo+=10):(e=u,0===vo&&Eo(Us)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="MEDIUMTEXT"):(lo=t,t=u)):(lo=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=lo,"longtext"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(Ms)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="LONGTEXT"):(lo=t,t=u)):(lo=t,t=u),t}());e!==u&&(t,e=io(e));return t=e}())===u&&(t=function(){var t,e,n;t=lo,(e=function(){var t,e,n,s;return t=lo,"enum"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(Ds)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="ENUM"):(lo=t,t=u)):(lo=t,t=u),t}())!==u&&nc()!==u&&(n=_a())!==u?(t,s=e,(o=n).parentheses=!0,t=e={dataType:s,expr:o}):(lo=t,t=u);var s,o;return t}())===u&&(t=function(){var t,e;t=lo,"boolean"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(Ju));e!==u&&(t,e={dataType:"BOOLEAN"});return t=e}())===u&&(t=function(){var t,e;t=lo,"binary"===r.substr(lo,6).toLowerCase()?(e=r.substr(lo,6),lo+=6):(e=u,0===vo&&Eo(we));e!==u&&(t,e={dataType:"BINARY"});(t=e)===u&&(t=lo,"varbinary"===r.substr(lo,9).toLowerCase()?(e=r.substr(lo,9),lo+=9):(e=u,0===vo&&Eo(so)),e!==u&&(t,e={dataType:"VARBINARY"}),t=e);return t}())===u&&(t=function(){var t,e;t=lo,"blob"===r.substr(lo,4).toLowerCase()?(e=r.substr(lo,4),lo+=4):(e=u,0===vo&&Eo(ro));e===u&&("tinyblob"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(to)),e===u&&("mediumblob"===r.substr(lo,10).toLowerCase()?(e=r.substr(lo,10),lo+=10):(e=u,0===vo&&Eo(eo)),e===u&&("longblob"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(no)))));e!==u&&(t,e={dataType:e.toUpperCase()});return t=e}())===u&&(t=function(){var t,e;t=lo,(e=function(){var t,e,n,s;return t=lo,"geometry"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(fu)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="GEOMETRY"):(lo=t,t=u)):(lo=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=lo,"point"===r.substr(lo,5).toLowerCase()?(e=r.substr(lo,5),lo+=5):(e=u,0===vo&&Eo(bu)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="POINT"):(lo=t,t=u)):(lo=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=lo,"linestring"===r.substr(lo,10).toLowerCase()?(e=r.substr(lo,10),lo+=10):(e=u,0===vo&&Eo(vu)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="LINESTRING"):(lo=t,t=u)):(lo=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=lo,"polygon"===r.substr(lo,7).toLowerCase()?(e=r.substr(lo,7),lo+=7):(e=u,0===vo&&Eo(Lu)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="POLYGON"):(lo=t,t=u)):(lo=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=lo,"multipoint"===r.substr(lo,10).toLowerCase()?(e=r.substr(lo,10),lo+=10):(e=u,0===vo&&Eo(Cu)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="MULTIPOINT"):(lo=t,t=u)):(lo=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=lo,"multilinestring"===r.substr(lo,15).toLowerCase()?(e=r.substr(lo,15),lo+=15):(e=u,0===vo&&Eo(du)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="MULTILINESTRING"):(lo=t,t=u)):(lo=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=lo,"multipolygon"===r.substr(lo,12).toLowerCase()?(e=r.substr(lo,12),lo+=12):(e=u,0===vo&&Eo(pu)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="MULTIPOLYGON"):(lo=t,t=u)):(lo=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=lo,"geometrycollection"===r.substr(lo,18).toLowerCase()?(e=r.substr(lo,18),lo+=18):(e=u,0===vo&&Eo(wu)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="GEOMETRYCOLLECTION"):(lo=t,t=u)):(lo=t,t=u),t}());e!==u&&(t,e=io(e));return t=e}()),t}function yc(){var t,e,n,s;if(t=lo,(e=Al())===u&&(e=hl()),e!==u)if(nc()!==u)if(Jl()!==u)if(nc()!==u){if(n=[],Q.test(r.charAt(lo))?(s=r.charAt(lo),lo++):(s=u,0===vo&&Eo(J)),s!==u)for(;s!==u;)n.push(s),Q.test(r.charAt(lo))?(s=r.charAt(lo),lo++):(s=u,0===vo&&Eo(J));else n=u;n!==u&&(s=nc())!==u&&rc()!==u?(t,t=e={dataType:e,length:parseInt(n.join(""),10)}):(lo=t,t=u)}else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;else lo=t,t=u;return t===u&&(t=lo,(e=Al())!==u&&(t,e=uo(e)),(t=e)===u&&(t=lo,(e=hl())!==u&&(t,e=uo(e)),t=e)),t}function Tc(){var t,e,n;return t=lo,(e=ml())===u&&(e=null),e!==u&&nc()!==u?((n=function(){var t,e,n,s;return t=lo,"zerofill"===r.substr(lo,8).toLowerCase()?(e=r.substr(lo,8),lo+=8):(e=u,0===vo&&Eo(Ns)),e!==u?(n=lo,vo++,s=ui(),vo--,s===u?n=void 0:(lo=n,n=u),n!==u?(t,t=e="ZEROFILL"):(lo=t,t=u)):(lo=t,t=u),t}())===u&&(n=null),n!==u?(t,t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(lo=t,t=u)):(lo=t,t=u),t}const mc={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,BOOLEAN:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CROSS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FOR:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTERSECT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NATURAL:!0,MINUS:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,RIGHT:!0,READ:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,STATUS:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Ic(r,t){return{type:"unary_expr",operator:r,expr:t}}function Nc(r,t,e){return{type:"binary_expr",operator:r,left:t,right:e}}function Rc(r){const t=n(Number.MAX_SAFE_INTEGER);return!(n(r)<t)}function Sc(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)delete t[r][e].tableList,delete t[r][e].columnList,n.push(t[r][e]);return n}function _c(r,t){let e=r;for(let r=0;r<t.length;r++)e=Nc(t[r][1],e,t[r][3]);return e}function Oc(r){const t=kc[r];return t||(r||null)}function gc(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=Oc(r[1])),t.add(r.join("::"))}return Array.from(t)}let xc=[];const Uc=new Set,Mc=new Set,kc={};if((e=a())!==u&&lo===r.length)return e;throw e!==u&&lo<r.length&&Eo({type:"end"}),Ao(bo,fo<r.length?r.charAt(fo):null,fo<r.length?wo(fo,fo+1):wo(fo,fo))}}},function(r,t,e){"use strict";var n=e(0);function s(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,s)}!function(r,t){function e(){this.constructor=r}e.prototype=t.prototype,r.prototype=new e}(s,Error),s.buildMessage=function(r,t){var e={literal:function(r){return'"'+s(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?u(r.parts[t][0])+"-"+u(r.parts[t][1]):u(r.parts[t]);return"["+(r.inverted?"^":"")+e+"]"},any:function(r){return"any character"},end:function(r){return"end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function s(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}function u(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}return"Expected "+function(r){var t,n,s,u=new Array(r.length);for(t=0;t<r.length;t++)u[t]=(s=r[t],e[s.type](s));if(u.sort(),u.length>0){for(t=1,n=1;t<u.length;t++)u[t-1]!==u[t]&&(u[n]=u[t],n++);u.length=n}switch(u.length){case 1:return u[0];case 2:return u[0]+" or "+u[1];default:return u.slice(0,-1).join(", ")+", or "+u[u.length-1]}}(r)+" but "+function(r){return r?'"'+s(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:s,parse:function(r,t){t=void 0!==t?t:{};var e,u={},o={start:Mo},a=Mo,i=So("IF",!0),l=So("EXTENSION",!0),c=So("SCHEMA",!0),f=So("VERSION",!0),b=So("INCREMENT",!0),v=So("MINVALUE",!0),L=function(r,t){return{resource:"sequence",prefix:r.toLowerCase(),value:t}},C=So("NO",!0),d=So("MAXVALUE",!0),p=So("START",!0),w=So("CACHE",!0),E=So("CYCLE",!0),A=So("OWNED",!0),h=So("NONE",!0),y=So("NULLS",!0),T=So("FIRST",!0),m=So("LAST",!0),I=So("AUTO_INCREMENT",!0),N=So("UNIQUE",!0),R=So("KEY",!0),S=So("PRIMARY",!0),_=So("COLUMN_FORMAT",!0),O=So("FIXED",!0),g=So("DYNAMIC",!0),x=So("DEFAULT",!0),U=So("STORAGE",!0),M=So("DISK",!0),k=So("MEMORY",!0),D=So("ALGORITHM",!0),$=So("INSTANT",!0),P=So("INPLACE",!0),F=So("COPY",!0),G=So("LOCK",!0),H=So("SHARED",!0),j=So("EXCLUSIVE",!0),Y=So("PRIMARY KEY",!0),B=So("FOREIGN KEY",!0),W=So("MATCH FULL",!0),X=So("MATCH PARTIAL",!0),V=So("MATCH SIMPLE",!0),K=So("ON DELETE",!0),q=So("ON UPDATE",!0),Z=So("RESTRICT",!0),z=So("CASCADE",!0),Q=So("SET NULL",!0),J=So("NO ACTION",!0),rr=So("SET DEFAULT",!0),tr=So("TRIGGER",!0),er=So("BEFORE",!0),nr=So("AFTER",!0),sr=So("INSTEAD OF",!0),ur=So("ON",!0),or=So("EXECUTE",!0),ar=So("PROCEDURE",!0),ir=So("OF",!0),lr=So("NOT",!0),cr=So("DEFERRABLE",!0),fr=So("INITIALLY IMMEDIATE",!0),br=So("INITIALLY DEFERRED",!0),vr=So("FOR",!0),Lr=So("EACH",!0),Cr=So("ROW",!0),dr=So("STATEMENT",!0),pr=So("CHARACTER",!0),wr=So("SET",!0),Er=So("CHARSET",!0),Ar=So("COLLATE",!0),hr=So("AVG_ROW_LENGTH",!0),yr=So("KEY_BLOCK_SIZE",!0),Tr=So("MAX_ROWS",!0),mr=So("MIN_ROWS",!0),Ir=So("STATS_SAMPLE_PAGES",!0),Nr=So("CONNECTION",!0),Rr=So("COMPRESSION",!0),Sr=So("'",!1),_r=So("ZLIB",!0),Or=So("LZ4",!0),gr=So("ENGINE",!0),xr=So("IN",!0),Ur=So("ACCESS SHARE",!0),Mr=So("ROW SHARE",!0),kr=So("ROW EXCLUSIVE",!0),Dr=So("SHARE UPDATE EXCLUSIVE",!0),$r=So("SHARE ROW EXCLUSIVE",!0),Pr=So("ACCESS EXCLUSIVE",!0),Fr=So("SHARE",!0),Gr=So("MODE",!0),Hr=So("NOWAIT",!0),jr=So("TABLES",!0),Yr=So("PREPARE",!0),Br=So(";",!1),Wr=So("(",!1),Xr=So(")",!1),Vr=So('"',!1),Kr=So("OUTFILE",!0),qr=So("DUMPFILE",!0),Zr=So("BTREE",!0),zr=So("HASH",!0),Qr=So("GIST",!0),Jr=So("GIN",!0),rt=So("WITH",!0),tt=So("PARSER",!0),et=So("VISIBLE",!0),nt=So("INVISIBLE",!0),st=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;Nf[t]=t,e&&(Nf[e]=t),function(r){const t=hf(r);r.clear(),t.forEach(t=>r.add(t))}(If)}),t},ut=So("LATERAL",!0),ot=So("TABLESAMPLE",!0),at=So("REPEATABLE",!0),it=So("CROSS",!0),lt=So("FOLLOWING",!0),ct=So("PRECEDING",!0),ft=So("CURRENT",!0),bt=So("UNBOUNDED",!0),vt=So("=",!1),Lt=(So("CONFLICT",!0),function(r,t){return Ef(r,t)}),Ct=So("!",!1),dt=So(">=",!1),pt=So(">",!1),wt=So("<=",!1),Et=So("<>",!1),At=So("<",!1),ht=So("!=",!1),yt=So("SIMILAR",!0),Tt=So("ESCAPE",!0),mt=So("@>",!1),It=So("<@",!1),Nt=So("?",!1),Rt=So("?|",!1),St=So("?&",!1),_t=So("#-",!1),Ot=So("+",!1),gt=So("-",!1),xt=So("*",!1),Ut=So("/",!1),Mt=So("%",!1),kt=So("$",!1),Dt=So("E",!0),$t=function(r){return!0===Lf[r.toUpperCase()]},Pt=/^[^"]/,Ft=_o(['"'],!0,!1),Gt=function(r){return r.join("")},Ht=/^[^']/,jt=_o(["'"],!0,!1),Yt=So("`",!1),Bt=/^[^`]/,Wt=_o(["`"],!0,!1),Xt=/^[A-Za-z_]/,Vt=_o([["A","Z"],["a","z"],"_"],!1,!1),Kt=/^[A-Za-z0-9_\-]/,qt=_o([["A","Z"],["a","z"],["0","9"],"_","-"],!1,!1),Zt=/^[A-Za-z0-9_]/,zt=_o([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),Qt=So(":",!1),Jt=So("OVER",!0),re=So("FILTER",!0),te=So("FIRST_VALUE",!0),ee=So("LAST_VALUE",!0),ne=So("ROW_NUMBER",!0),se=So("DENSE_RANK",!0),ue=So("RANK",!0),oe=So("LAG",!0),ae=So("LEAD",!0),ie=So("NTH_VALUE",!0),le=So("IGNORE",!0),ce=So("RESPECT",!0),fe=So("percentile_cont",!0),be=So("percentile_disc",!0),ve=So("within",!0),Le=So("mode",!0),Ce=So("SEPARATOR",!0),de=So("BOTH",!0),pe=So("LEADING",!0),we=So("TRAILING",!0),Ee=So("trim",!0),Ae=So("now",!0),he=So("at",!0),ye=So("zone",!0),Te=So("CENTURY",!0),me=So("DAY",!0),Ie=So("DATE",!0),Ne=So("DECADE",!0),Re=So("DOW",!0),Se=So("DOY",!0),_e=So("EPOCH",!0),Oe=So("HOUR",!0),ge=So("ISODOW",!0),xe=So("ISOYEAR",!0),Ue=So("MICROSECONDS",!0),Me=So("MILLENNIUM",!0),ke=So("MILLISECONDS",!0),De=So("MINUTE",!0),$e=So("MONTH",!0),Pe=So("QUARTER",!0),Fe=So("SECOND",!0),Ge=So("TIMEZONE",!0),He=So("TIMEZONE_HOUR",!0),je=So("TIMEZONE_MINUTE",!0),Ye=So("WEEK",!0),Be=So("YEAR",!0),We=/^[\n]/,Xe=_o(["\n"],!1,!1),Ve=/^[^"\\\0-\x1F\x7F]/,Ke=_o(['"',"\\",["\0",""],""],!0,!1),qe=/^[^'\\]/,Ze=_o(["'","\\"],!0,!1),ze=So("\\'",!1),Qe=So('\\"',!1),Je=So("\\\\",!1),rn=So("\\/",!1),tn=So("\\b",!1),en=So("\\f",!1),nn=So("\\n",!1),sn=So("\\r",!1),un=So("\\t",!1),on=So("\\u",!1),an=So("\\",!1),ln=So("''",!1),cn=/^[\n\r]/,fn=_o(["\n","\r"],!1,!1),bn=So(".",!1),vn=/^[0-9]/,Ln=_o([["0","9"]],!1,!1),Cn=/^[0-9a-fA-F]/,dn=_o([["0","9"],["a","f"],["A","F"]],!1,!1),pn=/^[eE]/,wn=_o(["e","E"],!1,!1),En=/^[+\-]/,An=_o(["+","-"],!1,!1),hn=So("NULL",!0),yn=So("NOT NULL",!0),Tn=So("TRUE",!0),mn=So("TO",!0),In=So("FALSE",!0),Nn=So("SHOW",!0),Rn=So("DROP",!0),Sn=So("USE",!0),_n=So("ALTER",!0),On=So("SELECT",!0),gn=So("UPDATE",!0),xn=So("CREATE",!0),Un=So("TEMPORARY",!0),Mn=So("TEMP",!0),kn=So("DELETE",!0),Dn=So("INSERT",!0),$n=So("RECURSIVE",!1),Pn=So("REPLACE",!0),Fn=So("RETURNING",!0),Gn=So("RENAME",!0),Hn=(So("EXPLAIN",!0),So("PARTITION",!0)),jn=So("INTO",!0),Yn=So("FROM",!0),Bn=So("AS",!0),Wn=So("TABLE",!0),Xn=So("DATABASE",!0),Vn=So("SCHEME",!0),Kn=So("SEQUENCE",!0),qn=So("TABLESPACE",!0),Zn=So("DEALLOCATE",!0),zn=So("LEFT",!0),Qn=So("RIGHT",!0),Jn=So("FULL",!0),rs=So("INNER",!0),ts=So("JOIN",!0),es=So("OUTER",!0),ns=So("UNION",!0),ss=So("VALUES",!0),us=So("USING",!0),os=So("WHERE",!0),as=So("GROUP",!0),is=So("BY",!0),ls=So("ORDER",!0),cs=So("HAVING",!0),fs=So("WINDOW",!0),bs=So("LIMIT",!0),vs=So("OFFSET",!0),Ls=So("ASC",!0),Cs=So("DESC",!0),ds=So("ALL",!0),ps=So("DISTINCT",!0),ws=So("BETWEEN",!0),Es=So("IS",!0),As=So("LIKE",!0),hs=So("ILIKE",!0),ys=So("EXISTS",!0),Ts=So("AND",!0),ms=So("OR",!0),Is=So("ARRAY",!0),Ns=So("ARRAY_AGG",!0),Rs=So("COUNT",!0),Ss=So("GROUP_CONCAT",!0),_s=So("MAX",!0),Os=So("MIN",!0),gs=So("SUM",!0),xs=So("AVG",!0),Us=So("EXTRACT",!0),Ms=So("CALL",!0),ks=So("CASE",!0),Ds=So("WHEN",!0),$s=So("THEN",!0),Ps=So("ELSE",!0),Fs=So("END",!0),Gs=So("CAST",!0),Hs=So("BOOL",!0),js=So("BOOLEAN",!0),Ys=So("CHAR",!0),Bs=So("VARCHAR",!0),Ws=So("NUMERIC",!0),Xs=So("DECIMAL",!0),Vs=So("SIGNED",!0),Ks=So("UNSIGNED",!0),qs=So("INT",!0),Zs=So("ZEROFILL",!0),zs=So("INTEGER",!0),Qs=So("JSON",!0),Js=So("JSONB",!0),ru=So("GEOMETRY",!0),tu=So("SMALLINT",!0),eu=So("SERIAL",!0),nu=So("TINYINT",!0),su=So("TINYTEXT",!0),uu=So("TEXT",!0),ou=So("MEDIUMTEXT",!0),au=So("LONGTEXT",!0),iu=So("BIGINT",!0),lu=So("ENUM",!0),cu=So("FLOAT",!0),fu=So("DOUBLE",!0),bu=So("BIGSERIAL",!0),vu=So("REAL",!0),Lu=So("DATETIME",!0),Cu=So("ROWS",!0),du=So("TIME",!0),pu=So("TIMESTAMP",!0),wu=So("TRUNCATE",!0),Eu=So("USER",!0),Au=So("UUID",!0),hu=So("CURRENT_DATE",!0),yu=(So("ADDDATE",!0),So("INTERVAL",!0)),Tu=So("CURRENT_TIME",!0),mu=So("CURRENT_TIMESTAMP",!0),Iu=So("CURRENT_USER",!0),Nu=So("SESSION_USER",!0),Ru=So("SYSTEM_USER",!0),Su=So("GLOBAL",!0),_u=So("SESSION",!0),Ou=So("LOCAL",!0),gu=So("PERSIST",!0),xu=So("PERSIST_ONLY",!0),Uu=So("@",!1),Mu=So("@@",!1),ku=So("$$",!1),Du=So("return",!0),$u=So(":=",!1),Pu=So("::",!1),Fu=So("DUAL",!0),Gu=So("ADD",!0),Hu=So("COLUMN",!0),ju=So("INDEX",!0),Yu=So("FULLTEXT",!0),Bu=So("SPATIAL",!0),Wu=So("COMMENT",!0),Xu=So("CONSTRAINT",!0),Vu=So("CONCURRENTLY",!0),Ku=So("REFERENCES",!0),qu=So("SQL_CALC_FOUND_ROWS",!0),Zu=So("SQL_CACHE",!0),zu=So("SQL_NO_CACHE",!0),Qu=So("SQL_SMALL_RESULT",!0),Ju=So("SQL_BIG_RESULT",!0),ro=So("SQL_BUFFER_RESULT",!0),to=So(",",!1),eo=So("[",!1),no=So("]",!1),so=So("->",!1),uo=So("->>",!1),oo=So("#>",!1),ao=So("#>>",!1),io=So("||",!1),lo=So("&&",!1),co=So("/*",!1),fo=So("*/",!1),bo=So("--",!1),vo=(So("#",!1),{type:"any"}),Lo=/^[ \t\n\r]/,Co=_o([" ","\t","\n","\r"],!1,!1),po=/^[^$]/,wo=_o(["$"],!0,!1),Eo=So("bytea",!0),Ao=function(r){return{dataType:r}},ho=So("WITHOUT",!0),yo=So("ZONE",!0),To=0,mo=[{line:1,column:1}],Io=0,No=[],Ro=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule]}function So(r,t){return{type:"literal",text:r,ignoreCase:t}}function _o(r,t,e){return{type:"class",parts:r,inverted:t,ignoreCase:e}}function Oo(t){var e,n=mo[t];if(n)return n;for(e=t-1;!mo[e];)e--;for(n={line:(n=mo[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return mo[t]=n,n}function go(r,t){var e=Oo(r),n=Oo(t);return{start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function xo(r){To<Io||(To>Io&&(Io=To,No=[]),No.push(r))}function Uo(r,t,e){return new s(s.buildMessage(r,t),r,t,e)}function Mo(){var r,t;return r=To,Bc()!==u?((t=function(){var r,t,e,n,s,o,a,i;if(r=To,(t=Do())!==u){if(e=[],n=To,(s=Bc())!==u&&(o=Fc())!==u&&(a=Bc())!==u&&(i=Do())!==u?n=s=[s,o,a,i]:(To=n,n=u),n!==u)for(;n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Fc())!==u&&(a=Bc())!==u&&(i=Do())!==u?n=s=[s,o,a,i]:(To=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return{tableList:Array.from(mf),columnList:hf(If),ast:e}}(t,e),r=t):(To=r,r=u)}else To=r,r=u;return r}())===u&&(t=ko())===u&&(t=Do()),t!==u?(r,r=t):(To=r,r=u)):(To=r,r=u),r}function ko(){var t;return(t=function(){var r,t,e,n,s,o;r=To,(t=ul())!==u&&Bc()!==u&&(e=Al())!==u&&Bc()!==u&&(n=Ia())!==u?(r,a=t,i=e,(l=n)&&l.forEach(r=>mf.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(mf),columnList:hf(If),ast:{type:a.toLowerCase(),keyword:i.toLowerCase(),name:l}},r=t):(To=r,r=u);var a,i,l;r===u&&(r=To,(t=ul())!==u&&Bc()!==u&&(e=Rc())!==u&&Bc()!==u&&(n=pi())!==u&&Bc()!==u&&hl()!==u&&Bc()!==u&&(s=_a())!==u&&Bc()!==u?((o=function(){var r,t,e,n,s,o;r=To,(t=Ko())===u&&(t=qo());if(t!==u){for(e=[],n=To,(s=Bc())!==u?((o=Ko())===u&&(o=qo()),o!==u?n=s=[s,o]:(To=n,n=u)):(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u?((o=Ko())===u&&(o=qo()),o!==u?n=s=[s,o]:(To=n,n=u)):(To=n,n=u);e!==u?(r,t=wf(t,e,1),r=t):(To=r,r=u)}else To=r,r=u;return r}())===u&&(o=null),o!==u&&Bc()!==u?(r,t=function(r,t,e,n,s){return{tableList:Array.from(mf),columnList:hf(If),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:s}}}(t,e,n,s,o),r=t):(To=r,r=u)):(To=r,r=u));return r}())===u&&(t=function(){var t;(t=function(){var r,t,e,n,s,o,a,i,l,c;r=To,(t=il())!==u&&Bc()!==u?((e=ll())===u&&(e=null),e!==u&&Bc()!==u&&Al()!==u&&Bc()!==u?((n=Fo())===u&&(n=null),n!==u&&Bc()!==u&&(s=Ia())!==u&&Bc()!==u&&(o=function(){var r,t,e,n,s,o,a,i,l;if(r=To,(t=kc())!==u)if(Bc()!==u)if((e=jo())!==u){for(n=[],s=To,(o=Bc())!==u&&(a=Uc())!==u&&(i=Bc())!==u&&(l=jo())!==u?s=o=[o,a,i,l]:(To=s,s=u);s!==u;)n.push(s),s=To,(o=Bc())!==u&&(a=Uc())!==u&&(i=Bc())!==u&&(l=jo())!==u?s=o=[o,a,i,l]:(To=s,s=u);n!==u&&(s=Bc())!==u&&(o=Dc())!==u?(r,t=wf(e,n),r=t):(To=r,r=u)}else To=r,r=u;else To=r,r=u;else To=r,r=u;return r}())!==u&&Bc()!==u?((a=function(){var r,t,e,n,s,o,a,i;if(r=To,(t=sa())!==u){for(e=[],n=To,(s=Bc())!==u?((o=Uc())===u&&(o=null),o!==u&&(a=Bc())!==u&&(i=sa())!==u?n=s=[s,o,a,i]:(To=n,n=u)):(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u?((o=Uc())===u&&(o=null),o!==u&&(a=Bc())!==u&&(i=sa())!==u?n=s=[s,o,a,i]:(To=n,n=u)):(To=n,n=u);e!==u?(r,t=wf(t,e),r=t):(To=r,r=u)}else To=r,r=u;return r}())===u&&(a=null),a!==u&&Bc()!==u?((i=Ll())===u&&(i=bl()),i===u&&(i=null),i!==u&&Bc()!==u?((l=El())===u&&(l=null),l!==u&&Bc()!==u?((c=Po())===u&&(c=null),c!==u?(r,f=t,b=e,v=n,C=o,d=a,p=i,w=l,E=c,(L=s)&&L.forEach(r=>mf.add(`create::${r.db}::${r.table}`)),t={tableList:Array.from(mf),columnList:hf(If),ast:{type:f[0].toLowerCase(),keyword:"table",temporary:b&&b.toLowerCase(),if_not_exists:v,table:L,ignore_replace:p&&p[0].toLowerCase(),as:w&&w[0].toLowerCase(),query_expr:E&&E.ast,create_definitions:C,table_options:d}},r=t):(To=r,r=u)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u);var f,b,v,L,C,d,p,w,E;r===u&&(r=To,(t=il())!==u&&Bc()!==u?((e=ll())===u&&(e=null),e!==u&&Bc()!==u&&Al()!==u&&Bc()!==u?((n=Fo())===u&&(n=null),n!==u&&Bc()!==u&&(s=Ia())!==u&&Bc()!==u&&(o=function r(){var t,e;(t=function(){var r,t;r=To,Dl()!==u&&Bc()!==u&&(t=Ia())!==u?(r,r={type:"like",table:t}):(To=r,r=u);return r}())===u&&(t=To,kc()!==u&&Bc()!==u&&(e=r())!==u&&Bc()!==u&&Dc()!==u?(t,(n=e).parentheses=!0,t=n):(To=t,t=u));var n;return t}())!==u?(r,t=function(r,t,e,n,s){return n&&n.forEach(r=>mf.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(mf),columnList:hf(If),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t.toLowerCase(),if_not_exists:e,table:n,like:s}}}(t,e,n,s,o),r=t):(To=r,r=u)):(To=r,r=u)):(To=r,r=u));return r}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C,d,p,w,E;t=To,(e=il())!==u&&Bc()!==u?((n=gc())===u&&(n=null),n!==u&&Bc()!==u?("trigger"===r.substr(To,7).toLowerCase()?(s=r.substr(To,7),To+=7):(s=u,0===Ro&&xo(tr)),s!==u&&Bc()!==u&&(o=mi())!==u&&Bc()!==u?("before"===r.substr(To,6).toLowerCase()?(a=r.substr(To,6),To+=6):(a=u,0===Ro&&xo(er)),a===u&&("after"===r.substr(To,5).toLowerCase()?(a=r.substr(To,5),To+=5):(a=u,0===Ro&&xo(nr)),a===u&&("instead of"===r.substr(To,10).toLowerCase()?(a=r.substr(To,10),To+=10):(a=u,0===Ro&&xo(sr)))),a!==u&&Bc()!==u&&(i=function(){var r,t,e,n,s,o,a,i;if(r=To,(t=ta())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Hl())!==u&&(a=Bc())!==u&&(i=ta())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Hl())!==u&&(a=Bc())!==u&&(i=ta())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,t=wf(t,e),r=t):(To=r,r=u)}else To=r,r=u;return r}())!==u&&Bc()!==u?("on"===r.substr(To,2).toLowerCase()?(l=r.substr(To,2),To+=2):(l=u,0===Ro&&xo(ur)),l!==u&&Bc()!==u&&(c=_a())!==u&&Bc()!==u?(f=To,(b=pl())!==u&&(v=Bc())!==u&&(L=_a())!==u?f=b=[b,v,L]:(To=f,f=u),f===u&&(f=null),f!==u&&(b=Bc())!==u?((v=function(){var t,e,n,s,o;t=To,e=To,"not"===r.substr(To,3).toLowerCase()?(n=r.substr(To,3),To+=3):(n=u,0===Ro&&xo(lr));n===u&&(n=null);n!==u&&(s=Bc())!==u?("deferrable"===r.substr(To,10).toLowerCase()?(o=r.substr(To,10),To+=10):(o=u,0===Ro&&xo(cr)),o!==u?e=n=[n,s,o]:(To=e,e=u)):(To=e,e=u);e!==u&&(n=Bc())!==u?("initially immediate"===r.substr(To,19).toLowerCase()?(s=r.substr(To,19),To+=19):(s=u,0===Ro&&xo(fr)),s===u&&("initially deferred"===r.substr(To,18).toLowerCase()?(s=r.substr(To,18),To+=18):(s=u,0===Ro&&xo(br))),s!==u?(t,i=s,e={keyword:(a=e)&&a[0]?a[0].toLowerCase()+" deferrable":"deferrable",args:i&&i.toLowerCase()},t=e):(To=t,t=u)):(To=t,t=u);var a,i;return t}())===u&&(v=null),v!==u&&(L=Bc())!==u?((C=function(){var t,e,n,s;t=To,"for"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(vr));e!==u&&Bc()!==u?("each"===r.substr(To,4).toLowerCase()?(n=r.substr(To,4),To+=4):(n=u,0===Ro&&xo(Lr)),n===u&&(n=null),n!==u&&Bc()!==u?("row"===r.substr(To,3).toLowerCase()?(s=r.substr(To,3),To+=3):(s=u,0===Ro&&xo(Cr)),s===u&&("statement"===r.substr(To,9).toLowerCase()?(s=r.substr(To,9),To+=9):(s=u,0===Ro&&xo(dr))),s!==u?(t,o=e,i=s,e={keyword:(a=n)?`${o.toLowerCase()} ${a.toLowerCase()}`:o.toLowerCase(),args:i.toLowerCase()},t=e):(To=t,t=u)):(To=t,t=u)):(To=t,t=u);var o,a,i;return t}())===u&&(C=null),C!==u&&Bc()!==u?((d=function(){var r,t;r=To,Bl()!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(t=ni())!==u&&Bc()!==u&&Dc()!==u?(r,r={type:"when",cond:t,parentheses:!0}):(To=r,r=u);return r}())===u&&(d=null),d!==u&&Bc()!==u?("execute"===r.substr(To,7).toLowerCase()?(p=r.substr(To,7),To+=7):(p=u,0===Ro&&xo(or)),p!==u&&Bc()!==u?("procedure"===r.substr(To,9).toLowerCase()?(w=r.substr(To,9),To+=9):(w=u,0===Ro&&xo(ar)),w!==u&&Bc()!==u&&(E=sf())!==u?(t,A=n,h=s,T=i,m=c,I=f,N=v,R=C,S=d,_=E,e={type:"create",constraint:o,location:(y=a)&&y.toLowerCase(),events:T,table:m,from:I&&I[2],deferrable:N,for_each:R,when:S,execute:{keyword:"execute procedure",expr:_},constraint_type:h&&h.toLowerCase(),keyword:h&&h.toLowerCase(),constraint_kw:A&&A.toLowerCase(),resource:"constraint"},t=e):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u);var A,h,y,T,m,I,N,R,S,_;return t}())===u&&(t=function(){var t,e,n,s,o,a,i,b,v,L,C,d,p,w;t=To,(e=il())!==u&&Bc()!==u?("extension"===r.substr(To,9).toLowerCase()?(n=r.substr(To,9),To+=9):(n=u,0===Ro&&xo(l)),n!==u&&Bc()!==u?((s=Fo())===u&&(s=null),s!==u&&Bc()!==u?((o=mi())===u&&(o=Bi()),o!==u&&Bc()!==u?((a=Nl())===u&&(a=null),a!==u&&Bc()!==u?(i=To,"schema"===r.substr(To,6).toLowerCase()?(b=r.substr(To,6),To+=6):(b=u,0===Ro&&xo(c)),b!==u&&(v=Bc())!==u&&(L=mi())!==u?i=b=[b,v,L]:(To=i,i=u),i===u&&(i=Bi()),i===u&&(i=null),i!==u&&(b=Bc())!==u?(v=To,"version"===r.substr(To,7).toLowerCase()?(L=r.substr(To,7),To+=7):(L=u,0===Ro&&xo(f)),L!==u&&(C=Bc())!==u?((d=mi())===u&&(d=Bi()),d!==u?v=L=[L,C,d]:(To=v,v=u)):(To=v,v=u),v===u&&(v=null),v!==u&&(L=Bc())!==u?(C=To,(d=pl())!==u&&(p=Bc())!==u?((w=mi())===u&&(w=Bi()),w!==u?C=d=[d,p,w]:(To=C,C=u)):(To=C,C=u),C===u&&(C=null),C!==u?(t,E=s,A=o,h=a,y=i,T=v,m=C,e={type:"create",keyword:n.toLowerCase(),if_not_exists:E,extension:yf(A),with:h&&h[0].toLowerCase(),schema:yf(y&&y[2].toLowerCase()),version:yf(T&&T[2]),from:yf(m&&m[2])},t=e):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u);var E,A,h,y,T,m;return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C,d,p,w,E;t=To,(e=il())!==u&&Bc()!==u?((n=_c())===u&&(n=null),n!==u&&Bc()!==u&&(s=Rc())!==u&&Bc()!==u?((o=function(){var t,e,n,s;t=To,"concurrently"===r.substr(To,12).toLowerCase()?(e=r.substr(To,12),To+=12):(e=u,0===Ro&&xo(Vu));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="CONCURRENTLY"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(o=null),o!==u&&Bc()!==u?((a=Ei())===u&&(a=null),a!==u&&Bc()!==u&&(i=hl())!==u&&Bc()!==u&&(l=_a())!==u&&Bc()!==u?((c=ya())===u&&(c=null),c!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(f=function(){var r,t,e,n,s,o,a,i;if(r=To,(t=Ho())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=Ho())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=Ho())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,t=wf(t,e),r=t):(To=r,r=u)}else To=r,r=u;return r}())!==u&&Bc()!==u&&Dc()!==u&&Bc()!==u?(b=To,(v=Nl())!==u&&(L=Bc())!==u&&(C=kc())!==u&&(d=Bc())!==u&&(p=function(){var r,t,e,n,s,o,a,i;if(r=To,(t=ma())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=ma())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=ma())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,t=wf(t,e),r=t):(To=r,r=u)}else To=r,r=u;return r}())!==u&&(w=Bc())!==u&&(E=Dc())!==u?b=v=[v,L,C,d,p,w,E]:(To=b,b=u),b===u&&(b=null),b!==u&&(v=Bc())!==u?(L=To,(C=function(){var t,e,n,s;t=To,"tablespace"===r.substr(To,10).toLowerCase()?(e=r.substr(To,10),To+=10):(e=u,0===Ro&&xo(qn));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="TABLESPACE"):(To=t,t=u)):(To=t,t=u);return t}())!==u&&(d=Bc())!==u&&(p=mi())!==u?L=C=[C,d,p]:(To=L,L=u),L===u&&(L=null),L!==u&&(C=Bc())!==u?((d=ga())===u&&(d=null),d!==u&&(p=Bc())!==u?(t,A=e,h=n,y=s,T=o,m=a,I=i,N=l,R=c,S=f,_=b,O=L,g=d,e={tableList:Array.from(mf),columnList:hf(If),ast:{type:A[0].toLowerCase(),index_type:h&&h.toLowerCase(),keyword:y.toLowerCase(),concurrently:T&&T.toLowerCase(),index:m,on_kw:I[0].toLowerCase(),table:N,index_using:R,index_columns:S,with:_&&_[4],with_before_where:!0,tablespace:O&&{type:"origin",value:O[2]},where:g}},t=e):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u);var A,h,y,T,m,I,N,R,S,_,O,g;return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c;t=To,(e=il())!==u&&Bc()!==u?((n=ll())===u&&(n=function(){var t,e,n,s;t=To,"temp"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Mn));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="TEMP"):(To=t,t=u)):(To=t,t=u);return t}()),n===u&&(n=null),n!==u&&Bc()!==u&&function(){var t,e,n,s;t=To,"sequence"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(Kn));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="SEQUENCE"):(To=t,t=u)):(To=t,t=u);return t}()!==u&&Bc()!==u?((s=Fo())===u&&(s=null),s!==u&&Bc()!==u&&(o=_a())!==u&&Bc()!==u?(a=To,(i=El())!==u&&(l=Bc())!==u&&(c=Ai())!==u?a=i=[i,l,c]:(To=a,a=u),a===u&&(a=null),a!==u&&(i=Bc())!==u?((l=function(){var r,t,e,n,s,o;if(r=To,(t=Go())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Go())!==u?n=s=[s,o]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Go())!==u?n=s=[s,o]:(To=n,n=u);e!==u?(r,t=wf(t,e,1),r=t):(To=r,r=u)}else To=r,r=u;return r}())===u&&(l=null),l!==u?(t,f=e,b=n,v=s,C=a,d=l,(L=o).as=C&&C[2],e={tableList:Array.from(mf),columnList:hf(If),ast:{type:f[0].toLowerCase(),keyword:"sequence",temporary:b&&b.toLowerCase(),if_not_exists:v,sequence:[L],create_definitions:d}},t=e):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u);var f,b,v,L,C,d;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=To,(e=il())!==u&&Bc()!==u?((n=function(){var t,e,n,s;t=To,"database"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(Xn));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="DATABASE"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=To,"scheme"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(Vn));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="SCHEME"):(To=t,t=u)):(To=t,t=u);return t}()),n!==u&&Bc()!==u?((s=Fo())===u&&(s=null),s!==u&&Bc()!==u&&(o=mi())!==u&&Bc()!==u?((a=function(){var r,t,e,n,s,o;if(r=To,(t=na())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=na())!==u?n=s=[s,o]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=na())!==u?n=s=[s,o]:(To=n,n=u);e!==u?(r,t=wf(t,e,1),r=t):(To=r,r=u)}else To=r,r=u;return r}())===u&&(a=null),a!==u?(t,i=e,l=s,c=o,f=a,e={tableList:Array.from(mf),columnList:hf(If),ast:{type:i[0].toLowerCase(),keyword:"database",if_not_exists:l,database:c,create_definitions:f}},t=e):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u);var i,l,c,f;return t}());return t}())===u&&(t=function(){var r,t,e,n;r=To,(t=pc())!==u&&Bc()!==u?((e=Al())===u&&(e=null),e!==u&&Bc()!==u&&(n=Ia())!==u?(r,s=t,o=e,(a=n)&&a.forEach(r=>mf.add(`${s}::${r.db}::${r.table}`)),t={tableList:Array.from(mf),columnList:hf(If),ast:{type:s.toLowerCase(),keyword:o&&o.toLowerCase()||"table",name:a}},r=t):(To=r,r=u)):(To=r,r=u);var s,o,a;return r}())===u&&(t=function(){var r,t,e;r=To,(t=vl())!==u&&Bc()!==u&&Al()!==u&&Bc()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=To,(t=ha())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=ha())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=ha())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,t=wf(t,e),r=t):(To=r,r=u)}else To=r,r=u;return r}())!==u?(r,(n=e).forEach(r=>r.forEach(r=>r.table&&mf.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(mf),columnList:hf(If),ast:{type:"rename",table:n}},r=t):(To=r,r=u);var n;return r}())===u&&(t=function(){var t,e,n;t=To,(e=function(){var t,e,n,s;t=To,"call"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Ms));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="CALL"):(To=t,t=u)):(To=t,t=u);return t}())!==u&&Bc()!==u&&(n=sf())!==u?(t,s=n,e={tableList:Array.from(mf),columnList:hf(If),ast:{type:"call",expr:s}},t=e):(To=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n;t=To,(e=function(){var t,e,n,s;t=To,"use"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(Sn));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}())!==u&&Bc()!==u&&(n=Ei())!==u?(t,s=n,mf.add(`use::${s}::null`),e={tableList:Array.from(mf),columnList:hf(If),ast:{type:"use",db:s}},t=e):(To=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n,s;t=To,(e=function(){var t,e,n,s;t=To,"alter"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(_n));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}())!==u&&Bc()!==u&&Al()!==u&&Bc()!==u&&(n=Ia())!==u&&Bc()!==u&&(s=function(){var r,t,e,n,s,o,a,i;if(r=To,(t=Vo())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=Vo())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=Vo())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,t=wf(t,e),r=t):(To=r,r=u)}else To=r,r=u;return r}())!==u?(t,a=s,(o=n)&&o.length>0&&o.forEach(r=>mf.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(mf),columnList:hf(If),ast:{type:"alter",table:o,expr:a}},t=e):(To=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n,s;t=To,(e=wl())!==u&&Bc()!==u?((n=function(){var t,e,n,s;t=To,"global"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(Su));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="GLOBAL"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=To,"session"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(_u));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="SESSION"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=To,"local"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(Ou));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="LOCAL"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=To,"persist"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(gu));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="PERSIST"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=To,"persist_only"===r.substr(To,12).toLowerCase()?(e=r.substr(To,12),To+=12):(e=u,0===Ro&&xo(xu));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="PERSIST_ONLY"):(To=t,t=u)):(To=t,t=u);return t}()),n===u&&(n=null),n!==u&&Bc()!==u&&(s=Qc())!==u?(t,o=n,(a=s).keyword=o,e={tableList:Array.from(mf),columnList:hf(If),ast:{type:"set",expr:a}},t=e):(To=t,t=u)):(To=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=To,(e=function(){var t,e,n,s;t=To,"lock"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(G));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}())!==u&&Bc()!==u?((n=Al())===u&&(n=null),n!==u&&Bc()!==u&&(s=Ia())!==u&&Bc()!==u?((o=function(){var t,e,n,s;t=To,"in"===r.substr(To,2).toLowerCase()?(e=r.substr(To,2),To+=2):(e=u,0===Ro&&xo(xr));e!==u&&Bc()!==u?("access share"===r.substr(To,12).toLowerCase()?(n=r.substr(To,12),To+=12):(n=u,0===Ro&&xo(Ur)),n===u&&("row share"===r.substr(To,9).toLowerCase()?(n=r.substr(To,9),To+=9):(n=u,0===Ro&&xo(Mr)),n===u&&("row exclusive"===r.substr(To,13).toLowerCase()?(n=r.substr(To,13),To+=13):(n=u,0===Ro&&xo(kr)),n===u&&("share update exclusive"===r.substr(To,22).toLowerCase()?(n=r.substr(To,22),To+=22):(n=u,0===Ro&&xo(Dr)),n===u&&("share row exclusive"===r.substr(To,19).toLowerCase()?(n=r.substr(To,19),To+=19):(n=u,0===Ro&&xo($r)),n===u&&("exclusive"===r.substr(To,9).toLowerCase()?(n=r.substr(To,9),To+=9):(n=u,0===Ro&&xo(j)),n===u&&("access exclusive"===r.substr(To,16).toLowerCase()?(n=r.substr(To,16),To+=16):(n=u,0===Ro&&xo(Pr)),n===u&&("share"===r.substr(To,5).toLowerCase()?(n=r.substr(To,5),To+=5):(n=u,0===Ro&&xo(Fr))))))))),n!==u&&Bc()!==u?("mode"===r.substr(To,4).toLowerCase()?(s=r.substr(To,4),To+=4):(s=u,0===Ro&&xo(Gr)),s!==u?(t,e={mode:`in ${n.toLowerCase()} mode`},t=e):(To=t,t=u)):(To=t,t=u)):(To=t,t=u);return t}())===u&&(o=null),o!==u&&Bc()!==u?("nowait"===r.substr(To,6).toLowerCase()?(a=r.substr(To,6),To+=6):(a=u,0===Ro&&xo(Hr)),a===u&&(a=null),a!==u?(t,i=n,c=o,f=a,(l=s)&&l.forEach(r=>mf.add(`lock::${r.db}::${r.table}`)),e={tableList:Array.from(mf),columnList:hf(If),ast:{type:"lock",keyword:i&&i.toLowerCase(),tables:l.map(r=>({table:r})),lock_mode:c,nowait:f}},t=e):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u);var i,l,c,f;return t}())===u&&(t=function(){var t,e,n;t=To,(e=sl())!==u&&Bc()!==u?("tables"===r.substr(To,6).toLowerCase()?(n=r.substr(To,6),To+=6):(n=u,0===Ro&&xo(jr)),n!==u?(t,e={tableList:Array.from(mf),columnList:hf(If),ast:{type:"show",keyword:"tables"}},t=e):(To=t,t=u)):(To=t,t=u);t===u&&(t=To,(e=sl())!==u&&Bc()!==u&&(n=af())!==u?(t,s=n,e={tableList:Array.from(mf),columnList:hf(If),ast:{type:"show",keyword:"var",var:s}},t=e):(To=t,t=u));var s;return t}())===u&&(t=function(){var t,e,n,s;t=To,(e=function(){var t,e,n,s;t=To,"deallocate"===r.substr(To,10).toLowerCase()?(e=r.substr(To,10),To+=10):(e=u,0===Ro&&xo(Zn));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="DEALLOCATE"):(To=t,t=u)):(To=t,t=u);return t}())!==u&&Bc()!==u?("prepare"===r.substr(To,7).toLowerCase()?(n=r.substr(To,7),To+=7):(n=u,0===Ro&&xo(Yr)),n===u&&(n=null),n!==u&&Bc()!==u?((s=mi())===u&&(s=gl()),s!==u?(t,o=n,a=s,e={tableList:Array.from(mf),columnList:hf(If),ast:{type:"deallocate",keyword:o,expr:{type:"default",value:a}}},t=e):(To=t,t=u)):(To=t,t=u)):(To=t,t=u);var o,a;return t}()),t}function Do(){var r;return(r=Po())===u&&(r=function(){var r,t,e,n,s,o;r=To,(t=al())!==u&&Bc()!==u&&(e=Ia())!==u&&Bc()!==u&&wl()!==u&&Bc()!==u&&(n=function(){var r,t,e,n,s,o,a,i;if(r=To,(t=Ba())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=Ba())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=Ba())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,t=wf(t,e),r=t):(To=r,r=u)}else To=r,r=u;return r}())!==u&&Bc()!==u?((s=ga())===u&&(s=null),s!==u&&Bc()!==u?((o=Wa())===u&&(o=null),o!==u?(r,t=function(r,t,e,n){const s={};return r&&r.forEach(r=>{const{db:t,as:e,table:n,join:u}=r,o=u?"select":"update";t&&(s[n]=t),n&&mf.add(`${o}::${t}::${n}`)}),t&&t.forEach(r=>{if(r.table){const t=Af(r.table);mf.add(`update::${s[t]||null}::${t}`)}If.add(`update::${r.table}::${r.column}`)}),{tableList:Array.from(mf),columnList:hf(If),ast:{type:"update",table:r,set:t,where:e,returning:n}}}(e,n,s,o),r=t):(To=r,r=u)):(To=r,r=u)):(To=r,r=u);return r}())===u&&(r=function(){var r,t,e,n,s,o,a,i;r=To,(t=Ka())!==u&&Bc()!==u?((e=dl())===u&&(e=null),e!==u&&Bc()!==u&&(n=_a())!==u&&Bc()!==u?((s=Va())===u&&(s=null),s!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(o=wi())!==u&&Bc()!==u&&Dc()!==u&&Bc()!==u&&(a=Xa())!==u&&Bc()!==u?((i=Wa())===u&&(i=null),i!==u?(r,t=function(r,t,e,n,s,u){if(t&&(mf.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(s)&&s.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>If.add(`insert::${r}::${t}`))}return{tableList:Array.from(mf),columnList:hf(If),ast:{type:r,table:[t],columns:n,values:s,partition:e,returning:u}}}(t,n,s,o,a,i),r=t):(To=r,r=u)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u);return r}())===u&&(r=function(){var r,t,e,n,s,o,a,i;r=To,(t=Ka())!==u&&Bc()!==u?((e=Ll())===u&&(e=null),e!==u&&Bc()!==u?((n=dl())===u&&(n=null),n!==u&&Bc()!==u&&(s=_a())!==u&&Bc()!==u?((o=Va())===u&&(o=null),o!==u&&Bc()!==u&&(a=Xa())!==u&&Bc()!==u?((i=Wa())===u&&(i=null),i!==u?(r,t=function(r,t,e,n,s,u,o){n&&(mf.add(`insert::${n.db}::${n.table}`),If.add(`insert::${n.table}::(.*)`),n.as=null);const a=[t,e].filter(r=>r).map(r=>r[0]&&r[0].toLowerCase()).join(" ");return{tableList:Array.from(mf),columnList:hf(If),ast:{type:r,table:[n],columns:null,values:u,partition:s,prefix:a,returning:o}}}(t,e,n,s,o,a,i),r=t):(To=r,r=u)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u);return r}())===u&&(r=function(){var r,t,e,n,s;r=To,(t=cl())!==u&&Bc()!==u?((e=Ia())===u&&(e=null),e!==u&&Bc()!==u&&(n=Aa())!==u&&Bc()!==u?((s=ga())===u&&(s=null),s!==u?(r,t=function(r,t,e){if(t&&t.forEach(r=>{const{db:t,as:e,table:n,join:s}=r,u=s?"select":"delete";n&&mf.add(`${u}::${t}::${n}`),s||If.add(`delete::${n}::(.*)`)}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}]}return{tableList:Array.from(mf),columnList:hf(If),ast:{type:"delete",table:r,from:t,where:e}}}(e,n,s),r=t):(To=r,r=u)):(To=r,r=u)):(To=r,r=u);return r}())===u&&(r=ko())===u&&(r=function(){var r,t;r=[],t=zc();for(;t!==u;)r.push(t),t=zc();return r}()),r}function $o(){var t,e;return t=To,function(){var t,e,n,s;t=To,"union"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(ns));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}()!==u&&Bc()!==u?((e=gl())===u&&(e=null),e!==u?(t,t=e?"union all":"union"):(To=t,t=u)):(To=t,t=u),t}function Po(){var r,t,e,n,s,o,a,i;if(r=To,(t=ua())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=$o())!==u&&(a=Bc())!==u&&(i=ua())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=$o())!==u&&(a=Bc())!==u&&(i=ua())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u&&(n=Bc())!==u?((s=Ga())===u&&(s=null),s!==u&&(o=Bc())!==u?((a=Ya())===u&&(a=null),a!==u?(r,r=t=function(r,t,e,n){let s=r;for(let r=0;r<t.length;r++)s._next=t[r][3],s.set_op=t[r][1],s=s._next;return e&&(r._orderby=e),n&&n.value&&n.value.length>0&&(r._limit=n),{tableList:Array.from(mf),columnList:hf(If),ast:r}}(t,e,s,a)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u)}else To=r,r=u;return r}function Fo(){var t,e;return t=To,"if"===r.substr(To,2).toLowerCase()?(e=r.substr(To,2),To+=2):(e=u,0===Ro&&xo(i)),e!==u&&Bc()!==u&&Fl()!==u&&Bc()!==u&&Pl()!==u?(t,t=e="IF NOT EXISTS"):(To=t,t=u),t}function Go(){var t;return(t=function(){var t,e,n,s,o,a;return t=To,"increment"===r.substr(To,9).toLowerCase()?(e=r.substr(To,9),To+=9):(e=u,0===Ro&&xo(b)),e!==u&&Bc()!==u?((n=Sl())===u&&(n=null),n!==u&&Bc()!==u&&(s=Ki())!==u?(t,o=e,a=s,t=e={resource:"sequence",prefix:n?o.toLowerCase()+" by":o.toLowerCase(),value:a}):(To=t,t=u)):(To=t,t=u),t}())===u&&(t=function(){var t,e,n;return t=To,"minvalue"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(v)),e!==u&&Bc()!==u&&(n=Ki())!==u?(t,t=e=L(e,n)):(To=t,t=u),t===u&&(t=To,"no"===r.substr(To,2).toLowerCase()?(e=r.substr(To,2),To+=2):(e=u,0===Ro&&xo(C)),e!==u&&Bc()!==u?("minvalue"===r.substr(To,8).toLowerCase()?(n=r.substr(To,8),To+=8):(n=u,0===Ro&&xo(v)),n!==u?(t,t=e={resource:"sequence",value:{type:"origin",value:"no minvalue"}}):(To=t,t=u)):(To=t,t=u)),t}())===u&&(t=function(){var t,e,n;return t=To,"maxvalue"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(d)),e!==u&&Bc()!==u&&(n=Ki())!==u?(t,t=e=L(e,n)):(To=t,t=u),t===u&&(t=To,"no"===r.substr(To,2).toLowerCase()?(e=r.substr(To,2),To+=2):(e=u,0===Ro&&xo(C)),e!==u&&Bc()!==u?("maxvalue"===r.substr(To,8).toLowerCase()?(n=r.substr(To,8),To+=8):(n=u,0===Ro&&xo(d)),n!==u?(t,t=e={resource:"sequence",value:{type:"origin",value:"no maxvalue"}}):(To=t,t=u)):(To=t,t=u)),t}())===u&&(t=function(){var t,e,n,s,o,a;return t=To,"start"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(p)),e!==u&&Bc()!==u?((n=Nl())===u&&(n=null),n!==u&&Bc()!==u&&(s=Ki())!==u?(t,o=e,a=s,t=e={resource:"sequence",prefix:n?o.toLowerCase()+" with":o.toLowerCase(),value:a}):(To=t,t=u)):(To=t,t=u),t}())===u&&(t=function(){var t,e,n;return t=To,"cache"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(w)),e!==u&&Bc()!==u&&(n=Ki())!==u?(t,t=e=L(e,n)):(To=t,t=u),t}())===u&&(t=function(){var t,e,n;return t=To,"no"===r.substr(To,2).toLowerCase()?(e=r.substr(To,2),To+=2):(e=u,0===Ro&&xo(C)),e===u&&(e=null),e!==u&&Bc()!==u?("cycle"===r.substr(To,5).toLowerCase()?(n=r.substr(To,5),To+=5):(n=u,0===Ro&&xo(E)),n!==u?(t,t=e={resource:"sequence",value:{type:"origin",value:e?"no cycle":"cycle"}}):(To=t,t=u)):(To=t,t=u),t}())===u&&(t=function(){var t,e,n;return t=To,"owned"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(A)),e!==u&&Bc()!==u&&Sl()!==u&&Bc()!==u?("none"===r.substr(To,4).toLowerCase()?(n=r.substr(To,4),To+=4):(n=u,0===Ro&&xo(h)),n!==u?(t,t=e={resource:"sequence",prefix:"owned by",value:{type:"origin",value:"none"}}):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,"owned"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(A)),e!==u&&Bc()!==u&&Sl()!==u&&Bc()!==u&&(n=pi())!==u?(t,t=e={resource:"sequence",prefix:"owned by",value:n}):(To=t,t=u)),t}()),t}function Ho(){var t,e,n,s,o,a,i,l,c,f,b;return t=To,(e=ni())!==u&&Bc()!==u?((n=Wo())===u&&(n=null),n!==u&&Bc()!==u?((s=Ei())===u&&(s=null),s!==u&&Bc()!==u?((o=_l())===u&&(o=Ol()),o===u&&(o=null),o!==u&&Bc()!==u?(a=To,"nulls"===r.substr(To,5).toLowerCase()?(i=r.substr(To,5),To+=5):(i=u,0===Ro&&xo(y)),i!==u&&(l=Bc())!==u?("first"===r.substr(To,5).toLowerCase()?(c=r.substr(To,5),To+=5):(c=u,0===Ro&&xo(T)),c===u&&("last"===r.substr(To,4).toLowerCase()?(c=r.substr(To,4),To+=4):(c=u,0===Ro&&xo(m))),c!==u?a=i=[i,l,c]:(To=a,a=u)):(To=a,a=u),a===u&&(a=null),a!==u?(t,b=a,t=e={column:e,collate:n,opclass:s,order:(f=o)&&f.toLowerCase()||"asc",nulls:b&&`${b[0].toLowerCase()} ${b[2].toLowerCase()}`}):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u),t}function jo(){var t;return(t=Bo())===u&&(t=Zo())===u&&(t=zo())===u&&(t=function(){var t;(t=function(){var t,e,n,s,o,a;t=To,(e=Qo())===u&&(e=null);e!==u&&Bc()!==u?("primary key"===r.substr(To,11).toLowerCase()?(n=r.substr(To,11),To+=11):(n=u,0===Ro&&xo(Y)),n!==u&&Bc()!==u?((s=ya())===u&&(s=null),s!==u&&Bc()!==u&&(o=ia())!==u&&Bc()!==u?((a=Ta())===u&&(a=null),a!==u?(t,l=n,c=s,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:l.toLowerCase(),keyword:i&&i.keyword,index_type:c,resource:"constraint",index_options:b},t=e):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u);var i,l,c,f,b;return t}())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=To,(t=Qo())===u&&(t=null);t!==u&&Bc()!==u&&(e=_c())!==u&&Bc()!==u?((n=Rc())===u&&(n=Sc()),n===u&&(n=null),n!==u&&Bc()!==u?((s=Ti())===u&&(s=null),s!==u&&Bc()!==u?((o=ya())===u&&(o=null),o!==u&&Bc()!==u&&(a=ia())!==u&&Bc()!==u?((i=Ta())===u&&(i=null),i!==u?(r,c=e,f=n,b=s,v=o,L=a,C=i,t={constraint:(l=t)&&l.constraint,definition:L,constraint_type:f&&`${c.toLowerCase()} ${f.toLowerCase()}`||c.toLowerCase(),keyword:l&&l.keyword,index_type:v,index:b,resource:"constraint",index_options:C},r=t):(To=r,r=u)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u);var l,c,f,b,v,L,C;return r}())===u&&(t=function(){var t,e,n,s,o,a;t=To,(e=Qo())===u&&(e=null);e!==u&&Bc()!==u?("foreign key"===r.substr(To,11).toLowerCase()?(n=r.substr(To,11),To+=11):(n=u,0===Ro&&xo(B)),n!==u&&Bc()!==u?((s=Ti())===u&&(s=null),s!==u&&Bc()!==u&&(o=ia())!==u&&Bc()!==u?((a=Jo())===u&&(a=null),a!==u?(t,l=n,c=s,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:l,keyword:i&&i.keyword,index:c,resource:"constraint",reference_definition:b},t=e):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u);var i,l,c,f,b;return t}());return t}()),t}function Yo(){var t,e,n,s,o,a;return(t=function(){var r,t,e;r=To,(t=Yi())===u&&(t=ji());t!==u&&Bc()!==u?((e=Xo())===u&&(e=null),e!==u?(r,s=e,(n=t)&&!n.value&&(n.value="null"),r=t={default_val:s,nullable:n}):(To=r,r=u)):(To=r,r=u);var n,s;r===u&&(r=To,(t=Xo())!==u&&Bc()!==u?((e=Yi())===u&&(e=ji()),e===u&&(e=null),e!==u?(r,t=function(r,t){return t&&!t.value&&(t.value="null"),{default_val:r,nullable:t}}(t,e),r=t):(To=r,r=u)):(To=r,r=u));return r}())===u&&(t=To,"auto_increment"===r.substr(To,14).toLowerCase()?(e=r.substr(To,14),To+=14):(e=u,0===Ro&&xo(I)),e!==u&&(t,e={auto_increment:e.toLowerCase()}),(t=e)===u&&(t=To,e=To,"unique"===r.substr(To,6).toLowerCase()?(n=r.substr(To,6),To+=6):(n=u,0===Ro&&xo(N)),n!==u&&(s=Bc())!==u?("key"===r.substr(To,3).toLowerCase()?(o=r.substr(To,3),To+=3):(o=u,0===Ro&&xo(R)),o===u&&(o=null),o!==u?e=n=[n,s,o]:(To=e,e=u)):(To=e,e=u),e===u&&(e=To,"primary"===r.substr(To,7).toLowerCase()?(n=r.substr(To,7),To+=7):(n=u,0===Ro&&xo(S)),n===u&&(n=null),n!==u&&(s=Bc())!==u?("key"===r.substr(To,3).toLowerCase()?(o=r.substr(To,3),To+=3):(o=u,0===Ro&&xo(R)),o!==u?e=n=[n,s,o]:(To=e,e=u)):(To=e,e=u)),e!==u&&(t,e=function(r){const t=[];return r&&t.push(r[0],r[2]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===u&&(t=To,(e=Vc())!==u&&(t,e={comment:e}),(t=e)===u&&(t=To,(e=Wo())!==u&&(t,e={collate:e}),(t=e)===u&&(t=To,(e=function(){var t,e,n;t=To,"column_format"===r.substr(To,13).toLowerCase()?(e=r.substr(To,13),To+=13):(e=u,0===Ro&&xo(_));e!==u&&Bc()!==u?("fixed"===r.substr(To,5).toLowerCase()?(n=r.substr(To,5),To+=5):(n=u,0===Ro&&xo(O)),n===u&&("dynamic"===r.substr(To,7).toLowerCase()?(n=r.substr(To,7),To+=7):(n=u,0===Ro&&xo(g)),n===u&&("default"===r.substr(To,7).toLowerCase()?(n=r.substr(To,7),To+=7):(n=u,0===Ro&&xo(x)))),n!==u?(t,e={type:"column_format",value:n.toLowerCase()},t=e):(To=t,t=u)):(To=t,t=u);return t}())!==u&&(t,e={column_format:e}),(t=e)===u&&(t=To,(e=function(){var t,e,n;t=To,"storage"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(U));e!==u&&Bc()!==u?("disk"===r.substr(To,4).toLowerCase()?(n=r.substr(To,4),To+=4):(n=u,0===Ro&&xo(M)),n===u&&("memory"===r.substr(To,6).toLowerCase()?(n=r.substr(To,6),To+=6):(n=u,0===Ro&&xo(k))),n!==u?(t,e={type:"storage",value:n.toLowerCase()},t=e):(To=t,t=u)):(To=t,t=u);return t}())!==u&&(t,e={storage:e}),(t=e)===u&&(t=To,(e=Jo())!==u&&(t,e={reference_definition:e}),(t=e)===u&&(t=To,(e=ea())!==u&&(n=Bc())!==u?((s=mc())===u&&(s=null),s!==u&&(o=Bc())!==u&&(a=mi())!==u?(t,t=e=function(r,t,e){return{character_set:{type:r,value:e,symbol:t}}}(e,s,a)):(To=t,t=u)):(To=t,t=u))))))))),t}function Bo(){var r,t,e,n,s,o,a;return r=To,(t=pi())!==u&&Bc()!==u&&(e=lf())!==u&&Bc()!==u?((n=function(){var r,t,e,n,s,o;if(r=To,(t=Yo())!==u)if(Bc()!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Yo())!==u?n=s=[s,o]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Yo())!==u?n=s=[s,o]:(To=n,n=u);e!==u?(r,r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(To=r,r=u)}else To=r,r=u;else To=r,r=u;return r}())===u&&(n=null),n!==u?(r,s=t,o=e,a=n,If.add(`create::${s.table}::${s.column}`),r=t={column:s,definition:o,resource:"column",...a||{}}):(To=r,r=u)):(To=r,r=u),r}function Wo(){var t,e,n;return t=To,function(){var t,e,n,s;t=To,"collate"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(Ar));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="COLLATE"):(To=t,t=u)):(To=t,t=u);return t}()!==u&&Bc()!==u?((e=mc())===u&&(e=null),e!==u&&Bc()!==u&&(n=Ei())!==u?(t,t={type:"collate",symbol:e,value:n}):(To=t,t=u)):(To=t,t=u),t}function Xo(){var r,t;return r=To,el()!==u&&Bc()!==u?((t=Gi())===u&&(t=ni()),t!==u?(r,r={type:"default",value:t}):(To=r,r=u)):(To=r,r=u),r}function Vo(){var r;return(r=function(){var r,t,e,n;r=To,(t=Ic())!==u&&Bc()!==u?((e=Nc())===u&&(e=null),e!==u&&Bc()!==u&&(n=Bo())!==u?(r,s=e,o=n,t={action:"add",...o,keyword:s,resource:"column",type:"alter"},r=t):(To=r,r=u)):(To=r,r=u);var s,o;return r}())===u&&(r=function(){var r,t,e;r=To,ul()!==u&&Bc()!==u?((t=Nc())===u&&(t=null),t!==u&&Bc()!==u&&(e=pi())!==u?(r,r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(To=r,r=u)):(To=r,r=u);return r}())===u&&(r=function(){var r,t,e;r=To,(t=Ic())!==u&&Bc()!==u&&(e=Zo())!==u?(r,n=e,t={action:"add",type:"alter",...n},r=t):(To=r,r=u);var n;return r}())===u&&(r=function(){var r,t,e;r=To,(t=Ic())!==u&&Bc()!==u&&(e=zo())!==u?(r,n=e,t={action:"add",type:"alter",...n},r=t):(To=r,r=u);var n;return r}())===u&&(r=function(){var r,t,e,n;r=To,(t=vl())!==u&&Bc()!==u?((e=nl())===u&&(e=El()),e===u&&(e=null),e!==u&&Bc()!==u&&(n=Ei())!==u?(r,o=n,t={action:"rename",type:"alter",resource:"table",keyword:(s=e)&&s[0].toLowerCase(),table:o},r=t):(To=r,r=u)):(To=r,r=u);var s,o;return r}())===u&&(r=Ko())===u&&(r=qo()),r}function Ko(){var t,e,n,s;return t=To,"algorithm"===r.substr(To,9).toLowerCase()?(e=r.substr(To,9),To+=9):(e=u,0===Ro&&xo(D)),e!==u&&Bc()!==u?((n=mc())===u&&(n=null),n!==u&&Bc()!==u?("default"===r.substr(To,7).toLowerCase()?(s=r.substr(To,7),To+=7):(s=u,0===Ro&&xo(x)),s===u&&("instant"===r.substr(To,7).toLowerCase()?(s=r.substr(To,7),To+=7):(s=u,0===Ro&&xo($)),s===u&&("inplace"===r.substr(To,7).toLowerCase()?(s=r.substr(To,7),To+=7):(s=u,0===Ro&&xo(P)),s===u&&("copy"===r.substr(To,4).toLowerCase()?(s=r.substr(To,4),To+=4):(s=u,0===Ro&&xo(F))))),s!==u?(t,t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:s}):(To=t,t=u)):(To=t,t=u)):(To=t,t=u),t}function qo(){var t,e,n,s;return t=To,"lock"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(G)),e!==u&&Bc()!==u?((n=mc())===u&&(n=null),n!==u&&Bc()!==u?("default"===r.substr(To,7).toLowerCase()?(s=r.substr(To,7),To+=7):(s=u,0===Ro&&xo(x)),s===u&&("none"===r.substr(To,4).toLowerCase()?(s=r.substr(To,4),To+=4):(s=u,0===Ro&&xo(h)),s===u&&("shared"===r.substr(To,6).toLowerCase()?(s=r.substr(To,6),To+=6):(s=u,0===Ro&&xo(H)),s===u&&("exclusive"===r.substr(To,9).toLowerCase()?(s=r.substr(To,9),To+=9):(s=u,0===Ro&&xo(j))))),s!==u?(t,t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:s}):(To=t,t=u)):(To=t,t=u)):(To=t,t=u),t}function Zo(){var r,t,e,n,s,o,a,i;return r=To,(t=Rc())===u&&(t=Sc()),t!==u&&Bc()!==u?((e=Ti())===u&&(e=null),e!==u&&Bc()!==u?((n=ya())===u&&(n=null),n!==u&&Bc()!==u&&(s=ia())!==u&&Bc()!==u?((o=Ta())===u&&(o=null),o!==u&&Bc()!==u?(r,a=n,i=o,r=t={index:e,definition:s,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(To=r,r=u)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u),r}function zo(){var t,e,n,s,o,a,i,l,c;return t=To,(e=function(){var t,e,n,s;t=To,"fulltext"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(Yu));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="FULLTEXT"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(e=function(){var t,e,n,s;t=To,"spatial"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(Bu));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="SPATIAL"):(To=t,t=u)):(To=t,t=u);return t}()),e!==u&&Bc()!==u?((n=Rc())===u&&(n=Sc()),n===u&&(n=null),n!==u&&Bc()!==u?((s=Ti())===u&&(s=null),s!==u&&Bc()!==u&&(o=ia())!==u&&Bc()!==u?((a=Ta())===u&&(a=null),a!==u&&Bc()!==u?(t,i=e,c=a,t=e={index:s,definition:o,keyword:(l=n)&&`${i.toLowerCase()} ${l.toLowerCase()}`||i.toLowerCase(),index_options:c,resource:"index"}):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u),t}function Qo(){var r,t,e,n;return r=To,(t=gc())!==u&&Bc()!==u?((e=Ei())===u&&(e=null),e!==u?(r,n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(To=r,r=u)):(To=r,r=u),r}function Jo(){var t,e,n,s,o,a,i,l,c,f;return t=To,(e=function(){var t,e,n,s;t=To,"references"===r.substr(To,10).toLowerCase()?(e=r.substr(To,10),To+=10):(e=u,0===Ro&&xo(Ku));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="REFERENCES"):(To=t,t=u)):(To=t,t=u);return t}())!==u&&Bc()!==u&&(n=Ia())!==u&&Bc()!==u&&(s=ia())!==u&&Bc()!==u?("match full"===r.substr(To,10).toLowerCase()?(o=r.substr(To,10),To+=10):(o=u,0===Ro&&xo(W)),o===u&&("match partial"===r.substr(To,13).toLowerCase()?(o=r.substr(To,13),To+=13):(o=u,0===Ro&&xo(X)),o===u&&("match simple"===r.substr(To,12).toLowerCase()?(o=r.substr(To,12),To+=12):(o=u,0===Ro&&xo(V)))),o===u&&(o=null),o!==u&&Bc()!==u?((a=ra())===u&&(a=null),a!==u&&Bc()!==u?((i=ra())===u&&(i=null),i!==u?(t,l=o,c=a,f=i,t=e={definition:s,table:n,keyword:e.toLowerCase(),match:l&&l.toLowerCase(),on_delete:c,on_update:f}):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u),t}function ra(){var t,e,n,s;return t=To,"on delete"===r.substr(To,9).toLowerCase()?(e=r.substr(To,9),To+=9):(e=u,0===Ro&&xo(K)),e===u&&("on update"===r.substr(To,9).toLowerCase()?(e=r.substr(To,9),To+=9):(e=u,0===Ro&&xo(q))),e!==u&&Wc()!==u&&(n=function(){var t,e;t=To,"restrict"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(Z));e===u&&("cascade"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(z)),e===u&&("set null"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(Q)),e===u&&("no action"===r.substr(To,9).toLowerCase()?(e=r.substr(To,9),To+=9):(e=u,0===Ro&&xo(J)),e===u&&("set default"===r.substr(To,11).toLowerCase()?(e=r.substr(To,11),To+=11):(e=u,0===Ro&&xo(rr))))));e!==u&&(t,e=e.toLowerCase());return t=e}())!==u?(t,s=n,t=e={type:e.toLowerCase(),value:s}):(To=t,t=u),t}function ta(){var t,e,n,s,o,a,i;return t=To,(e=fl())===u&&(e=cl())===u&&(e=pc()),e!==u&&(t,i=e,e={keyword:Array.isArray(i)?i[0].toLowerCase():i.toLowerCase()}),(t=e)===u&&(t=To,(e=al())!==u&&Bc()!==u?(n=To,"of"===r.substr(To,2).toLowerCase()?(s=r.substr(To,2),To+=2):(s=u,0===Ro&&xo(ir)),s!==u&&(o=Bc())!==u&&(a=xa())!==u?n=s=[s,o,a]:(To=n,n=u),n===u&&(n=null),n!==u?(t,t=e=function(r,t){return{keyword:r&&r[0]&&r[0].toLowerCase(),args:t&&{keyword:t[0],columns:t[2]}||null}}(e,n)):(To=t,t=u)):(To=t,t=u)),t}function ea(){var t,e,n;return t=To,"character"===r.substr(To,9).toLowerCase()?(e=r.substr(To,9),To+=9):(e=u,0===Ro&&xo(pr)),e!==u&&Bc()!==u?("set"===r.substr(To,3).toLowerCase()?(n=r.substr(To,3),To+=3):(n=u,0===Ro&&xo(wr)),n!==u?(t,t=e="CHARACTER SET"):(To=t,t=u)):(To=t,t=u),t}function na(){var t,e,n,s,o,a,i,l,c;return t=To,(e=el())===u&&(e=null),e!==u&&Bc()!==u?((n=ea())===u&&("charset"===r.substr(To,7).toLowerCase()?(n=r.substr(To,7),To+=7):(n=u,0===Ro&&xo(Er)),n===u&&("collate"===r.substr(To,7).toLowerCase()?(n=r.substr(To,7),To+=7):(n=u,0===Ro&&xo(Ar)))),n!==u&&Bc()!==u?((s=mc())===u&&(s=null),s!==u&&Bc()!==u&&(o=mi())!==u?(t,i=n,l=s,c=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:l,value:c}):(To=t,t=u)):(To=t,t=u)):(To=t,t=u),t}function sa(){var t,e,n,s,o,a,i,l,c;return t=To,"auto_increment"===r.substr(To,14).toLowerCase()?(e=r.substr(To,14),To+=14):(e=u,0===Ro&&xo(I)),e===u&&("avg_row_length"===r.substr(To,14).toLowerCase()?(e=r.substr(To,14),To+=14):(e=u,0===Ro&&xo(hr)),e===u&&("key_block_size"===r.substr(To,14).toLowerCase()?(e=r.substr(To,14),To+=14):(e=u,0===Ro&&xo(yr)),e===u&&("max_rows"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(Tr)),e===u&&("min_rows"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(mr)),e===u&&("stats_sample_pages"===r.substr(To,18).toLowerCase()?(e=r.substr(To,18),To+=18):(e=u,0===Ro&&xo(Ir))))))),e!==u&&Bc()!==u?((n=mc())===u&&(n=null),n!==u&&Bc()!==u&&(s=Ki())!==u?(t,l=n,c=s,t=e={keyword:e.toLowerCase(),symbol:l,value:c.value}):(To=t,t=u)):(To=t,t=u),t===u&&(t=na())===u&&(t=To,(e=Oc())===u&&("connection"===r.substr(To,10).toLowerCase()?(e=r.substr(To,10),To+=10):(e=u,0===Ro&&xo(Nr))),e!==u&&Bc()!==u?((n=mc())===u&&(n=null),n!==u&&Bc()!==u&&(s=Bi())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,s)):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,"compression"===r.substr(To,11).toLowerCase()?(e=r.substr(To,11),To+=11):(e=u,0===Ro&&xo(Rr)),e!==u&&Bc()!==u?((n=mc())===u&&(n=null),n!==u&&Bc()!==u?(s=To,39===r.charCodeAt(To)?(o="'",To++):(o=u,0===Ro&&xo(Sr)),o!==u?("zlib"===r.substr(To,4).toLowerCase()?(a=r.substr(To,4),To+=4):(a=u,0===Ro&&xo(_r)),a===u&&("lz4"===r.substr(To,3).toLowerCase()?(a=r.substr(To,3),To+=3):(a=u,0===Ro&&xo(Or)),a===u&&("none"===r.substr(To,4).toLowerCase()?(a=r.substr(To,4),To+=4):(a=u,0===Ro&&xo(h)))),a!==u?(39===r.charCodeAt(To)?(i="'",To++):(i=u,0===Ro&&xo(Sr)),i!==u?s=o=[o,a,i]:(To=s,s=u)):(To=s,s=u)):(To=s,s=u),s!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,s)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,"engine"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(gr)),e!==u&&Bc()!==u?((n=mc())===u&&(n=null),n!==u&&Bc()!==u&&(s=mi())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,s)):(To=t,t=u)):(To=t,t=u)))),t}function ua(){var t,e,n,s,o,a,i;return t=To,(e=ol())!==u&&(n=Bc())!==u?(59===r.charCodeAt(To)?(s=";",To++):(s=u,0===Ro&&xo(Br)),s!==u?(t,t=e={type:"select"}):(To=t,t=u)):(To=t,t=u),t===u&&(t=ca())===u&&(t=To,e=To,40===r.charCodeAt(To)?(n="(",To++):(n=u,0===Ro&&xo(Wr)),n!==u&&(s=Bc())!==u&&(o=ua())!==u&&(a=Bc())!==u?(41===r.charCodeAt(To)?(i=")",To++):(i=u,0===Ro&&xo(Xr)),i!==u?e=n=[n,s,o,a,i]:(To=e,e=u)):(To=e,e=u),e!==u&&(t,e={...e[2],parentheses_symbol:!0}),t=e),t}function oa(){var t,e,n,s,o,a,i,l,c;if(t=To,Nl()!==u)if(Bc()!==u)if((e=aa())!==u){for(n=[],s=To,(o=Bc())!==u&&(a=Uc())!==u&&(i=Bc())!==u&&(l=aa())!==u?s=o=[o,a,i,l]:(To=s,s=u);s!==u;)n.push(s),s=To,(o=Bc())!==u&&(a=Uc())!==u&&(i=Bc())!==u&&(l=aa())!==u?s=o=[o,a,i,l]:(To=s,s=u);n!==u?(t,t=wf(e,n)):(To=t,t=u)}else To=t,t=u;else To=t,t=u;else To=t,t=u;return t===u&&(t=To,Bc()!==u&&Nl()!==u&&(e=Bc())!==u&&(n=function(){var t,e,n,s;t=To,"RECURSIVE"===r.substr(To,9)?(e="RECURSIVE",To+=9):(e=u,0===Ro&&xo($n));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}())!==u&&(s=Bc())!==u&&(o=aa())!==u?(t,(c=o).recursive=!0,t=[c]):(To=t,t=u)),t}function aa(){var r,t,e,n,s,o;return r=To,(t=Bi())===u&&(t=mi()),t!==u&&Bc()!==u?((e=ia())===u&&(e=null),e!==u&&Bc()!==u&&El()!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(n=Do())!==u&&Bc()!==u&&Dc()!==u?(r,o=e,"string"==typeof(s=t)&&(s={type:"default",value:s}),r=t={name:s,stmt:n.ast,columns:o}):(To=r,r=u)):(To=r,r=u),r}function ia(){var r,t;return r=To,kc()!==u&&Bc()!==u&&(t=xa())!==u&&Bc()!==u&&Dc()!==u?(r,r=t):(To=r,r=u),r}function la(){var r,t,e,n,s;return r=To,(t=xl())!==u&&Bc()!==u&&hl()!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(e=xa())!==u&&Bc()!==u&&Dc()!==u?(r,n=t,s=e,console.lo,r=t={type:n+" ON",columns:s}):(To=r,r=u),r===u&&(r=To,(t=xl())===u&&(t=null),t!==u&&(r,t=function(r){return{type:r}}(t)),r=t),r}function ca(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C,d;return t=To,Bc()!==u?((e=oa())===u&&(e=null),e!==u&&Bc()!==u&&ol()!==u&&Wc()!==u?((n=function(){var r,t,e,n,s,o;if(r=To,(t=fa())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=fa())!==u?n=s=[s,o]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=fa())!==u?n=s=[s,o]:(To=n,n=u);e!==u?(r,t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(To=r,r=u)}else To=r,r=u;return r}())===u&&(n=null),n!==u&&Bc()!==u?((s=la())===u&&(s=null),s!==u&&Bc()!==u&&(o=ba())!==u&&Bc()!==u?((a=Ea())===u&&(a=null),a!==u&&Bc()!==u?((i=Aa())===u&&(i=null),i!==u&&Bc()!==u?((l=Ea())===u&&(l=null),l!==u&&Bc()!==u?((c=ga())===u&&(c=null),c!==u&&Bc()!==u?((f=function(){var r,t,e;r=To,(t=Rl())!==u&&Bc()!==u&&Sl()!==u&&Bc()!==u&&(e=za())!==u?(r,t=e.value,r=t):(To=r,r=u);return r}())===u&&(f=null),f!==u&&Bc()!==u?((b=function(){var t,e;t=To,function(){var t,e,n,s;t=To,"having"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(cs));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}()!==u&&Bc()!==u&&(e=si())!==u?(t,t=e):(To=t,t=u);return t}())===u&&(b=null),b!==u&&Bc()!==u?((v=Ga())===u&&(v=null),v!==u&&Bc()!==u?((L=Ya())===u&&(L=null),L!==u&&Bc()!==u?((C=function(){var t,e;t=To,function(){var t,e,n,s;t=To,"window"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(fs));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}()!==u&&Bc()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=To,(t=Ua())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=Ua())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=Ua())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,t=wf(t,e),r=t):(To=r,r=u)}else To=r,r=u;return r}())!==u?(t,t={keyword:"window",type:"window",expr:e}):(To=t,t=u);return t}())===u&&(C=null),C!==u&&Bc()!==u?((d=Ea())===u&&(d=null),d!==u?(t,t=function(r,t,e,n,s,u,o,a,i,l,c,f,b,v){if(s&&o||s&&v||o&&v||s&&o&&v)throw new Error("A given SQL statement can contain at most one INTO clause");return u&&u.forEach(r=>r.table&&mf.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,into:{...s||o||v||{},position:(s?"column":o&&"from")||v&&"end"},from:u,where:a,groupby:i,having:l,orderby:c,limit:f,window:b}}(e,n,s,o,a,i,l,c,f,b,v,L,C,d)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u),t}function fa(){var t,e;return t=To,(e=function(){var t;"sql_calc_found_rows"===r.substr(To,19).toLowerCase()?(t=r.substr(To,19),To+=19):(t=u,0===Ro&&xo(qu));return t}())===u&&((e=function(){var t;"sql_cache"===r.substr(To,9).toLowerCase()?(t=r.substr(To,9),To+=9):(t=u,0===Ro&&xo(Zu));return t}())===u&&(e=function(){var t;"sql_no_cache"===r.substr(To,12).toLowerCase()?(t=r.substr(To,12),To+=12):(t=u,0===Ro&&xo(zu));return t}()),e===u&&(e=function(){var t;"sql_big_result"===r.substr(To,14).toLowerCase()?(t=r.substr(To,14),To+=14):(t=u,0===Ro&&xo(Ju));return t}())===u&&(e=function(){var t;"sql_small_result"===r.substr(To,16).toLowerCase()?(t=r.substr(To,16),To+=16):(t=u,0===Ro&&xo(Qu));return t}())===u&&(e=function(){var t;"sql_buffer_result"===r.substr(To,17).toLowerCase()?(t=r.substr(To,17),To+=17):(t=u,0===Ro&&xo(ro));return t}())),e!==u&&(t,e=e),t=e}function ba(){var r,t,e,n,s,o,a,i,l,c;if(r=To,(t=gl())===u&&(t=To,(e=Mc())!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t===u&&(t=Mc())),t!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=da())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=da())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,l=t,c=e,If.add("select::null::(.*)"),r=t=c&&c.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},wf(l[0],c)):l[0]):(To=r,r=u)}else To=r,r=u;if(r===u)if(r=To,(t=da())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=da())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=da())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,r=t=function(r,t){return wf(r,t)}(t,e)):(To=r,r=u)}else To=r,r=u;return r}function va(){var r,t;return r=To,$c()!==u&&Bc()!==u&&(t=qi())!==u&&Bc()!==u&&Pc()!==u?(r,r={brackets:!0,number:t}):(To=r,r=u),r}function La(){var r,t,e,n,s;return r=To,(t=function(){var r,t,e,n,s,o,a,i;if(r=To,(t=ni())!==u){if(e=[],n=To,(s=Bc())!==u?((o=Gl())===u&&(o=Hl())===u&&(o=Yc()),o!==u&&(a=Bc())!==u&&(i=ni())!==u?n=s=[s,o,a,i]:(To=n,n=u)):(To=n,n=u),n!==u)for(;n!==u;)e.push(n),n=To,(s=Bc())!==u?((o=Gl())===u&&(o=Hl())===u&&(o=Yc()),o!==u&&(a=Bc())!==u&&(i=ni())!==u?n=s=[s,o,a,i]:(To=n,n=u)):(To=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=t.length;let n=t[e-1][3];for(let s=e-1;s>=0;s--){const e=0===s?r:t[s-1][3];n=df(t[s][1],e,n)}return n}(t,e),r=t):(To=r,r=u)}else To=r,r=u;return r}())===u&&(t=ni()),t!==u&&Bc()!==u?((e=va())===u&&(e=null),e!==u?(r,n=t,(s=e)&&(n.array_index=s),r=t=n):(To=r,r=u)):(To=r,r=u),r}function Ca(){var t,e,n,s;return t=To,34===r.charCodeAt(To)?(e='"',To++):(e=u,0===Ro&&xo(Vr)),e===u&&(e=null),e!==u&&(n=lf())!==u?(34===r.charCodeAt(To)?(s='"',To++):(s=u,0===Ro&&xo(Vr)),s===u&&(s=null),s!==u?(t,t=e=function(r,t,e){if(r&&!e||!r&&e)throw new Error("double quoted not match");return r&&e&&(t.quoted='"'),t}(e,n,s)):(To=t,t=u)):(To=t,t=u),t}function da(){var r,t,e,n,s,o,a,i,l,c,f,b,v;if(r=To,(t=di())!==u&&(r,t={expr:t,as:null}),(r=t)===u){if(r=To,(t=La())!==u)if((e=Bc())!==u)if((n=Tc())!==u)if((s=Bc())!==u)if((o=Ca())!==u){for(a=[],i=To,(l=Bc())!==u?((c=bi())===u&&(c=Li()),c!==u&&(f=Bc())!==u&&(b=La())!==u?i=l=[l,c,f,b]:(To=i,i=u)):(To=i,i=u);i!==u;)a.push(i),i=To,(l=Bc())!==u?((c=bi())===u&&(c=Li()),c!==u&&(f=Bc())!==u&&(b=La())!==u?i=l=[l,c,f,b]:(To=i,i=u)):(To=i,i=u);a!==u&&(i=Bc())!==u?((l=wa())===u&&(l=null),l!==u?(r,r=t={as:l,type:"cast",expr:t,symbol:"::",target:o,tail:(v=a)&&v[0]&&{operator:v[0][1],expr:v[0][3]}}):(To=r,r=u)):(To=r,r=u)}else To=r,r=u;else To=r,r=u;else To=r,r=u;else To=r,r=u;else To=r,r=u;r===u&&(r=To,t=To,(e=Ei())!==u&&(n=Bc())!==u&&(s=xc())!==u?t=e=[e,n,s]:(To=t,t=u),t===u&&(t=null),t!==u&&(e=Bc())!==u&&(n=Mc())!==u?(r,r=t=function(r){const t=r&&r[0]||null;return If.add(`select::${t}::(.*)`),{expr:{type:"column_ref",table:t,column:"*"},as:null}}(t)):(To=r,r=u),r===u&&(r=To,(t=yi())!==u&&(e=Bc())!==u?((n=xc())===u&&(n=null),n!==u?(To,(s=(s=function(r,t){if(t)return!0}(0,n))?u:void 0)!==u&&(o=Bc())!==u?((a=wa())===u&&(a=null),a!==u?(r,r=t=function(r,t,e){return If.add("select::null::"+r),{type:"expr",expr:{type:"column_ref",table:null,column:r},as:e}}(t,0,a)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u),r===u&&(r=To,(t=La())!==u&&(e=Bc())!==u?((n=wa())===u&&(n=null),n!==u?(r,r=t=function(r,t){return{type:"expr",expr:r,as:t}}(t,n)):(To=r,r=u)):(To=r,r=u))))}return r}function pa(){var r,t,e;return r=To,(t=El())===u&&(t=null),t!==u&&Bc()!==u&&(e=Ai())!==u?(r,r=t=e):(To=r,r=u),r}function wa(){var r,t,e;return r=To,(t=El())!==u&&Bc()!==u&&(e=Ai())!==u?(r,r=t=e):(To=r,r=u),r===u&&(r=To,(t=El())===u&&(t=null),t!==u&&Bc()!==u&&(e=Ei())!==u?(r,r=t=e):(To=r,r=u)),r}function Ea(){var t,e,n;return t=To,dl()!==u&&Bc()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=To,(t=of())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=of())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=of())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,t=wf(t,e),r=t):(To=r,r=u)}else To=r,r=u;return r}())!==u?(t,t={keyword:"var",type:"into",expr:e}):(To=t,t=u),t===u&&(t=To,dl()!==u&&Bc()!==u?("outfile"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(Kr)),e===u&&("dumpfile"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(qr))),e===u&&(e=null),e!==u&&Bc()!==u?((n=Bi())===u&&(n=Ei()),n!==u?(t,t={keyword:e,type:"into",expr:n}):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)),t}function Aa(){var r,t;return r=To,pl()!==u&&Bc()!==u&&(t=Ia())!==u?(r,r=t):(To=r,r=u),r}function ha(){var r,t,e;return r=To,(t=_a())!==u&&Bc()!==u&&nl()!==u&&Bc()!==u&&(e=_a())!==u?(r,r=t=[t,e]):(To=r,r=u),r}function ya(){var t,e;return t=To,Il()!==u&&Bc()!==u?("btree"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(Zr)),e===u&&("hash"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(zr)),e===u&&("gist"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Qr)),e===u&&("gin"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(Jr))))),e!==u?(t,t={keyword:"using",type:e.toLowerCase()}):(To=t,t=u)):(To=t,t=u),t}function Ta(){var r,t,e,n,s,o;if(r=To,(t=ma())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=ma())!==u?n=s=[s,o]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=ma())!==u?n=s=[s,o]:(To=n,n=u);e!==u?(r,r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(To=r,r=u)}else To=r,r=u;return r}function ma(){var t,e,n,s,o,a;return t=To,(e=function(){var t,e,n,s;t=To,"key_block_size"===r.substr(To,14).toLowerCase()?(e=r.substr(To,14),To+=14):(e=u,0===Ro&&xo(yr));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="KEY_BLOCK_SIZE"):(To=t,t=u)):(To=t,t=u);return t}())!==u&&Bc()!==u?((n=mc())===u&&(n=null),n!==u&&Bc()!==u&&(s=Ki())!==u?(t,o=n,a=s,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,(e=mi())!==u&&Bc()!==u&&(n=mc())!==u&&Bc()!==u?((s=Ki())===u&&(s=Ei()),s!==u?(t,t=e=function(r,t,e){return{type:r.toLowerCase(),symbol:t,expr:"string"==typeof e&&{type:"origin",value:e}||e}}(e,n,s)):(To=t,t=u)):(To=t,t=u),t===u&&(t=ya())===u&&(t=To,"with"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(rt)),e!==u&&Bc()!==u?("parser"===r.substr(To,6).toLowerCase()?(n=r.substr(To,6),To+=6):(n=u,0===Ro&&xo(tt)),n!==u&&Bc()!==u&&(s=mi())!==u?(t,t=e={type:"with parser",expr:s}):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,"visible"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(et)),e===u&&("invisible"===r.substr(To,9).toLowerCase()?(e=r.substr(To,9),To+=9):(e=u,0===Ro&&xo(nt))),e!==u&&(t,e=function(r){return{type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===u&&(t=Vc())))),t}function Ia(){var r,t,e,n;if(r=To,(t=Ra())!==u){for(e=[],n=Na();n!==u;)e.push(n),n=Na();e!==u?(r,r=t=st(t,e)):(To=r,r=u)}else To=r,r=u;return r}function Na(){var r,t,e;return r=To,Bc()!==u&&(t=Uc())!==u&&Bc()!==u&&(e=Ra())!==u?(r,r=e):(To=r,r=u),r===u&&(r=To,Bc()!==u&&(t=function(){var r,t,e,n,s,o,a,i,l,c,f;if(r=To,(t=Sa())!==u)if(Bc()!==u)if((e=Ra())!==u)if(Bc()!==u)if((n=Il())!==u)if(Bc()!==u)if(kc()!==u)if(Bc()!==u)if((s=mi())!==u){for(o=[],a=To,(i=Bc())!==u&&(l=Uc())!==u&&(c=Bc())!==u&&(f=mi())!==u?a=i=[i,l,c,f]:(To=a,a=u);a!==u;)o.push(a),a=To,(i=Bc())!==u&&(l=Uc())!==u&&(c=Bc())!==u&&(f=mi())!==u?a=i=[i,l,c,f]:(To=a,a=u);o!==u&&(a=Bc())!==u&&(i=Dc())!==u?(r,b=t,L=s,C=o,(v=e).join=b,v.using=wf(L,C),r=t=v):(To=r,r=u)}else To=r,r=u;else To=r,r=u;else To=r,r=u;else To=r,r=u;else To=r,r=u;else To=r,r=u;else To=r,r=u;else To=r,r=u;else To=r,r=u;var b,v,L,C;r===u&&(r=To,(t=Sa())!==u&&Bc()!==u&&(e=Ra())!==u&&Bc()!==u?((n=Oa())===u&&(n=null),n!==u?(r,t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(To=r,r=u)):(To=r,r=u),r===u&&(r=To,(t=Sa())!==u&&Bc()!==u&&(e=kc())!==u&&Bc()!==u&&(n=Po())!==u&&Bc()!==u&&Dc()!==u&&Bc()!==u?((s=wa())===u&&(s=null),s!==u&&(o=Bc())!==u?((a=Oa())===u&&(a=null),a!==u?(r,t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,s,a),r=t):(To=r,r=u)):(To=r,r=u)):(To=r,r=u)));return r}())!==u?(r,r=t):(To=r,r=u)),r}function Ra(){var t,e,n,s,o,a,i,l,c,f,b,v;return t=To,(e=function(){var t;"dual"===r.substr(To,4).toLowerCase()?(t=r.substr(To,4),To+=4):(t=u,0===Ro&&xo(Fu));return t}())!==u&&(t,e={type:"dual"}),(t=e)===u&&(t=To,(e=qa())!==u&&Bc()!==u?((n=pa())===u&&(n=null),n!==u?(t,t=e={expr:{type:"values",values:e},as:n}):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,"lateral"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(ut)),e===u&&(e=null),e!==u&&Bc()!==u&&(n=kc())!==u&&Bc()!==u?((s=Po())===u&&(s=qa()),s!==u&&Bc()!==u&&(o=Dc())!==u&&(a=Bc())!==u?((i=pa())===u&&(i=null),i!==u?(t,t=e=function(r,t,e){return Array.isArray(t)&&(t={type:"values",values:t}),t.parentheses=!0,{prefix:r,expr:t,as:e}}(e,s,i)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,"lateral"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(ut)),e===u&&(e=null),e!==u&&Bc()!==u&&(n=$i())!==u&&Bc()!==u?((s=wa())===u&&(s=null),s!==u?(t,t=e=function(r,t,e){return{prefix:r,type:"expr",expr:t,as:e}}(e,n,s)):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,(e=_a())!==u&&Bc()!==u?("tablesample"===r.substr(To,11).toLowerCase()?(n=r.substr(To,11),To+=11):(n=u,0===Ro&&xo(ot)),n!==u&&Bc()!==u&&(s=$i())!==u&&Bc()!==u?(o=To,"repeatable"===r.substr(To,10).toLowerCase()?(a=r.substr(To,10),To+=10):(a=u,0===Ro&&xo(at)),a!==u&&(i=Bc())!==u&&(l=kc())!==u&&(c=Bc())!==u&&(f=Ki())!==u&&(b=Bc())!==u&&(v=Dc())!==u?o=a=[a,i,l,c,f,b,v]:(To=o,o=u),o===u&&(o=null),o!==u&&(a=Bc())!==u?((i=wa())===u&&(i=null),i!==u?(t,t=e=function(r,t,e,n){return{...r,as:n,tablesample:{expr:t,repeatable:e&&e[4]}}}(e,s,o,i)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,(e=_a())!==u&&Bc()!==u?((n=wa())===u&&(n=null),n!==u?(t,t=e=function(r,t){return"var"===r.type?(r.as=t,r):{...r,as:t}}(e,n)):(To=t,t=u)):(To=t,t=u)))))),t}function Sa(){var t,e,n,s;return t=To,(e=function(){var t,e,n,s;t=To,"left"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(zn));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}())!==u&&(n=Bc())!==u?((s=Tl())===u&&(s=null),s!==u&&Bc()!==u&&yl()!==u?(t,t=e="LEFT JOIN"):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,(e=function(){var t,e,n,s;t=To,"right"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(Qn));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}())!==u&&(n=Bc())!==u?((s=Tl())===u&&(s=null),s!==u&&Bc()!==u&&yl()!==u?(t,t=e="RIGHT JOIN"):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,(e=function(){var t,e,n,s;t=To,"full"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Jn));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}())!==u&&(n=Bc())!==u?((s=Tl())===u&&(s=null),s!==u&&Bc()!==u&&yl()!==u?(t,t=e="FULL JOIN"):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,"cross"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(it)),e!==u&&(n=Bc())!==u&&(s=yl())!==u?(t,t=e="CROSS JOIN"):(To=t,t=u),t===u&&(t=To,e=To,(n=function(){var t,e,n,s;t=To,"inner"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(rs));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}())!==u&&(s=Bc())!==u?e=n=[n,s]:(To=e,e=u),e===u&&(e=null),e!==u&&(n=yl())!==u?(t,t=e="INNER JOIN"):(To=t,t=u))))),t}function _a(){var r,t,e,n,s,o,a,i,l,c;return r=To,(t=Ei())!==u?(e=To,(n=Bc())!==u&&(s=xc())!==u&&(o=Bc())!==u&&(a=Ei())!==u?e=n=[n,s,o,a]:(To=e,e=u),e!==u?(n=To,(s=Bc())!==u&&(o=xc())!==u&&(a=Bc())!==u&&(i=Ei())!==u?n=s=[s,o,a,i]:(To=n,n=u),n!==u?(r,r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=r,n.schema=t[3],n.table=e[3]),n}(t,e,n)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u),r===u&&(r=To,(t=Ei())!==u&&(e=Bc())!==u&&(n=xc())!==u&&(s=Bc())!==u&&(o=Mc())!==u?(r,c=t,mf.add(`select::${c}::(.*)`),r=t={db:c,table:"*"}):(To=r,r=u),r===u&&(r=To,(t=Ei())!==u?(e=To,(n=Bc())!==u&&(s=xc())!==u&&(o=Bc())!==u&&(a=Ei())!==u?e=n=[n,s,o,a]:(To=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(To=r,r=u)):(To=r,r=u),r===u&&(r=To,(t=of())!==u&&(r,(l=t).db=null,l.table=l.name,t=l),r=t))),r}function Oa(){var r,t;return r=To,hl()!==u&&Bc()!==u&&(t=si())!==u?(r,r=t):(To=r,r=u),r}function ga(){var t,e;return t=To,function(){var t,e,n,s;t=To,"where"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(os));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}()!==u&&Bc()!==u&&(e=si())!==u?(t,t=e):(To=t,t=u),t}function xa(){var r,t,e,n,s,o,a,i;if(r=To,(t=pi())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=pi())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=pi())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,r=t=wf(t,e)):(To=r,r=u)}else To=r,r=u;return r}function Ua(){var r,t,e;return r=To,(t=mi())!==u&&Bc()!==u&&El()!==u&&Bc()!==u&&(e=Ma())!==u?(r,r=t={name:t,as_window_specification:e}):(To=r,r=u),r}function Ma(){var r,t;return(r=mi())===u&&(r=To,kc()!==u&&Bc()!==u?((t=function(){var r,t,e,n;r=To,(t=Fa())===u&&(t=null);t!==u&&Bc()!==u?((e=Ga())===u&&(e=null),e!==u&&Bc()!==u?((n=function(){var r,t,e,n,s;r=To,(t=Lc())!==u&&Bc()!==u?((e=ka())===u&&(e=Da()),e!==u?(r,t="rows "+e.value,r=t):(To=r,r=u)):(To=r,r=u);r===u&&(r=To,(t=Lc())!==u&&Bc()!==u&&(e=Ul())!==u&&Bc()!==u&&(n=Da())!==u&&Bc()!==u&&Gl()!==u&&Bc()!==u&&(s=ka())!==u?(r,o=s,t=`rows between ${n.value} and ${o.value}`,r=t):(To=r,r=u));var o;return r}())===u&&(n=null),n!==u?(r,r=t={name:null,partitionby:t,orderby:e,window_frame_clause:n}):(To=r,r=u)):(To=r,r=u)):(To=r,r=u);return r}())===u&&(t=null),t!==u&&Bc()!==u&&Dc()!==u?(r,r={window_specification:t||{},parentheses:!0}):(To=r,r=u)):(To=r,r=u)),r}function ka(){var t,e,n,s;return t=To,(e=Pa())!==u&&Bc()!==u?("following"===r.substr(To,9).toLowerCase()?(n=r.substr(To,9),To+=9):(n=u,0===Ro&&xo(lt)),n!==u?(t,(s=e).value+=" FOLLOWING",t=e=s):(To=t,t=u)):(To=t,t=u),t===u&&(t=$a()),t}function Da(){var t,e,n,s;return t=To,(e=Pa())!==u&&Bc()!==u?("preceding"===r.substr(To,9).toLowerCase()?(n=r.substr(To,9),To+=9):(n=u,0===Ro&&xo(ct)),n!==u?(t,(s=e).value+=" PRECEDING",t=e=s):(To=t,t=u)):(To=t,t=u),t===u&&(t=$a()),t}function $a(){var t,e,n;return t=To,"current"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(ft)),e!==u&&Bc()!==u?("row"===r.substr(To,3).toLowerCase()?(n=r.substr(To,3),To+=3):(n=u,0===Ro&&xo(Cr)),n!==u?(t,t=e={type:"single_quote_string",value:"current row"}):(To=t,t=u)):(To=t,t=u),t}function Pa(){var t,e;return t=To,"unbounded"===r.substr(To,9).toLowerCase()?(e=r.substr(To,9),To+=9):(e=u,0===Ro&&xo(bt)),e!==u&&(t,e={type:"single_quote_string",value:e.toUpperCase()}),(t=e)===u&&(t=Ki()),t}function Fa(){var r,t;return r=To,Cl()!==u&&Bc()!==u&&Sl()!==u&&Bc()!==u&&(t=ba())!==u?(r,r=t):(To=r,r=u),r}function Ga(){var t,e;return t=To,function(){var t,e,n,s;t=To,"order"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(ls));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}()!==u&&Bc()!==u&&Sl()!==u&&Bc()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=To,(t=Ha())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=Ha())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=Ha())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,t=wf(t,e),r=t):(To=r,r=u)}else To=r,r=u;return r}())!==u?(t,t=e):(To=t,t=u),t}function Ha(){var t,e,n,s,o,a,i;return t=To,(e=ni())!==u&&Bc()!==u?((n=Ol())===u&&(n=_l()),n===u&&(n=null),n!==u&&Bc()!==u?(s=To,"nulls"===r.substr(To,5).toLowerCase()?(o=r.substr(To,5),To+=5):(o=u,0===Ro&&xo(y)),o!==u&&(a=Bc())!==u?("first"===r.substr(To,5).toLowerCase()?(i=r.substr(To,5),To+=5):(i=u,0===Ro&&xo(T)),i===u&&("last"===r.substr(To,4).toLowerCase()?(i=r.substr(To,4),To+=4):(i=u,0===Ro&&xo(m))),i===u&&(i=null),i!==u?s=o=[o,a,i]:(To=s,s=u)):(To=s,s=u),s===u&&(s=null),s!==u?(t,t=e=function(r,t,e){const n={expr:r,type:"ASC"};return"DESC"===t&&(n.type="DESC"),n.nulls=e&&`${e[0]} ${e[2]?e[2]:"ASC"===n.type?"LAST":"FIRST"}`,n}(e,n,s)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u),t}function ja(){var r;return(r=Ki())===u&&(r=of())===u&&(r=Si()),r}function Ya(){var t,e,n,s,o,a,i;return t=To,e=To,(n=function(){var t,e,n,s;t=To,"limit"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(bs));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}())!==u&&(s=Bc())!==u?((o=ja())===u&&(o=gl()),o!==u?e=n=[n,s,o]:(To=e,e=u)):(To=e,e=u),e===u&&(e=null),e!==u&&(n=Bc())!==u?(s=To,(o=function(){var t,e,n,s;t=To,"offset"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(vs));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="OFFSET"):(To=t,t=u)):(To=t,t=u);return t}())!==u&&(a=Bc())!==u&&(i=ja())!==u?s=o=[o,a,i]:(To=s,s=u),s===u&&(s=null),s!==u?(t,t=e=function(r,t){const e=[];return r&&e.push("string"==typeof r[2]?{type:"origin",value:"all"}:r[2]),t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,s)):(To=t,t=u)):(To=t,t=u),t}function Ba(){var t,e,n,s,o,a,i,l,c;return t=To,e=To,(n=Ei())!==u&&(s=Bc())!==u&&(o=xc())!==u?e=n=[n,s,o]:(To=e,e=u),e===u&&(e=null),e!==u&&(n=Bc())!==u&&(s=Ti())!==u&&(o=Bc())!==u?(61===r.charCodeAt(To)?(a="=",To++):(a=u,0===Ro&&xo(vt)),a!==u&&Bc()!==u&&(i=fi())!==u?(t,t=e={column:s,value:i,table:(c=e)&&c[0]}):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,e=To,(n=Ei())!==u&&(s=Bc())!==u&&(o=xc())!==u?e=n=[n,s,o]:(To=e,e=u),e===u&&(e=null),e!==u&&(n=Bc())!==u&&(s=Ti())!==u&&(o=Bc())!==u?(61===r.charCodeAt(To)?(a="=",To++):(a=u,0===Ro&&xo(vt)),a!==u&&Bc()!==u&&(i=ml())!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(l=pi())!==u&&Bc()!==u&&Dc()!==u?(t,t=e=function(r,t,e){return{column:t,value:e,table:r&&r[0],keyword:"values"}}(e,s,l)):(To=t,t=u)):(To=t,t=u)),t}function Wa(){var t,e,n,s,o;return t=To,(e=function(){var t,e,n,s;t=To,"returning"===r.substr(To,9).toLowerCase()?(e=r.substr(To,9),To+=9):(e=u,0===Ro&&xo(Fn));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="RETURNING"):(To=t,t=u)):(To=t,t=u);return t}())!==u&&Bc()!==u?((n=ba())===u&&(n=ua()),n!==u?(t,o=n,t=e={type:(s=e)&&s.toLowerCase()||"returning",columns:"*"===o&&[{type:"expr",expr:{type:"column_ref",table:null,column:"*"},as:null}]||o}):(To=t,t=u)):(To=t,t=u),t}function Xa(){var r;return(r=qa())===u&&(r=ca()),r}function Va(){var r,t,e,n,s,o,a,i,l;if(r=To,Cl()!==u)if(Bc()!==u)if((t=kc())!==u)if(Bc()!==u)if((e=mi())!==u){for(n=[],s=To,(o=Bc())!==u&&(a=Uc())!==u&&(i=Bc())!==u&&(l=mi())!==u?s=o=[o,a,i,l]:(To=s,s=u);s!==u;)n.push(s),s=To,(o=Bc())!==u&&(a=Uc())!==u&&(i=Bc())!==u&&(l=mi())!==u?s=o=[o,a,i,l]:(To=s,s=u);n!==u&&(s=Bc())!==u&&(o=Dc())!==u?(r,r=wf(e,n)):(To=r,r=u)}else To=r,r=u;else To=r,r=u;else To=r,r=u;else To=r,r=u;else To=r,r=u;return r===u&&(r=To,Cl()!==u&&Bc()!==u&&(t=Za())!==u?(r,r=t):(To=r,r=u)),r}function Ka(){var r,t;return r=To,(t=fl())!==u&&(r,t="insert"),(r=t)===u&&(r=To,(t=bl())!==u&&(r,t="replace"),r=t),r}function qa(){var r,t;return r=To,ml()!==u&&Bc()!==u&&(t=function(){var r,t,e,n,s,o,a,i;if(r=To,(t=Za())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=Za())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=Za())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,t=wf(t,e),r=t):(To=r,r=u)}else To=r,r=u;return r}())!==u?(r,r=t):(To=r,r=u),r}function Za(){var r,t;return r=To,kc()!==u&&Bc()!==u&&(t=za())!==u&&Bc()!==u&&Dc()!==u?(r,r=t):(To=r,r=u),r}function za(){var r,t,e,n,s,o,a,i;if(r=To,(t=La())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=La())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=La())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,r=t=function(r,t){const e={type:"expr_list"};return e.value=wf(r,t),e}(t,e)):(To=r,r=u)}else To=r,r=u;return r}function Qa(){var t,e,n;return t=To,wc()!==u&&Bc()!==u&&(e=ni())!==u&&Bc()!==u&&(n=function(){var t;(t=function(){var t,e,n,s;t=To,"year"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Be));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="YEAR"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=To,"month"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo($e));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="MONTH"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=To,"day"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(me));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="DAY"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=To,"hour"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Oe));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="HOUR"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=To,"minute"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(De));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="MINUTE"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=To,"second"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(Fe));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="SECOND"):(To=t,t=u)):(To=t,t=u);return t}());return t}())!==u?(t,t={type:"interval",expr:e,unit:n.toLowerCase()}):(To=t,t=u),t===u&&(t=To,wc()!==u&&Bc()!==u&&(e=Bi())!==u?(t,t=function(r){return{type:"interval",expr:r,unit:""}}(e)):(To=t,t=u)),t}function Ja(){var r,t,e,n,s,o,a,i;return r=To,Yl()!==u&&Bc()!==u&&(t=ri())!==u&&Bc()!==u?((e=ei())===u&&(e=null),e!==u&&Bc()!==u&&(n=Wl())!==u&&Bc()!==u?((s=Yl())===u&&(s=null),s!==u?(r,a=t,(i=e)&&a.push(i),r={type:"case",expr:null,args:a}):(To=r,r=u)):(To=r,r=u)):(To=r,r=u),r===u&&(r=To,Yl()!==u&&Bc()!==u&&(t=ni())!==u&&Bc()!==u&&(e=ri())!==u&&Bc()!==u?((n=ei())===u&&(n=null),n!==u&&Bc()!==u&&(s=Wl())!==u&&Bc()!==u?((o=Yl())===u&&(o=null),o!==u?(r,r=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(t,e,n)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u)),r}function ri(){var r,t,e,n,s,o;if(r=To,(t=ti())!==u)if(Bc()!==u){for(e=[],n=To,(s=Bc())!==u&&(o=ti())!==u?n=s=[s,o]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=ti())!==u?n=s=[s,o]:(To=n,n=u);e!==u?(r,r=t=wf(t,e,1)):(To=r,r=u)}else To=r,r=u;else To=r,r=u;return r}function ti(){var t,e,n;return t=To,Bl()!==u&&Bc()!==u&&(e=si())!==u&&Bc()!==u&&function(){var t,e,n,s;t=To,"then"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo($s));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}()!==u&&Bc()!==u&&(n=ni())!==u?(t,t={type:"when",cond:e,result:n}):(To=t,t=u),t}function ei(){var t,e;return t=To,function(){var t,e,n,s;t=To,"else"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Ps));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}()!==u&&Bc()!==u&&(e=ni())!==u?(t,t={type:"else",result:e}):(To=t,t=u),t}function ni(){var r;return(r=function(){var r,t,e,n,s,o,a,i;if(r=To,(t=Ci())!==u){if(e=[],n=To,(s=Bc())!==u&&(o=Yc())!==u&&(a=Bc())!==u&&(i=Ci())!==u?n=s=[s,o,a,i]:(To=n,n=u),n!==u)for(;n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Yc())!==u&&(a=Bc())!==u&&(i=Ci())!==u?n=s=[s,o,a,i]:(To=n,n=u);else e=u;e!==u&&(n=Bc())!==u?((s=ii())===u&&(s=null),s!==u?(r,t=function(r,t,e){const n=Ef(r,t);return null===e?n:"arithmetic"===e.type?Ef(n,e.tail):df(e.op,n,e.right)}(t,e,s),r=t):(To=r,r=u)):(To=r,r=u)}else To=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o,a,i;if(r=To,(t=ui())!==u){for(e=[],n=To,(s=Wc())!==u&&(o=Hl())!==u&&(a=Bc())!==u&&(i=ui())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Wc())!==u&&(o=Hl())!==u&&(a=Bc())!==u&&(i=ui())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,t=Lt(t,e),r=t):(To=r,r=u)}else To=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o;if(r=To,(t=bi())!==u){if(e=[],n=To,(s=Bc())!==u&&(o=Ci())!==u?n=s=[s,o]:(To=n,n=u),n!==u)for(;n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Ci())!==u?n=s=[s,o]:(To=n,n=u);else e=u;e!==u?(r,t=Cf(t,e[0][1]),r=t):(To=r,r=u)}else To=r,r=u;return r}())===u&&(r=Po()),r}function si(){var r,t,e,n,s,o,a,i;if(r=To,(t=ni())!==u){for(e=[],n=To,(s=Bc())!==u?((o=Gl())===u&&(o=Hl())===u&&(o=Uc()),o!==u&&(a=Bc())!==u&&(i=ni())!==u?n=s=[s,o,a,i]:(To=n,n=u)):(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u?((o=Gl())===u&&(o=Hl())===u&&(o=Uc()),o!==u&&(a=Bc())!==u&&(i=ni())!==u?n=s=[s,o,a,i]:(To=n,n=u)):(To=n,n=u);e!==u?(r,r=t=function(r,t){const e=t.length;let n=r,s="";for(let r=0;r<e;++r)","===t[r][1]?(s=",",Array.isArray(n)||(n=[n]),n.push(t[r][3])):n=df(t[r][1],n,t[r][3]);if(","===s){const r={type:"expr_list"};return r.value=n,r}return n}(t,e)):(To=r,r=u)}else To=r,r=u;return r}function ui(){var r,t,e,n,s,o,a,i;if(r=To,(t=oi())!==u){for(e=[],n=To,(s=Wc())!==u&&(o=Gl())!==u&&(a=Bc())!==u&&(i=oi())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Wc())!==u&&(o=Gl())!==u&&(a=Bc())!==u&&(i=oi())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,r=t=Lt(t,e)):(To=r,r=u)}else To=r,r=u;return r}function oi(){var t,e,n,s,o;return(t=ai())===u&&(t=function(){var r,t,e;r=To,(t=function(){var r,t,e,n,s;r=To,t=To,(e=Fl())!==u&&(n=Bc())!==u&&(s=Pl())!==u?t=e=[e,n,s]:(To=t,t=u);t!==u&&(r,t=(o=t)[0]+" "+o[2]);var o;(r=t)===u&&(r=Pl());return r}())!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(e=Po())!==u&&Bc()!==u&&Dc()!==u?(r,n=t,(s=e).parentheses=!0,t=Cf(n,s),r=t):(To=r,r=u);var n,s;return r}())===u&&(t=To,(e=Fl())===u&&(e=To,33===r.charCodeAt(To)?(n="!",To++):(n=u,0===Ro&&xo(Ct)),n!==u?(s=To,Ro++,61===r.charCodeAt(To)?(o="=",To++):(o=u,0===Ro&&xo(vt)),Ro--,o===u?s=void 0:(To=s,s=u),s!==u?e=n=[n,s]:(To=e,e=u)):(To=e,e=u)),e!==u&&(n=Bc())!==u&&(s=oi())!==u?(t,t=e=Cf("NOT",s)):(To=t,t=u)),t}function ai(){var r,t,e,n,s;return r=To,(t=fi())!==u&&Bc()!==u?((e=ii())===u&&(e=null),e!==u?(r,n=t,r=t=null===(s=e)?n:"arithmetic"===s.type?Ef(n,s.tail):df(s.op,n,s.right)):(To=r,r=u)):(To=r,r=u),r===u&&(r=Bi())===u&&(r=pi()),r}function ii(){var t;return(t=function(){var r,t,e,n,s,o,a;r=To,t=[],e=To,(n=Bc())!==u&&(s=li())!==u&&(o=Bc())!==u&&(a=fi())!==u?e=n=[n,s,o,a]:(To=e,e=u);if(e!==u)for(;e!==u;)t.push(e),e=To,(n=Bc())!==u&&(s=li())!==u&&(o=Bc())!==u&&(a=fi())!==u?e=n=[n,s,o,a]:(To=e,e=u);else t=u;t!==u&&(r,t={type:"arithmetic",tail:t});return r=t}())===u&&(t=function(){var r,t,e,n;r=To,(t=ci())!==u&&Bc()!==u&&(e=kc())!==u&&Bc()!==u&&(n=za())!==u&&Bc()!==u&&Dc()!==u?(r,r=t={op:t,right:n}):(To=r,r=u);r===u&&(r=To,(t=ci())!==u&&Bc()!==u?((e=of())===u&&(e=Bi()),e!==u?(r,t=function(r,t){return{op:r,right:t}}(t,e),r=t):(To=r,r=u)):(To=r,r=u));return r}())===u&&(t=function(){var r,t,e,n;r=To,(t=function(){var r,t,e,n,s;r=To,t=To,(e=Fl())!==u&&(n=Bc())!==u&&(s=Ul())!==u?t=e=[e,n,s]:(To=t,t=u);t!==u&&(r,t=(o=t)[0]+" "+o[2]);var o;(r=t)===u&&(r=Ul());return r}())!==u&&Bc()!==u&&(e=fi())!==u&&Bc()!==u&&Gl()!==u&&Bc()!==u&&(n=fi())!==u?(r,r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(To=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a,i,l;r=To,(t=kl())!==u&&(e=Bc())!==u&&(n=fi())!==u?(r,r=t={op:"IS",right:n}):(To=r,r=u);r===u&&(r=To,(t=kl())!==u&&(e=Bc())!==u?(n=To,(s=xl())!==u&&(o=Bc())!==u&&(a=pl())!==u&&(i=Bc())!==u&&(l=_a())!==u?n=s=[s,o,a,i,l]:(To=n,n=u),n!==u?(r,t=function(r){const{db:t,table:e}=r.pop(),n="*"===e?"*":`"${e}"`;return{op:"IS",right:{type:"default",value:"DISTINCT FROM "+(t?`"${t}".${n}`:n)}}}(n),r=t):(To=r,r=u)):(To=r,r=u),r===u&&(r=To,t=To,(e=kl())!==u&&(n=Bc())!==u&&(s=Fl())!==u?t=e=[e,n,s]:(To=t,t=u),t!==u&&(e=Bc())!==u&&(n=fi())!==u?(r,t=function(r){return{op:"IS NOT",right:r}}(n),r=t):(To=r,r=u)));return r}())===u&&(t=function(){var t,e,n,s;t=To,(e=function(){var t,e,n,s,o;t=To,e=To,(n=Fl())!==u&&(s=Bc())!==u?((o=Dl())===u&&(o=$l()),o!==u?e=n=[n,s,o]:(To=e,e=u)):(To=e,e=u);e!==u&&(t,e=(a=e)[0]+" "+a[2]);var a;(t=e)===u&&(t=Dl())===u&&(t=$l())===u&&(t=To,"similar"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(yt)),e!==u&&(n=Bc())!==u&&(s=nl())!==u?(t,t=e="SIMILAR TO"):(To=t,t=u),t===u&&(t=To,(e=Fl())!==u&&(n=Bc())!==u?("similar"===r.substr(To,7).toLowerCase()?(s=r.substr(To,7),To+=7):(s=u,0===Ro&&xo(yt)),s!==u&&(o=Bc())!==u&&nl()!==u?(t,t=e="NOT SIMILAR TO"):(To=t,t=u)):(To=t,t=u)));return t}())!==u&&Bc()!==u?((n=Gi())===u&&(n=ai()),n!==u&&Bc()!==u?((s=function(){var t,e,n;t=To,"escape"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(Tt));e!==u&&Bc()!==u&&(n=Bi())!==u?(t,t=e={type:"ESCAPE",value:n}):(To=t,t=u);return t}())===u&&(s=null),s!==u?(t,o=e,a=n,(i=s)&&(a.escape=i),t=e={op:o,right:a}):(To=t,t=u)):(To=t,t=u)):(To=t,t=u);var o,a,i;return t}())===u&&(t=function(){var t,e,n;t=To,"@>"===r.substr(To,2)?(e="@>",To+=2):(e=u,0===Ro&&xo(mt));e===u&&("<@"===r.substr(To,2)?(e="<@",To+=2):(e=u,0===Ro&&xo(It)),e===u&&(e=jc())===u&&(e=function(){var t;"#>>"===r.substr(To,3)?(t="#>>",To+=3):(t=u,0===Ro&&xo(ao));return t}())===u&&(e=function(){var t;"#>"===r.substr(To,2)?(t="#>",To+=2):(t=u,0===Ro&&xo(oo));return t}())===u&&(63===r.charCodeAt(To)?(e="?",To++):(e=u,0===Ro&&xo(Nt)),e===u&&("?|"===r.substr(To,2)?(e="?|",To+=2):(e=u,0===Ro&&xo(Rt)),e===u&&("?&"===r.substr(To,2)?(e="?&",To+=2):(e=u,0===Ro&&xo(St)),e===u&&("#-"===r.substr(To,2)?(e="#-",To+=2):(e=u,0===Ro&&xo(_t)))))));e!==u&&Bc()!==u&&(n=da())!==u?(t,e={op:e,right:(s=n)&&s.expr||s},t=e):(To=t,t=u);var s;return t}()),t}function li(){var t;return">="===r.substr(To,2)?(t=">=",To+=2):(t=u,0===Ro&&xo(dt)),t===u&&(62===r.charCodeAt(To)?(t=">",To++):(t=u,0===Ro&&xo(pt)),t===u&&("<="===r.substr(To,2)?(t="<=",To+=2):(t=u,0===Ro&&xo(wt)),t===u&&("<>"===r.substr(To,2)?(t="<>",To+=2):(t=u,0===Ro&&xo(Et)),t===u&&(60===r.charCodeAt(To)?(t="<",To++):(t=u,0===Ro&&xo(At)),t===u&&(61===r.charCodeAt(To)?(t="=",To++):(t=u,0===Ro&&xo(vt)),t===u&&("!="===r.substr(To,2)?(t="!=",To+=2):(t=u,0===Ro&&xo(ht)))))))),t}function ci(){var r,t,e,n,s,o;return r=To,t=To,(e=Fl())!==u&&(n=Bc())!==u&&(s=Ml())!==u?t=e=[e,n,s]:(To=t,t=u),t!==u&&(r,t=(o=t)[0]+" "+o[2]),(r=t)===u&&(r=Ml()),r}function fi(){var r,t,e,n,s,o,a,i;if(r=To,(t=vi())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=bi())!==u&&(a=Bc())!==u&&(i=vi())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=bi())!==u&&(a=Bc())!==u&&(i=vi())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,r=t=Lt(t,e)):(To=r,r=u)}else To=r,r=u;return r}function bi(){var t;return 43===r.charCodeAt(To)?(t="+",To++):(t=u,0===Ro&&xo(Ot)),t===u&&(45===r.charCodeAt(To)?(t="-",To++):(t=u,0===Ro&&xo(gt))),t}function vi(){var r,t,e,n,s,o,a,i;if(r=To,(t=Ci())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Li())!==u&&(a=Bc())!==u&&(i=Ci())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Li())!==u&&(a=Bc())!==u&&(i=Ci())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,r=t=Ef(t,e)):(To=r,r=u)}else To=r,r=u;return r}function Li(){var t;return 42===r.charCodeAt(To)?(t="*",To++):(t=u,0===Ro&&xo(xt)),t===u&&(47===r.charCodeAt(To)?(t="/",To++):(t=u,0===Ro&&xo(Ut)),t===u&&(37===r.charCodeAt(To)?(t="%",To++):(t=u,0===Ro&&xo(Mt)))),t}function Ci(){var t,e,n,s,o,a,i,l,c;return(t=function(){var t,e,n,s,o,a,i,l,c;t=To,(e=kc())!==u&&Bc()!==u?((n=Gi())===u&&(n=gi())===u&&(n=xi())===u&&(n=$i())===u&&(n=Ja())===u&&(n=Qa())===u&&(n=pi())===u&&(n=Si()),n!==u&&Bc()!==u&&(s=Dc())!==u&&Bc()!==u&&(o=Tc())!==u&&Bc()!==u&&(a=lf())!==u&&Bc()!==u?((i=wa())===u&&(i=null),i!==u?(t,b=a,v=i,(f=n).parentheses=!0,t=e={as:v,type:"cast",keyword:"cast",expr:f,symbol:"::",target:b}):(To=t,t=u)):(To=t,t=u)):(To=t,t=u);var f,b,v;t===u&&(t=To,(e=Gi())===u&&(e=gi())===u&&(e=xi())===u&&(e=$i())===u&&(e=Ja())===u&&(e=Qa())===u&&(e=pi())===u&&(e=Si()),e!==u&&Bc()!==u&&(n=Tc())!==u&&Bc()!==u&&(s=lf())!==u&&Bc()!==u?((o=wa())===u&&(o=null),o!==u?(t,e=function(r,t,e,n){return{as:n,type:"cast",keyword:"cast",expr:r,symbol:"::",target:e}}(e,0,s,o),t=e):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,(e=Xl())!==u&&Bc()!==u&&(n=kc())!==u&&Bc()!==u&&(s=ni())!==u&&Bc()!==u&&(o=El())!==u&&Bc()!==u&&(a=lf())!==u&&Bc()!==u&&(i=Dc())!==u?(t,e=function(r,t,e){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:e}}(e,s,a),t=e):(To=t,t=u),t===u&&(t=To,(e=Xl())!==u&&Bc()!==u&&(n=kc())!==u&&Bc()!==u&&(s=ni())!==u&&Bc()!==u&&(o=El())!==u&&Bc()!==u&&(a=Zl())!==u&&Bc()!==u&&(i=kc())!==u&&Bc()!==u&&(l=Zi())!==u&&Bc()!==u&&Dc()!==u&&Bc()!==u&&(c=Dc())!==u?(t,e=function(r,t,e){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+")"}}}(e,s,l),t=e):(To=t,t=u),t===u&&(t=To,(e=Xl())!==u&&Bc()!==u&&(n=kc())!==u&&Bc()!==u&&(s=ni())!==u&&Bc()!==u&&(o=El())!==u&&Bc()!==u&&(a=Zl())!==u&&Bc()!==u&&(i=kc())!==u&&Bc()!==u&&(l=Zi())!==u&&Bc()!==u&&Uc()!==u&&Bc()!==u&&(c=Zi())!==u&&Bc()!==u&&Dc()!==u&&Bc()!==u&&Dc()!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+", "+n+")"}}}(e,s,l,c),t=e):(To=t,t=u),t===u&&(t=To,(e=Xl())!==u&&Bc()!==u&&(n=kc())!==u&&Bc()!==u&&(s=ni())!==u&&Bc()!==u&&(o=El())!==u&&Bc()!==u&&(a=function(){var t;(t=function(){var t,e,n,s;t=To,"signed"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(Vs));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="SIGNED"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(t=zl());return t}())!==u&&Bc()!==u?((i=Jl())===u&&(i=null),i!==u&&Bc()!==u&&(l=Dc())!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:e+(n?" "+n:"")}}}(e,s,a,i),t=e):(To=t,t=u)):(To=t,t=u))))));return t}())===u&&(t=Gi())===u&&(t=gi())===u&&(t=xi())===u&&(t=$i())===u&&(t=Ja())===u&&(t=Qa())===u&&(t=To,(e=pi())!==u&&(n=Bc())!==u&&(s=va())!==u?(t,c=s,(l=e).array_index=c,t=e=l):(To=t,t=u),t===u&&(t=pi())===u&&(t=Si())===u&&(t=To,(e=kc())!==u&&(n=Bc())!==u&&(s=si())!==u&&(o=Bc())!==u&&(a=Dc())!==u?(t,(i=s).parentheses=!0,t=e=i):(To=t,t=u),t===u&&(t=of())===u&&(t=To,(e=Bc())!==u?(36===r.charCodeAt(To)?(n="$",To++):(n=u,0===Ro&&xo(kt)),n!==u?(60===r.charCodeAt(To)?(s="<",To++):(s=u,0===Ro&&xo(At)),s!==u&&(o=Ki())!==u?(62===r.charCodeAt(To)?(a=">",To++):(a=u,0===Ro&&xo(pt)),a!==u?(t,t=e={type:"origin",value:`$<${o.value}>`}):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)))),t}function di(){var t,e,n,s,o,a;if(t=To,"e"===r.substr(To,1).toLowerCase()?(e=r.charAt(To),To++):(e=u,0===Ro&&xo(Dt)),e!==u)if(39===r.charCodeAt(To)?(n="'",To++):(n=u,0===Ro&&xo(Sr)),n!==u)if(Bc()!==u){for(s=[],o=Xi();o!==u;)s.push(o),o=Xi();s!==u&&(o=Bc())!==u?(39===r.charCodeAt(To)?(a="'",To++):(a=u,0===Ro&&xo(Sr)),a!==u?(t,t=e={type:"origin",value:`E'${s.join("")}'`}):(To=t,t=u)):(To=t,t=u)}else To=t,t=u;else To=t,t=u;else To=t,t=u;return t}function pi(){var r,t,e,n,s,o,a,i,l,c,f,b,v;if((r=di())===u&&(r=To,t=To,(e=Ei())!==u&&(n=Bc())!==u&&(s=xc())!==u?t=e=[e,n,s]:(To=t,t=u),t===u&&(t=null),t!==u&&(e=Bc())!==u&&(n=Mc())!==u?(r,r=t=function(r){const t=r&&r[0]||null;return If.add(`select::${t}::(.*)`),{type:"column_ref",table:t,column:"*"}}(t)):(To=r,r=u),r===u)){if(r=To,t=To,(e=Ei())!==u&&(n=Bc())!==u&&(s=xc())!==u?t=e=[e,n,s]:(To=t,t=u),t===u&&(t=null),t!==u)if((e=Bc())!==u)if((n=Ti())!==u)if((s=Bc())!==u){if(o=[],a=To,(i=Hc())===u&&(i=Gc()),i!==u&&(l=Bc())!==u?((c=Bi())===u&&(c=Ki()),c!==u?a=i=[i,l,c]:(To=a,a=u)):(To=a,a=u),a!==u)for(;a!==u;)o.push(a),a=To,(i=Hc())===u&&(i=Gc()),i!==u&&(l=Bc())!==u?((c=Bi())===u&&(c=Ki()),c!==u?a=i=[i,l,c]:(To=a,a=u)):(To=a,a=u);else o=u;o!==u?(r,r=t=function(r,t,e){const n=r&&r[0]||null;return If.add(`select::${n}::${t}`),{type:"column_ref",table:n,column:t,arrows:e.map(r=>r[0]),properties:e.map(r=>r[2])}}(t,n,o)):(To=r,r=u)}else To=r,r=u;else To=r,r=u;else To=r,r=u;else To=r,r=u;r===u&&(r=To,(t=Ei())!==u?(e=To,(n=Bc())!==u&&(s=xc())!==u&&(o=Bc())!==u&&(a=Ei())!==u?e=n=[n,s,o,a]:(To=e,e=u),e!==u?(n=To,(s=Bc())!==u&&(o=xc())!==u&&(a=Bc())!==u&&(i=Ti())!==u?n=s=[s,o,a,i]:(To=n,n=u),n!==u?(r,f=t,b=e,v=n,If.add(`select::${f}.${b[3]}::${v[3]}`),r=t={type:"column_ref",schema:f,table:b[3],column:v[3]}):(To=r,r=u)):(To=r,r=u)):(To=r,r=u),r===u&&(r=To,(t=Ei())!==u&&(e=Bc())!==u&&(n=xc())!==u&&(s=Bc())!==u&&(o=Ti())!==u?(r,r=t=function(r,t){return If.add(`select::${r}::${t}`),{type:"column_ref",table:r,column:t}}(t,o)):(To=r,r=u),r===u&&(r=To,(t=Ti())!==u&&(r,t=function(r){return If.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t)))}return r}function wi(){var r,t,e,n,s,o,a,i;if(r=To,(t=Ti())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=Ti())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=Ti())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,r=t=wf(t,e)):(To=r,r=u)}else To=r,r=u;return r}function Ei(){var r,t;return r=To,(t=mi())!==u?(To,($t(t)?u:void 0)!==u?(r,r=t=t):(To=r,r=u)):(To=r,r=u),r===u&&(r=To,(t=hi())!==u&&(r,t=t),r=t),r}function Ai(){var r,t,e;return r=To,(t=mi())!==u?(To,(function(r){if(!0===Lf[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return!1}(t)?u:void 0)!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(e=wi())!==u&&Bc()!==u&&Dc()!==u?(r,r=t=`${t}(${e.join(", ")})`):(To=r,r=u)):(To=r,r=u),r===u&&(r=To,(t=mi())!==u?(To,(function(r){if(!0===Lf[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return!1}(t)?u:void 0)!==u?(r,r=t=t):(To=r,r=u)):(To=r,r=u),r===u&&(r=To,(t=hi())!==u&&(r,t=t),r=t)),r}function hi(){var t;return(t=yi())===u&&(t=function(){var t,e,n,s;t=To,39===r.charCodeAt(To)?(e="'",To++):(e=u,0===Ro&&xo(Sr));if(e!==u){if(n=[],Ht.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(jt)),s!==u)for(;s!==u;)n.push(s),Ht.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(jt));else n=u;n!==u?(39===r.charCodeAt(To)?(s="'",To++):(s=u,0===Ro&&xo(Sr)),s!==u?(t,e=Gt(n),t=e):(To=t,t=u)):(To=t,t=u)}else To=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=To,96===r.charCodeAt(To)?(e="`",To++):(e=u,0===Ro&&xo(Yt));if(e!==u){if(n=[],Bt.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(Wt)),s!==u)for(;s!==u;)n.push(s),Bt.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(Wt));else n=u;n!==u?(96===r.charCodeAt(To)?(s="`",To++):(s=u,0===Ro&&xo(Yt)),s!==u?(t,e=Gt(n),t=e):(To=t,t=u)):(To=t,t=u)}else To=t,t=u;return t}()),t}function yi(){var t,e,n,s;if(t=To,34===r.charCodeAt(To)?(e='"',To++):(e=u,0===Ro&&xo(Vr)),e!==u){if(n=[],Pt.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(Ft)),s!==u)for(;s!==u;)n.push(s),Pt.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(Ft));else n=u;n!==u?(34===r.charCodeAt(To)?(s='"',To++):(s=u,0===Ro&&xo(Vr)),s!==u?(t,t=e=Gt(n)):(To=t,t=u)):(To=t,t=u)}else To=t,t=u;return t}function Ti(){var r,t;return r=To,(t=function(){var r,t,e,n;if(r=To,(t=Ii())!==u){for(e=[],n=Ri();n!==u;)e.push(n),n=Ri();e!==u?(r,t=t+e.join(""),r=t):(To=r,r=u)}else To=r,r=u;return r}())!==u?(To,($t(t)?u:void 0)!==u?(r,r=t=t):(To=r,r=u)):(To=r,r=u),r===u&&(r=hi()),r}function mi(){var r,t,e,n;if(r=To,(t=Ii())!==u){for(e=[],n=Ni();n!==u;)e.push(n),n=Ni();e!==u?(r,r=t=t+e.join("")):(To=r,r=u)}else To=r,r=u;return r}function Ii(){var t;return Xt.test(r.charAt(To))?(t=r.charAt(To),To++):(t=u,0===Ro&&xo(Vt)),t}function Ni(){var t;return Kt.test(r.charAt(To))?(t=r.charAt(To),To++):(t=u,0===Ro&&xo(qt)),t}function Ri(){var t;return Zt.test(r.charAt(To))?(t=r.charAt(To),To++):(t=u,0===Ro&&xo(zt)),t}function Si(){var t,e,n,s;return t=To,e=To,58===r.charCodeAt(To)?(n=":",To++):(n=u,0===Ro&&xo(Qt)),n!==u&&(s=mi())!==u?e=n=[n,s]:(To=e,e=u),e!==u&&(t,e={type:"param",value:e[1]}),t=e}function _i(){var r,t,e;return r=To,hl()!==u&&Bc()!==u&&al()!==u&&Bc()!==u&&(t=Ec())!==u&&Bc()!==u&&kc()!==u&&Bc()!==u?((e=za())===u&&(e=null),e!==u&&Bc()!==u&&Dc()!==u?(r,r={type:"on update",keyword:t,parentheses:!0,expr:e}):(To=r,r=u)):(To=r,r=u),r===u&&(r=To,hl()!==u&&Bc()!==u&&al()!==u&&Bc()!==u&&(t=Ec())!==u?(r,r=function(r){return{type:"on update",keyword:r}}(t)):(To=r,r=u)),r}function Oi(){var t,e,n,s,o;return t=To,"over"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Jt)),e!==u&&Bc()!==u&&(n=Ma())!==u?(t,t=e={type:"window",as_window_specification:n}):(To=t,t=u),t===u&&(t=To,"over"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Jt)),e!==u&&Bc()!==u&&(n=kc())!==u&&Bc()!==u?((s=Fa())===u&&(s=null),s!==u&&Bc()!==u?((o=Ga())===u&&(o=null),o!==u&&Bc()!==u&&Dc()!==u?(t,t=e={partitionby:s,orderby:o}):(To=t,t=u)):(To=t,t=u)):(To=t,t=u),t===u&&(t=_i())),t}function gi(){var t,e,n,s,o;return t=To,(e=function(){var t,e,n,s,o,a,i,l,c;t=To,(e=function(){var t,e,n,s;t=To,"count"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(Rs));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="COUNT"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(e=function(){var t,e,n,s;t=To,"group_concat"===r.substr(To,12).toLowerCase()?(e=r.substr(To,12),To+=12):(e=u,0===Ro&&xo(Ss));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="GROUP_CONCAT"):(To=t,t=u)):(To=t,t=u);return t}());e!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(n=function(){var t,e;t=To,(e=function(){var t,e;t=To,42===r.charCodeAt(To)?(e="*",To++):(e=u,0===Ro&&xo(xt));e!==u&&(t,e={type:"star",value:"*"});return t=e}())!==u&&(t,e={expr:e});(t=e)===u&&(t=ki());return t}())!==u&&Bc()!==u&&(s=Dc())!==u&&Bc()!==u?((o=Oi())===u&&(o=null),o!==u?(t,t=e={type:"aggr_func",name:e,args:n,over:o}):(To=t,t=u)):(To=t,t=u);t===u&&(t=To,"percentile_cont"===r.substr(To,15).toLowerCase()?(e=r.substr(To,15),To+=15):(e=u,0===Ro&&xo(fe)),e===u&&("percentile_disc"===r.substr(To,15).toLowerCase()?(e=r.substr(To,15),To+=15):(e=u,0===Ro&&xo(be))),e!==u&&Bc()!==u&&kc()!==u&&Bc()!==u?((n=Ki())===u&&(n=Hi()),n!==u&&Bc()!==u&&(s=Dc())!==u&&Bc()!==u?("within"===r.substr(To,6).toLowerCase()?(o=r.substr(To,6),To+=6):(o=u,0===Ro&&xo(ve)),o!==u&&Bc()!==u&&Rl()!==u&&Bc()!==u&&(a=kc())!==u&&Bc()!==u&&(i=Ga())!==u&&Bc()!==u&&(l=Dc())!==u&&Bc()!==u?((c=Oi())===u&&(c=null),c!==u?(t,e=function(r,t,e,n){return{type:"aggr_func",name:r.toUpperCase(),args:{expr:t},within_group_orderby:e,over:n}}(e,n,i,c),t=e):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,"mode"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Le)),e!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(n=Dc())!==u&&Bc()!==u?("within"===r.substr(To,6).toLowerCase()?(s=r.substr(To,6),To+=6):(s=u,0===Ro&&xo(ve)),s!==u&&Bc()!==u&&(o=Rl())!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(a=Ga())!==u&&Bc()!==u&&(i=Dc())!==u&&Bc()!==u?((l=Oi())===u&&(l=null),l!==u?(t,e=function(r,t,e){return{type:"aggr_func",name:r.toUpperCase(),args:{expr:{}},within_group_orderby:t,over:e}}(e,a,l),t=e):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)));return t}())===u&&(e=function(){var t,e,n,s;t=To,(e=function(){var t;(t=function(){var t,e,n,s;t=To,"sum"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(gs));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="SUM"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=To,"max"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(_s));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="MAX"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=To,"min"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(Os));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="MIN"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=To,"avg"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(xs));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="AVG"):(To=t,t=u)):(To=t,t=u);return t}());return t}())!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(n=fi())!==u&&Bc()!==u&&Dc()!==u&&Bc()!==u?((s=Oi())===u&&(s=null),s!==u?(t,t=e={type:"aggr_func",name:e,args:{expr:n},over:s}):(To=t,t=u)):(To=t,t=u);return t}())===u&&(e=function(){var t,e,n,s,o,a,i;t=To,e=To,(n=Ei())!==u&&(s=Bc())!==u&&(o=xc())!==u?e=n=[n,s,o]:(To=e,e=u);e===u&&(e=null);e!==u&&(n=Bc())!==u&&(s=function(){var t,e,n,s;t=To,"array_agg"===r.substr(To,9).toLowerCase()?(e=r.substr(To,9),To+=9):(e=u,0===Ro&&xo(Ns));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="ARRAY_AGG"):(To=t,t=u)):(To=t,t=u);return t}())!==u&&(o=Bc())!==u&&kc()!==u&&Bc()!==u&&(a=ki())!==u&&Bc()!==u?((i=Ga())===u&&(i=null),i!==u&&Bc()!==u&&Dc()!==u?(t,c=s,f=a,b=i,e={type:"aggr_func",name:(l=e)?`${l[0]}.${c}`:c,args:f,orderby:b},t=e):(To=t,t=u)):(To=t,t=u);var l,c,f,b;return t}()),e!==u&&Bc()!==u?((n=function(){var t,e,n;return t=To,"filter"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(re)),e!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(n=ga())!==u&&Bc()!==u&&Dc()!==u?(t,t=e={keyword:"filter",parentheses:!0,where:n}):(To=t,t=u),t}())===u&&(n=null),n!==u?(t,s=e,(o=n)&&(s.filter=o),t=e=s):(To=t,t=u)):(To=t,t=u),t}function xi(){var t;return(t=function(){var t,e,n;t=To,(e=function(){var t;"row_number"===r.substr(To,10).toLowerCase()?(t=r.substr(To,10),To+=10):(t=u,0===Ro&&xo(ne));t===u&&("dense_rank"===r.substr(To,10).toLowerCase()?(t=r.substr(To,10),To+=10):(t=u,0===Ro&&xo(se)),t===u&&("rank"===r.substr(To,4).toLowerCase()?(t=r.substr(To,4),To+=4):(t=u,0===Ro&&xo(ue))));return t}())!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&Dc()!==u&&Bc()!==u&&(n=Oi())!==u?(t,t=e={type:"window_func",name:e,over:n}):(To=t,t=u);return t}())===u&&(t=function(){var t,e,n,s,o;t=To,(e=function(){var t;"lag"===r.substr(To,3).toLowerCase()?(t=r.substr(To,3),To+=3):(t=u,0===Ro&&xo(oe));t===u&&("lead"===r.substr(To,4).toLowerCase()?(t=r.substr(To,4),To+=4):(t=u,0===Ro&&xo(ae)),t===u&&("nth_value"===r.substr(To,9).toLowerCase()?(t=r.substr(To,9),To+=9):(t=u,0===Ro&&xo(ie))));return t}())!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(n=za())!==u&&Bc()!==u&&Dc()!==u&&Bc()!==u?((s=Ui())===u&&(s=null),s!==u&&Bc()!==u&&(o=Oi())!==u?(t,t=e={type:"window_func",name:e,args:n,over:o,consider_nulls:s}):(To=t,t=u)):(To=t,t=u);return t}())===u&&(t=function(){var t,e,n,s,o;t=To,(e=function(){var t;"first_value"===r.substr(To,11).toLowerCase()?(t=r.substr(To,11),To+=11):(t=u,0===Ro&&xo(te));t===u&&("last_value"===r.substr(To,10).toLowerCase()?(t=r.substr(To,10),To+=10):(t=u,0===Ro&&xo(ee)));return t}())!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(n=ni())!==u&&Bc()!==u?((s=Ui())===u&&(s=null),s!==u&&Bc()!==u&&Dc()!==u&&Bc()!==u&&(o=Oi())!==u?(t,t=e={type:"window_func",name:e,args:{type:"expr_list",value:[n]},over:o,consider_nulls:s}):(To=t,t=u)):(To=t,t=u);return t}()),t}function Ui(){var t,e,n;return t=To,"ignore"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(le)),e===u&&("respect"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(ce))),e!==u&&Bc()!==u?("nulls"===r.substr(To,5).toLowerCase()?(n=r.substr(To,5),To+=5):(n=u,0===Ro&&xo(y)),n!==u?(t,t=e=e.toUpperCase()+" NULLS"):(To=t,t=u)):(To=t,t=u),t}function Mi(){var t,e,n;return t=To,"separator"===r.substr(To,9).toLowerCase()?(e=r.substr(To,9),To+=9):(e=u,0===Ro&&xo(Ce)),e===u&&(e=null),e!==u&&Bc()!==u&&(n=Bi())!==u?(t,t=e={keyword:e,value:n}):(To=t,t=u),t}function ki(){var r,t,e,n,s,o,a;return r=To,(t=xl())===u&&(t=null),t!==u&&Bc()!==u&&(e=kc())!==u&&Bc()!==u&&(n=ni())!==u&&Bc()!==u&&(s=Dc())!==u&&Bc()!==u?((o=Ga())===u&&(o=null),o!==u&&Bc()!==u?((a=Mi())===u&&(a=null),a!==u?(r,r=t={distinct:t,expr:n,orderby:o,parentheses:!0,separator:a}):(To=r,r=u)):(To=r,r=u)):(To=r,r=u),r===u&&(r=To,(t=xl())===u&&(t=null),t!==u&&Bc()!==u&&(e=ni())!==u&&Bc()!==u?((n=Ga())===u&&(n=null),n!==u&&Bc()!==u?((s=Mi())===u&&(s=null),s!==u?(r,r=t=function(r,t,e,n){return{distinct:r,expr:t,orderby:e,parentheses:!1,separator:n}}(t,e,n,s)):(To=r,r=u)):(To=r,r=u)):(To=r,r=u)),r}function Di(){var t,e,n;return t=To,(e=function(){var t;return"both"===r.substr(To,4).toLowerCase()?(t=r.substr(To,4),To+=4):(t=u,0===Ro&&xo(de)),t===u&&("leading"===r.substr(To,7).toLowerCase()?(t=r.substr(To,7),To+=7):(t=u,0===Ro&&xo(pe)),t===u&&("trailing"===r.substr(To,8).toLowerCase()?(t=r.substr(To,8),To+=8):(t=u,0===Ro&&xo(we)))),t}())===u&&(e=null),e!==u&&Bc()!==u?((n=Bi())===u&&(n=null),n!==u&&Bc()!==u&&pl()!==u?(t,t=e=function(r,t,e){let n=[];return r&&n.push({type:"origin",value:r}),t&&n.push(t),n.push({type:"origin",value:"from"}),{type:"expr_list",value:n}}(e,n)):(To=t,t=u)):(To=t,t=u),t}function $i(){var t,e,n,s,o,a,i,l,c,f;return(t=function(){var t,e,n,s;return t=To,"trim"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Ee)),e!==u&&Bc()!==u&&kc()!==u&&Bc()!==u?((n=Di())===u&&(n=null),n!==u&&Bc()!==u&&(s=ni())!==u&&Bc()!==u&&Dc()!==u?(t,t=e=function(r,t){let e=r||{type:"expr_list",value:[]};return e.value.push(t),{type:"function",name:"TRIM",args:e}}(n,s)):(To=t,t=u)):(To=t,t=u),t}())===u&&(t=To,"now"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(Ae)),e!==u&&Bc()!==u&&(n=kc())!==u&&Bc()!==u?((s=za())===u&&(s=null),s!==u&&Bc()!==u&&Dc()!==u&&Bc()!==u?("at"===r.substr(To,2).toLowerCase()?(o=r.substr(To,2),To+=2):(o=u,0===Ro&&xo(he)),o!==u&&Bc()!==u&&Cc()!==u&&Bc()!==u?("zone"===r.substr(To,4).toLowerCase()?(a=r.substr(To,4),To+=4):(a=u,0===Ro&&xo(ye)),a!==u&&Bc()!==u&&(i=Bi())!==u?(t,l=e,c=s,(f=i).prefix="at time zone",t=e={type:"function",name:l,args:c||{type:"expr_list",value:[]},suffix:f}):(To=t,t=u)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,(e=nf())!==u&&Bc()!==u&&(n=kc())!==u&&Bc()!==u?((s=si())===u&&(s=null),s!==u&&Bc()!==u&&Dc()!==u?(t,t=e=function(r,t){return t&&"expr_list"!==t.type&&(t={type:"expr_list",value:[t]}),{type:"function",name:r,args:t||{type:"expr_list",value:[]}}}(e,s)):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,(e=function(){var t;(t=Fi())===u&&(t=function(){var t,e,n,s;t=To,"current_user"===r.substr(To,12).toLowerCase()?(e=r.substr(To,12),To+=12):(e=u,0===Ro&&xo(Iu));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="CURRENT_USER"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=To,"user"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Eu));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="USER"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=To,"session_user"===r.substr(To,12).toLowerCase()?(e=r.substr(To,12),To+=12):(e=u,0===Ro&&xo(Nu));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="SESSION_USER"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=To,"system_user"===r.substr(To,11).toLowerCase()?(e=r.substr(To,11),To+=11):(e=u,0===Ro&&xo(Ru));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="SYSTEM_USER"):(To=t,t=u)):(To=t,t=u);return t}());return t}())!==u&&Bc()!==u&&(n=kc())!==u&&Bc()!==u?((s=za())===u&&(s=null),s!==u&&Bc()!==u&&Dc()!==u&&Bc()!==u?((o=Oi())===u&&(o=null),o!==u?(t,t=e=function(r,t,e){return{type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,s,o)):(To=t,t=u)):(To=t,t=u)):(To=t,t=u),t===u&&(t=function(){var r,t,e,n,s;r=To,(t=jl())!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(e=Pi())!==u&&Bc()!==u&&pl()!==u&&Bc()!==u?((n=dc())===u&&(n=wc())===u&&(n=Cc())===u&&(n=bc()),n===u&&(n=null),n!==u&&Bc()!==u&&(s=ni())!==u&&Bc()!==u&&Dc()!==u?(r,o=e,a=n,i=s,t={type:t.toLowerCase(),args:{field:o,cast_type:a,source:i}},r=t):(To=r,r=u)):(To=r,r=u);var o,a,i;r===u&&(r=To,(t=jl())!==u&&Bc()!==u&&kc()!==u&&Bc()!==u&&(e=Pi())!==u&&Bc()!==u&&pl()!==u&&Bc()!==u&&(n=ni())!==u&&Bc()!==u&&(s=Dc())!==u?(r,t=function(r,t,e){return{type:r.toLowerCase(),args:{field:t,source:e}}}(t,e,n),r=t):(To=r,r=u));return r}())===u&&(t=To,(e=Fi())!==u&&Bc()!==u?((n=_i())===u&&(n=null),n!==u?(t,t=e={type:"function",name:e,over:n}):(To=t,t=u)):(To=t,t=u))))),t}function Pi(){var t,e;return t=To,"century"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(Te)),e===u&&("day"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(me)),e===u&&("date"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Ie)),e===u&&("decade"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(Ne)),e===u&&("dow"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(Re)),e===u&&("doy"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(Se)),e===u&&("epoch"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(_e)),e===u&&("hour"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Oe)),e===u&&("isodow"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(ge)),e===u&&("isoyear"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(xe)),e===u&&("microseconds"===r.substr(To,12).toLowerCase()?(e=r.substr(To,12),To+=12):(e=u,0===Ro&&xo(Ue)),e===u&&("millennium"===r.substr(To,10).toLowerCase()?(e=r.substr(To,10),To+=10):(e=u,0===Ro&&xo(Me)),e===u&&("milliseconds"===r.substr(To,12).toLowerCase()?(e=r.substr(To,12),To+=12):(e=u,0===Ro&&xo(ke)),e===u&&("minute"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(De)),e===u&&("month"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo($e)),e===u&&("quarter"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(Pe)),e===u&&("second"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(Fe)),e===u&&("timezone"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(Ge)),e===u&&("timezone_hour"===r.substr(To,13).toLowerCase()?(e=r.substr(To,13),To+=13):(e=u,0===Ro&&xo(He)),e===u&&("timezone_minute"===r.substr(To,15).toLowerCase()?(e=r.substr(To,15),To+=15):(e=u,0===Ro&&xo(je)),e===u&&("week"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Ye)),e===u&&("year"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Be))))))))))))))))))))))),e!==u&&(t,e=e),t=e}function Fi(){var t;return(t=function(){var t,e,n,s;t=To,"current_date"===r.substr(To,12).toLowerCase()?(e=r.substr(To,12),To+=12):(e=u,0===Ro&&xo(hu));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="CURRENT_DATE"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=To,"current_time"===r.substr(To,12).toLowerCase()?(e=r.substr(To,12),To+=12):(e=u,0===Ro&&xo(Tu));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="CURRENT_TIME"):(To=t,t=u)):(To=t,t=u);return t}())===u&&(t=Ec()),t}function Gi(){var t;return(t=Bi())===u&&(t=Ki())===u&&(t=function(){var t,e;t=To,(e=function(){var t,e,n,s;t=To,"true"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Tn));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!0});(t=e)===u&&(t=To,(e=function(){var t,e,n,s;t=To,"false"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(In));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!1}),t=e);return t}())===u&&(t=ji())===u&&(t=function(){var t,e,n,s,o,a;t=To,(e=Cc())===u&&(e=bc())===u&&(e=dc())===u&&(e=vc());if(e!==u)if(Bc()!==u){if(n=To,39===r.charCodeAt(To)?(s="'",To++):(s=u,0===Ro&&xo(Sr)),s!==u){for(o=[],a=Xi();a!==u;)o.push(a),a=Xi();o!==u?(39===r.charCodeAt(To)?(a="'",To++):(a=u,0===Ro&&xo(Sr)),a!==u?n=s=[s,o,a]:(To=n,n=u)):(To=n,n=u)}else To=n,n=u;n!==u?(t,i=n,e={type:e.toLowerCase(),value:i[1].join("")},t=e):(To=t,t=u)}else To=t,t=u;else To=t,t=u;var i;if(t===u)if(t=To,(e=Cc())===u&&(e=bc())===u&&(e=dc())===u&&(e=vc()),e!==u)if(Bc()!==u){if(n=To,34===r.charCodeAt(To)?(s='"',To++):(s=u,0===Ro&&xo(Vr)),s!==u){for(o=[],a=Wi();a!==u;)o.push(a),a=Wi();o!==u?(34===r.charCodeAt(To)?(a='"',To++):(a=u,0===Ro&&xo(Vr)),a!==u?n=s=[s,o,a]:(To=n,n=u)):(To=n,n=u)}else To=n,n=u;n!==u?(t,e=function(r,t){return{type:r.toLowerCase(),value:t[1].join("")}}(e,n),t=e):(To=t,t=u)}else To=t,t=u;else To=t,t=u;return t}())===u&&(t=Hi()),t}function Hi(){var t,e;return t=To,function(){var t,e,n,s;t=To,"array"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(Is));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="ARRAY"):(To=t,t=u)):(To=t,t=u);return t}()!==u&&Bc()!==u&&$c()!==u&&Bc()!==u?((e=za())===u&&(e=null),e!==u&&Bc()!==u&&Pc()!==u?(t,t={expr_list:e||{type:"origin",value:""},type:"array",keyword:"array",brackets:!0}):(To=t,t=u)):(To=t,t=u),t}function ji(){var t,e;return t=To,(e=function(){var t,e,n,s;t=To,"null"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(hn));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}())!==u&&(t,e={type:"null",value:null}),t=e}function Yi(){var t,e;return t=To,(e=function(){var t,e,n,s;t=To,"not null"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(yn));e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u);return t}())!==u&&(t,e={type:"not null",value:"not null"}),t=e}function Bi(){var t,e,n,s,o,a,i,l,c;if(t=To,e=To,39===r.charCodeAt(To)?(n="'",To++):(n=u,0===Ro&&xo(Sr)),n!==u){for(s=[],o=Xi();o!==u;)s.push(o),o=Xi();s!==u?(39===r.charCodeAt(To)?(o="'",To++):(o=u,0===Ro&&xo(Sr)),o!==u?e=n=[n,s,o]:(To=e,e=u)):(To=e,e=u)}else To=e,e=u;if(e!==u){if(n=[],We.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(Xe)),s!==u)for(;s!==u;)n.push(s),We.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(Xe));else n=u;if(n!==u)if((s=Bc())!==u){if(o=To,39===r.charCodeAt(To)?(a="'",To++):(a=u,0===Ro&&xo(Sr)),a!==u){for(i=[],l=Xi();l!==u;)i.push(l),l=Xi();i!==u?(39===r.charCodeAt(To)?(l="'",To++):(l=u,0===Ro&&xo(Sr)),l!==u?o=a=[a,i,l]:(To=o,o=u)):(To=o,o=u)}else To=o,o=u;o!==u?(t,c=o,t=e={type:"single_quote_string",value:`${e[1].join("")}${c[1].join("")}`}):(To=t,t=u)}else To=t,t=u;else To=t,t=u}else To=t,t=u;if(t===u){if(t=To,e=To,39===r.charCodeAt(To)?(n="'",To++):(n=u,0===Ro&&xo(Sr)),n!==u){for(s=[],o=Xi();o!==u;)s.push(o),o=Xi();s!==u?(39===r.charCodeAt(To)?(o="'",To++):(o=u,0===Ro&&xo(Sr)),o!==u?e=n=[n,s,o]:(To=e,e=u)):(To=e,e=u)}else To=e,e=u;if(e!==u&&(t,e=function(r){return{type:"single_quote_string",value:r[1].join("")}}(e)),(t=e)===u){if(t=To,e=To,34===r.charCodeAt(To)?(n='"',To++):(n=u,0===Ro&&xo(Vr)),n!==u){for(s=[],o=Wi();o!==u;)s.push(o),o=Wi();s!==u?(34===r.charCodeAt(To)?(o='"',To++):(o=u,0===Ro&&xo(Vr)),o!==u?e=n=[n,s,o]:(To=e,e=u)):(To=e,e=u)}else To=e,e=u;e!==u?(n=To,Ro++,s=xc(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e=function(r){return{type:"double_quote_string",value:r[1].join("")}}(e)):(To=t,t=u)):(To=t,t=u)}}return t}function Wi(){var t;return Ve.test(r.charAt(To))?(t=r.charAt(To),To++):(t=u,0===Ro&&xo(Ke)),t===u&&(t=Vi()),t}function Xi(){var t;return qe.test(r.charAt(To))?(t=r.charAt(To),To++):(t=u,0===Ro&&xo(Ze)),t===u&&(t=Vi()),t}function Vi(){var t,e,n,s,o,a,i,l,c,f;return t=To,"\\'"===r.substr(To,2)?(e="\\'",To+=2):(e=u,0===Ro&&xo(ze)),e!==u&&(t,e="\\'"),(t=e)===u&&(t=To,'\\"'===r.substr(To,2)?(e='\\"',To+=2):(e=u,0===Ro&&xo(Qe)),e!==u&&(t,e='\\"'),(t=e)===u&&(t=To,"\\\\"===r.substr(To,2)?(e="\\\\",To+=2):(e=u,0===Ro&&xo(Je)),e!==u&&(t,e="\\\\"),(t=e)===u&&(t=To,"\\/"===r.substr(To,2)?(e="\\/",To+=2):(e=u,0===Ro&&xo(rn)),e!==u&&(t,e="\\/"),(t=e)===u&&(t=To,"\\b"===r.substr(To,2)?(e="\\b",To+=2):(e=u,0===Ro&&xo(tn)),e!==u&&(t,e="\b"),(t=e)===u&&(t=To,"\\f"===r.substr(To,2)?(e="\\f",To+=2):(e=u,0===Ro&&xo(en)),e!==u&&(t,e="\f"),(t=e)===u&&(t=To,"\\n"===r.substr(To,2)?(e="\\n",To+=2):(e=u,0===Ro&&xo(nn)),e!==u&&(t,e="\n"),(t=e)===u&&(t=To,"\\r"===r.substr(To,2)?(e="\\r",To+=2):(e=u,0===Ro&&xo(sn)),e!==u&&(t,e="\r"),(t=e)===u&&(t=To,"\\t"===r.substr(To,2)?(e="\\t",To+=2):(e=u,0===Ro&&xo(un)),e!==u&&(t,e="\t"),(t=e)===u&&(t=To,"\\u"===r.substr(To,2)?(e="\\u",To+=2):(e=u,0===Ro&&xo(on)),e!==u&&(n=tl())!==u&&(s=tl())!==u&&(o=tl())!==u&&(a=tl())!==u?(t,i=n,l=s,c=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+l+c+f))):(To=t,t=u),t===u&&(t=To,92===r.charCodeAt(To)?(e="\\",To++):(e=u,0===Ro&&xo(an)),e!==u&&(t,e="\\"),(t=e)===u&&(t=To,"''"===r.substr(To,2)?(e="''",To+=2):(e=u,0===Ro&&xo(ln)),e!==u&&(t,e="''"),t=e))))))))))),t}function Ki(){var r,t,e;return r=To,(t=qi())!==u&&(r,t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function qi(){var r,t,e,n;return r=To,(t=Zi())===u&&(t=null),t!==u&&(e=zi())!==u&&(n=Qi())!==u?(r,r=t={type:"bigint",value:(t||"")+e+n}):(To=r,r=u),r===u&&(r=To,(t=Zi())===u&&(t=null),t!==u&&(e=zi())!==u?(r,r=t=function(r,t){const e=(r||"")+t;return r&&pf(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e)):(To=r,r=u),r===u&&(r=To,(t=Zi())!==u&&(e=Qi())!==u?(r,r=t=function(r,t){return{type:"bigint",value:r+t}}(t,e)):(To=r,r=u),r===u&&(r=To,(t=Zi())!==u&&(r,t=function(r){return pf(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t))),r}function Zi(){var t,e,n;return(t=Ji())===u&&(t=rl())===u&&(t=To,45===r.charCodeAt(To)?(e="-",To++):(e=u,0===Ro&&xo(gt)),e===u&&(43===r.charCodeAt(To)?(e="+",To++):(e=u,0===Ro&&xo(Ot))),e!==u&&(n=Ji())!==u?(t,t=e=e+n):(To=t,t=u),t===u&&(t=To,45===r.charCodeAt(To)?(e="-",To++):(e=u,0===Ro&&xo(gt)),e===u&&(43===r.charCodeAt(To)?(e="+",To++):(e=u,0===Ro&&xo(Ot))),e!==u&&(n=rl())!==u?(t,t=e=function(r,t){return r+t}(e,n)):(To=t,t=u))),t}function zi(){var t,e,n;return t=To,46===r.charCodeAt(To)?(e=".",To++):(e=u,0===Ro&&xo(bn)),e!==u&&(n=Ji())!==u?(t,t=e="."+n):(To=t,t=u),t}function Qi(){var t,e,n;return t=To,(e=function(){var t,e,n;t=To,pn.test(r.charAt(To))?(e=r.charAt(To),To++):(e=u,0===Ro&&xo(wn));e!==u?(En.test(r.charAt(To))?(n=r.charAt(To),To++):(n=u,0===Ro&&xo(An)),n===u&&(n=null),n!==u?(t,t=e=e+(null!==(s=n)?s:"")):(To=t,t=u)):(To=t,t=u);var s;return t}())!==u&&(n=Ji())!==u?(t,t=e=e+n):(To=t,t=u),t}function Ji(){var r,t,e;if(r=To,t=[],(e=rl())!==u)for(;e!==u;)t.push(e),e=rl();else t=u;return t!==u&&(r,t=t.join("")),r=t}function rl(){var t;return vn.test(r.charAt(To))?(t=r.charAt(To),To++):(t=u,0===Ro&&xo(Ln)),t}function tl(){var t;return Cn.test(r.charAt(To))?(t=r.charAt(To),To++):(t=u,0===Ro&&xo(dn)),t}function el(){var t,e,n,s;return t=To,"default"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(x)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function nl(){var t,e,n,s;return t=To,"to"===r.substr(To,2).toLowerCase()?(e=r.substr(To,2),To+=2):(e=u,0===Ro&&xo(mn)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function sl(){var t,e,n,s;return t=To,"show"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Nn)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function ul(){var t,e,n,s;return t=To,"drop"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Rn)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="DROP"):(To=t,t=u)):(To=t,t=u),t}function ol(){var t,e,n,s;return t=To,"select"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(On)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function al(){var t,e,n,s;return t=To,"update"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(gn)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function il(){var t,e,n,s;return t=To,"create"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(xn)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function ll(){var t,e,n,s;return t=To,"temporary"===r.substr(To,9).toLowerCase()?(e=r.substr(To,9),To+=9):(e=u,0===Ro&&xo(Un)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="TEMPORARY"):(To=t,t=u)):(To=t,t=u),t}function cl(){var t,e,n,s;return t=To,"delete"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(kn)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function fl(){var t,e,n,s;return t=To,"insert"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(Dn)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function bl(){var t,e,n,s;return t=To,"replace"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(Pn)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function vl(){var t,e,n,s;return t=To,"rename"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(Gn)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function Ll(){var t,e,n,s;return t=To,"ignore"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(le)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function Cl(){var t,e,n,s;return t=To,"partition"===r.substr(To,9).toLowerCase()?(e=r.substr(To,9),To+=9):(e=u,0===Ro&&xo(Hn)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="PARTITION"):(To=t,t=u)):(To=t,t=u),t}function dl(){var t,e,n,s;return t=To,"into"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(jn)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function pl(){var t,e,n,s;return t=To,"from"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Yn)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function wl(){var t,e,n,s;return t=To,"set"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(wr)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function El(){var t,e,n,s;return t=To,"as"===r.substr(To,2).toLowerCase()?(e=r.substr(To,2),To+=2):(e=u,0===Ro&&xo(Bn)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function Al(){var t,e,n,s;return t=To,"table"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(Wn)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="TABLE"):(To=t,t=u)):(To=t,t=u),t}function hl(){var t,e,n,s;return t=To,"on"===r.substr(To,2).toLowerCase()?(e=r.substr(To,2),To+=2):(e=u,0===Ro&&xo(ur)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function yl(){var t,e,n,s;return t=To,"join"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(ts)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function Tl(){var t,e,n,s;return t=To,"outer"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(es)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function ml(){var t,e,n,s;return t=To,"values"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(ss)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function Il(){var t,e,n,s;return t=To,"using"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(us)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function Nl(){var t,e,n,s;return t=To,"with"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(rt)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function Rl(){var t,e,n,s;return t=To,"group"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(as)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function Sl(){var t,e,n,s;return t=To,"by"===r.substr(To,2).toLowerCase()?(e=r.substr(To,2),To+=2):(e=u,0===Ro&&xo(is)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function _l(){var t,e,n,s;return t=To,"asc"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(Ls)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="ASC"):(To=t,t=u)):(To=t,t=u),t}function Ol(){var t,e,n,s;return t=To,"desc"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Cs)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="DESC"):(To=t,t=u)):(To=t,t=u),t}function gl(){var t,e,n,s;return t=To,"all"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(ds)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="ALL"):(To=t,t=u)):(To=t,t=u),t}function xl(){var t,e,n,s;return t=To,"distinct"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(ps)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="DISTINCT"):(To=t,t=u)):(To=t,t=u),t}function Ul(){var t,e,n,s;return t=To,"between"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(ws)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="BETWEEN"):(To=t,t=u)):(To=t,t=u),t}function Ml(){var t,e,n,s;return t=To,"in"===r.substr(To,2).toLowerCase()?(e=r.substr(To,2),To+=2):(e=u,0===Ro&&xo(xr)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="IN"):(To=t,t=u)):(To=t,t=u),t}function kl(){var t,e,n,s;return t=To,"is"===r.substr(To,2).toLowerCase()?(e=r.substr(To,2),To+=2):(e=u,0===Ro&&xo(Es)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="IS"):(To=t,t=u)):(To=t,t=u),t}function Dl(){var t,e,n,s;return t=To,"like"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(As)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="LIKE"):(To=t,t=u)):(To=t,t=u),t}function $l(){var t,e,n,s;return t=To,"ilike"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(hs)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="ILIKE"):(To=t,t=u)):(To=t,t=u),t}function Pl(){var t,e,n,s;return t=To,"exists"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(ys)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="EXISTS"):(To=t,t=u)):(To=t,t=u),t}function Fl(){var t,e,n,s;return t=To,"not"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(lr)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="NOT"):(To=t,t=u)):(To=t,t=u),t}function Gl(){var t,e,n,s;return t=To,"and"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(Ts)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="AND"):(To=t,t=u)):(To=t,t=u),t}function Hl(){var t,e,n,s;return t=To,"or"===r.substr(To,2).toLowerCase()?(e=r.substr(To,2),To+=2):(e=u,0===Ro&&xo(ms)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="OR"):(To=t,t=u)):(To=t,t=u),t}function jl(){var t,e,n,s;return t=To,"extract"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(Us)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="EXTRACT"):(To=t,t=u)):(To=t,t=u),t}function Yl(){var t,e,n,s;return t=To,"case"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(ks)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function Bl(){var t,e,n,s;return t=To,"when"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Ds)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function Wl(){var t,e,n,s;return t=To,"end"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(Fs)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?t=e=[e,n]:(To=t,t=u)):(To=t,t=u),t}function Xl(){var t,e,n,s;return t=To,"cast"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Gs)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="CAST"):(To=t,t=u)):(To=t,t=u),t}function Vl(){var t,e,n,s;return t=To,"char"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Ys)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="CHAR"):(To=t,t=u)):(To=t,t=u),t}function Kl(){var t,e,n,s;return t=To,"varchar"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(Bs)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="VARCHAR"):(To=t,t=u)):(To=t,t=u),t}function ql(){var t,e,n,s;return t=To,"numeric"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(Ws)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="NUMERIC"):(To=t,t=u)):(To=t,t=u),t}function Zl(){var t,e,n,s;return t=To,"decimal"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(Xs)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="DECIMAL"):(To=t,t=u)):(To=t,t=u),t}function zl(){var t,e,n,s;return t=To,"unsigned"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(Ks)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="UNSIGNED"):(To=t,t=u)):(To=t,t=u),t}function Ql(){var t,e,n,s;return t=To,"int"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(qs)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="INT"):(To=t,t=u)):(To=t,t=u),t}function Jl(){var t,e,n,s;return t=To,"integer"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(zs)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="INTEGER"):(To=t,t=u)):(To=t,t=u),t}function rc(){var t,e,n,s;return t=To,"smallint"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(tu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="SMALLINT"):(To=t,t=u)):(To=t,t=u),t}function tc(){var t,e,n,s;return t=To,"serial"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(eu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="SERIAL"):(To=t,t=u)):(To=t,t=u),t}function ec(){var t,e,n,s;return t=To,"tinyint"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(nu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="TINYINT"):(To=t,t=u)):(To=t,t=u),t}function nc(){var t,e,n,s;return t=To,"tinytext"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(su)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="TINYTEXT"):(To=t,t=u)):(To=t,t=u),t}function sc(){var t,e,n,s;return t=To,"text"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(uu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="TEXT"):(To=t,t=u)):(To=t,t=u),t}function uc(){var t,e,n,s;return t=To,"mediumtext"===r.substr(To,10).toLowerCase()?(e=r.substr(To,10),To+=10):(e=u,0===Ro&&xo(ou)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="MEDIUMTEXT"):(To=t,t=u)):(To=t,t=u),t}function oc(){var t,e,n,s;return t=To,"longtext"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(au)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="LONGTEXT"):(To=t,t=u)):(To=t,t=u),t}function ac(){var t,e,n,s;return t=To,"bigint"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(iu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="BIGINT"):(To=t,t=u)):(To=t,t=u),t}function ic(){var t,e,n,s;return t=To,"float"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(cu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="FLOAT"):(To=t,t=u)):(To=t,t=u),t}function lc(){var t,e,n,s;return t=To,"double"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(fu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="DOUBLE"):(To=t,t=u)):(To=t,t=u),t}function cc(){var t,e,n,s;return t=To,"bigserial"===r.substr(To,9).toLowerCase()?(e=r.substr(To,9),To+=9):(e=u,0===Ro&&xo(bu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="BIGSERIAL"):(To=t,t=u)):(To=t,t=u),t}function fc(){var t,e,n,s;return t=To,"real"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(vu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="REAL"):(To=t,t=u)):(To=t,t=u),t}function bc(){var t,e,n,s;return t=To,"date"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Ie)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="DATE"):(To=t,t=u)):(To=t,t=u),t}function vc(){var t,e,n,s;return t=To,"datetime"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(Lu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="DATETIME"):(To=t,t=u)):(To=t,t=u),t}function Lc(){var t,e,n,s;return t=To,"rows"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Cu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="ROWS"):(To=t,t=u)):(To=t,t=u),t}function Cc(){var t,e,n,s;return t=To,"time"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(du)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="TIME"):(To=t,t=u)):(To=t,t=u),t}function dc(){var t,e,n,s;return t=To,"timestamp"===r.substr(To,9).toLowerCase()?(e=r.substr(To,9),To+=9):(e=u,0===Ro&&xo(pu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="TIMESTAMP"):(To=t,t=u)):(To=t,t=u),t}function pc(){var t,e,n,s;return t=To,"truncate"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(wu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="TRUNCATE"):(To=t,t=u)):(To=t,t=u),t}function wc(){var t,e,n,s;return t=To,"interval"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(yu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="INTERVAL"):(To=t,t=u)):(To=t,t=u),t}function Ec(){var t,e,n,s;return t=To,"current_timestamp"===r.substr(To,17).toLowerCase()?(e=r.substr(To,17),To+=17):(e=u,0===Ro&&xo(mu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="CURRENT_TIMESTAMP"):(To=t,t=u)):(To=t,t=u),t}function Ac(){var t;return 36===r.charCodeAt(To)?(t="$",To++):(t=u,0===Ro&&xo(kt)),t}function hc(){var t;return"$$"===r.substr(To,2)?(t="$$",To+=2):(t=u,0===Ro&&xo(ku)),t}function yc(){var t;return(t=function(){var t;return"@@"===r.substr(To,2)?(t="@@",To+=2):(t=u,0===Ro&&xo(Mu)),t}())===u&&(t=function(){var t;return 64===r.charCodeAt(To)?(t="@",To++):(t=u,0===Ro&&xo(Uu)),t}())===u&&(t=Ac())===u&&(t=Ac()),t}function Tc(){var t;return"::"===r.substr(To,2)?(t="::",To+=2):(t=u,0===Ro&&xo(Pu)),t}function mc(){var t;return 61===r.charCodeAt(To)?(t="=",To++):(t=u,0===Ro&&xo(vt)),t}function Ic(){var t,e,n,s;return t=To,"add"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(Gu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="ADD"):(To=t,t=u)):(To=t,t=u),t}function Nc(){var t,e,n,s;return t=To,"column"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(Hu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="COLUMN"):(To=t,t=u)):(To=t,t=u),t}function Rc(){var t,e,n,s;return t=To,"index"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(ju)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="INDEX"):(To=t,t=u)):(To=t,t=u),t}function Sc(){var t,e,n,s;return t=To,"key"===r.substr(To,3).toLowerCase()?(e=r.substr(To,3),To+=3):(e=u,0===Ro&&xo(R)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="KEY"):(To=t,t=u)):(To=t,t=u),t}function _c(){var t,e,n,s;return t=To,"unique"===r.substr(To,6).toLowerCase()?(e=r.substr(To,6),To+=6):(e=u,0===Ro&&xo(N)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="UNIQUE"):(To=t,t=u)):(To=t,t=u),t}function Oc(){var t,e,n,s;return t=To,"comment"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(Wu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="COMMENT"):(To=t,t=u)):(To=t,t=u),t}function gc(){var t,e,n,s;return t=To,"constraint"===r.substr(To,10).toLowerCase()?(e=r.substr(To,10),To+=10):(e=u,0===Ro&&xo(Xu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="CONSTRAINT"):(To=t,t=u)):(To=t,t=u),t}function xc(){var t;return 46===r.charCodeAt(To)?(t=".",To++):(t=u,0===Ro&&xo(bn)),t}function Uc(){var t;return 44===r.charCodeAt(To)?(t=",",To++):(t=u,0===Ro&&xo(to)),t}function Mc(){var t;return 42===r.charCodeAt(To)?(t="*",To++):(t=u,0===Ro&&xo(xt)),t}function kc(){var t;return 40===r.charCodeAt(To)?(t="(",To++):(t=u,0===Ro&&xo(Wr)),t}function Dc(){var t;return 41===r.charCodeAt(To)?(t=")",To++):(t=u,0===Ro&&xo(Xr)),t}function $c(){var t;return 91===r.charCodeAt(To)?(t="[",To++):(t=u,0===Ro&&xo(eo)),t}function Pc(){var t;return 93===r.charCodeAt(To)?(t="]",To++):(t=u,0===Ro&&xo(no)),t}function Fc(){var t;return 59===r.charCodeAt(To)?(t=";",To++):(t=u,0===Ro&&xo(Br)),t}function Gc(){var t;return"->"===r.substr(To,2)?(t="->",To+=2):(t=u,0===Ro&&xo(so)),t}function Hc(){var t;return"->>"===r.substr(To,3)?(t="->>",To+=3):(t=u,0===Ro&&xo(uo)),t}function jc(){var t;return"||"===r.substr(To,2)?(t="||",To+=2):(t=u,0===Ro&&xo(io)),t}function Yc(){var t;return(t=jc())===u&&(t=function(){var t;return"&&"===r.substr(To,2)?(t="&&",To+=2):(t=u,0===Ro&&xo(lo)),t}()),t}function Bc(){var r,t;for(r=[],(t=qc())===u&&(t=Xc());t!==u;)r.push(t),(t=qc())===u&&(t=Xc());return r}function Wc(){var r,t;if(r=[],(t=qc())===u&&(t=Xc()),t!==u)for(;t!==u;)r.push(t),(t=qc())===u&&(t=Xc());else r=u;return r}function Xc(){var t;return(t=function t(){var e,n,s,o,a,i,l;e=To,"/*"===r.substr(To,2)?(n="/*",To+=2):(n=u,0===Ro&&xo(co));if(n!==u){for(s=[],o=To,a=To,Ro++,"*/"===r.substr(To,2)?(i="*/",To+=2):(i=u,0===Ro&&xo(fo)),Ro--,i===u?a=void 0:(To=a,a=u),a!==u?(i=To,Ro++,"/*"===r.substr(To,2)?(l="/*",To+=2):(l=u,0===Ro&&xo(co)),Ro--,l===u?i=void 0:(To=i,i=u),i!==u&&(l=Kc())!==u?o=a=[a,i,l]:(To=o,o=u)):(To=o,o=u),o===u&&(o=t());o!==u;)s.push(o),o=To,a=To,Ro++,"*/"===r.substr(To,2)?(i="*/",To+=2):(i=u,0===Ro&&xo(fo)),Ro--,i===u?a=void 0:(To=a,a=u),a!==u?(i=To,Ro++,"/*"===r.substr(To,2)?(l="/*",To+=2):(l=u,0===Ro&&xo(co)),Ro--,l===u?i=void 0:(To=i,i=u),i!==u&&(l=Kc())!==u?o=a=[a,i,l]:(To=o,o=u)):(To=o,o=u),o===u&&(o=t());s!==u?("*/"===r.substr(To,2)?(o="*/",To+=2):(o=u,0===Ro&&xo(fo)),o!==u?e=n=[n,s,o]:(To=e,e=u)):(To=e,e=u)}else To=e,e=u;return e}())===u&&(t=function(){var t,e,n,s,o,a;t=To,"--"===r.substr(To,2)?(e="--",To+=2):(e=u,0===Ro&&xo(bo));if(e!==u){for(n=[],s=To,o=To,Ro++,a=Zc(),Ro--,a===u?o=void 0:(To=o,o=u),o!==u&&(a=Kc())!==u?s=o=[o,a]:(To=s,s=u);s!==u;)n.push(s),s=To,o=To,Ro++,a=Zc(),Ro--,a===u?o=void 0:(To=o,o=u),o!==u&&(a=Kc())!==u?s=o=[o,a]:(To=s,s=u);n!==u?t=e=[e,n]:(To=t,t=u)}else To=t,t=u;return t}()),t}function Vc(){var r,t,e,n,s,o,a;return r=To,(t=Oc())!==u&&Bc()!==u?((e=mc())===u&&(e=null),e!==u&&Bc()!==u&&(n=Bi())!==u?(r,o=e,a=n,r=t={type:(s=t).toLowerCase(),keyword:s.toLowerCase(),symbol:o,value:a}):(To=r,r=u)):(To=r,r=u),r}function Kc(){var t;return r.length>To?(t=r.charAt(To),To++):(t=u,0===Ro&&xo(vo)),t}function qc(){var t;return Lo.test(r.charAt(To))?(t=r.charAt(To),To++):(t=u,0===Ro&&xo(Co)),t}function Zc(){var t,e;if((t=function(){var t,e;t=To,Ro++,r.length>To?(e=r.charAt(To),To++):(e=u,0===Ro&&xo(vo));Ro--,e===u?t=void 0:(To=t,t=u);return t}())===u)if(t=[],cn.test(r.charAt(To))?(e=r.charAt(To),To++):(e=u,0===Ro&&xo(fn)),e!==u)for(;e!==u;)t.push(e),cn.test(r.charAt(To))?(e=r.charAt(To),To++):(e=u,0===Ro&&xo(fn));else t=u;return t}function zc(){var t,e;return t=To,To,Tf=[],( true?void 0:0)!==u&&Bc()!==u?((e=Qc())===u&&(e=function(){var t,e;t=To,function(){var t;return"return"===r.substr(To,6).toLowerCase()?(t=r.substr(To,6),To+=6):(t=u,0===Ro&&xo(Du)),t}()!==u&&Bc()!==u&&(e=Jc())!==u?(t,t={type:"return",expr:e}):(To=t,t=u);return t}()),e!==u?(t,t={type:"proc",stmt:e,vars:Tf}):(To=t,t=u)):(To=t,t=u),t}function Qc(){var t,e,n,s;return t=To,(e=of())===u&&(e=af()),e!==u&&Bc()!==u?((n=function(){var t;return":="===r.substr(To,2)?(t=":=",To+=2):(t=u,0===Ro&&xo($u)),t}())===u&&(n=mc()),n!==u&&Bc()!==u&&(s=Jc())!==u?(t,t=e={type:"assign",left:e,symbol:n,right:s}):(To=t,t=u)):(To=t,t=u),t}function Jc(){var r;return(r=ua())===u&&(r=function(){var r,t,e,n,s;r=To,(t=of())!==u&&Bc()!==u&&(e=Sa())!==u&&Bc()!==u&&(n=of())!==u&&Bc()!==u&&(s=Oa())!==u?(r,r=t={type:"join",ltable:t,rtable:n,op:e,on:s}):(To=r,r=u);return r}())===u&&(r=rf())===u&&(r=function(){var r,t;r=To,$c()!==u&&Bc()!==u&&(t=uf())!==u&&Bc()!==u&&Pc()!==u?(r,r={type:"array",value:t}):(To=r,r=u);return r}()),r}function rf(){var r,t,e,n,s,o,a,i;if(r=To,(t=tf())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=bi())!==u&&(a=Bc())!==u&&(i=tf())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=bi())!==u&&(a=Bc())!==u&&(i=tf())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,r=t=Lt(t,e)):(To=r,r=u)}else To=r,r=u;return r}function tf(){var r,t,e,n,s,o,a,i;if(r=To,(t=ef())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Li())!==u&&(a=Bc())!==u&&(i=ef())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Li())!==u&&(a=Bc())!==u&&(i=ef())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,r=t=Lt(t,e)):(To=r,r=u)}else To=r,r=u;return r}function ef(){var r,t,e;return(r=Gi())===u&&(r=of())===u&&(r=sf())===u&&(r=Si())===u&&(r=To,kc()!==u&&Bc()!==u&&(t=rf())!==u&&Bc()!==u&&Dc()!==u?(r,(e=t).parentheses=!0,r=e):(To=r,r=u)),r}function nf(){var r,t,e,n,s,o,a;return r=To,(t=mi())!==u?(e=To,(n=Bc())!==u&&(s=xc())!==u&&(o=Bc())!==u&&(a=mi())!==u?e=n=[n,s,o,a]:(To=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(To=r,r=u)):(To=r,r=u),r}function sf(){var r,t,e;return r=To,(t=nf())!==u&&Bc()!==u&&kc()!==u&&Bc()!==u?((e=uf())===u&&(e=null),e!==u&&Bc()!==u&&Dc()!==u?(r,r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(To=r,r=u)):(To=r,r=u),r===u&&(r=To,(t=nf())!==u&&(r,t=function(r){return{type:"function",name:r,args:null}}(t)),r=t),r}function uf(){var r,t,e,n,s,o,a,i;if(r=To,(t=ef())!==u){for(e=[],n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=ef())!==u?n=s=[s,o,a,i]:(To=n,n=u);n!==u;)e.push(n),n=To,(s=Bc())!==u&&(o=Uc())!==u&&(a=Bc())!==u&&(i=ef())!==u?n=s=[s,o,a,i]:(To=n,n=u);e!==u?(r,r=t=wf(t,e)):(To=r,r=u)}else To=r,r=u;return r}function of(){var t,e,n,s,o,a,i;if(t=To,(e=hc())!==u){for(n=[],po.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(wo));s!==u;)n.push(s),po.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(wo));n!==u&&(s=hc())!==u?(t,t=e={type:"var",name:n.join(""),prefix:"$$",suffix:"$$"}):(To=t,t=u)}else To=t,t=u;if(t===u){if(t=To,(e=Ac())!==u)if((n=Ei())!==u)if((s=Ac())!==u){for(o=[],po.test(r.charAt(To))?(a=r.charAt(To),To++):(a=u,0===Ro&&xo(wo));a!==u;)o.push(a),po.test(r.charAt(To))?(a=r.charAt(To),To++):(a=u,0===Ro&&xo(wo));o!==u&&(a=Ac())!==u&&(i=Ei())!==u?(To,(function(r,t,e){if(r!==e)return!0}(n,0,i)?u:void 0)!==u&&Ac()!==u?(t,t=e=function(r,t,e){return{type:"var",name:t.join(""),prefix:`$${r}$`,suffix:`$${e}$`}}(n,o,i)):(To=t,t=u)):(To=t,t=u)}else To=t,t=u;else To=t,t=u;else To=t,t=u;t===u&&(t=To,(e=yc())!==u&&(n=af())!==u?(t,t=e=function(r,t){return{type:"var",...t,prefix:r}}(e,n)):(To=t,t=u))}return t}function af(){var t,e,n,s,o;return t=To,34===r.charCodeAt(To)?(e='"',To++):(e=u,0===Ro&&xo(Vr)),e===u&&(e=null),e!==u&&(n=mi())!==u&&(s=function(){var t,e,n,s,o;t=To,e=[],n=To,46===r.charCodeAt(To)?(s=".",To++):(s=u,0===Ro&&xo(bn));s!==u&&(o=mi())!==u?n=s=[s,o]:(To=n,n=u);for(;n!==u;)e.push(n),n=To,46===r.charCodeAt(To)?(s=".",To++):(s=u,0===Ro&&xo(bn)),s!==u&&(o=mi())!==u?n=s=[s,o]:(To=n,n=u);e!==u&&(t,e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==u?(34===r.charCodeAt(To)?(o='"',To++):(o=u,0===Ro&&xo(Vr)),o===u&&(o=null),o!==u?(t,t=e=function(r,t,e,n){if(r&&!n||!r&&n)throw new Error("double quoted not match");return Tf.push(t),{type:"var",name:t,members:e,quoted:r&&n?'"':null,prefix:null}}(e,n,s,o)):(To=t,t=u)):(To=t,t=u),t===u&&(t=To,(e=Ki())!==u&&(t,e={type:"var",name:e.value,members:[],quoted:null,prefix:null}),t=e),t}function lf(){var t;return(t=function(){var r,t;r=To,(t=bf())===u&&(t=cf());t!==u&&Bc()!==u&&$c()!==u&&Bc()!==u&&Pc()!==u&&Bc()!==u&&$c()!==u&&Bc()!==u&&Pc()!==u?(r,e=t,t={...e,array:"two"},r=t):(To=r,r=u);var e;r===u&&(r=To,(t=bf())===u&&(t=cf()),t!==u&&Bc()!==u&&$c()!==u&&Bc()!==u&&Pc()!==u?(r,t=function(r){return{...r,array:"one"}}(t),r=t):(To=r,r=u));return r}())===u&&(t=cf())===u&&(t=bf())===u&&(t=function(){var t,e,n,s;t=To,(e=bc())===u&&(e=vc());if(e!==u)if(Bc()!==u)if(kc()!==u)if(Bc()!==u){if(n=[],vn.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(Ln)),s!==u)for(;s!==u;)n.push(s),vn.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(Ln));else n=u;n!==u&&(s=Bc())!==u&&Dc()!==u?(t,e={dataType:e,length:parseInt(n.join(""),10),parentheses:!0},t=e):(To=t,t=u)}else To=t,t=u;else To=t,t=u;else To=t,t=u;else To=t,t=u;t===u&&(t=To,(e=bc())===u&&(e=vc()),e!==u&&(t,e=Ao(e)),(t=e)===u&&(t=function(){var t,e,n,s,o,a;t=To,(e=Cc())===u&&(e=dc());if(e!==u)if(Bc()!==u)if((n=kc())!==u)if(Bc()!==u){if(s=[],vn.test(r.charAt(To))?(o=r.charAt(To),To++):(o=u,0===Ro&&xo(Ln)),o!==u)for(;o!==u;)s.push(o),vn.test(r.charAt(To))?(o=r.charAt(To),To++):(o=u,0===Ro&&xo(Ln));else s=u;s!==u&&(o=Bc())!==u&&Dc()!==u&&Bc()!==u?((a=vf())===u&&(a=null),a!==u?(t,e=function(r,t,e){return{dataType:r,length:parseInt(t.join(""),10),parentheses:!0,suffix:e}}(e,s,a),t=e):(To=t,t=u)):(To=t,t=u)}else To=t,t=u;else To=t,t=u;else To=t,t=u;else To=t,t=u;t===u&&(t=To,(e=Cc())===u&&(e=dc()),e!==u&&Bc()!==u?((n=vf())===u&&(n=null),n!==u?(t,e=function(r,t){return{dataType:r,suffix:t}}(e,n),t=e):(To=t,t=u)):(To=t,t=u));return t}()));return t}())===u&&(t=function(){var t,e;t=To,(e=function(){var t,e,n,s;return t=To,"json"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Qs)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="JSON"):(To=t,t=u)):(To=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=To,"jsonb"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(Js)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="JSONB"):(To=t,t=u)):(To=t,t=u),t}());e!==u&&(t,e=Ao(e));return t=e}())===u&&(t=function(){var t,e;t=To,(e=function(){var t,e,n,s;return t=To,"geometry"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(ru)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="GEOMETRY"):(To=t,t=u)):(To=t,t=u),t}())!==u&&(t,e={dataType:e});return t=e}())===u&&(t=function(){var r,t;r=To,(t=nc())===u&&(t=sc())===u&&(t=uc())===u&&(t=oc());t!==u&&$c()!==u&&Bc()!==u&&Pc()!==u?(r,r=t={dataType:t+"[]"}):(To=r,r=u);r===u&&(r=To,(t=nc())===u&&(t=sc())===u&&(t=uc())===u&&(t=oc()),t!==u&&(r,t=function(r){return{dataType:r}}(t)),r=t);return r}())===u&&(t=function(){var t,e;t=To,(e=function(){var t,e,n,s;return t=To,"uuid"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Au)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="UUID"):(To=t,t=u)):(To=t,t=u),t}())!==u&&(t,e={dataType:e});return t=e}())===u&&(t=function(){var t,e;t=To,(e=function(){var t,e,n,s;return t=To,"bool"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(Hs)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="BOOL"):(To=t,t=u)):(To=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=To,"boolean"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(js)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="BOOLEAN"):(To=t,t=u)):(To=t,t=u),t}());e!==u&&(t,e={dataType:e});return t=e}())===u&&(t=function(){var t,e,n;t=To,(e=function(){var t,e,n,s;return t=To,"enum"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(lu)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="ENUM"):(To=t,t=u)):(To=t,t=u),t}())!==u&&Bc()!==u&&(n=Za())!==u?(t,s=e,(o=n).parentheses=!0,t=e={dataType:s,expr:o}):(To=t,t=u);var s,o;return t}())===u&&(t=function(){var r,t;r=To,(t=tc())===u&&(t=wc());t!==u&&(r,t=Ao(t));return r=t}())===u&&(t=function(){var t,e;t=To,"bytea"===r.substr(To,5).toLowerCase()?(e=r.substr(To,5),To+=5):(e=u,0===Ro&&xo(Eo));e!==u&&(t,e={dataType:"BYTEA"});return t=e}()),t}function cf(){var t,e,n,s;if(t=To,(e=Vl())===u&&(e=Kl()),e!==u)if(Bc()!==u)if(kc()!==u)if(Bc()!==u){if(n=[],vn.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(Ln)),s!==u)for(;s!==u;)n.push(s),vn.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(Ln));else n=u;n!==u&&(s=Bc())!==u&&Dc()!==u?(t,t=e={dataType:e,length:parseInt(n.join(""),10)}):(To=t,t=u)}else To=t,t=u;else To=t,t=u;else To=t,t=u;else To=t,t=u;return t===u&&(t=To,(e=Vl())!==u&&(t,e=function(r){return{dataType:r}}(e)),(t=e)===u&&(t=To,(e=Kl())!==u&&(t,e=Ao(e)),t=e)),t}function ff(){var t,e,n;return t=To,(e=zl())===u&&(e=null),e!==u&&Bc()!==u?((n=function(){var t,e,n,s;return t=To,"zerofill"===r.substr(To,8).toLowerCase()?(e=r.substr(To,8),To+=8):(e=u,0===Ro&&xo(Zs)),e!==u?(n=To,Ro++,s=Ii(),Ro--,s===u?n=void 0:(To=n,n=u),n!==u?(t,t=e="ZEROFILL"):(To=t,t=u)):(To=t,t=u),t}())===u&&(n=null),n!==u?(t,t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(To=t,t=u)):(To=t,t=u),t}function bf(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C;if(t=To,(e=ql())===u&&(e=Zl())===u&&(e=Ql())===u&&(e=Jl())===u&&(e=rc())===u&&(e=ec())===u&&(e=ac())===u&&(e=ic())===u&&(e=lc())===u&&(e=tc())===u&&(e=cc())===u&&(e=fc()),e!==u)if((n=Bc())!==u)if((s=kc())!==u)if((o=Bc())!==u){if(a=[],vn.test(r.charAt(To))?(i=r.charAt(To),To++):(i=u,0===Ro&&xo(Ln)),i!==u)for(;i!==u;)a.push(i),vn.test(r.charAt(To))?(i=r.charAt(To),To++):(i=u,0===Ro&&xo(Ln));else a=u;if(a!==u)if((i=Bc())!==u){if(l=To,(c=Uc())!==u)if((f=Bc())!==u){if(b=[],vn.test(r.charAt(To))?(v=r.charAt(To),To++):(v=u,0===Ro&&xo(Ln)),v!==u)for(;v!==u;)b.push(v),vn.test(r.charAt(To))?(v=r.charAt(To),To++):(v=u,0===Ro&&xo(Ln));else b=u;b!==u?l=c=[c,f,b]:(To=l,l=u)}else To=l,l=u;else To=l,l=u;l===u&&(l=null),l!==u&&(c=Bc())!==u&&(f=Dc())!==u&&(b=Bc())!==u?((v=ff())===u&&(v=null),v!==u?(t,L=l,C=v,t=e={dataType:e,length:parseInt(a.join(""),10),scale:L&&parseInt(L[2].join(""),10),parentheses:!0,suffix:C}):(To=t,t=u)):(To=t,t=u)}else To=t,t=u;else To=t,t=u}else To=t,t=u;else To=t,t=u;else To=t,t=u;else To=t,t=u;if(t===u){if(t=To,(e=ql())===u&&(e=Zl())===u&&(e=Ql())===u&&(e=Jl())===u&&(e=rc())===u&&(e=ec())===u&&(e=ac())===u&&(e=ic())===u&&(e=lc())===u&&(e=tc())===u&&(e=cc())===u&&(e=fc()),e!==u){if(n=[],vn.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(Ln)),s!==u)for(;s!==u;)n.push(s),vn.test(r.charAt(To))?(s=r.charAt(To),To++):(s=u,0===Ro&&xo(Ln));else n=u;n!==u&&(s=Bc())!==u?((o=ff())===u&&(o=null),o!==u?(t,t=e=function(r,t,e){return{dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o)):(To=t,t=u)):(To=t,t=u)}else To=t,t=u;t===u&&(t=To,(e=ql())===u&&(e=Zl())===u&&(e=Ql())===u&&(e=Jl())===u&&(e=rc())===u&&(e=ec())===u&&(e=ac())===u&&(e=ic())===u&&(e=lc())===u&&(e=tc())===u&&(e=cc())===u&&(e=fc()),e!==u&&(n=Bc())!==u?((s=ff())===u&&(s=null),s!==u&&(o=Bc())!==u?(t,t=e=function(r,t){return{dataType:r,suffix:t}}(e,s)):(To=t,t=u)):(To=t,t=u))}return t}function vf(){var t,e,n;return t=To,"without"===r.substr(To,7).toLowerCase()?(e=r.substr(To,7),To+=7):(e=u,0===Ro&&xo(ho)),e===u&&("with"===r.substr(To,4).toLowerCase()?(e=r.substr(To,4),To+=4):(e=u,0===Ro&&xo(rt))),e!==u&&Bc()!==u&&Cc()!==u&&Bc()!==u?("zone"===r.substr(To,4).toLowerCase()?(n=r.substr(To,4),To+=4):(n=u,0===Ro&&xo(yo)),n!==u?(t,t=e=[e.toUpperCase(),"TIME","ZONE"]):(To=t,t=u)):(To=t,t=u),t}const Lf={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,LEFT:!0,LIKE:!0,LIMIT:!0,NOT:!0,NULL:!0,NULLS:!0,OFFSET:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,UNION:!0,UPDATE:!0,USING:!0,WITH:!0,WHEN:!0,WHERE:!0,WINDOW:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Cf(r,t){return{type:"unary_expr",operator:r,expr:t}}function df(r,t,e){return{type:"binary_expr",operator:r,left:t,right:e}}function pf(r){const t=n(Number.MAX_SAFE_INTEGER);return!(n(r)<t)}function wf(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)delete t[r][e].tableList,delete t[r][e].columnList,n.push(t[r][e]);return n}function Ef(r,t){let e=r;for(let r=0;r<t.length;r++)e=df(t[r][1],e,t[r][3]);return e}function Af(r){const t=Nf[r];return t||(r||null)}function hf(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=Af(r[1])),t.add(r.join("::"))}return Array.from(t)}function yf(r){return"string"==typeof r?{type:"same",value:r}:r}let Tf=[];const mf=new Set,If=new Set,Nf={};if((e=a())!==u&&To===r.length)return e;throw e!==u&&To<r.length&&xo({type:"end"}),Uo(No,Io<r.length?r.charAt(Io):null,Io<r.length?go(Io,Io+1):go(Io,Io))}}},function(r,t,e){"use strict";var n=e(0);function s(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,s)}!function(r,t){function e(){this.constructor=r}e.prototype=t.prototype,r.prototype=new e}(s,Error),s.buildMessage=function(r,t){var e={literal:function(r){return'"'+s(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?u(r.parts[t][0])+"-"+u(r.parts[t][1]):u(r.parts[t]);return"["+(r.inverted?"^":"")+e+"]"},any:function(r){return"any character"},end:function(r){return"end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function s(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}function u(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}return"Expected "+function(r){var t,n,s,u=new Array(r.length);for(t=0;t<r.length;t++)u[t]=(s=r[t],e[s.type](s));if(u.sort(),u.length>0){for(t=1,n=1;t<u.length;t++)u[t-1]!==u[t]&&(u[n]=u[t],n++);u.length=n}switch(u.length){case 1:return u[0];case 2:return u[0]+" or "+u[1];default:return u.slice(0,-1).join(", ")+", or "+u[u.length-1]}}(r)+" but "+function(r){return r?'"'+s(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:s,parse:function(r,t){t=void 0!==t?t:{};var e,u={},o={start:qs},a=qs,i=function(r,t){return Si(r,t,1)},l=Ys("IF",!0),c=function(r,t){return Si(r,t)},f=Ys("AUTO_INCREMENT",!0),b=Ys("AUTOINCREMENT",!0),v=Ys("UNIQUE",!0),L=Ys("KEY",!0),C=Ys("PRIMARY",!0),d=Ys("COLUMN_FORMAT",!0),p=Ys("FIXED",!0),w=Ys("DYNAMIC",!0),E=Ys("DEFAULT",!0),A=Ys("STORAGE",!0),h=Ys("DISK",!0),y=Ys("MEMORY",!0),T=Ys("ALGORITHM",!0),m=Ys("INSTANT",!0),I=Ys("INPLACE",!0),N=Ys("COPY",!0),R=Ys("LOCK",!0),S=Ys("NONE",!0),_=Ys("SHARED",!0),O=Ys("EXCLUSIVE",!0),g=Ys("CHECK",!0),x=Ys("NOT",!0),U=Ys("FOR",!0),M=Ys("REPLICATION",!0),k=Ys("FOREIGN KEY",!0),D=Ys("MATCH FULL",!0),$=Ys("MATCH PARTIAL",!0),P=Ys("MATCH SIMPLE",!0),F=Ys("ON",!0),G=Ys("DELETE",!0),H=Ys("UPDATE",!0),j=Ys("RESTRICT",!0),Y=Ys("CASCADE",!0),B=Ys("SET NULL",!0),W=Ys("NO ACTION",!0),X=Ys("SET DEFAULT",!0),V=Ys("CHARACTER",!0),K=Ys("SET",!0),q=Ys("CHARSET",!0),Z=Ys("COLLATE",!0),z=Ys("AVG_ROW_LENGTH",!0),Q=Ys("KEY_BLOCK_SIZE",!0),J=Ys("MAX_ROWS",!0),rr=Ys("MIN_ROWS",!0),tr=Ys("STATS_SAMPLE_PAGES",!0),er=Ys("CONNECTION",!0),nr=Ys("COMPRESSION",!0),sr=Ys("'",!1),ur=Ys("ZLIB",!0),or=Ys("LZ4",!0),ar=Ys("ENGINE",!0),ir=Ys("READ",!0),lr=Ys("LOCAL",!0),cr=Ys("LOW_PRIORITY",!0),fr=Ys("WRITE",!0),br=function(r,t){return Si(r,t)},vr=Ys("BINARY",!0),Lr=Ys("MASTER",!0),Cr=Ys("LOGS",!0),dr=Ys("BINLOG",!0),pr=Ys("EVENTS",!0),wr=Ys("COLLATION",!0),Er=Ys("GRANTS",!0),Ar=Ys("(",!1),hr=Ys(")",!1),yr=Ys("BTREE",!0),Tr=Ys("HASH",!0),mr=Ys("WITH",!0),Ir=Ys("PARSER",!0),Nr=Ys("VISIBLE",!0),Rr=Ys("INVISIBLE",!0),Sr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;ki[t]=t,e&&(ki[e]=t),function(r){const t=gi(r);r.clear(),t.forEach(t=>r.add(t))}(Mi)}),t},_r=Ys("=",!1),Or=Ys("DUPLICATE",!0),gr=function(r,t){return _i(r,t)},xr=Ys("!",!1),Ur=function(r){return r[0]+" "+r[2]},Mr=Ys(">=",!1),kr=Ys(">",!1),Dr=Ys("<=",!1),$r=Ys("<>",!1),Pr=Ys("<",!1),Fr=Ys("!=",!1),Gr=Ys("glob",!0),Hr=Ys("+",!1),jr=Ys("-",!1),Yr=Ys("*",!1),Br=Ys("/",!1),Wr=Ys("%",!1),Xr=Ys("||",!1),Vr=Ys("?",!1),Kr=function(r){return!0===mi[r.toUpperCase()]},qr=Ys('"',!1),Zr=/^[^"]/,zr=Bs(['"'],!0,!1),Qr=function(r){return r.join("")},Jr=/^[^']/,rt=Bs(["'"],!0,!1),tt=Ys("`",!1),et=/^[^`]/,nt=Bs(["`"],!0,!1),st=function(r,t){return r+t.join("")},ut=/^[A-Za-z_]/,ot=Bs([["A","Z"],["a","z"],"_"],!1,!1),at=/^[A-Za-z0-9_]/,it=Bs([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),lt=/^[A-Za-z0-9_:]/,ct=Bs([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),ft=Ys(":",!1),bt=Ys("_binary",!0),vt=Ys("X",!0),Lt=/^[0-9A-Fa-f]/,Ct=Bs([["0","9"],["A","F"],["a","f"]],!1,!1),dt=Ys("b",!0),pt=Ys("0x",!1),wt=function(r,t){return{type:r.toLowerCase(),value:t[1].join("")}},Et=/^[^"\\\0-\x1F\x7F]/,At=Bs(['"',"\\",["\0",""],""],!0,!1),ht=/^[^'\\]/,yt=Bs(["'","\\"],!0,!1),Tt=Ys("\\'",!1),mt=Ys('\\"',!1),It=Ys("\\\\",!1),Nt=Ys("\\/",!1),Rt=Ys("\\b",!1),St=Ys("\\f",!1),_t=Ys("\\n",!1),Ot=Ys("\\r",!1),gt=Ys("\\t",!1),xt=Ys("\\u",!1),Ut=Ys("\\",!1),Mt=Ys("''",!1),kt=Ys('""',!1),Dt=Ys("``",!1),$t=/^[\n\r]/,Pt=Bs(["\n","\r"],!1,!1),Ft=Ys(".",!1),Gt=/^[0-9]/,Ht=Bs([["0","9"]],!1,!1),jt=/^[0-9a-fA-F]/,Yt=Bs([["0","9"],["a","f"],["A","F"]],!1,!1),Bt=/^[eE]/,Wt=Bs(["e","E"],!1,!1),Xt=/^[+\-]/,Vt=Bs(["+","-"],!1,!1),Kt=Ys("ANALYZE",!0),qt=Ys("ATTACH",!0),Zt=Ys("NULL",!0),zt=Ys("NOT NULL",!0),Qt=Ys("TRUE",!0),Jt=Ys("TO",!0),re=Ys("FALSE",!0),te=Ys("SHOW",!0),ee=Ys("DROP",!0),ne=Ys("USE",!0),se=Ys("ALTER",!0),ue=Ys("SELECT",!0),oe=Ys("CREATE",!0),ae=Ys("TEMPORARY",!0),ie=Ys("INSERT",!0),le=Ys("RECURSIVE",!1),ce=Ys("REPLACE",!0),fe=Ys("RENAME",!0),be=Ys("IGNORE",!0),ve=(Ys("EXPLAIN",!0),Ys("PARTITION",!0)),Le=Ys("INTO",!0),Ce=Ys("FROM",!0),de=Ys("UNLOCK",!0),pe=Ys("AS",!0),we=Ys("TABLE",!0),Ee=Ys("TABLES",!0),Ae=Ys("DATABASE",!0),he=Ys("SCHEME",!0),ye=Ys("LEFT",!0),Te=Ys("INNER",!0),me=Ys("JOIN",!0),Ie=Ys("OUTER",!0),Ne=Ys("OVER",!0),Re=Ys("UNION",!0),Se=Ys("VALUES",!0),_e=Ys("USING",!0),Oe=Ys("WHERE",!0),ge=Ys("GROUP",!0),xe=Ys("BY",!0),Ue=Ys("ORDER",!0),Me=Ys("HAVING",!0),ke=Ys("LIMIT",!0),De=Ys("OFFSET",!0),$e=Ys("ASC",!0),Pe=Ys("DESC",!0),Fe=Ys("DESCRIBE",!0),Ge=Ys("ALL",!0),He=Ys("DISTINCT",!0),je=Ys("BETWEEN",!0),Ye=Ys("IN",!0),Be=Ys("IS",!0),We=Ys("LIKE",!0),Xe=Ys("RLIKE",!0),Ve=Ys("REGEXP",!0),Ke=Ys("EXISTS",!0),qe=Ys("AND",!0),Ze=Ys("OR",!0),ze=Ys("COUNT",!0),Qe=Ys("MAX",!0),Je=Ys("MIN",!0),rn=Ys("SUM",!0),tn=Ys("AVG",!0),en=Ys("CALL",!0),nn=Ys("CASE",!0),sn=Ys("WHEN",!0),un=Ys("THEN",!0),on=Ys("ELSE",!0),an=Ys("END",!0),ln=Ys("CAST",!0),cn=Ys("BIT",!0),fn=Ys("CHAR",!0),bn=Ys("VARCHAR",!0),vn=Ys("NUMERIC",!0),Ln=Ys("DECIMAL",!0),Cn=Ys("SIGNED",!0),dn=Ys("UNSIGNED",!0),pn=Ys("INT",!0),wn=Ys("ZEROFILL",!0),En=Ys("INTEGER",!0),An=Ys("JSON",!0),hn=Ys("SMALLINT",!0),yn=Ys("TINYINT",!0),Tn=Ys("TINYTEXT",!0),mn=Ys("TEXT",!0),In=Ys("MEDIUMTEXT",!0),Nn=Ys("LONGTEXT",!0),Rn=Ys("BIGINT",!0),Sn=Ys("ENUM",!0),_n=Ys("FLOAT",!0),On=Ys("DOUBLE",!0),gn=Ys("DATE",!0),xn=Ys("DATETIME",!0),Un=Ys("TIME",!0),Mn=Ys("TIMESTAMP",!0),kn=Ys("TRUNCATE",!0),Dn=Ys("USER",!0),$n=Ys("CURRENT_DATE",!0),Pn=(Ys("ADDDATE",!0),Ys("INTERVAL",!0)),Fn=Ys("YEAR",!0),Gn=Ys("MONTH",!0),Hn=Ys("DAY",!0),jn=Ys("HOUR",!0),Yn=Ys("MINUTE",!0),Bn=Ys("SECOND",!0),Wn=Ys("CURRENT_TIME",!0),Xn=Ys("CURRENT_TIMESTAMP",!0),Vn=Ys("CURRENT_USER",!0),Kn=Ys("SESSION_USER",!0),qn=Ys("SYSTEM_USER",!0),Zn=Ys("GLOBAL",!0),zn=Ys("SESSION",!0),Qn=Ys("PERSIST",!0),Jn=Ys("PERSIST_ONLY",!0),rs=Ys("@",!1),ts=Ys("@@",!1),es=Ys("$",!1),ns=Ys("return",!0),ss=Ys(":=",!1),us=Ys("DUAL",!0),os=Ys("ADD",!0),as=Ys("COLUMN",!0),is=Ys("INDEX",!0),ls=Ys("FULLTEXT",!0),cs=Ys("SPATIAL",!0),fs=Ys("COMMENT",!0),bs=Ys("CONSTRAINT",!0),vs=Ys("REFERENCES",!0),Ls=Ys("SQL_CALC_FOUND_ROWS",!0),Cs=Ys("SQL_CACHE",!0),ds=Ys("SQL_NO_CACHE",!0),ps=Ys("SQL_SMALL_RESULT",!0),ws=Ys("SQL_BIG_RESULT",!0),Es=Ys("SQL_BUFFER_RESULT",!0),As=Ys(",",!1),hs=Ys("[",!1),ys=Ys("]",!1),Ts=Ys(";",!1),ms=Ys("->",!1),Is=Ys("->>",!1),Ns=Ys("&&",!1),Rs=Ys("/*",!1),Ss=Ys("*/",!1),_s=Ys("--",!1),Os=Ys("#",!1),gs={type:"any"},xs=/^[ \t\n\r]/,Us=Bs([" ","\t","\n","\r"],!1,!1),Ms=Ys("boolean",!0),ks=function(r){return{dataType:r}},Ds=/^[0-6]/,$s=Bs([["0","6"]],!1,!1),Ps=0,Fs=[{line:1,column:1}],Gs=0,Hs=[],js=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule]}function Ys(r,t){return{type:"literal",text:r,ignoreCase:t}}function Bs(r,t,e){return{type:"class",parts:r,inverted:t,ignoreCase:e}}function Ws(t){var e,n=Fs[t];if(n)return n;for(e=t-1;!Fs[e];)e--;for(n={line:(n=Fs[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return Fs[t]=n,n}function Xs(r,t){var e=Ws(r),n=Ws(t);return{start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Vs(r){Ps<Gs||(Ps>Gs&&(Gs=Ps,Hs=[]),Hs.push(r))}function Ks(r,t,e){return new s(s.buildMessage(r,t),r,t,e)}function qs(){var r,t;return r=Ps,si()!==u?((t=function(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=zs())!==u){if(e=[],n=Ps,(s=si())!==u&&(o=ri())!==u&&(a=si())!==u&&(i=zs())!==u?n=s=[s,o,a,i]:(Ps=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=ri())!==u&&(a=si())!==u&&(i=zs())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return{tableList:Array.from(Ui),columnList:gi(Mi),ast:e}}(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())===u&&(t=Zs())===u&&(t=zs()),t!==u?(r,r=t):(Ps=r,r=u)):(Ps=r,r=u),r}function Zs(){var t;return(t=function(){var t,e,n;t=Ps,(e=function(){var t,e,n,s;t=Ps,"analyze"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(Kt));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="ANALYZE"):(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u&&(n=Uu())!==u&&si()!==u?(t,s=e,o=n,Ui.add(`${s}::${o.db}::${o.table}`),e={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:s.toLowerCase(),table:o}},t=e):(Ps=t,t=u);var s,o;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=Ps,(e=function(){var t,e,n,s;t=Ps,"attach"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(qt));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="ATTACH"):(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u&&(n=na())!==u&&si()!==u&&(s=Qu())!==u&&si()!==u&&(o=ra())!==u&&si()!==u&&(a=Lo())!==u&&si()!==u?(t,i=e,l=n,c=s,f=o,b=a,e={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:i.toLowerCase(),database:l,expr:c,as:f&&f[0].toLowerCase(),schema:b}},t=e):(Ps=t,t=u);var i,l,c,f,b;return t}())===u&&(t=function(){var r,t,e,n,s,o;r=Ps,(t=Bo())!==u&&si()!==u&&(e=ta())!==u&&si()!==u&&(n=_u())!==u?(r,a=t,l=e,(c=n)&&c.forEach(r=>Ui.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:a.toLowerCase(),keyword:l.toLowerCase(),name:c}},r=t):(Ps=r,r=u);var a,l,c;r===u&&(r=Ps,(t=Bo())!==u&&si()!==u&&(e=Xa())!==u&&si()!==u&&(n=vo())!==u&&si()!==u&&sa()!==u&&si()!==u&&(s=Uu())!==u&&si()!==u?((o=function(){var r,t,e,n,s,o;r=Ps,(t=ou())===u&&(t=au());if(t!==u){for(e=[],n=Ps,(s=si())!==u?((o=ou())===u&&(o=au()),o!==u?n=s=[s,o]:(Ps=n,n=u)):(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u?((o=ou())===u&&(o=au()),o!==u?n=s=[s,o]:(Ps=n,n=u)):(Ps=n,n=u);e!==u?(r,t=i(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())===u&&(o=null),o!==u&&si()!==u?(r,t=function(r,t,e,n,s){return{tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:s}}}(t,e,n,s,o),r=t):(Ps=r,r=u)):(Ps=r,r=u));return r}())===u&&(t=function(){var t;(t=function(){var r,t,e,n,s,o,a,i,l,f;r=Ps,(t=Xo())!==u&&si()!==u?((e=Vo())===u&&(e=null),e!==u&&si()!==u&&ta()!==u&&si()!==u?((n=ru())===u&&(n=null),n!==u&&si()!==u&&(s=Uu())!==u&&si()!==u?((o=function(){var r,t,e,n,s,o,a,i,l;if(r=Ps,(t=Qa())!==u)if(si()!==u)if((e=tu())!==u){for(n=[],s=Ps,(o=si())!==u&&(a=Za())!==u&&(i=si())!==u&&(l=tu())!==u?s=o=[o,a,i,l]:(Ps=s,s=u);s!==u;)n.push(s),s=Ps,(o=si())!==u&&(a=Za())!==u&&(i=si())!==u&&(l=tu())!==u?s=o=[o,a,i,l]:(Ps=s,s=u);n!==u&&(s=si())!==u&&(o=Ja())!==u?(r,t=c(e,n),r=t):(Ps=r,r=u)}else Ps=r,r=u;else Ps=r,r=u;else Ps=r,r=u;return r}())===u&&(o=null),o!==u&&si()!==u?((a=function(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=vu())!==u){for(e=[],n=Ps,(s=si())!==u?((o=Za())===u&&(o=null),o!==u&&(a=si())!==u&&(i=vu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u)):(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u?((o=Za())===u&&(o=null),o!==u&&(a=si())!==u&&(i=vu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u)):(Ps=n,n=u);e!==u?(r,t=Si(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())===u&&(a=null),a!==u&&si()!==u?((i=Zo())===u&&(i=Ko()),i===u&&(i=null),i!==u&&si()!==u?((l=ra())===u&&(l=null),l!==u&&si()!==u?((f=Js())===u&&(f=null),f!==u?(r,b=t,v=e,L=n,d=o,p=a,w=i,E=l,A=f,(C=s)&&Ui.add(`create::${C.db}::${C.table}`),t={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:b[0].toLowerCase(),keyword:"table",temporary:v&&v[0].toLowerCase(),if_not_exists:L,table:[C],ignore_replace:w&&w[0].toLowerCase(),as:E&&E[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:d,table_options:p}},r=t):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u);var b,v,L,C,d,p,w,E,A;r===u&&(r=Ps,(t=Xo())!==u&&si()!==u?((e=Vo())===u&&(e=null),e!==u&&si()!==u&&ta()!==u&&si()!==u?((n=ru())===u&&(n=null),n!==u&&si()!==u&&(s=Uu())!==u&&si()!==u&&(o=function r(){var t,e;(t=function(){var r,t;r=Ps,pa()!==u&&si()!==u&&(t=_u())!==u?(r,r={type:"like",table:t}):(Ps=r,r=u);return r}())===u&&(t=Ps,Qa()!==u&&si()!==u&&(e=r())!==u&&si()!==u&&Ja()!==u?(t,(n=e).parentheses=!0,t=n):(Ps=t,t=u));var n;return t}())!==u?(r,t=function(r,t,e,n,s){return n&&Ui.add(`create::${n.db}::${n.table}`),{tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e,table:[n],like:s}}}(t,e,n,s,o),r=t):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u));return r}())===u&&(t=function(){var t,e,n,s,o,a;t=Ps,(e=Xo())!==u&&si()!==u?((n=na())===u&&(n=function(){var t,e,n,s;t=Ps,"scheme"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(he));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="SCHEME"):(Ps=t,t=u)):(Ps=t,t=u);return t}()),n!==u&&si()!==u?((s=ru())===u&&(s=null),s!==u&&si()!==u&&(o=Eo())!==u&&si()!==u?((a=function(){var r,t,e,n,s,o;if(r=Ps,(t=bu())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=bu())!==u?n=s=[s,o]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=bu())!==u?n=s=[s,o]:(Ps=n,n=u);e!==u?(r,t=i(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())===u&&(a=null),a!==u?(t,l=e,c=s,f=o,b=a,e={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:l[0].toLowerCase(),keyword:"database",if_not_exists:c,database:f,create_definitions:b}},t=e):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u);var l,c,f,b;return t}());return t}())===u&&(t=function(){var t,e,n,s;t=Ps,(e=function(){var t,e,n,s;t=Ps,"truncate"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(kn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="TRUNCATE"):(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u?((n=ta())===u&&(n=null),n!==u&&si()!==u&&(s=_u())!==u?(t,o=e,a=n,(i=s)&&i.forEach(r=>Ui.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(Ps=t,t=u)):(Ps=t,t=u);var o,a,i;return t}())===u&&(t=function(){var r,t,e;r=Ps,(t=qo())!==u&&si()!==u&&ta()!==u&&si()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=Iu())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=Iu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=Iu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,t=c(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())!==u?(r,(n=e).forEach(r=>r.forEach(r=>r.table&&Ui.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:"rename",table:n}},r=t):(Ps=r,r=u);var n;return r}())===u&&(t=function(){var t,e,n;t=Ps,(e=function(){var t,e,n,s;t=Ps,"call"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(en));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="CALL"):(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u&&(n=wi())!==u?(t,s=n,e={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:"call",expr:s}},t=e):(Ps=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n;t=Ps,(e=function(){var t,e,n,s;t=Ps,"use"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(ne));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u&&(n=Lo())!==u?(t,s=n,Ui.add(`use::${s}::null`),e={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:"use",db:s}},t=e):(Ps=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n,s;t=Ps,(e=function(){var t,e,n,s;t=Ps,"alter"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(se));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u&&ta()!==u&&si()!==u&&(n=_u())!==u&&si()!==u&&(s=function(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=uu())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=uu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=uu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,t=c(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())!==u?(t,a=s,(o=n)&&o.length>0&&o.forEach(r=>Ui.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:"alter",table:o,expr:a}},t=e):(Ps=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n,s;t=Ps,(e=Jo())!==u&&si()!==u?((n=function(){var t,e,n,s;t=Ps,"global"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(Zn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="GLOBAL"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Ps,"session"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(zn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="SESSION"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Ps,"local"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(lr));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="LOCAL"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Ps,"persist"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(Qn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="PERSIST"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Ps,"persist_only"===r.substr(Ps,12).toLowerCase()?(e=r.substr(Ps,12),Ps+=12):(e=u,0===js&&Vs(Jn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="PERSIST_ONLY"):(Ps=t,t=u)):(Ps=t,t=u);return t}()),n===u&&(n=null),n!==u&&si()!==u&&(s=bi())!==u?(t,o=n,(a=s).keyword=o,e={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:"set",expr:a}},t=e):(Ps=t,t=u)):(Ps=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n;t=Ps,(e=function(){var t,e,n,s;t=Ps,"lock"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(R));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u&&ea()!==u&&si()!==u&&(n=function(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=Lu())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=Lu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=Lu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,t=br(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())!==u?(t,s=n,e={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:"lock",keyword:"tables",tables:s}},t=e):(Ps=t,t=u);var s;return t}())===u&&(t=function(){var t,e;t=Ps,(e=function(){var t,e,n,s;t=Ps,"unlock"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(de));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u&&ea()!==u?(t,e={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:"unlock",keyword:"tables"}},t=e):(Ps=t,t=u);return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c;t=Ps,(e=Yo())!==u&&si()!==u?("binary"===r.substr(Ps,6).toLowerCase()?(n=r.substr(Ps,6),Ps+=6):(n=u,0===js&&Vs(vr)),n===u&&("master"===r.substr(Ps,6).toLowerCase()?(n=r.substr(Ps,6),Ps+=6):(n=u,0===js&&Vs(Lr))),n!==u&&(s=si())!==u?("logs"===r.substr(Ps,4).toLowerCase()?(o=r.substr(Ps,4),Ps+=4):(o=u,0===js&&Vs(Cr)),o!==u?(t,f=n,e={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:"show",suffix:"logs",keyword:f.toLowerCase()}},t=e):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u);var f;t===u&&(t=Ps,(e=Yo())!==u&&si()!==u?("binlog"===r.substr(Ps,6).toLowerCase()?(n=r.substr(Ps,6),Ps+=6):(n=u,0===js&&Vs(dr)),n!==u&&(s=si())!==u?("events"===r.substr(Ps,6).toLowerCase()?(o=r.substr(Ps,6),Ps+=6):(o=u,0===js&&Vs(pr)),o!==u&&(a=si())!==u?((i=ao())===u&&(i=null),i!==u&&si()!==u?((l=mu())===u&&(l=null),l!==u&&si()!==u?((c=Fu())===u&&(c=null),c!==u?(t,b=i,v=l,L=c,e={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:"show",suffix:"events",keyword:"binlog",in:b,from:v,limit:L}},t=e):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=Ps,(e=Yo())!==u&&si()!==u?(n=Ps,"character"===r.substr(Ps,9).toLowerCase()?(s=r.substr(Ps,9),Ps+=9):(s=u,0===js&&Vs(V)),s!==u&&(o=si())!==u?("set"===r.substr(Ps,3).toLowerCase()?(a=r.substr(Ps,3),Ps+=3):(a=u,0===js&&Vs(K)),a!==u?n=s=[s,o,a]:(Ps=n,n=u)):(Ps=n,n=u),n===u&&("collation"===r.substr(Ps,9).toLowerCase()?(n=r.substr(Ps,9),Ps+=9):(n=u,0===js&&Vs(wr))),n!==u&&(s=si())!==u?((o=oo())===u&&(o=ku()),o===u&&(o=null),o!==u?(t,e=function(r,t){let e=Array.isArray(r)&&r||[r];return{tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:"show",suffix:e[2]&&e[2].toLowerCase(),keyword:e[0].toLowerCase(),expr:t}}}(n,o),t=e):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=function(){var t,e,n,s;t=Ps,(e=Yo())!==u&&si()!==u?("grants"===r.substr(Ps,6).toLowerCase()?(n=r.substr(Ps,6),Ps+=6):(n=u,0===js&&Vs(Er)),n!==u&&si()!==u?((s=function(){var t,e,n,s,o,a,i;t=Ps,"for"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(U));e!==u&&si()!==u&&(n=Lo())!==u&&si()!==u?(s=Ps,(o=ja())!==u&&(a=si())!==u&&(i=Lo())!==u?s=o=[o,a,i]:(Ps=s,s=u),s===u&&(s=null),s!==u&&(o=si())!==u?((a=function(){var r,t;r=Ps,ia()!==u&&si()!==u&&(t=function(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=Lo())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=Lo())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=Lo())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,t=br(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())!==u?(r,r=t):(Ps=r,r=u);return r}())===u&&(a=null),a!==u?(t,c=a,e={user:n,host:(l=s)&&l[2],role_list:c},t=e):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u);var l,c;return t}())===u&&(s=null),s!==u?(t,o=s,e={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:"show",keyword:"grants",for:o}},t=e):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u);var o;return t}())));var b,v,L;return t}())===u&&(t=function(){var t,e,n;t=Ps,(e=fa())===u&&(e=function(){var t,e,n,s;t=Ps,"describe"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(Fe));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="DESCRIBE"):(Ps=t,t=u)):(Ps=t,t=u);return t}());e!==u&&si()!==u&&(n=Lo())!==u?(t,s=n,e={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:"desc",table:s}},t=e):(Ps=t,t=u);var s;return t}()),t}function zs(){var t;return(t=Js())===u&&(t=function(){var r,t,e,n,s,o,a;r=Ps,(t=Wo())!==u&&si()!==u&&(e=_u())!==u&&si()!==u&&Jo()!==u&&si()!==u&&(n=Gu())!==u&&si()!==u?((s=ku())===u&&(s=null),s!==u&&si()!==u?((o=Du())===u&&(o=null),o!==u&&si()!==u?((a=Fu())===u&&(a=null),a!==u?(r,t=function(r,t,e,n,s){const u={};return r&&r.forEach(r=>{const{db:t,as:e,table:n,join:s}=r,o=s?"select":"update";t&&(u[n]=t),n&&Ui.add(`${o}::${t}::${n}`)}),t&&t.forEach(r=>{if(r.table){const t=Oi(r.table);Ui.add(`update::${u[t]||null}::${t}`)}Mi.add(`update::${r.table}::${r.column}`)}),{tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:"update",table:r,set:t,where:e,orderby:n,limit:s}}}(e,n,s,o,a),r=t):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=Ps,(t=Wu())!==u&&si()!==u?((e=Qo())===u&&(e=null),e!==u&&si()!==u&&(n=Uu())!==u&&si()!==u?((s=Yu())===u&&(s=null),s!==u&&si()!==u&&Qa()!==u&&si()!==u&&(o=function(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=po())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=po())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=po())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,t=c(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())!==u&&si()!==u&&Ja()!==u&&si()!==u&&(a=ju())!==u&&si()!==u?((i=Bu())===u&&(i=null),i!==u?(r,t=function(r,t,e,n,s,u){if(t&&(Ui.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(s)&&s.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>Mi.add(`insert::${r}::${t}`))}return{tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:r,table:[t],columns:n,values:s,partition:e,on_duplicate_update:u}}}(t,n,s,o,a,i),r=t):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=Ps,(t=Wu())!==u&&si()!==u?((e=Zo())===u&&(e=null),e!==u&&si()!==u?((n=Qo())===u&&(n=null),n!==u&&si()!==u&&(s=Uu())!==u&&si()!==u?((o=Yu())===u&&(o=null),o!==u&&si()!==u&&(a=ju())!==u&&si()!==u?((i=Bu())===u&&(i=null),i!==u?(r,t=function(r,t,e,n,s,u,o){n&&(Ui.add(`insert::${n.db}::${n.table}`),Mi.add(`insert::${n.table}::(.*)`),n.as=null);const a=[t,e].filter(r=>r).map(r=>r[0]&&r[0].toLowerCase()).join(" ");return{tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:r,table:[n],columns:null,values:u,partition:s,prefix:a,on_duplicate_update:o}}}(t,e,n,s,o,a,i),r=t):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o;r=Ps,(t=Wu())!==u&&si()!==u&&Qo()!==u&&si()!==u&&(e=Uu())!==u&&si()!==u?((n=Yu())===u&&(n=null),n!==u&&si()!==u&&Jo()!==u&&si()!==u&&(s=Gu())!==u&&si()!==u?((o=Bu())===u&&(o=null),o!==u?(r,a=t,l=n,c=s,f=o,(i=e)&&(Ui.add(`insert::${i.db}::${i.table}`),Mi.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:a,table:[i],columns:null,partition:l,set:c,on_duplicate_update:f}},r=t):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u);var a,i,l,c,f;return r}())===u&&(t=function(){var t,e,n,s,o,a,i;t=Ps,(e=function(){var t,e,n,s;t=Ps,"delete"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(G));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u?((n=_u())===u&&(n=null),n!==u&&si()!==u&&(s=mu())!==u&&si()!==u?((o=ku())===u&&(o=null),o!==u&&si()!==u?((a=Du())===u&&(a=null),a!==u&&si()!==u?((i=Fu())===u&&(i=null),i!==u?(t,e=function(r,t,e,n,s){if(t&&t.forEach(r=>{const{db:t,as:e,table:n,join:s}=r,u=s?"select":"delete";n&&Ui.add(`${u}::${t}::${n}`),s||Mi.add(`delete::${n}::(.*)`)}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}]}return{tableList:Array.from(Ui),columnList:gi(Mi),ast:{type:"delete",table:r,from:t,where:e,orderby:n,limit:s}}}(n,s,o,a,i),t=e):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=Zs())===u&&(t=function(){var r,t;r=[],t=fi();for(;t!==u;)r.push(t),t=fi();return r}()),t}function Qs(){var r,t;return r=Ps,(t=oa())!==u&&si()!==u&&ba()!==u?(r,r=t="union all"):(Ps=r,r=u),r===u&&(r=Ps,(t=oa())!==u&&(r,t="union"),r=t),r}function Js(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=Cu())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Qs())!==u&&(a=si())!==u&&(i=Cu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Qs())!==u&&(a=si())!==u&&(i=Cu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u&&(n=si())!==u?((s=Du())===u&&(s=null),s!==u&&(o=si())!==u?((a=Fu())===u&&(a=null),a!==u?(r,r=t=function(r,t,e,n){let s=r;for(let r=0;r<t.length;r++)s._next=t[r][3],s.set_op=t[r][1],s=s._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(Ui),columnList:gi(Mi),ast:r}}(t,e,s,a)):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u)}else Ps=r,r=u;return r}function ru(){var t,e;return t=Ps,"if"===r.substr(Ps,2).toLowerCase()?(e=r.substr(Ps,2),Ps+=2):(e=u,0===js&&Vs(l)),e!==u&&si()!==u&&Ea()!==u&&si()!==u&&wa()!==u?(t,t=e="IF NOT EXISTS"):(Ps=t,t=u),t}function tu(){var t;return(t=function(){var t;(t=function(){var t,e,n,s,o,a,i,l;t=Ps,(e=iu())===u&&(e=null);e!==u&&si()!==u?(n=Ps,"primary"===r.substr(Ps,7).toLowerCase()?(s=r.substr(Ps,7),Ps+=7):(s=u,0===js&&Vs(C)),s!==u&&(o=si())!==u?("key"===r.substr(Ps,3).toLowerCase()?(a=r.substr(Ps,3),Ps+=3):(a=u,0===js&&Vs(L)),a!==u?n=s=[s,o,a]:(Ps=n,n=u)):(Ps=n,n=u),n!==u&&(s=si())!==u?((o=Nu())===u&&(o=null),o!==u&&(a=si())!==u&&(i=wu())!==u&&si()!==u?((l=Ru())===u&&(l=null),l!==u?(t,f=n,b=o,v=i,d=l,e={constraint:(c=e)&&c.constraint,definition:v,constraint_type:`${f[0].toLowerCase()} ${f[2].toLowerCase()}`,keyword:c&&c.keyword,index_type:b,resource:"constraint",index_options:d},t=e):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u);var c,f,b,v,d;return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l;t=Ps,(e=iu())===u&&(e=null);e!==u&&si()!==u&&(n=function(){var t,e,n,s;t=Ps,"unique"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(v));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="UNIQUE"):(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u?((s=Xa())===u&&(s=Va()),s===u&&(s=null),s!==u&&si()!==u?((o=po())===u&&(o=null),o!==u&&si()!==u?((a=Nu())===u&&(a=null),a!==u&&si()!==u&&(i=wu())!==u&&si()!==u?((l=Ru())===u&&(l=null),l!==u?(t,f=n,b=s,L=o,C=a,d=i,p=l,e={constraint:(c=e)&&c.constraint,definition:d,constraint_type:b&&`${f.toLowerCase()} ${b.toLowerCase()}`||f.toLowerCase(),keyword:c&&c.keyword,index_type:C,index:L,resource:"constraint",index_options:p},t=e):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u);var c,f,b,L,C,d,p;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=Ps,(e=iu())===u&&(e=null);e!==u&&si()!==u?("foreign key"===r.substr(Ps,11).toLowerCase()?(n=r.substr(Ps,11),Ps+=11):(n=u,0===js&&Vs(k)),n!==u&&si()!==u?((s=po())===u&&(s=null),s!==u&&si()!==u&&(o=wu())!==u&&si()!==u?((a=lu())===u&&(a=null),a!==u?(t,l=n,c=s,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:l,keyword:i&&i.keyword,index:c,resource:"constraint",reference_definition:b},t=e):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u);var i,l,c,f,b;return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f;t=Ps,(e=iu())===u&&(e=null);e!==u&&si()!==u?("check"===r.substr(Ps,5).toLowerCase()?(n=r.substr(Ps,5),Ps+=5):(n=u,0===js&&Vs(g)),n!==u&&si()!==u?(s=Ps,"not"===r.substr(Ps,3).toLowerCase()?(o=r.substr(Ps,3),Ps+=3):(o=u,0===js&&Vs(x)),o!==u&&(a=si())!==u?("for"===r.substr(Ps,3).toLowerCase()?(i=r.substr(Ps,3),Ps+=3):(i=u,0===js&&Vs(U)),i!==u&&(l=si())!==u?("replication"===r.substr(Ps,11).toLowerCase()?(c=r.substr(Ps,11),Ps+=11):(c=u,0===js&&Vs(M)),c!==u&&(f=si())!==u?s=o=[o,a,i,l,c,f]:(Ps=s,s=u)):(Ps=s,s=u)):(Ps=s,s=u),s===u&&(s=null),s!==u&&(o=Qa())!==u&&(a=si())!==u&&(i=Qu())!==u&&(l=si())!==u&&(c=Ja())!==u?(t,b=e,v=s,L=i,e={constraint_type:n.toLowerCase(),keyword:b&&b.keyword,constraint:b&&b.constraint,index_type:v&&{keyword:"not for replication"},definition:[L],resource:"constraint"},t=e):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u);var b,v,L;return t}());return t}())===u&&(t=nu())===u&&(t=function(){var r,t,e,n,s,o;r=Ps,(t=Xa())===u&&(t=Va());t!==u&&si()!==u?((e=po())===u&&(e=null),e!==u&&si()!==u?((n=Nu())===u&&(n=null),n!==u&&si()!==u&&(s=wu())!==u&&si()!==u?((o=Ru())===u&&(o=null),o!==u&&si()!==u?(r,a=n,i=o,t={index:e,definition:s,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i},r=t):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u);var a,i;return r}())===u&&(t=function(){var t,e,n,s,o,a;t=Ps,(e=function(){var t,e,n,s;t=Ps,"fulltext"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(ls));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="FULLTEXT"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(e=function(){var t,e,n,s;t=Ps,"spatial"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(cs));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="SPATIAL"):(Ps=t,t=u)):(Ps=t,t=u);return t}());e!==u&&si()!==u?((n=Xa())===u&&(n=Va()),n===u&&(n=null),n!==u&&si()!==u?((s=po())===u&&(s=null),s!==u&&si()!==u&&(o=wu())!==u&&si()!==u?((a=Ru())===u&&(a=null),a!==u&&si()!==u?(t,i=e,c=a,e={index:s,definition:o,keyword:(l=n)&&`${i.toLowerCase()} ${l.toLowerCase()}`||i.toLowerCase(),index_options:c,resource:"index"},t=e):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u);var i,l,c;return t}()),t}function eu(){var t,e,n,s,o,a,i;return t=Ps,(e=function(){var t,e;t=Ps,(e=function(){var t,e,n,s;t=Ps,"not null"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(zt));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&(t,e={type:"not null",value:"not null"});return t=e}())===u&&(e=_o()),e!==u&&(t,(i=e)&&!i.value&&(i.value="null"),e={nullable:i}),(t=e)===u&&(t=Ps,(e=function(){var r,t;r=Ps,Ho()!==u&&si()!==u?((t=So())===u&&(t=Qu()),t!==u?(r,r={type:"default",value:t}):(Ps=r,r=u)):(Ps=r,r=u);return r}())!==u&&(t,e={default_val:e}),(t=e)===u&&(t=Ps,"auto_increment"===r.substr(Ps,14).toLowerCase()?(e=r.substr(Ps,14),Ps+=14):(e=u,0===js&&Vs(f)),e===u&&("autoincrement"===r.substr(Ps,13).toLowerCase()?(e=r.substr(Ps,13),Ps+=13):(e=u,0===js&&Vs(b))),e!==u&&(t,e={auto_increment:e.toLowerCase()}),(t=e)===u&&(t=Ps,e=Ps,"unique"===r.substr(Ps,6).toLowerCase()?(n=r.substr(Ps,6),Ps+=6):(n=u,0===js&&Vs(v)),n!==u&&(s=si())!==u?("key"===r.substr(Ps,3).toLowerCase()?(o=r.substr(Ps,3),Ps+=3):(o=u,0===js&&Vs(L)),o===u&&(o=null),o!==u?e=n=[n,s,o]:(Ps=e,e=u)):(Ps=e,e=u),e===u&&(e=Ps,"primary"===r.substr(Ps,7).toLowerCase()?(n=r.substr(Ps,7),Ps+=7):(n=u,0===js&&Vs(C)),n===u&&(n=null),n!==u&&(s=si())!==u?("key"===r.substr(Ps,3).toLowerCase()?(o=r.substr(Ps,3),Ps+=3):(o=u,0===js&&Vs(L)),o!==u?e=n=[n,s,o]:(Ps=e,e=u)):(Ps=e,e=u)),e!==u&&(t,e=function(r){const t=[];return r&&t.push(r[0],r[2]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===u&&(t=Ps,(e=ai())!==u&&(t,e={comment:e}),(t=e)===u&&(t=Ps,(e=su())!==u&&(t,e={collate:e}),(t=e)===u&&(t=Ps,(e=function(){var t,e,n;t=Ps,"column_format"===r.substr(Ps,13).toLowerCase()?(e=r.substr(Ps,13),Ps+=13):(e=u,0===js&&Vs(d));e!==u&&si()!==u?("fixed"===r.substr(Ps,5).toLowerCase()?(n=r.substr(Ps,5),Ps+=5):(n=u,0===js&&Vs(p)),n===u&&("dynamic"===r.substr(Ps,7).toLowerCase()?(n=r.substr(Ps,7),Ps+=7):(n=u,0===js&&Vs(w)),n===u&&("default"===r.substr(Ps,7).toLowerCase()?(n=r.substr(Ps,7),Ps+=7):(n=u,0===js&&Vs(E)))),n!==u?(t,e={type:"column_format",value:n.toLowerCase()},t=e):(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&(t,e={column_format:e}),(t=e)===u&&(t=Ps,(e=function(){var t,e,n;t=Ps,"storage"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(A));e!==u&&si()!==u?("disk"===r.substr(Ps,4).toLowerCase()?(n=r.substr(Ps,4),Ps+=4):(n=u,0===js&&Vs(h)),n===u&&("memory"===r.substr(Ps,6).toLowerCase()?(n=r.substr(Ps,6),Ps+=6):(n=u,0===js&&Vs(y))),n!==u?(t,e={type:"storage",value:n.toLowerCase()},t=e):(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&(t,e={storage:e}),(t=e)===u&&(t=Ps,(e=lu())!==u&&(t,e={reference_definition:e}),(t=e)===u&&(t=Ps,(e=fu())!==u&&(n=si())!==u?((s=Ba())===u&&(s=null),s!==u&&(o=si())!==u&&(a=Eo())!==u?(t,t=e=function(r,t,e){return{character_set:{type:r,value:e,symbol:t}}}(e,s,a)):(Ps=t,t=u)):(Ps=t,t=u)))))))))),t}function nu(){var r,t,e,n,s,o,a;return r=Ps,(t=vo())!==u&&si()!==u?((e=yi())===u&&(e=null),e!==u&&si()!==u?((n=function(){var r,t,e,n,s,o;if(r=Ps,(t=eu())!==u)if(si()!==u){for(e=[],n=Ps,(s=si())!==u&&(o=eu())!==u?n=s=[s,o]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=eu())!==u?n=s=[s,o]:(Ps=n,n=u);e!==u?(r,r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(Ps=r,r=u)}else Ps=r,r=u;else Ps=r,r=u;return r}())===u&&(n=null),n!==u?(r,s=t,o=e,a=n,Mi.add(`create::${s.table}::${s.column}`),r=t={column:s,definition:o,resource:"column",...a||{}}):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u),r}function su(){var t,e,n;return t=Ps,function(){var t,e,n,s;t=Ps,"collate"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(Z));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="COLLATE"):(Ps=t,t=u)):(Ps=t,t=u);return t}()!==u&&si()!==u?((e=Ba())===u&&(e=null),e!==u&&si()!==u&&(n=Eo())!==u?(t,t={type:"collate",symbol:e,value:n}):(Ps=t,t=u)):(Ps=t,t=u),t}function uu(){var t;return(t=function(){var t,e,n,s;t=Ps,(e=function(){var t,e,n,s;t=Ps,"add"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(os));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="ADD"):(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u?((n=Wa())===u&&(n=null),n!==u&&si()!==u&&(s=nu())!==u?(t,o=n,a=s,e={action:"add",...a,keyword:o,resource:"column",type:"alter"},t=e):(Ps=t,t=u)):(Ps=t,t=u);var o,a;return t}())===u&&(t=function(){var r,t,e;r=Ps,Bo()!==u&&si()!==u?((t=Wa())===u&&(t=null),t!==u&&si()!==u&&(e=vo())!==u?(r,r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(Ps=r,r=u)):(Ps=r,r=u);return r}())===u&&(t=function(){var r,t,e,n;r=Ps,(t=qo())!==u&&si()!==u?((e=jo())===u&&(e=ra()),e===u&&(e=null),e!==u&&si()!==u&&(n=Lo())!==u?(r,o=n,t={action:"rename",type:"alter",resource:"table",keyword:(s=e)&&s[0].toLowerCase(),table:o},r=t):(Ps=r,r=u)):(Ps=r,r=u);var s,o;return r}()),t}function ou(){var t,e,n,s;return t=Ps,"algorithm"===r.substr(Ps,9).toLowerCase()?(e=r.substr(Ps,9),Ps+=9):(e=u,0===js&&Vs(T)),e!==u&&si()!==u?((n=Ba())===u&&(n=null),n!==u&&si()!==u?("default"===r.substr(Ps,7).toLowerCase()?(s=r.substr(Ps,7),Ps+=7):(s=u,0===js&&Vs(E)),s===u&&("instant"===r.substr(Ps,7).toLowerCase()?(s=r.substr(Ps,7),Ps+=7):(s=u,0===js&&Vs(m)),s===u&&("inplace"===r.substr(Ps,7).toLowerCase()?(s=r.substr(Ps,7),Ps+=7):(s=u,0===js&&Vs(I)),s===u&&("copy"===r.substr(Ps,4).toLowerCase()?(s=r.substr(Ps,4),Ps+=4):(s=u,0===js&&Vs(N))))),s!==u?(t,t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:s}):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u),t}function au(){var t,e,n,s;return t=Ps,"lock"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(R)),e!==u&&si()!==u?((n=Ba())===u&&(n=null),n!==u&&si()!==u?("default"===r.substr(Ps,7).toLowerCase()?(s=r.substr(Ps,7),Ps+=7):(s=u,0===js&&Vs(E)),s===u&&("none"===r.substr(Ps,4).toLowerCase()?(s=r.substr(Ps,4),Ps+=4):(s=u,0===js&&Vs(S)),s===u&&("shared"===r.substr(Ps,6).toLowerCase()?(s=r.substr(Ps,6),Ps+=6):(s=u,0===js&&Vs(_)),s===u&&("exclusive"===r.substr(Ps,9).toLowerCase()?(s=r.substr(Ps,9),Ps+=9):(s=u,0===js&&Vs(O))))),s!==u?(t,t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:s}):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u),t}function iu(){var t,e,n,s;return t=Ps,(e=function(){var t,e,n,s;t=Ps,"constraint"===r.substr(Ps,10).toLowerCase()?(e=r.substr(Ps,10),Ps+=10):(e=u,0===js&&Vs(bs));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="CONSTRAINT"):(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u?((n=Lo())===u&&(n=null),n!==u?(t,s=n,t=e={keyword:e.toLowerCase(),constraint:s}):(Ps=t,t=u)):(Ps=t,t=u),t}function lu(){var t,e,n,s,o,a,i,l,c,f;return t=Ps,(e=function(){var t,e,n,s;t=Ps,"references"===r.substr(Ps,10).toLowerCase()?(e=r.substr(Ps,10),Ps+=10):(e=u,0===js&&Vs(vs));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="REFERENCES"):(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u&&(n=_u())!==u&&si()!==u&&(s=wu())!==u&&si()!==u?("match full"===r.substr(Ps,10).toLowerCase()?(o=r.substr(Ps,10),Ps+=10):(o=u,0===js&&Vs(D)),o===u&&("match partial"===r.substr(Ps,13).toLowerCase()?(o=r.substr(Ps,13),Ps+=13):(o=u,0===js&&Vs($)),o===u&&("match simple"===r.substr(Ps,12).toLowerCase()?(o=r.substr(Ps,12),Ps+=12):(o=u,0===js&&Vs(P)))),o===u&&(o=null),o!==u&&si()!==u?((a=cu())===u&&(a=null),a!==u&&si()!==u?((i=cu())===u&&(i=null),i!==u?(t,l=o,c=a,f=i,t=e={definition:s,table:n,keyword:e.toLowerCase(),match:l&&l.toLowerCase(),on_delete:c,on_update:f}):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u),t}function cu(){var t,e,n,s,o,a;return t=Ps,"on"===r.substr(Ps,2).toLowerCase()?(e=r.substr(Ps,2),Ps+=2):(e=u,0===js&&Vs(F)),e!==u&&ui()!==u?("delete"===r.substr(Ps,6).toLowerCase()?(n=r.substr(Ps,6),Ps+=6):(n=u,0===js&&Vs(G)),n===u&&("update"===r.substr(Ps,6).toLowerCase()?(n=r.substr(Ps,6),Ps+=6):(n=u,0===js&&Vs(H))),n!==u&&ui()!==u&&(s=function(){var t,e;t=Ps,"restrict"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(j));e===u&&("cascade"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(Y)),e===u&&("set null"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(B)),e===u&&("no action"===r.substr(Ps,9).toLowerCase()?(e=r.substr(Ps,9),Ps+=9):(e=u,0===js&&Vs(W)),e===u&&("set default"===r.substr(Ps,11).toLowerCase()?(e=r.substr(Ps,11),Ps+=11):(e=u,0===js&&Vs(X))))));e!==u&&(t,e=e.toLowerCase());return t=e}())!==u?(t,o=n,a=s,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(Ps=t,t=u)):(Ps=t,t=u),t}function fu(){var t,e,n;return t=Ps,"character"===r.substr(Ps,9).toLowerCase()?(e=r.substr(Ps,9),Ps+=9):(e=u,0===js&&Vs(V)),e!==u&&si()!==u?("set"===r.substr(Ps,3).toLowerCase()?(n=r.substr(Ps,3),Ps+=3):(n=u,0===js&&Vs(K)),n!==u?(t,t=e="CHARACTER SET"):(Ps=t,t=u)):(Ps=t,t=u),t}function bu(){var t,e,n,s,o,a,i,l,c;return t=Ps,(e=Ho())===u&&(e=null),e!==u&&si()!==u?((n=fu())===u&&("charset"===r.substr(Ps,7).toLowerCase()?(n=r.substr(Ps,7),Ps+=7):(n=u,0===js&&Vs(q)),n===u&&("collate"===r.substr(Ps,7).toLowerCase()?(n=r.substr(Ps,7),Ps+=7):(n=u,0===js&&Vs(Z)))),n!==u&&si()!==u?((s=Ba())===u&&(s=null),s!==u&&si()!==u&&(o=Eo())!==u?(t,i=n,l=s,c=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:l,value:c}):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u),t}function vu(){var t,e,n,s,o,a,i,l,c;return t=Ps,"auto_increment"===r.substr(Ps,14).toLowerCase()?(e=r.substr(Ps,14),Ps+=14):(e=u,0===js&&Vs(f)),e===u&&("avg_row_length"===r.substr(Ps,14).toLowerCase()?(e=r.substr(Ps,14),Ps+=14):(e=u,0===js&&Vs(z)),e===u&&("key_block_size"===r.substr(Ps,14).toLowerCase()?(e=r.substr(Ps,14),Ps+=14):(e=u,0===js&&Vs(Q)),e===u&&("max_rows"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(J)),e===u&&("min_rows"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(rr)),e===u&&("stats_sample_pages"===r.substr(Ps,18).toLowerCase()?(e=r.substr(Ps,18),Ps+=18):(e=u,0===js&&Vs(tr))))))),e!==u&&si()!==u?((n=Ba())===u&&(n=null),n!==u&&si()!==u&&(s=Mo())!==u?(t,l=n,c=s,t=e={keyword:e.toLowerCase(),symbol:l,value:c.value}):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=bu())===u&&(t=Ps,(e=Ka())===u&&("connection"===r.substr(Ps,10).toLowerCase()?(e=r.substr(Ps,10),Ps+=10):(e=u,0===js&&Vs(er))),e!==u&&si()!==u?((n=Ba())===u&&(n=null),n!==u&&si()!==u&&(s=Oo())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,s)):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=Ps,"compression"===r.substr(Ps,11).toLowerCase()?(e=r.substr(Ps,11),Ps+=11):(e=u,0===js&&Vs(nr)),e!==u&&si()!==u?((n=Ba())===u&&(n=null),n!==u&&si()!==u?(s=Ps,39===r.charCodeAt(Ps)?(o="'",Ps++):(o=u,0===js&&Vs(sr)),o!==u?("zlib"===r.substr(Ps,4).toLowerCase()?(a=r.substr(Ps,4),Ps+=4):(a=u,0===js&&Vs(ur)),a===u&&("lz4"===r.substr(Ps,3).toLowerCase()?(a=r.substr(Ps,3),Ps+=3):(a=u,0===js&&Vs(or)),a===u&&("none"===r.substr(Ps,4).toLowerCase()?(a=r.substr(Ps,4),Ps+=4):(a=u,0===js&&Vs(S)))),a!==u?(39===r.charCodeAt(Ps)?(i="'",Ps++):(i=u,0===js&&Vs(sr)),i!==u?s=o=[o,a,i]:(Ps=s,s=u)):(Ps=s,s=u)):(Ps=s,s=u),s!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,s)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=Ps,"engine"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(ar)),e!==u&&si()!==u?((n=Ba())===u&&(n=null),n!==u&&si()!==u&&(s=Eo())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,s)):(Ps=t,t=u)):(Ps=t,t=u)))),t}function Lu(){var t,e,n,s,o;return t=Ps,(e=gu())!==u&&si()!==u&&(n=function(){var t,e,n;return t=Ps,"read"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(ir)),e!==u&&si()!==u?("local"===r.substr(Ps,5).toLowerCase()?(n=r.substr(Ps,5),Ps+=5):(n=u,0===js&&Vs(lr)),n===u&&(n=null),n!==u?(t,t=e={type:"read",suffix:n&&"local"}):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=Ps,"low_priority"===r.substr(Ps,12).toLowerCase()?(e=r.substr(Ps,12),Ps+=12):(e=u,0===js&&Vs(cr)),e===u&&(e=null),e!==u&&si()!==u?("write"===r.substr(Ps,5).toLowerCase()?(n=r.substr(Ps,5),Ps+=5):(n=u,0===js&&Vs(fr)),n!==u?(t,t=e={type:"write",prefix:e&&"low_priority"}):(Ps=t,t=u)):(Ps=t,t=u)),t}())!==u?(t,s=e,o=n,Ui.add(`lock::${s.db}::${s.table}`),t=e={table:s,lock_type:o}):(Ps=t,t=u),t}function Cu(){var t,e,n,s,o,a,i;return(t=Eu())===u&&(t=Ps,e=Ps,40===r.charCodeAt(Ps)?(n="(",Ps++):(n=u,0===js&&Vs(Ar)),n!==u&&(s=si())!==u&&(o=Cu())!==u&&(a=si())!==u?(41===r.charCodeAt(Ps)?(i=")",Ps++):(i=u,0===js&&Vs(hr)),i!==u?e=n=[n,s,o,a,i]:(Ps=e,e=u)):(Ps=e,e=u),e!==u&&(t,e={...e[2],parentheses_symbol:!0}),t=e),t}function du(){var t,e,n,s,o,a,i,l,f;if(t=Ps,la()!==u)if(si()!==u)if((e=pu())!==u){for(n=[],s=Ps,(o=si())!==u&&(a=Za())!==u&&(i=si())!==u&&(l=pu())!==u?s=o=[o,a,i,l]:(Ps=s,s=u);s!==u;)n.push(s),s=Ps,(o=si())!==u&&(a=Za())!==u&&(i=si())!==u&&(l=pu())!==u?s=o=[o,a,i,l]:(Ps=s,s=u);n!==u?(t,t=c(e,n)):(Ps=t,t=u)}else Ps=t,t=u;else Ps=t,t=u;else Ps=t,t=u;return t===u&&(t=Ps,si()!==u&&la()!==u&&(e=si())!==u&&(n=function(){var t,e,n,s;t=Ps,"RECURSIVE"===r.substr(Ps,9)?(e="RECURSIVE",Ps+=9):(e=u,0===js&&Vs(le));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&(s=si())!==u&&(o=pu())!==u?(t,(f=o).recursive=!0,t=[f]):(Ps=t,t=u)),t}function pu(){var r,t,e,n,s;return r=Ps,(t=Oo())===u&&(t=Eo()),t!==u&&si()!==u?((e=wu())===u&&(e=null),e!==u&&si()!==u&&ra()!==u&&si()!==u&&Qa()!==u&&si()!==u&&(n=Js())!==u&&si()!==u&&Ja()!==u?(r,"string"==typeof(s=t)&&(s={type:"default",value:s}),r=t={name:s,stmt:n,columns:e}):(Ps=r,r=u)):(Ps=r,r=u),r}function wu(){var r,t;return r=Ps,Qa()!==u&&si()!==u&&(t=function(){var r;(r=function(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=vo())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=vo())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=vo())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,t=c(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=So())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=So())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=So())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,t=c(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}());return r}())!==u&&si()!==u&&Ja()!==u?(r,r=t):(Ps=r,r=u),r}function Eu(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C,d,p,w,E,A,h,y,T,m,I,N,R;return t=Ps,si()!==u?((e=du())===u&&(e=null),e!==u&&si()!==u&&function(){var t,e,n,s;t=Ps,"select"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(ue));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}()!==u&&ui()!==u?((n=function(){var r,t,e,n,s,o;if(r=Ps,(t=Au())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Au())!==u?n=s=[s,o]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Au())!==u?n=s=[s,o]:(Ps=n,n=u);e!==u?(r,t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())===u&&(n=null),n!==u&&si()!==u?((s=va())===u&&(s=null),s!==u&&si()!==u&&(o=hu())!==u&&si()!==u?((a=mu())===u&&(a=null),a!==u&&si()!==u?((i=ku())===u&&(i=null),i!==u&&si()!==u?((l=function(){var t,e,n;t=Ps,(e=function(){var t,e,n,s;t=Ps,"group"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(ge));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u&&ca()!==u&&si()!==u&&(n=Vu())!==u?(t,e=n.value,t=e):(Ps=t,t=u);return t}())===u&&(l=null),l!==u&&si()!==u?((c=function(){var t,e;t=Ps,function(){var t,e,n,s;t=Ps,"having"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(Me));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}()!==u&&si()!==u&&(e=Ju())!==u?(t,t=e):(Ps=t,t=u);return t}())===u&&(c=null),c!==u&&si()!==u?((f=Du())===u&&(f=null),f!==u&&si()!==u?((b=Fu())===u&&(b=null),b!==u?(v=Ps,"for"===r.substr(Ps,3).toLowerCase()?(L=r.substr(Ps,3),Ps+=3):(L=u,0===js&&Vs(U)),L!==u&&(C=si())!==u&&(d=Wo())!==u?v=L=[L,C,d]:(Ps=v,v=u),v===u&&(v=null),v!==u?(t,p=e,w=n,E=s,A=o,y=i,T=l,m=c,I=f,N=b,R=v,(h=a)&&h.forEach(r=>r.table&&Ui.add(`select::${r.db}::${r.table}`)),t={with:p,type:"select",options:w,distinct:E,columns:A,from:h,where:y,groupby:T,having:m,orderby:I,limit:N,for_update:R&&`${R[0]} ${R[2][0]}`}):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u),t}function Au(){var t,e;return t=Ps,(e=function(){var t;"sql_calc_found_rows"===r.substr(Ps,19).toLowerCase()?(t=r.substr(Ps,19),Ps+=19):(t=u,0===js&&Vs(Ls));return t}())===u&&((e=function(){var t;"sql_cache"===r.substr(Ps,9).toLowerCase()?(t=r.substr(Ps,9),Ps+=9):(t=u,0===js&&Vs(Cs));return t}())===u&&(e=function(){var t;"sql_no_cache"===r.substr(Ps,12).toLowerCase()?(t=r.substr(Ps,12),Ps+=12):(t=u,0===js&&Vs(ds));return t}()),e===u&&(e=function(){var t;"sql_big_result"===r.substr(Ps,14).toLowerCase()?(t=r.substr(Ps,14),Ps+=14):(t=u,0===js&&Vs(ws));return t}())===u&&(e=function(){var t;"sql_small_result"===r.substr(Ps,16).toLowerCase()?(t=r.substr(Ps,16),Ps+=16):(t=u,0===js&&Vs(ps));return t}())===u&&(e=function(){var t;"sql_buffer_result"===r.substr(Ps,17).toLowerCase()?(t=r.substr(Ps,17),Ps+=17):(t=u,0===js&&Vs(Es));return t}())),e!==u&&(t,e=e),t=e}function hu(){var r,t,e,n,s,o,a,i,l,f;if(r=Ps,(t=ba())===u&&(t=Ps,(e=za())!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=za())),t!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=yu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=yu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,l=t,f=e,Mi.add("select::null::(.*)"),r=t=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},Si(l[0],f)):l[0]):(Ps=r,r=u)}else Ps=r,r=u;if(r===u)if(r=Ps,(t=yu())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=yu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=yu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,r=t=c(t,e)):(Ps=r,r=u)}else Ps=r,r=u;return r}function yu(){var r,t,e,n,s;return r=Ps,t=Ps,(e=Lo())!==u&&(n=si())!==u&&(s=qa())!==u?t=e=[e,n,s]:(Ps=t,t=u),t===u&&(t=null),t!==u&&(e=si())!==u&&(n=za())!==u?(r,r=t=function(r){const t=r&&r[0]||null;return Mi.add(`select::${t}::(.*)`),{expr:{type:"column_ref",table:t,column:"*"},as:null}}(t)):(Ps=r,r=u),r===u&&(r=Ps,(t=function(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=Qu())!==u){if(e=[],n=Ps,(s=si())!==u?((o=Aa())===u&&(o=ha())===u&&(o=ni()),o!==u&&(a=si())!==u&&(i=Qu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u)):(Ps=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Ps,(s=si())!==u?((o=Aa())===u&&(o=ha())===u&&(o=ni()),o!==u&&(a=si())!==u&&(i=Qu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u)):(Ps=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=t.length;let n=t[e-1][3];for(let s=e-1;s>=0;s--){const e=0===s?r:t[s-1][3];n=Ni(t[s][1],e,n)}return n}(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())===u&&(t=Qu()),t!==u&&(e=si())!==u?((n=Tu())===u&&(n=null),n!==u?(r,r=t={expr:t,as:n}):(Ps=r,r=u)):(Ps=r,r=u)),r}function Tu(){var r,t,e;return r=Ps,(t=ra())!==u&&ui()!==u&&(e=function(){var r,t;r=Ps,(t=Eo())!==u?(Ps,(function(r){if(!0===mi[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return!1}(t)?u:void 0)!==u?(r,r=t=t):(Ps=r,r=u)):(Ps=r,r=u);r===u&&(r=Ps,(t=Co())!==u&&(r,t=t),r=t);return r}())!==u?(r,r=t=e):(Ps=r,r=u),r===u&&(r=Ps,(t=ra())===u&&(t=null),t!==u&&si()!==u&&(e=Lo())!==u?(r,r=t=e):(Ps=r,r=u)),r}function mu(){var t,e;return t=Ps,function(){var t,e,n,s;t=Ps,"from"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(Ce));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}()!==u&&si()!==u&&(e=_u())!==u?(t,t=e):(Ps=t,t=u),t}function Iu(){var r,t,e;return r=Ps,(t=Uu())!==u&&si()!==u&&jo()!==u&&si()!==u&&(e=Uu())!==u?(r,r=t=[t,e]):(Ps=r,r=u),r}function Nu(){var t,e;return t=Ps,ia()!==u&&si()!==u?("btree"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(yr)),e===u&&("hash"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(Tr))),e!==u?(t,t={keyword:"using",type:e.toLowerCase()}):(Ps=t,t=u)):(Ps=t,t=u),t}function Ru(){var r,t,e,n,s,o;if(r=Ps,(t=Su())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Su())!==u?n=s=[s,o]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Su())!==u?n=s=[s,o]:(Ps=n,n=u);e!==u?(r,r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(Ps=r,r=u)}else Ps=r,r=u;return r}function Su(){var t,e,n,s,o,a;return t=Ps,(e=function(){var t,e,n,s;t=Ps,"key_block_size"===r.substr(Ps,14).toLowerCase()?(e=r.substr(Ps,14),Ps+=14):(e=u,0===js&&Vs(Q));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="KEY_BLOCK_SIZE"):(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u?((n=Ba())===u&&(n=null),n!==u&&si()!==u&&(s=Mo())!==u?(t,o=n,a=s,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=Nu())===u&&(t=Ps,"with"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(mr)),e!==u&&si()!==u?("parser"===r.substr(Ps,6).toLowerCase()?(n=r.substr(Ps,6),Ps+=6):(n=u,0===js&&Vs(Ir)),n!==u&&si()!==u&&(s=Eo())!==u?(t,t=e={type:"with parser",expr:s}):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=Ps,"visible"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(Nr)),e===u&&("invisible"===r.substr(Ps,9).toLowerCase()?(e=r.substr(Ps,9),Ps+=9):(e=u,0===js&&Vs(Rr))),e!==u&&(t,e=function(r){return{type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===u&&(t=ai()))),t}function _u(){var r,t,e,n;if(r=Ps,(t=gu())!==u){for(e=[],n=Ou();n!==u;)e.push(n),n=Ou();e!==u?(r,r=t=Sr(t,e)):(Ps=r,r=u)}else Ps=r,r=u;return r}function Ou(){var r,t,e;return r=Ps,si()!==u&&(t=Za())!==u&&si()!==u&&(e=gu())!==u?(r,r=e):(Ps=r,r=u),r===u&&(r=Ps,si()!==u&&(t=function(){var r,t,e,n,s,o,a,i,l,c,f;if(r=Ps,(t=xu())!==u)if(si()!==u)if((e=gu())!==u)if(si()!==u)if((n=ia())!==u)if(si()!==u)if(Qa()!==u)if(si()!==u)if((s=Eo())!==u){for(o=[],a=Ps,(i=si())!==u&&(l=Za())!==u&&(c=si())!==u&&(f=Eo())!==u?a=i=[i,l,c,f]:(Ps=a,a=u);a!==u;)o.push(a),a=Ps,(i=si())!==u&&(l=Za())!==u&&(c=si())!==u&&(f=Eo())!==u?a=i=[i,l,c,f]:(Ps=a,a=u);o!==u&&(a=si())!==u&&(i=Ja())!==u?(r,b=t,L=s,C=o,(v=e).join=b,v.using=Si(L,C),r=t=v):(Ps=r,r=u)}else Ps=r,r=u;else Ps=r,r=u;else Ps=r,r=u;else Ps=r,r=u;else Ps=r,r=u;else Ps=r,r=u;else Ps=r,r=u;else Ps=r,r=u;else Ps=r,r=u;var b,v,L,C;r===u&&(r=Ps,(t=xu())!==u&&si()!==u&&(e=gu())!==u&&si()!==u?((n=Mu())===u&&(n=null),n!==u?(r,t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(Ps=r,r=u)):(Ps=r,r=u),r===u&&(r=Ps,(t=xu())!==u&&si()!==u&&(e=Qa())!==u&&si()!==u&&(n=Js())!==u&&si()!==u&&Ja()!==u&&si()!==u?((s=Tu())===u&&(s=null),s!==u&&(o=si())!==u?((a=Mu())===u&&(a=null),a!==u?(r,t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,s,a),r=t):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u)));return r}())!==u?(r,r=t):(Ps=r,r=u)),r}function gu(){var t,e,n,s,o,a;return t=Ps,(e=function(){var t;"dual"===r.substr(Ps,4).toLowerCase()?(t=r.substr(Ps,4),Ps+=4):(t=u,0===js&&Vs(us));return t}())!==u&&(t,e={type:"dual"}),(t=e)===u&&(t=Ps,(e=Eo())!==u&&si()!==u&&(n=Qa())!==u&&si()!==u&&(s=Vu())!==u&&si()!==u&&(o=Ja())!==u&&si()!==u?((a=Tu())===u&&(a=null),a!==u?(t,t=e={expr:{type:"function",name:e,args:s},as:a}):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=Ps,(e=Uu())!==u&&si()!==u?((n=Tu())===u&&(n=null),n!==u?(t,t=e=function(r,t){return"var"===r.type?(r.as=t,r):{db:r.db,table:r.table,as:t}}(e,n)):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=Ps,(e=Qa())!==u&&si()!==u&&(n=Js())!==u&&si()!==u&&(s=Ja())!==u&&si()!==u?((o=Tu())===u&&(o=null),o!==u?(t,t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,o)):(Ps=t,t=u)):(Ps=t,t=u)))),t}function xu(){var t,e,n,s;return t=Ps,(e=function(){var t,e,n,s;t=Ps,"left"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(ye));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&(n=si())!==u?((s=function(){var t,e,n,s;t=Ps,"outer"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(Ie));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(s=null),s!==u&&si()!==u&&ua()!==u?(t,t=e="LEFT JOIN"):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=Ps,e=Ps,(n=function(){var t,e,n,s;t=Ps,"inner"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(Te));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&(s=si())!==u?e=n=[n,s]:(Ps=e,e=u),e===u&&(e=null),e!==u&&(n=ua())!==u?(t,t=e="INNER JOIN"):(Ps=t,t=u)),t}function Uu(){var r,t,e,n,s,o,a,i;return r=Ps,(t=Lo())!==u?(e=Ps,(n=si())!==u&&(s=qa())!==u&&(o=si())!==u&&(a=Lo())!==u?e=n=[n,s,o,a]:(Ps=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Ps=r,r=u)):(Ps=r,r=u),r===u&&(r=Ps,(t=Ai())!==u&&(r,(i=t).db=null,i.table=i.name,t=i),r=t),r}function Mu(){var r,t;return r=Ps,sa()!==u&&si()!==u&&(t=Ju())!==u?(r,r=t):(Ps=r,r=u),r}function ku(){var t,e;return t=Ps,function(){var t,e,n,s;t=Ps,"where"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(Oe));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}()!==u&&si()!==u&&(e=Ju())!==u?(t,t=e):(Ps=t,t=u),t}function Du(){var t,e;return t=Ps,function(){var t,e,n,s;t=Ps,"order"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(Ue));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}()!==u&&si()!==u&&ca()!==u&&si()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=$u())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=$u())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=$u())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,t=c(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())!==u?(t,t=e):(Ps=t,t=u),t}function $u(){var t,e,n;return t=Ps,(e=Qu())!==u&&si()!==u?((n=fa())===u&&(n=function(){var t,e,n,s;t=Ps,"asc"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs($e));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="ASC"):(Ps=t,t=u)):(Ps=t,t=u);return t}()),n===u&&(n=null),n!==u?(t,t=e=function(r,t){const e={expr:r,type:"ASC"};return"DESC"===t&&(e.type="DESC"),e}(e,n)):(Ps=t,t=u)):(Ps=t,t=u),t}function Pu(){var r;return(r=Mo())===u&&(r=To()),r}function Fu(){var t,e,n,s,o,a;return t=Ps,function(){var t,e,n,s;t=Ps,"limit"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(ke));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}()!==u&&si()!==u&&(e=Pu())!==u&&si()!==u?(n=Ps,(s=Za())===u&&(s=function(){var t,e,n,s;t=Ps,"offset"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(De));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="OFFSET"):(Ps=t,t=u)):(Ps=t,t=u);return t}()),s!==u&&(o=si())!==u&&(a=Pu())!==u?n=s=[s,o,a]:(Ps=n,n=u),n===u&&(n=null),n!==u?(t,t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(Ps=t,t=u)):(Ps=t,t=u),t}function Gu(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=Hu())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=Hu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=Hu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,r=t=c(t,e)):(Ps=r,r=u)}else Ps=r,r=u;return r}function Hu(){var t,e,n,s,o,a,i,l,c;return t=Ps,e=Ps,(n=Lo())!==u&&(s=si())!==u&&(o=qa())!==u?e=n=[n,s,o]:(Ps=e,e=u),e===u&&(e=null),e!==u&&(n=si())!==u&&(s=po())!==u&&(o=si())!==u?(61===r.charCodeAt(Ps)?(a="=",Ps++):(a=u,0===js&&Vs(_r)),a!==u&&si()!==u&&(i=io())!==u?(t,t=e={column:s,value:i,table:(c=e)&&c[0]}):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=Ps,e=Ps,(n=Lo())!==u&&(s=si())!==u&&(o=qa())!==u?e=n=[n,s,o]:(Ps=e,e=u),e===u&&(e=null),e!==u&&(n=si())!==u&&(s=po())!==u&&(o=si())!==u?(61===r.charCodeAt(Ps)?(a="=",Ps++):(a=u,0===js&&Vs(_r)),a!==u&&si()!==u&&(i=aa())!==u&&si()!==u&&Qa()!==u&&si()!==u&&(l=vo())!==u&&si()!==u&&Ja()!==u?(t,t=e=function(r,t,e){return{column:t,value:e,table:r&&r[0],keyword:"values"}}(e,s,l)):(Ps=t,t=u)):(Ps=t,t=u)),t}function ju(){var r;return(r=function(){var r,t;r=Ps,aa()!==u&&si()!==u&&(t=function(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=Xu())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=Xu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=Xu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,t=c(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())!==u?(r,r=t):(Ps=r,r=u);return r}())===u&&(r=Eu()),r}function Yu(){var r,t,e,n,s,o,a,i,l;if(r=Ps,zo()!==u)if(si()!==u)if((t=Qa())!==u)if(si()!==u)if((e=Eo())!==u){for(n=[],s=Ps,(o=si())!==u&&(a=Za())!==u&&(i=si())!==u&&(l=Eo())!==u?s=o=[o,a,i,l]:(Ps=s,s=u);s!==u;)n.push(s),s=Ps,(o=si())!==u&&(a=Za())!==u&&(i=si())!==u&&(l=Eo())!==u?s=o=[o,a,i,l]:(Ps=s,s=u);n!==u&&(s=si())!==u&&(o=Ja())!==u?(r,r=Si(e,n)):(Ps=r,r=u)}else Ps=r,r=u;else Ps=r,r=u;else Ps=r,r=u;else Ps=r,r=u;else Ps=r,r=u;return r===u&&(r=Ps,zo()!==u&&si()!==u&&(t=Xu())!==u?(r,r=t):(Ps=r,r=u)),r}function Bu(){var t,e,n;return t=Ps,sa()!==u&&si()!==u?("duplicate"===r.substr(Ps,9).toLowerCase()?(e=r.substr(Ps,9),Ps+=9):(e=u,0===js&&Vs(Or)),e!==u&&si()!==u&&Va()!==u&&si()!==u&&Wo()!==u&&si()!==u&&(n=Gu())!==u?(t,t={keyword:"on duplicate key update",set:n}):(Ps=t,t=u)):(Ps=t,t=u),t}function Wu(){var t,e;return t=Ps,(e=function(){var t,e,n,s;t=Ps,"insert"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(ie));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&(t,e="insert"),(t=e)===u&&(t=Ps,(e=Ko())!==u&&(t,e="replace"),t=e),t}function Xu(){var r,t;return r=Ps,Qa()!==u&&si()!==u&&(t=Vu())!==u&&si()!==u&&Ja()!==u?(r,r=t):(Ps=r,r=u),r}function Vu(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=Qu())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=Qu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=Qu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,r=t=function(r,t){const e={type:"expr_list"};return e.value=Si(r,t),e}(t,e)):(Ps=r,r=u)}else Ps=r,r=u;return r}function Ku(){var t,e,n;return t=Ps,function(){var t,e,n,s;t=Ps,"interval"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(Pn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="INTERVAL"):(Ps=t,t=u)):(Ps=t,t=u);return t}()!==u&&si()!==u&&(e=Qu())!==u&&si()!==u&&(n=function(){var t;(t=function(){var t,e,n,s;t=Ps,"year"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(Fn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="YEAR"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Ps,"month"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(Gn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="MONTH"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Ps,"day"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(Hn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="DAY"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Ps,"hour"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(jn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="HOUR"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Ps,"minute"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(Yn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="MINUTE"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Ps,"second"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(Bn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="SECOND"):(Ps=t,t=u)):(Ps=t,t=u);return t}());return t}())!==u?(t,t={type:"interval",expr:e,unit:n.toLowerCase()}):(Ps=t,t=u),t}function qu(){var r,t,e,n,s,o;if(r=Ps,(t=Zu())!==u)if(si()!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Zu())!==u?n=s=[s,o]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Zu())!==u?n=s=[s,o]:(Ps=n,n=u);e!==u?(r,r=t=i(t,e)):(Ps=r,r=u)}else Ps=r,r=u;else Ps=r,r=u;return r}function Zu(){var t,e,n;return t=Ps,function(){var t,e,n,s;t=Ps,"when"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(sn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}()!==u&&si()!==u&&(e=Ju())!==u&&si()!==u&&function(){var t,e,n,s;t=Ps,"then"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(un));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}()!==u&&si()!==u&&(n=Qu())!==u?(t,t={type:"when",cond:e,result:n}):(Ps=t,t=u),t}function zu(){var t,e;return t=Ps,function(){var t,e,n,s;t=Ps,"else"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(on));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}()!==u&&si()!==u&&(e=Qu())!==u?(t,t={type:"else",result:e}):(Ps=t,t=u),t}function Qu(){var r;return(r=function(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=bo())!==u){if(e=[],n=Ps,(s=si())!==u&&(o=ni())!==u&&(a=si())!==u&&(i=bo())!==u?n=s=[s,o,a,i]:(Ps=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=ni())!==u&&(a=si())!==u&&(i=bo())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);else e=u;e!==u&&(n=si())!==u?((s=no())===u&&(s=null),s!==u?(r,t=function(r,t,e){const n=_i(r,t);return null===e?n:"arithmetic"===e.type?_i(n,e.tail):Ni(e.op,n,e.right)}(t,e,s),r=t):(Ps=r,r=u)):(Ps=r,r=u)}else Ps=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=ro())!==u){for(e=[],n=Ps,(s=ui())!==u&&(o=ha())!==u&&(a=si())!==u&&(i=ro())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=ui())!==u&&(o=ha())!==u&&(a=si())!==u&&(i=ro())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,t=gr(t,e),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o;if(r=Ps,(t=lo())!==u){if(e=[],n=Ps,(s=si())!==u&&(o=bo())!==u?n=s=[s,o]:(Ps=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=bo())!==u?n=s=[s,o]:(Ps=n,n=u);else e=u;e!==u?(r,t=Ii(t,e[0][1]),r=t):(Ps=r,r=u)}else Ps=r,r=u;return r}())===u&&(r=Js()),r}function Ju(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=Qu())!==u){for(e=[],n=Ps,(s=si())!==u?((o=Aa())===u&&(o=ha())===u&&(o=Za()),o!==u&&(a=si())!==u&&(i=Qu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u)):(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u?((o=Aa())===u&&(o=ha())===u&&(o=Za()),o!==u&&(a=si())!==u&&(i=Qu())!==u?n=s=[s,o,a,i]:(Ps=n,n=u)):(Ps=n,n=u);e!==u?(r,r=t=function(r,t){const e=t.length;let n=r,s="";for(let r=0;r<e;++r)","===t[r][1]?(s=",",Array.isArray(n)||(n=[n]),n.push(t[r][3])):n=Ni(t[r][1],n,t[r][3]);if(","===s){const r={type:"expr_list"};return r.value=n,r}return n}(t,e)):(Ps=r,r=u)}else Ps=r,r=u;return r}function ro(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=to())!==u){for(e=[],n=Ps,(s=ui())!==u&&(o=Aa())!==u&&(a=si())!==u&&(i=to())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=ui())!==u&&(o=Aa())!==u&&(a=si())!==u&&(i=to())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,r=t=gr(t,e)):(Ps=r,r=u)}else Ps=r,r=u;return r}function to(){var t,e,n,s,o;return(t=eo())===u&&(t=function(){var r,t,e;r=Ps,(t=function(){var r,t,e,n,s;r=Ps,t=Ps,(e=Ea())!==u&&(n=si())!==u&&(s=wa())!==u?t=e=[e,n,s]:(Ps=t,t=u);t!==u&&(r,t=Ur(t));(r=t)===u&&(r=wa());return r}())!==u&&si()!==u&&Qa()!==u&&si()!==u&&(e=Js())!==u&&si()!==u&&Ja()!==u?(r,n=t,(s=e).parentheses=!0,t=Ii(n,s),r=t):(Ps=r,r=u);var n,s;return r}())===u&&(t=Ps,(e=Ea())===u&&(e=Ps,33===r.charCodeAt(Ps)?(n="!",Ps++):(n=u,0===js&&Vs(xr)),n!==u?(s=Ps,js++,61===r.charCodeAt(Ps)?(o="=",Ps++):(o=u,0===js&&Vs(_r)),js--,o===u?s=void 0:(Ps=s,s=u),s!==u?e=n=[n,s]:(Ps=e,e=u)):(Ps=e,e=u)),e!==u&&(n=si())!==u&&(s=to())!==u?(t,t=e=Ii("NOT",s)):(Ps=t,t=u)),t}function eo(){var r,t,e,n,s;return r=Ps,(t=io())!==u&&si()!==u?((e=no())===u&&(e=null),e!==u?(r,n=t,r=t=null===(s=e)?n:"arithmetic"===s.type?_i(n,s.tail):Ni(s.op,n,s.right)):(Ps=r,r=u)):(Ps=r,r=u),r===u&&(r=Oo())===u&&(r=vo()),r}function no(){var t;return(t=function(){var r,t,e,n,s,o,a;r=Ps,t=[],e=Ps,(n=si())!==u&&(s=so())!==u&&(o=si())!==u&&(a=io())!==u?e=n=[n,s,o,a]:(Ps=e,e=u);if(e!==u)for(;e!==u;)t.push(e),e=Ps,(n=si())!==u&&(s=so())!==u&&(o=si())!==u&&(a=io())!==u?e=n=[n,s,o,a]:(Ps=e,e=u);else t=u;t!==u&&(r,t={type:"arithmetic",tail:t});return r=t}())===u&&(t=ao())===u&&(t=function(){var r,t,e,n;r=Ps,(t=function(){var r,t,e,n,s;r=Ps,t=Ps,(e=Ea())!==u&&(n=si())!==u&&(s=La())!==u?t=e=[e,n,s]:(Ps=t,t=u);t!==u&&(r,t=Ur(t));(r=t)===u&&(r=La());return r}())!==u&&si()!==u&&(e=io())!==u&&si()!==u&&Aa()!==u&&si()!==u&&(n=io())!==u?(r,r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Ps=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s;r=Ps,(t=da())!==u&&(e=si())!==u&&(n=io())!==u?(r,r=t={op:"IS",right:n}):(Ps=r,r=u);r===u&&(r=Ps,t=Ps,(e=da())!==u&&(n=si())!==u&&(s=Ea())!==u?t=e=[e,n,s]:(Ps=t,t=u),t!==u&&(e=si())!==u&&(n=io())!==u?(r,t=function(r){return{op:"IS NOT",right:r}}(n),r=t):(Ps=r,r=u));return r}())===u&&(t=oo())===u&&(t=function(){var t,e,n,s;t=Ps,(e=function(){var t,e,n;t=Ps,(e=Ea())===u&&(e=null);e!==u&&si()!==u?((n=function(){var t,e,n,s;t=Ps,"regexp"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(Ve));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="REGEXP"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Ps,"rlike"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(Xe));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="RLIKE"):(Ps=t,t=u)):(Ps=t,t=u);return t}()),n!==u?(t,o=n,t=e=(s=e)?`${s} ${o}`:o):(Ps=t,t=u)):(Ps=t,t=u);var s,o;return t}())!==u&&si()!==u?("binary"===r.substr(Ps,6).toLowerCase()?(n=r.substr(Ps,6),Ps+=6):(n=u,0===js&&Vs(vr)),n===u&&(n=null),n!==u&&si()!==u?((s=No())===u&&(s=Oo())===u&&(s=vo()),s!==u?(t,o=e,t=e={op:(a=n)?`${o} ${a}`:o,right:s}):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u);var o,a;t===u&&(t=Ps,"glob"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(Gr)),e!==u&&si()!==u&&(n=Oo())!==u?(t,e=function(r){return{op:"GLOB",right:r}}(n),t=e):(Ps=t,t=u));return t}()),t}function so(){var t;return">="===r.substr(Ps,2)?(t=">=",Ps+=2):(t=u,0===js&&Vs(Mr)),t===u&&(62===r.charCodeAt(Ps)?(t=">",Ps++):(t=u,0===js&&Vs(kr)),t===u&&("<="===r.substr(Ps,2)?(t="<=",Ps+=2):(t=u,0===js&&Vs(Dr)),t===u&&("<>"===r.substr(Ps,2)?(t="<>",Ps+=2):(t=u,0===js&&Vs($r)),t===u&&(60===r.charCodeAt(Ps)?(t="<",Ps++):(t=u,0===js&&Vs(Pr)),t===u&&(61===r.charCodeAt(Ps)?(t="=",Ps++):(t=u,0===js&&Vs(_r)),t===u&&("!="===r.substr(Ps,2)?(t="!=",Ps+=2):(t=u,0===js&&Vs(Fr)))))))),t}function uo(){var r,t,e,n,s;return r=Ps,t=Ps,(e=Ea())!==u&&(n=si())!==u&&(s=Ca())!==u?t=e=[e,n,s]:(Ps=t,t=u),t!==u&&(r,t=Ur(t)),(r=t)===u&&(r=Ca()),r}function oo(){var r,t,e;return r=Ps,(t=function(){var r,t,e,n,s;return r=Ps,t=Ps,(e=Ea())!==u&&(n=si())!==u&&(s=pa())!==u?t=e=[e,n,s]:(Ps=t,t=u),t!==u&&(r,t=Ur(t)),(r=t)===u&&(r=pa()),r}())!==u&&si()!==u?((e=So())===u&&(e=eo()),e!==u?(r,r=t={op:t,right:e}):(Ps=r,r=u)):(Ps=r,r=u),r}function ao(){var r,t,e,n;return r=Ps,(t=uo())!==u&&si()!==u&&(e=Qa())!==u&&si()!==u&&(n=Vu())!==u&&si()!==u&&Ja()!==u?(r,r=t={op:t,right:n}):(Ps=r,r=u),r===u&&(r=Ps,(t=uo())!==u&&si()!==u?((e=Ai())===u&&(e=Oo()),e!==u?(r,r=t=function(r,t){return{op:r,right:t}}(t,e)):(Ps=r,r=u)):(Ps=r,r=u)),r}function io(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=co())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=lo())!==u&&(a=si())!==u&&(i=co())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=lo())!==u&&(a=si())!==u&&(i=co())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,r=t=gr(t,e)):(Ps=r,r=u)}else Ps=r,r=u;return r}function lo(){var t;return 43===r.charCodeAt(Ps)?(t="+",Ps++):(t=u,0===js&&Vs(Hr)),t===u&&(45===r.charCodeAt(Ps)?(t="-",Ps++):(t=u,0===js&&Vs(jr))),t}function co(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=bo())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=fo())!==u&&(a=si())!==u&&(i=bo())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=fo())!==u&&(a=si())!==u&&(i=bo())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,r=t=_i(t,e)):(Ps=r,r=u)}else Ps=r,r=u;return r}function fo(){var t;return 42===r.charCodeAt(Ps)?(t="*",Ps++):(t=u,0===js&&Vs(Yr)),t===u&&(47===r.charCodeAt(Ps)?(t="/",Ps++):(t=u,0===js&&Vs(Br)),t===u&&(37===r.charCodeAt(Ps)?(t="%",Ps++):(t=u,0===js&&Vs(Wr)),t===u&&("||"===r.substr(Ps,2)?(t="||",Ps+=2):(t=u,0===js&&Vs(Xr))))),t}function bo(){var t,e,n,s;return(t=function(){var t,e,n,s,o,a,i;t=Ps,(e=ma())!==u&&si()!==u&&Qa()!==u&&si()!==u&&(n=Qu())!==u&&si()!==u&&ra()!==u&&si()!==u&&(s=yi())!==u&&si()!==u&&(o=Ja())!==u?(t,l=n,c=s,e={type:"cast",keyword:e.toLowerCase(),expr:l,symbol:"as",target:c},t=e):(Ps=t,t=u);var l,c;t===u&&(t=Ps,(e=ma())!==u&&si()!==u&&Qa()!==u&&si()!==u&&(n=Qu())!==u&&si()!==u&&ra()!==u&&si()!==u&&(s=Sa())!==u&&si()!==u&&(o=Qa())!==u&&si()!==u&&(a=ko())!==u&&si()!==u&&Ja()!==u&&si()!==u&&(i=Ja())!==u?(t,e=function(r,t,e){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+")"}}}(e,n,a),t=e):(Ps=t,t=u),t===u&&(t=Ps,(e=ma())!==u&&si()!==u&&Qa()!==u&&si()!==u&&(n=Qu())!==u&&si()!==u&&ra()!==u&&si()!==u&&(s=Sa())!==u&&si()!==u&&(o=Qa())!==u&&si()!==u&&(a=ko())!==u&&si()!==u&&Za()!==u&&si()!==u&&(i=ko())!==u&&si()!==u&&Ja()!==u&&si()!==u&&Ja()!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+", "+n+")"}}}(e,n,a,i),t=e):(Ps=t,t=u),t===u&&(t=Ps,(e=ma())!==u&&si()!==u&&Qa()!==u&&si()!==u&&(n=Qu())!==u&&si()!==u&&ra()!==u&&si()!==u&&(s=function(){var t;(t=function(){var t,e,n,s;t=Ps,"signed"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(Cn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="SIGNED"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=_a());return t}())!==u&&si()!==u?((o=ga())===u&&(o=null),o!==u&&si()!==u&&(a=Ja())!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:e+(n?" "+n:"")}}}(e,n,s,o),t=e):(Ps=t,t=u)):(Ps=t,t=u))));return t}())===u&&(t=So())===u&&(t=function(){var t;(t=function(){var t,e,n,s;t=Ps,(e=function(){var t,e,n,s;t=Ps,"count"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(ze));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="COUNT"):(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&si()!==u&&Qa()!==u&&si()!==u&&(n=function(){var t,e,n,s,o;t=Ps,(e=function(){var t,e;t=Ps,42===r.charCodeAt(Ps)?(e="*",Ps++):(e=u,0===js&&Vs(Yr));e!==u&&(t,e={type:"star",value:"*"});return t=e}())!==u&&(t,e={expr:e});(t=e)===u&&(t=Ps,(e=va())===u&&(e=null),e!==u&&si()!==u&&(n=Qa())!==u&&si()!==u&&(s=Qu())!==u&&si()!==u&&Ja()!==u&&si()!==u?((o=Du())===u&&(o=null),o!==u?(t,t=e={distinct:e,expr:s,orderby:o,parentheses:!0}):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=Ps,(e=va())===u&&(e=null),e!==u&&si()!==u&&(n=Qu())!==u&&si()!==u?((s=Du())===u&&(s=null),s!==u?(t,e=function(r,t,e){return{distinct:r,expr:t,orderby:e,parentheses:!1}}(e,n,s),t=e):(Ps=t,t=u)):(Ps=t,t=u)));return t}())!==u&&si()!==u&&Ja()!==u&&si()!==u?((s=Io())===u&&(s=null),s!==u?(t,t=e={type:"aggr_func",name:e,args:n,over:s}):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=function(){var t,e,n;t=Ps,(e=function(){var t;(t=function(){var t,e,n,s;t=Ps,"sum"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(rn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="SUM"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Ps,"max"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(Qe));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="MAX"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Ps,"min"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(Je));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="MIN"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Ps,"avg"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(tn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="AVG"):(Ps=t,t=u)):(Ps=t,t=u);return t}());return t}())!==u&&si()!==u&&Qa()!==u&&si()!==u&&(n=io())!==u&&si()!==u&&Ja()!==u?(t,t=e={type:"aggr_func",name:e,args:{expr:n}}):(Ps=t,t=u);return t}());return t}())===u&&(t=No())===u&&(t=function(){var r,t,e,n,s,o,a,i;return r=Ps,ya()!==u&&si()!==u&&(t=qu())!==u&&si()!==u?((e=zu())===u&&(e=null),e!==u&&si()!==u&&(n=Ta())!==u&&si()!==u?((s=ya())===u&&(s=null),s!==u?(r,a=t,(i=e)&&a.push(i),r={type:"case",expr:null,args:a}):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u),r===u&&(r=Ps,ya()!==u&&si()!==u&&(t=Qu())!==u&&si()!==u&&(e=qu())!==u&&si()!==u?((n=zu())===u&&(n=null),n!==u&&si()!==u&&(s=Ta())!==u&&si()!==u?((o=ya())===u&&(o=null),o!==u?(r,r=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(t,e,n)):(Ps=r,r=u)):(Ps=r,r=u)):(Ps=r,r=u)),r}())===u&&(t=Ku())===u&&(t=vo())===u&&(t=To())===u&&(t=Ps,Qa()!==u&&(e=si())!==u&&(n=Ju())!==u&&si()!==u&&Ja()!==u?(t,(s=n).parentheses=!0,t=s):(Ps=t,t=u),t===u&&(t=Ai())===u&&(t=Ps,si()!==u?(63===r.charCodeAt(Ps)?(e="?",Ps++):(e=u,0===js&&Vs(Vr)),e!==u?(t,t={type:"origin",value:e}):(Ps=t,t=u)):(Ps=t,t=u))),t}function vo(){var r,t,e,n,s,o,a,i,l,c,f;if(r=Ps,t=Ps,(e=Lo())!==u&&(n=si())!==u&&(s=qa())!==u&&(o=si())!==u?t=e=[e,n,s,o]:(Ps=t,t=u),t===u&&(t=null),t!==u)if((e=po())!==u)if((n=si())!==u){if(s=[],o=Ps,(a=ei())===u&&(a=ti()),a!==u&&(i=si())!==u?((l=Oo())===u&&(l=Mo()),l!==u?o=a=[a,i,l]:(Ps=o,o=u)):(Ps=o,o=u),o!==u)for(;o!==u;)s.push(o),o=Ps,(a=ei())===u&&(a=ti()),a!==u&&(i=si())!==u?((l=Oo())===u&&(l=Mo()),l!==u?o=a=[a,i,l]:(Ps=o,o=u)):(Ps=o,o=u);else s=u;s!==u&&(o=si())!==u?((a=su())===u&&(a=null),a!==u?(r,r=t=function(r,t,e,n){const s=r&&r[0]||null;return Mi.add(`select::${s}::${t}`),{type:"column_ref",table:s,column:t,collate:n,arrows:e.map(r=>r[0]),properties:e.map(r=>r[2])}}(t,e,s,a)):(Ps=r,r=u)):(Ps=r,r=u)}else Ps=r,r=u;else Ps=r,r=u;else Ps=r,r=u;return r===u&&(r=Ps,(t=Lo())!==u&&(e=si())!==u&&(n=qa())!==u&&(s=si())!==u&&(o=function(){var r,t;r=Ps,(t=wo())!==u&&(r,t=t);(r=t)===u&&(r=Co());return r}())!==u?(r,c=t,f=o,Mi.add(`select::${c}::${f}`),r=t={type:"column_ref",table:c,column:f}):(Ps=r,r=u),r===u&&(r=Ps,(t=po())!==u&&(r,t=function(r){return Mi.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t)),r}function Lo(){var r,t;return r=Ps,(t=Eo())!==u?(Ps,(Kr(t)?u:void 0)!==u?(r,r=t=t):(Ps=r,r=u)):(Ps=r,r=u),r===u&&(r=Ps,(t=Co())!==u&&(r,t=t),r=t),r}function Co(){var t;return(t=function(){var t,e,n,s;t=Ps,34===r.charCodeAt(Ps)?(e='"',Ps++):(e=u,0===js&&Vs(qr));if(e!==u){if(n=[],Zr.test(r.charAt(Ps))?(s=r.charAt(Ps),Ps++):(s=u,0===js&&Vs(zr)),s!==u)for(;s!==u;)n.push(s),Zr.test(r.charAt(Ps))?(s=r.charAt(Ps),Ps++):(s=u,0===js&&Vs(zr));else n=u;n!==u?(34===r.charCodeAt(Ps)?(s='"',Ps++):(s=u,0===js&&Vs(qr)),s!==u?(t,e=Qr(n),t=e):(Ps=t,t=u)):(Ps=t,t=u)}else Ps=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=Ps,39===r.charCodeAt(Ps)?(e="'",Ps++):(e=u,0===js&&Vs(sr));if(e!==u){if(n=[],Jr.test(r.charAt(Ps))?(s=r.charAt(Ps),Ps++):(s=u,0===js&&Vs(rt)),s!==u)for(;s!==u;)n.push(s),Jr.test(r.charAt(Ps))?(s=r.charAt(Ps),Ps++):(s=u,0===js&&Vs(rt));else n=u;n!==u?(39===r.charCodeAt(Ps)?(s="'",Ps++):(s=u,0===js&&Vs(sr)),s!==u?(t,e=Qr(n),t=e):(Ps=t,t=u)):(Ps=t,t=u)}else Ps=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=Ps,96===r.charCodeAt(Ps)?(e="`",Ps++):(e=u,0===js&&Vs(tt));if(e!==u){if(n=[],et.test(r.charAt(Ps))?(s=r.charAt(Ps),Ps++):(s=u,0===js&&Vs(nt)),s!==u)for(;s!==u;)n.push(s),et.test(r.charAt(Ps))?(s=r.charAt(Ps),Ps++):(s=u,0===js&&Vs(nt));else n=u;n!==u?(96===r.charCodeAt(Ps)?(s="`",Ps++):(s=u,0===js&&Vs(tt)),s!==u?(t,e=Qr(n),t=e):(Ps=t,t=u)):(Ps=t,t=u)}else Ps=t,t=u;return t}()),t}function po(){var r,t;return r=Ps,(t=wo())!==u?(Ps,(Kr(t)?u:void 0)!==u?(r,r=t=t):(Ps=r,r=u)):(Ps=r,r=u),r===u&&(r=Co()),r}function wo(){var r,t,e,n;if(r=Ps,(t=Ao())!==u){for(e=[],n=yo();n!==u;)e.push(n),n=yo();e!==u?(r,r=t=st(t,e)):(Ps=r,r=u)}else Ps=r,r=u;return r}function Eo(){var r,t,e,n;if(r=Ps,(t=Ao())!==u){for(e=[],n=ho();n!==u;)e.push(n),n=ho();e!==u?(r,r=t=st(t,e)):(Ps=r,r=u)}else Ps=r,r=u;return r}function Ao(){var t;return ut.test(r.charAt(Ps))?(t=r.charAt(Ps),Ps++):(t=u,0===js&&Vs(ot)),t}function ho(){var t;return at.test(r.charAt(Ps))?(t=r.charAt(Ps),Ps++):(t=u,0===js&&Vs(it)),t}function yo(){var t;return lt.test(r.charAt(Ps))?(t=r.charAt(Ps),Ps++):(t=u,0===js&&Vs(ct)),t}function To(){var t,e,n,s;return t=Ps,e=Ps,58===r.charCodeAt(Ps)?(n=":",Ps++):(n=u,0===js&&Vs(ft)),n!==u&&(s=Eo())!==u?e=n=[n,s]:(Ps=e,e=u),e!==u&&(t,e={type:"param",value:e[1]}),t=e}function mo(){var r,t,e;return r=Ps,sa()!==u&&si()!==u&&Wo()!==u&&si()!==u&&(t=Ha())!==u&&si()!==u&&Qa()!==u&&si()!==u?((e=Vu())===u&&(e=null),e!==u&&si()!==u&&Ja()!==u?(r,r={type:"on update",keyword:t,parentheses:!0,expr:e}):(Ps=r,r=u)):(Ps=r,r=u),r===u&&(r=Ps,sa()!==u&&si()!==u&&Wo()!==u&&si()!==u&&(t=Ha())!==u?(r,r=function(r){return{type:"on update",keyword:r}}(t)):(Ps=r,r=u)),r}function Io(){var t,e,n;return t=Ps,function(){var t,e,n,s;t=Ps,"over"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(Ne));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}()!==u&&si()!==u&&Qa()!==u&&si()!==u&&zo()!==u&&si()!==u&&ca()!==u&&si()!==u&&(e=hu())!==u&&si()!==u?((n=Du())===u&&(n=null),n!==u&&si()!==u&&Ja()!==u?(t,t={partitionby:e,orderby:n}):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=mo()),t}function No(){var t,e,n,s,o,a,i,l;return t=Ps,(e=pi())!==u&&si()!==u&&(n=Qa())!==u&&si()!==u?((s=Ju())===u&&(s=null),s!==u&&si()!==u&&Ja()!==u&&si()!==u?((o=Io())===u&&(o=null),o!==u?(t,a=e,l=o,(i=s)&&"expr_list"!==i.type&&(i={type:"expr_list",value:[i]}),t=e={type:"function",name:a,args:i||{type:"expr_list",value:[]},over:l}):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=Ps,(e=function(){var t;(t=Ro())===u&&(t=function(){var t,e,n,s;t=Ps,"current_user"===r.substr(Ps,12).toLowerCase()?(e=r.substr(Ps,12),Ps+=12):(e=u,0===js&&Vs(Vn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="CURRENT_USER"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Ps,"user"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(Dn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="USER"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Ps,"session_user"===r.substr(Ps,12).toLowerCase()?(e=r.substr(Ps,12),Ps+=12):(e=u,0===js&&Vs(Kn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="SESSION_USER"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Ps,"system_user"===r.substr(Ps,11).toLowerCase()?(e=r.substr(Ps,11),Ps+=11):(e=u,0===js&&Vs(qn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="SYSTEM_USER"):(Ps=t,t=u)):(Ps=t,t=u);return t}());return t}())!==u&&si()!==u&&(n=Qa())!==u&&si()!==u?((s=Vu())===u&&(s=null),s!==u&&si()!==u&&Ja()!==u&&si()!==u?((o=Io())===u&&(o=null),o!==u?(t,t=e=function(r,t,e){return{type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,s,o)):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=Ps,(e=Ro())!==u&&si()!==u?((n=mo())===u&&(n=null),n!==u?(t,t=e={type:"function",name:e,over:n}):(Ps=t,t=u)):(Ps=t,t=u))),t}function Ro(){var t;return(t=function(){var t,e,n,s;t=Ps,"current_date"===r.substr(Ps,12).toLowerCase()?(e=r.substr(Ps,12),Ps+=12):(e=u,0===js&&Vs($n));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="CURRENT_DATE"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Ps,"current_time"===r.substr(Ps,12).toLowerCase()?(e=r.substr(Ps,12),Ps+=12):(e=u,0===js&&Vs(Wn));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="CURRENT_TIME"):(Ps=t,t=u)):(Ps=t,t=u);return t}())===u&&(t=Ha()),t}function So(){var t,e,n,s,o,a,i,l,c;return t=Ps,"binary"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(vr)),e===u&&(e=null),e!==u&&si()!==u&&(n=Oo())!==u?(s=Ps,(o=si())!==u&&(a=su())!==u?s=o=[o,a]:(Ps=s,s=u),s===u&&(s=null),s!==u?(t,l=n,c=s,(i=e)&&(l.prefix=i.toLowerCase()),c&&(l.suffix={collate:c[1]}),t=e=l):(Ps=t,t=u)):(Ps=t,t=u),t===u&&(t=Mo())===u&&(t=function(){var t,e;t=Ps,(e=function(){var t,e,n,s;t=Ps,"true"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(Qt));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!0});(t=e)===u&&(t=Ps,(e=function(){var t,e,n,s;t=Ps,"false"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(re));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!1}),t=e);return t}())===u&&(t=_o())===u&&(t=function(){var t,e,n,s,o,a;t=Ps,(e=Fa())===u&&(e=$a())===u&&(e=Ga())===u&&(e=Pa());if(e!==u)if(si()!==u){if(n=Ps,39===r.charCodeAt(Ps)?(s="'",Ps++):(s=u,0===js&&Vs(sr)),s!==u){for(o=[],a=xo();a!==u;)o.push(a),a=xo();o!==u?(39===r.charCodeAt(Ps)?(a="'",Ps++):(a=u,0===js&&Vs(sr)),a!==u?n=s=[s,o,a]:(Ps=n,n=u)):(Ps=n,n=u)}else Ps=n,n=u;n!==u?(t,e=wt(e,n),t=e):(Ps=t,t=u)}else Ps=t,t=u;else Ps=t,t=u;if(t===u)if(t=Ps,(e=Fa())===u&&(e=$a())===u&&(e=Ga())===u&&(e=Pa()),e!==u)if(si()!==u){if(n=Ps,34===r.charCodeAt(Ps)?(s='"',Ps++):(s=u,0===js&&Vs(qr)),s!==u){for(o=[],a=go();a!==u;)o.push(a),a=go();o!==u?(34===r.charCodeAt(Ps)?(a='"',Ps++):(a=u,0===js&&Vs(qr)),a!==u?n=s=[s,o,a]:(Ps=n,n=u)):(Ps=n,n=u)}else Ps=n,n=u;n!==u?(t,e=wt(e,n),t=e):(Ps=t,t=u)}else Ps=t,t=u;else Ps=t,t=u;return t}()),t}function _o(){var t,e;return t=Ps,(e=function(){var t,e,n,s;t=Ps,"null"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(Zt));e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u);return t}())!==u&&(t,e={type:"null",value:null}),t=e}function Oo(){var t,e,n,s,o,a,i,l;if(t=Ps,"_binary"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(bt)),e===u&&(e=null),e!==u)if((n=si())!==u)if("x"===r.substr(Ps,1).toLowerCase()?(s=r.charAt(Ps),Ps++):(s=u,0===js&&Vs(vt)),s!==u){if(o=Ps,39===r.charCodeAt(Ps)?(a="'",Ps++):(a=u,0===js&&Vs(sr)),a!==u){for(i=[],Lt.test(r.charAt(Ps))?(l=r.charAt(Ps),Ps++):(l=u,0===js&&Vs(Ct));l!==u;)i.push(l),Lt.test(r.charAt(Ps))?(l=r.charAt(Ps),Ps++):(l=u,0===js&&Vs(Ct));i!==u?(39===r.charCodeAt(Ps)?(l="'",Ps++):(l=u,0===js&&Vs(sr)),l!==u?o=a=[a,i,l]:(Ps=o,o=u)):(Ps=o,o=u)}else Ps=o,o=u;o!==u?(t,t=e={type:"hex_string",prefix:e,value:o[1].join("")}):(Ps=t,t=u)}else Ps=t,t=u;else Ps=t,t=u;else Ps=t,t=u;if(t===u){if(t=Ps,"_binary"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(bt)),e===u&&(e=null),e!==u)if((n=si())!==u)if("b"===r.substr(Ps,1).toLowerCase()?(s=r.charAt(Ps),Ps++):(s=u,0===js&&Vs(dt)),s!==u){if(o=Ps,39===r.charCodeAt(Ps)?(a="'",Ps++):(a=u,0===js&&Vs(sr)),a!==u){for(i=[],Lt.test(r.charAt(Ps))?(l=r.charAt(Ps),Ps++):(l=u,0===js&&Vs(Ct));l!==u;)i.push(l),Lt.test(r.charAt(Ps))?(l=r.charAt(Ps),Ps++):(l=u,0===js&&Vs(Ct));i!==u?(39===r.charCodeAt(Ps)?(l="'",Ps++):(l=u,0===js&&Vs(sr)),l!==u?o=a=[a,i,l]:(Ps=o,o=u)):(Ps=o,o=u)}else Ps=o,o=u;o!==u?(t,t=e=function(r,t,e){return{type:"bit_string",prefix:r,value:e[1].join("")}}(e,0,o)):(Ps=t,t=u)}else Ps=t,t=u;else Ps=t,t=u;else Ps=t,t=u;if(t===u){if(t=Ps,"_binary"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(bt)),e===u&&(e=null),e!==u)if((n=si())!==u)if("0x"===r.substr(Ps,2)?(s="0x",Ps+=2):(s=u,0===js&&Vs(pt)),s!==u){for(o=[],Lt.test(r.charAt(Ps))?(a=r.charAt(Ps),Ps++):(a=u,0===js&&Vs(Ct));a!==u;)o.push(a),Lt.test(r.charAt(Ps))?(a=r.charAt(Ps),Ps++):(a=u,0===js&&Vs(Ct));o!==u?(t,t=e=function(r,t,e){return{type:"full_hex_string",prefix:r,value:e.join("")}}(e,0,o)):(Ps=t,t=u)}else Ps=t,t=u;else Ps=t,t=u;else Ps=t,t=u;if(t===u){if(t=Ps,e=Ps,39===r.charCodeAt(Ps)?(n="'",Ps++):(n=u,0===js&&Vs(sr)),n!==u){for(s=[],o=xo();o!==u;)s.push(o),o=xo();s!==u?(39===r.charCodeAt(Ps)?(o="'",Ps++):(o=u,0===js&&Vs(sr)),o!==u?e=n=[n,s,o]:(Ps=e,e=u)):(Ps=e,e=u)}else Ps=e,e=u;if(e!==u&&(t,e=function(r){return{type:"single_quote_string",value:r[1].join("")}}(e)),(t=e)===u){if(t=Ps,e=Ps,34===r.charCodeAt(Ps)?(n='"',Ps++):(n=u,0===js&&Vs(qr)),n!==u){for(s=[],o=go();o!==u;)s.push(o),o=go();s!==u?(34===r.charCodeAt(Ps)?(o='"',Ps++):(o=u,0===js&&Vs(qr)),o!==u?e=n=[n,s,o]:(Ps=e,e=u)):(Ps=e,e=u)}else Ps=e,e=u;e!==u&&(t,e=function(r){return{type:"string",value:r[1].join("")}}(e)),t=e}}}}return t}function go(){var t;return Et.test(r.charAt(Ps))?(t=r.charAt(Ps),Ps++):(t=u,0===js&&Vs(At)),t===u&&(t=Uo()),t}function xo(){var t;return ht.test(r.charAt(Ps))?(t=r.charAt(Ps),Ps++):(t=u,0===js&&Vs(yt)),t===u&&(t=Uo()),t}function Uo(){var t,e,n,s,o,a,i,l,c,f;return t=Ps,"\\'"===r.substr(Ps,2)?(e="\\'",Ps+=2):(e=u,0===js&&Vs(Tt)),e!==u&&(t,e="\\'"),(t=e)===u&&(t=Ps,'\\"'===r.substr(Ps,2)?(e='\\"',Ps+=2):(e=u,0===js&&Vs(mt)),e!==u&&(t,e='\\"'),(t=e)===u&&(t=Ps,"\\\\"===r.substr(Ps,2)?(e="\\\\",Ps+=2):(e=u,0===js&&Vs(It)),e!==u&&(t,e="\\\\"),(t=e)===u&&(t=Ps,"\\/"===r.substr(Ps,2)?(e="\\/",Ps+=2):(e=u,0===js&&Vs(Nt)),e!==u&&(t,e="\\/"),(t=e)===u&&(t=Ps,"\\b"===r.substr(Ps,2)?(e="\\b",Ps+=2):(e=u,0===js&&Vs(Rt)),e!==u&&(t,e="\b"),(t=e)===u&&(t=Ps,"\\f"===r.substr(Ps,2)?(e="\\f",Ps+=2):(e=u,0===js&&Vs(St)),e!==u&&(t,e="\f"),(t=e)===u&&(t=Ps,"\\n"===r.substr(Ps,2)?(e="\\n",Ps+=2):(e=u,0===js&&Vs(_t)),e!==u&&(t,e="\n"),(t=e)===u&&(t=Ps,"\\r"===r.substr(Ps,2)?(e="\\r",Ps+=2):(e=u,0===js&&Vs(Ot)),e!==u&&(t,e="\r"),(t=e)===u&&(t=Ps,"\\t"===r.substr(Ps,2)?(e="\\t",Ps+=2):(e=u,0===js&&Vs(gt)),e!==u&&(t,e="\t"),(t=e)===u&&(t=Ps,"\\u"===r.substr(Ps,2)?(e="\\u",Ps+=2):(e=u,0===js&&Vs(xt)),e!==u&&(n=Go())!==u&&(s=Go())!==u&&(o=Go())!==u&&(a=Go())!==u?(t,i=n,l=s,c=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+l+c+f))):(Ps=t,t=u),t===u&&(t=Ps,92===r.charCodeAt(Ps)?(e="\\",Ps++):(e=u,0===js&&Vs(Ut)),e!==u&&(t,e="\\"),(t=e)===u&&(t=Ps,"''"===r.substr(Ps,2)?(e="''",Ps+=2):(e=u,0===js&&Vs(Mt)),e!==u&&(t,e="''"),(t=e)===u&&(t=Ps,'""'===r.substr(Ps,2)?(e='""',Ps+=2):(e=u,0===js&&Vs(kt)),e!==u&&(t,e='""'),(t=e)===u&&(t=Ps,"``"===r.substr(Ps,2)?(e="``",Ps+=2):(e=u,0===js&&Vs(Dt)),e!==u&&(t,e="``"),t=e))))))))))))),t}function Mo(){var r,t,e;return r=Ps,(t=function(){var r,t,e,n;r=Ps,(t=ko())!==u&&(e=Do())!==u&&(n=$o())!==u?(r,r=t={type:"bigint",value:t+e+n}):(Ps=r,r=u);r===u&&(r=Ps,(t=ko())!==u&&(e=Do())!==u?(r,t=function(r,t){const e=r+t;return Ri(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(Ps=r,r=u),r===u&&(r=Ps,(t=ko())!==u&&(e=$o())!==u?(r,t=function(r,t){return{type:"bigint",value:r+t}}(t,e),r=t):(Ps=r,r=u),r===u&&(r=Ps,(t=ko())!==u&&(r,t=function(r){return Ri(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==u&&(r,t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function ko(){var t,e,n;return(t=Po())===u&&(t=Fo())===u&&(t=Ps,45===r.charCodeAt(Ps)?(e="-",Ps++):(e=u,0===js&&Vs(jr)),e===u&&(43===r.charCodeAt(Ps)?(e="+",Ps++):(e=u,0===js&&Vs(Hr))),e!==u&&(n=Po())!==u?(t,t=e=e+n):(Ps=t,t=u),t===u&&(t=Ps,45===r.charCodeAt(Ps)?(e="-",Ps++):(e=u,0===js&&Vs(jr)),e===u&&(43===r.charCodeAt(Ps)?(e="+",Ps++):(e=u,0===js&&Vs(Hr))),e!==u&&(n=Fo())!==u?(t,t=e=function(r,t){return r+t}(e,n)):(Ps=t,t=u))),t}function Do(){var t,e,n;return t=Ps,46===r.charCodeAt(Ps)?(e=".",Ps++):(e=u,0===js&&Vs(Ft)),e!==u&&(n=Po())!==u?(t,t=e="."+n):(Ps=t,t=u),t}function $o(){var t,e,n;return t=Ps,(e=function(){var t,e,n;t=Ps,Bt.test(r.charAt(Ps))?(e=r.charAt(Ps),Ps++):(e=u,0===js&&Vs(Wt));e!==u?(Xt.test(r.charAt(Ps))?(n=r.charAt(Ps),Ps++):(n=u,0===js&&Vs(Vt)),n===u&&(n=null),n!==u?(t,t=e=e+(null!==(s=n)?s:"")):(Ps=t,t=u)):(Ps=t,t=u);var s;return t}())!==u&&(n=Po())!==u?(t,t=e=e+n):(Ps=t,t=u),t}function Po(){var r,t,e;if(r=Ps,t=[],(e=Fo())!==u)for(;e!==u;)t.push(e),e=Fo();else t=u;return t!==u&&(r,t=t.join("")),r=t}function Fo(){var t;return Gt.test(r.charAt(Ps))?(t=r.charAt(Ps),Ps++):(t=u,0===js&&Vs(Ht)),t}function Go(){var t;return jt.test(r.charAt(Ps))?(t=r.charAt(Ps),Ps++):(t=u,0===js&&Vs(Yt)),t}function Ho(){var t,e,n,s;return t=Ps,"default"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(E)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function jo(){var t,e,n,s;return t=Ps,"to"===r.substr(Ps,2).toLowerCase()?(e=r.substr(Ps,2),Ps+=2):(e=u,0===js&&Vs(Jt)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function Yo(){var t,e,n,s;return t=Ps,"show"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(te)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function Bo(){var t,e,n,s;return t=Ps,"drop"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(ee)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="DROP"):(Ps=t,t=u)):(Ps=t,t=u),t}function Wo(){var t,e,n,s;return t=Ps,"update"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(H)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function Xo(){var t,e,n,s;return t=Ps,"create"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(oe)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function Vo(){var t,e,n,s;return t=Ps,"temporary"===r.substr(Ps,9).toLowerCase()?(e=r.substr(Ps,9),Ps+=9):(e=u,0===js&&Vs(ae)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function Ko(){var t,e,n,s;return t=Ps,"replace"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(ce)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function qo(){var t,e,n,s;return t=Ps,"rename"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(fe)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function Zo(){var t,e,n,s;return t=Ps,"ignore"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(be)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function zo(){var t,e,n,s;return t=Ps,"partition"===r.substr(Ps,9).toLowerCase()?(e=r.substr(Ps,9),Ps+=9):(e=u,0===js&&Vs(ve)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="PARTITION"):(Ps=t,t=u)):(Ps=t,t=u),t}function Qo(){var t,e,n,s;return t=Ps,"into"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(Le)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function Jo(){var t,e,n,s;return t=Ps,"set"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(K)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function ra(){var t,e,n,s;return t=Ps,"as"===r.substr(Ps,2).toLowerCase()?(e=r.substr(Ps,2),Ps+=2):(e=u,0===js&&Vs(pe)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function ta(){var t,e,n,s;return t=Ps,"table"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(we)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="TABLE"):(Ps=t,t=u)):(Ps=t,t=u),t}function ea(){var t,e,n,s;return t=Ps,"tables"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(Ee)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="TABLES"):(Ps=t,t=u)):(Ps=t,t=u),t}function na(){var t,e,n,s;return t=Ps,"database"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(Ae)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="DATABASE"):(Ps=t,t=u)):(Ps=t,t=u),t}function sa(){var t,e,n,s;return t=Ps,"on"===r.substr(Ps,2).toLowerCase()?(e=r.substr(Ps,2),Ps+=2):(e=u,0===js&&Vs(F)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function ua(){var t,e,n,s;return t=Ps,"join"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(me)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function oa(){var t,e,n,s;return t=Ps,"union"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(Re)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function aa(){var t,e,n,s;return t=Ps,"values"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(Se)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function ia(){var t,e,n,s;return t=Ps,"using"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(_e)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function la(){var t,e,n,s;return t=Ps,"with"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(mr)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function ca(){var t,e,n,s;return t=Ps,"by"===r.substr(Ps,2).toLowerCase()?(e=r.substr(Ps,2),Ps+=2):(e=u,0===js&&Vs(xe)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function fa(){var t,e,n,s;return t=Ps,"desc"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(Pe)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="DESC"):(Ps=t,t=u)):(Ps=t,t=u),t}function ba(){var t,e,n,s;return t=Ps,"all"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(Ge)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="ALL"):(Ps=t,t=u)):(Ps=t,t=u),t}function va(){var t,e,n,s;return t=Ps,"distinct"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(He)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="DISTINCT"):(Ps=t,t=u)):(Ps=t,t=u),t}function La(){var t,e,n,s;return t=Ps,"between"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(je)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="BETWEEN"):(Ps=t,t=u)):(Ps=t,t=u),t}function Ca(){var t,e,n,s;return t=Ps,"in"===r.substr(Ps,2).toLowerCase()?(e=r.substr(Ps,2),Ps+=2):(e=u,0===js&&Vs(Ye)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="IN"):(Ps=t,t=u)):(Ps=t,t=u),t}function da(){var t,e,n,s;return t=Ps,"is"===r.substr(Ps,2).toLowerCase()?(e=r.substr(Ps,2),Ps+=2):(e=u,0===js&&Vs(Be)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="IS"):(Ps=t,t=u)):(Ps=t,t=u),t}function pa(){var t,e,n,s;return t=Ps,"like"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(We)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="LIKE"):(Ps=t,t=u)):(Ps=t,t=u),t}function wa(){var t,e,n,s;return t=Ps,"exists"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(Ke)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="EXISTS"):(Ps=t,t=u)):(Ps=t,t=u),t}function Ea(){var t,e,n,s;return t=Ps,"not"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(x)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="NOT"):(Ps=t,t=u)):(Ps=t,t=u),t}function Aa(){var t,e,n,s;return t=Ps,"and"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(qe)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="AND"):(Ps=t,t=u)):(Ps=t,t=u),t}function ha(){var t,e,n,s;return t=Ps,"or"===r.substr(Ps,2).toLowerCase()?(e=r.substr(Ps,2),Ps+=2):(e=u,0===js&&Vs(Ze)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="OR"):(Ps=t,t=u)):(Ps=t,t=u),t}function ya(){var t,e,n,s;return t=Ps,"case"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(nn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function Ta(){var t,e,n,s;return t=Ps,"end"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(an)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?t=e=[e,n]:(Ps=t,t=u)):(Ps=t,t=u),t}function ma(){var t,e,n,s;return t=Ps,"cast"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(ln)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="CAST"):(Ps=t,t=u)):(Ps=t,t=u),t}function Ia(){var t,e,n,s;return t=Ps,"char"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(fn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="CHAR"):(Ps=t,t=u)):(Ps=t,t=u),t}function Na(){var t,e,n,s;return t=Ps,"varchar"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(bn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="VARCHAR"):(Ps=t,t=u)):(Ps=t,t=u),t}function Ra(){var t,e,n,s;return t=Ps,"numeric"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(vn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="NUMERIC"):(Ps=t,t=u)):(Ps=t,t=u),t}function Sa(){var t,e,n,s;return t=Ps,"decimal"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(Ln)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="DECIMAL"):(Ps=t,t=u)):(Ps=t,t=u),t}function _a(){var t,e,n,s;return t=Ps,"unsigned"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(dn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="UNSIGNED"):(Ps=t,t=u)):(Ps=t,t=u),t}function Oa(){var t,e,n,s;return t=Ps,"int"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(pn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="INT"):(Ps=t,t=u)):(Ps=t,t=u),t}function ga(){var t,e,n,s;return t=Ps,"integer"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(En)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="INTEGER"):(Ps=t,t=u)):(Ps=t,t=u),t}function xa(){var t,e,n,s;return t=Ps,"smallint"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(hn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="SMALLINT"):(Ps=t,t=u)):(Ps=t,t=u),t}function Ua(){var t,e,n,s;return t=Ps,"tinyint"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(yn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="TINYINT"):(Ps=t,t=u)):(Ps=t,t=u),t}function Ma(){var t,e,n,s;return t=Ps,"bigint"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(Rn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="BIGINT"):(Ps=t,t=u)):(Ps=t,t=u),t}function ka(){var t,e,n,s;return t=Ps,"float"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(_n)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="FLOAT"):(Ps=t,t=u)):(Ps=t,t=u),t}function Da(){var t,e,n,s;return t=Ps,"double"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(On)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="DOUBLE"):(Ps=t,t=u)):(Ps=t,t=u),t}function $a(){var t,e,n,s;return t=Ps,"date"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(gn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="DATE"):(Ps=t,t=u)):(Ps=t,t=u),t}function Pa(){var t,e,n,s;return t=Ps,"datetime"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(xn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="DATETIME"):(Ps=t,t=u)):(Ps=t,t=u),t}function Fa(){var t,e,n,s;return t=Ps,"time"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(Un)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="TIME"):(Ps=t,t=u)):(Ps=t,t=u),t}function Ga(){var t,e,n,s;return t=Ps,"timestamp"===r.substr(Ps,9).toLowerCase()?(e=r.substr(Ps,9),Ps+=9):(e=u,0===js&&Vs(Mn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="TIMESTAMP"):(Ps=t,t=u)):(Ps=t,t=u),t}function Ha(){var t,e,n,s;return t=Ps,"current_timestamp"===r.substr(Ps,17).toLowerCase()?(e=r.substr(Ps,17),Ps+=17):(e=u,0===js&&Vs(Xn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="CURRENT_TIMESTAMP"):(Ps=t,t=u)):(Ps=t,t=u),t}function ja(){var t;return 64===r.charCodeAt(Ps)?(t="@",Ps++):(t=u,0===js&&Vs(rs)),t}function Ya(){var t;return(t=function(){var t;return"@@"===r.substr(Ps,2)?(t="@@",Ps+=2):(t=u,0===js&&Vs(ts)),t}())===u&&(t=ja())===u&&(t=function(){var t;return 36===r.charCodeAt(Ps)?(t="$",Ps++):(t=u,0===js&&Vs(es)),t}()),t}function Ba(){var t;return 61===r.charCodeAt(Ps)?(t="=",Ps++):(t=u,0===js&&Vs(_r)),t}function Wa(){var t,e,n,s;return t=Ps,"column"===r.substr(Ps,6).toLowerCase()?(e=r.substr(Ps,6),Ps+=6):(e=u,0===js&&Vs(as)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="COLUMN"):(Ps=t,t=u)):(Ps=t,t=u),t}function Xa(){var t,e,n,s;return t=Ps,"index"===r.substr(Ps,5).toLowerCase()?(e=r.substr(Ps,5),Ps+=5):(e=u,0===js&&Vs(is)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="INDEX"):(Ps=t,t=u)):(Ps=t,t=u),t}function Va(){var t,e,n,s;return t=Ps,"key"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(L)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="KEY"):(Ps=t,t=u)):(Ps=t,t=u),t}function Ka(){var t,e,n,s;return t=Ps,"comment"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(fs)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="COMMENT"):(Ps=t,t=u)):(Ps=t,t=u),t}function qa(){var t;return 46===r.charCodeAt(Ps)?(t=".",Ps++):(t=u,0===js&&Vs(Ft)),t}function Za(){var t;return 44===r.charCodeAt(Ps)?(t=",",Ps++):(t=u,0===js&&Vs(As)),t}function za(){var t;return 42===r.charCodeAt(Ps)?(t="*",Ps++):(t=u,0===js&&Vs(Yr)),t}function Qa(){var t;return 40===r.charCodeAt(Ps)?(t="(",Ps++):(t=u,0===js&&Vs(Ar)),t}function Ja(){var t;return 41===r.charCodeAt(Ps)?(t=")",Ps++):(t=u,0===js&&Vs(hr)),t}function ri(){var t;return 59===r.charCodeAt(Ps)?(t=";",Ps++):(t=u,0===js&&Vs(Ts)),t}function ti(){var t;return"->"===r.substr(Ps,2)?(t="->",Ps+=2):(t=u,0===js&&Vs(ms)),t}function ei(){var t;return"->>"===r.substr(Ps,3)?(t="->>",Ps+=3):(t=u,0===js&&Vs(Is)),t}function ni(){var t;return(t=function(){var t;return"||"===r.substr(Ps,2)?(t="||",Ps+=2):(t=u,0===js&&Vs(Xr)),t}())===u&&(t=function(){var t;return"&&"===r.substr(Ps,2)?(t="&&",Ps+=2):(t=u,0===js&&Vs(Ns)),t}()),t}function si(){var r,t;for(r=[],(t=li())===u&&(t=oi());t!==u;)r.push(t),(t=li())===u&&(t=oi());return r}function ui(){var r,t;if(r=[],(t=li())===u&&(t=oi()),t!==u)for(;t!==u;)r.push(t),(t=li())===u&&(t=oi());else r=u;return r}function oi(){var t;return(t=function(){var t,e,n,s,o,a;t=Ps,"/*"===r.substr(Ps,2)?(e="/*",Ps+=2):(e=u,0===js&&Vs(Rs));if(e!==u){for(n=[],s=Ps,o=Ps,js++,"*/"===r.substr(Ps,2)?(a="*/",Ps+=2):(a=u,0===js&&Vs(Ss)),js--,a===u?o=void 0:(Ps=o,o=u),o!==u&&(a=ii())!==u?s=o=[o,a]:(Ps=s,s=u);s!==u;)n.push(s),s=Ps,o=Ps,js++,"*/"===r.substr(Ps,2)?(a="*/",Ps+=2):(a=u,0===js&&Vs(Ss)),js--,a===u?o=void 0:(Ps=o,o=u),o!==u&&(a=ii())!==u?s=o=[o,a]:(Ps=s,s=u);n!==u?("*/"===r.substr(Ps,2)?(s="*/",Ps+=2):(s=u,0===js&&Vs(Ss)),s!==u?t=e=[e,n,s]:(Ps=t,t=u)):(Ps=t,t=u)}else Ps=t,t=u;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=Ps,"--"===r.substr(Ps,2)?(e="--",Ps+=2):(e=u,0===js&&Vs(_s));if(e!==u){for(n=[],s=Ps,o=Ps,js++,a=ci(),js--,a===u?o=void 0:(Ps=o,o=u),o!==u&&(a=ii())!==u?s=o=[o,a]:(Ps=s,s=u);s!==u;)n.push(s),s=Ps,o=Ps,js++,a=ci(),js--,a===u?o=void 0:(Ps=o,o=u),o!==u&&(a=ii())!==u?s=o=[o,a]:(Ps=s,s=u);n!==u?t=e=[e,n]:(Ps=t,t=u)}else Ps=t,t=u;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=Ps,35===r.charCodeAt(Ps)?(e="#",Ps++):(e=u,0===js&&Vs(Os));if(e!==u){for(n=[],s=Ps,o=Ps,js++,a=ci(),js--,a===u?o=void 0:(Ps=o,o=u),o!==u&&(a=ii())!==u?s=o=[o,a]:(Ps=s,s=u);s!==u;)n.push(s),s=Ps,o=Ps,js++,a=ci(),js--,a===u?o=void 0:(Ps=o,o=u),o!==u&&(a=ii())!==u?s=o=[o,a]:(Ps=s,s=u);n!==u?t=e=[e,n]:(Ps=t,t=u)}else Ps=t,t=u;return t}()),t}function ai(){var r,t,e,n,s,o,a;return r=Ps,(t=Ka())!==u&&si()!==u?((e=Ba())===u&&(e=null),e!==u&&si()!==u&&(n=Oo())!==u?(r,o=e,a=n,r=t={type:(s=t).toLowerCase(),keyword:s.toLowerCase(),symbol:o,value:a}):(Ps=r,r=u)):(Ps=r,r=u),r}function ii(){var t;return r.length>Ps?(t=r.charAt(Ps),Ps++):(t=u,0===js&&Vs(gs)),t}function li(){var t;return xs.test(r.charAt(Ps))?(t=r.charAt(Ps),Ps++):(t=u,0===js&&Vs(Us)),t}function ci(){var t,e;if((t=function(){var t,e;t=Ps,js++,r.length>Ps?(e=r.charAt(Ps),Ps++):(e=u,0===js&&Vs(gs));js--,e===u?t=void 0:(Ps=t,t=u);return t}())===u)if(t=[],$t.test(r.charAt(Ps))?(e=r.charAt(Ps),Ps++):(e=u,0===js&&Vs(Pt)),e!==u)for(;e!==u;)t.push(e),$t.test(r.charAt(Ps))?(e=r.charAt(Ps),Ps++):(e=u,0===js&&Vs(Pt));else t=u;return t}function fi(){var t,e;return t=Ps,Ps,xi=[],( true?void 0:0)!==u&&si()!==u?((e=bi())===u&&(e=function(){var t,e;t=Ps,function(){var t;return"return"===r.substr(Ps,6).toLowerCase()?(t=r.substr(Ps,6),Ps+=6):(t=u,0===js&&Vs(ns)),t}()!==u&&si()!==u&&(e=vi())!==u?(t,t={type:"return",expr:e}):(Ps=t,t=u);return t}()),e!==u?(t,t={stmt:e,vars:xi}):(Ps=t,t=u)):(Ps=t,t=u),t}function bi(){var t,e,n,s;return t=Ps,(e=Ai())===u&&(e=hi()),e!==u&&si()!==u?((n=function(){var t;return":="===r.substr(Ps,2)?(t=":=",Ps+=2):(t=u,0===js&&Vs(ss)),t}())===u&&(n=Ba()),n!==u&&si()!==u&&(s=vi())!==u?(t,t=e={type:"assign",left:e,symbol:n,right:s}):(Ps=t,t=u)):(Ps=t,t=u),t}function vi(){var t;return(t=Cu())===u&&(t=function(){var r,t,e,n,s;r=Ps,(t=Ai())!==u&&si()!==u&&(e=xu())!==u&&si()!==u&&(n=Ai())!==u&&si()!==u&&(s=Mu())!==u?(r,r=t={type:"join",ltable:t,rtable:n,op:e,on:s}):(Ps=r,r=u);return r}())===u&&(t=Li())===u&&(t=function(){var t,e;t=Ps,function(){var t;return 91===r.charCodeAt(Ps)?(t="[",Ps++):(t=u,0===js&&Vs(hs)),t}()!==u&&si()!==u&&(e=Ei())!==u&&si()!==u&&function(){var t;return 93===r.charCodeAt(Ps)?(t="]",Ps++):(t=u,0===js&&Vs(ys)),t}()!==u?(t,t={type:"array",value:e}):(Ps=t,t=u);return t}()),t}function Li(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=Ci())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=lo())!==u&&(a=si())!==u&&(i=Ci())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=lo())!==u&&(a=si())!==u&&(i=Ci())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,r=t=gr(t,e)):(Ps=r,r=u)}else Ps=r,r=u;return r}function Ci(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=di())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=fo())!==u&&(a=si())!==u&&(i=di())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=fo())!==u&&(a=si())!==u&&(i=di())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,r=t=gr(t,e)):(Ps=r,r=u)}else Ps=r,r=u;return r}function di(){var r,t,e;return(r=So())===u&&(r=Ai())===u&&(r=wi())===u&&(r=To())===u&&(r=Ps,Qa()!==u&&si()!==u&&(t=Li())!==u&&si()!==u&&Ja()!==u?(r,(e=t).parentheses=!0,r=e):(Ps=r,r=u)),r}function pi(){var r,t,e,n,s,o,a;return r=Ps,(t=Eo())!==u?(e=Ps,(n=si())!==u&&(s=qa())!==u&&(o=si())!==u&&(a=Eo())!==u?e=n=[n,s,o,a]:(Ps=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(Ps=r,r=u)):(Ps=r,r=u),r}function wi(){var r,t,e;return r=Ps,(t=pi())!==u&&si()!==u&&Qa()!==u&&si()!==u?((e=Ei())===u&&(e=null),e!==u&&si()!==u&&Ja()!==u?(r,r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(Ps=r,r=u)):(Ps=r,r=u),r===u&&(r=Ps,(t=pi())!==u&&(r,t=function(r){return{type:"function",name:r,args:null}}(t)),r=t),r}function Ei(){var r,t,e,n,s,o,a,i;if(r=Ps,(t=di())!==u){for(e=[],n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=di())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);n!==u;)e.push(n),n=Ps,(s=si())!==u&&(o=Za())!==u&&(a=si())!==u&&(i=di())!==u?n=s=[s,o,a,i]:(Ps=n,n=u);e!==u?(r,r=t=c(t,e)):(Ps=r,r=u)}else Ps=r,r=u;return r}function Ai(){var r,t,e,n,s;return r=Ps,(t=Ya())!==u&&(e=hi())!==u?(r,n=t,s=e,r=t={type:"var",...s,prefix:n}):(Ps=r,r=u),r}function hi(){var t,e,n,s,o;return t=Ps,(e=Eo())!==u&&(n=function(){var t,e,n,s,o;t=Ps,e=[],n=Ps,46===r.charCodeAt(Ps)?(s=".",Ps++):(s=u,0===js&&Vs(Ft));s!==u&&(o=Eo())!==u?n=s=[s,o]:(Ps=n,n=u);for(;n!==u;)e.push(n),n=Ps,46===r.charCodeAt(Ps)?(s=".",Ps++):(s=u,0===js&&Vs(Ft)),s!==u&&(o=Eo())!==u?n=s=[s,o]:(Ps=n,n=u);e!==u&&(t,e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==u?(t,s=e,o=n,xi.push(s),t=e={type:"var",name:s,members:o,prefix:null}):(Ps=t,t=u),t===u&&(t=Ps,(e=Mo())!==u&&(t,e={type:"var",name:e.value,members:[],quoted:null,prefix:null}),t=e),t}function yi(){var t;return(t=function(){var t,e,n,s;t=Ps,(e=Ia())===u&&(e=Na());if(e!==u)if(si()!==u)if(Qa()!==u)if(si()!==u){if(n=[],Gt.test(r.charAt(Ps))?(s=r.charAt(Ps),Ps++):(s=u,0===js&&Vs(Ht)),s!==u)for(;s!==u;)n.push(s),Gt.test(r.charAt(Ps))?(s=r.charAt(Ps),Ps++):(s=u,0===js&&Vs(Ht));else n=u;n!==u&&(s=si())!==u&&Ja()!==u?(t,e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Ps=t,t=u)}else Ps=t,t=u;else Ps=t,t=u;else Ps=t,t=u;else Ps=t,t=u;t===u&&(t=Ps,(e=Ia())!==u&&(t,e=ks(e)),(t=e)===u&&(t=Ps,(e=Na())!==u&&(t,e=ks(e)),t=e));return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f,b,v;t=Ps,(e=Ra())===u&&(e=Sa())===u&&(e=Oa())===u&&(e=ga())===u&&(e=xa())===u&&(e=Ua())===u&&(e=Ma())===u&&(e=ka())===u&&(e=Da())===u&&(e=function(){var t,e,n,s;return t=Ps,"bit"===r.substr(Ps,3).toLowerCase()?(e=r.substr(Ps,3),Ps+=3):(e=u,0===js&&Vs(cn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="BIT"):(Ps=t,t=u)):(Ps=t,t=u),t}());if(e!==u)if((n=si())!==u)if((s=Qa())!==u)if((o=si())!==u){if(a=[],Gt.test(r.charAt(Ps))?(i=r.charAt(Ps),Ps++):(i=u,0===js&&Vs(Ht)),i!==u)for(;i!==u;)a.push(i),Gt.test(r.charAt(Ps))?(i=r.charAt(Ps),Ps++):(i=u,0===js&&Vs(Ht));else a=u;if(a!==u)if((i=si())!==u){if(l=Ps,(c=Za())!==u)if((f=si())!==u){if(b=[],Gt.test(r.charAt(Ps))?(v=r.charAt(Ps),Ps++):(v=u,0===js&&Vs(Ht)),v!==u)for(;v!==u;)b.push(v),Gt.test(r.charAt(Ps))?(v=r.charAt(Ps),Ps++):(v=u,0===js&&Vs(Ht));else b=u;b!==u?l=c=[c,f,b]:(Ps=l,l=u)}else Ps=l,l=u;else Ps=l,l=u;l===u&&(l=null),l!==u&&(c=si())!==u&&(f=Ja())!==u&&(b=si())!==u?((v=Ti())===u&&(v=null),v!==u?(t,L=l,C=v,e={dataType:e,length:parseInt(a.join(""),10),scale:L&&parseInt(L[2].join(""),10),parentheses:!0,suffix:C},t=e):(Ps=t,t=u)):(Ps=t,t=u)}else Ps=t,t=u;else Ps=t,t=u}else Ps=t,t=u;else Ps=t,t=u;else Ps=t,t=u;else Ps=t,t=u;var L,C;if(t===u){if(t=Ps,(e=Ra())===u&&(e=Sa())===u&&(e=Oa())===u&&(e=ga())===u&&(e=xa())===u&&(e=Ua())===u&&(e=Ma())===u&&(e=ka())===u&&(e=Da()),e!==u){if(n=[],Gt.test(r.charAt(Ps))?(s=r.charAt(Ps),Ps++):(s=u,0===js&&Vs(Ht)),s!==u)for(;s!==u;)n.push(s),Gt.test(r.charAt(Ps))?(s=r.charAt(Ps),Ps++):(s=u,0===js&&Vs(Ht));else n=u;n!==u&&(s=si())!==u?((o=Ti())===u&&(o=null),o!==u?(t,e=function(r,t,e){return{dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(Ps=t,t=u)):(Ps=t,t=u)}else Ps=t,t=u;t===u&&(t=Ps,(e=Ra())===u&&(e=Sa())===u&&(e=Oa())===u&&(e=ga())===u&&(e=xa())===u&&(e=Ua())===u&&(e=Ma())===u&&(e=ka())===u&&(e=Da()),e!==u&&(n=si())!==u?((s=Ti())===u&&(s=null),s!==u&&(o=si())!==u?(t,e=function(r,t){return{dataType:r,suffix:t}}(e,s),t=e):(Ps=t,t=u)):(Ps=t,t=u))}return t}())===u&&(t=function(){var t,e,n,s;t=Ps,(e=$a())===u&&(e=Pa())===u&&(e=Fa())===u&&(e=Ga());e!==u&&si()!==u&&Qa()!==u&&si()!==u?(Ds.test(r.charAt(Ps))?(n=r.charAt(Ps),Ps++):(n=u,0===js&&Vs($s)),n!==u&&si()!==u&&Ja()!==u&&si()!==u?((s=Ti())===u&&(s=null),s!==u?(t,e={dataType:e,length:parseInt(n,10),parentheses:!0},t=e):(Ps=t,t=u)):(Ps=t,t=u)):(Ps=t,t=u);t===u&&(t=Ps,(e=$a())===u&&(e=Pa())===u&&(e=Fa())===u&&(e=Ga()),e!==u&&(t,e=ks(e)),t=e);return t}())===u&&(t=function(){var t,e;t=Ps,(e=function(){var t,e,n,s;return t=Ps,"json"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(An)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="JSON"):(Ps=t,t=u)):(Ps=t,t=u),t}())!==u&&(t,e=ks(e));return t=e}())===u&&(t=function(){var t,e;t=Ps,(e=function(){var t,e,n,s;return t=Ps,"tinytext"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(Tn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="TINYTEXT"):(Ps=t,t=u)):(Ps=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=Ps,"text"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(mn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="TEXT"):(Ps=t,t=u)):(Ps=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=Ps,"mediumtext"===r.substr(Ps,10).toLowerCase()?(e=r.substr(Ps,10),Ps+=10):(e=u,0===js&&Vs(In)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="MEDIUMTEXT"):(Ps=t,t=u)):(Ps=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=Ps,"longtext"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(Nn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="LONGTEXT"):(Ps=t,t=u)):(Ps=t,t=u),t}());e!==u&&(t,e={dataType:e});return t=e}())===u&&(t=function(){var t,e,n;t=Ps,(e=function(){var t,e,n,s;return t=Ps,"enum"===r.substr(Ps,4).toLowerCase()?(e=r.substr(Ps,4),Ps+=4):(e=u,0===js&&Vs(Sn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="ENUM"):(Ps=t,t=u)):(Ps=t,t=u),t}())!==u&&si()!==u&&(n=Xu())!==u?(t,s=e,(o=n).parentheses=!0,t=e={dataType:s,expr:o}):(Ps=t,t=u);var s,o;return t}())===u&&(t=function(){var t,e;t=Ps,"boolean"===r.substr(Ps,7).toLowerCase()?(e=r.substr(Ps,7),Ps+=7):(e=u,0===js&&Vs(Ms));e!==u&&(t,e={dataType:"BOOLEAN"});return t=e}()),t}function Ti(){var t,e,n;return t=Ps,(e=_a())===u&&(e=null),e!==u&&si()!==u?((n=function(){var t,e,n,s;return t=Ps,"zerofill"===r.substr(Ps,8).toLowerCase()?(e=r.substr(Ps,8),Ps+=8):(e=u,0===js&&Vs(wn)),e!==u?(n=Ps,js++,s=Ao(),js--,s===u?n=void 0:(Ps=n,n=u),n!==u?(t,t=e="ZEROFILL"):(Ps=t,t=u)):(Ps=t,t=u),t}())===u&&(n=null),n!==u?(t,t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(Ps=t,t=u)):(Ps=t,t=u),t}const mi={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Ii(r,t){return{type:"unary_expr",operator:r,expr:t}}function Ni(r,t,e){return{type:"binary_expr",operator:r,left:t,right:e}}function Ri(r){const t=n(Number.MAX_SAFE_INTEGER);return!(n(r)<t)}function Si(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)delete t[r][e].tableList,delete t[r][e].columnList,n.push(t[r][e]);return n}function _i(r,t){let e=r;for(let r=0;r<t.length;r++)e=Ni(t[r][1],e,t[r][3]);return e}function Oi(r){const t=ki[r];return t||(r||null)}function gi(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=Oi(r[1])),t.add(r.join("::"))}return Array.from(t)}let xi=[];const Ui=new Set,Mi=new Set,ki={};if((e=a())!==u&&Ps===r.length)return e;throw e!==u&&Ps<r.length&&Vs({type:"end"}),Ks(Hs,Gs<r.length?r.charAt(Gs):null,Gs<r.length?Xs(Gs,Gs+1):Xs(Gs,Gs))}}},function(r,t,e){"use strict";var n=e(0);function s(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,s)}!function(r,t){function e(){this.constructor=r}e.prototype=t.prototype,r.prototype=new e}(s,Error),s.buildMessage=function(r,t){var e={literal:function(r){return'"'+s(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?u(r.parts[t][0])+"-"+u(r.parts[t][1]):u(r.parts[t]);return"["+(r.inverted?"^":"")+e+"]"},any:function(r){return"any character"},end:function(r){return"end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function s(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}function u(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}return"Expected "+function(r){var t,n,s,u=new Array(r.length);for(t=0;t<r.length;t++)u[t]=(s=r[t],e[s.type](s));if(u.sort(),u.length>0){for(t=1,n=1;t<u.length;t++)u[t-1]!==u[t]&&(u[n]=u[t],n++);u.length=n}switch(u.length){case 1:return u[0];case 2:return u[0]+" or "+u[1];default:return u.slice(0,-1).join(", ")+", or "+u[u.length-1]}}(r)+" but "+function(r){return r?'"'+s(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:s,parse:function(r,t){t=void 0!==t?t:{};var e,u={},o={start:Bu},a=Bu,i=function(r,t){return Ql(r,t)},l=Pu("INCLUDE",!0),c=Pu("FILESTREAM_ON",!0),f=function(r,t){return Ql(r,t,1)},b=Pu("IF",!0),v=function(r,t){return Ql(r,t)},L=Pu("UNIQUE",!0),C=Pu("PRIMARY",!0),d=Pu("KEY",!0),p=Pu("IDENTITY",!0),w=Pu("COLUMN_FORMAT",!0),E=Pu("FIXED",!0),A=Pu("DYNAMIC",!0),h=Pu("DEFAULT",!0),y=Pu("STORAGE",!0),T=Pu("DISK",!0),m=Pu("MEMORY",!0),I=Pu("CURSOR",!0),N=Pu("EXEC",!0),R=Pu("EXECUTE",!0),S=Pu("@",!1),_=Pu("if",!0),O=Pu("exists",!0),g=Pu("PROCEDURE",!0),x=Pu("ALGORITHM",!0),U=Pu("INSTANT",!0),M=Pu("INPLACE",!0),k=Pu("COPY",!0),D=Pu("LOCK",!0),$=Pu("NONE",!0),P=Pu("SHARED",!0),F=Pu("EXCLUSIVE",!0),G=Pu("CHECK",!0),H=Pu("NOCHECK",!0),j=Pu("PRIMARY KEY",!0),Y=Pu("NOT",!0),B=Pu("FOR",!0),W=Pu("REPLICATION",!0),X=Pu("FOREIGN KEY",!0),V=Pu("MATCH FULL",!0),K=Pu("MATCH PARTIAL",!0),q=Pu("MATCH SIMPLE",!0),Z=Pu("ON",!0),z=Pu("DELETE",!0),Q=Pu("UPDATE",!0),J=Pu("RESTRICT",!0),rr=Pu("CASCADE",!0),tr=Pu("SET NULL",!0),er=Pu("NO ACTION",!0),nr=Pu("SET DEFAULT",!0),sr=Pu("CHARACTER",!0),ur=Pu("SET",!0),or=Pu("CHARSET",!0),ar=Pu("COLLATE",!0),ir=Pu("AUTO_INCREMENT",!0),lr=Pu("AVG_ROW_LENGTH",!0),cr=Pu("KEY_BLOCK_SIZE",!0),fr=Pu("MAX_ROWS",!0),br=Pu("MIN_ROWS",!0),vr=Pu("STATS_SAMPLE_PAGES",!0),Lr=Pu("CONNECTION",!0),Cr=Pu("COMPRESSION",!0),dr=Pu("'",!1),pr=Pu("ZLIB",!0),wr=Pu("LZ4",!0),Er=Pu("ENGINE",!0),Ar=Pu("READ",!0),hr=Pu("LOCAL",!0),yr=Pu("LOW_PRIORITY",!0),Tr=Pu("WRITE",!0),mr=Pu("(",!1),Ir=Pu(")",!1),Nr=Pu("PERCENT",!0),Rr=Pu("BTREE",!0),Sr=Pu("HASH",!0),_r=Pu("NONCLUSTERED",!0),Or=Pu("PARTITIONS",!0),gr=function(r,t,e){return{type:r.toLowerCase(),symbol:t,expr:e}},xr=Pu("FILLFACTOR",!0),Ur=Pu("MAX_DURATION",!0),Mr=Pu("MAXDOP",!0),kr=Pu("WITH",!0),Dr=Pu("PARSER",!0),$r=Pu("VISIBLE",!0),Pr=Pu("INVISIBLE",!0),Fr=Pu("PAD_INDEX",!0),Gr=Pu("SORT_IN_TEMPDB",!0),Hr=Pu("IGNORE_DUP_KEY",!0),jr=Pu("STATISTICS_NORECOMPUTE",!0),Yr=Pu("STATISTICS_INCREMENTAL",!0),Br=Pu("DROP_EXISTING",!0),Wr=Pu("ONLINE",!0),Xr=Pu("RESUMABLE",!0),Vr=Pu("ALLOW_ROW_LOCKS",!0),Kr=Pu("ALLOW_PAGE_LOCKS",!0),qr=Pu("OPTIMIZE_FOR_SEQUENTIAL_KEY",!0),Zr=Pu("DATA_COMPRESSION",!0),zr=Pu("ROW",!0),Qr=Pu("PAGE",!1),Jr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;uc[t]=t,e&&(uc[e]=t),function(r){const t=tc(r);r.clear(),t.forEach(t=>r.add(t))}(sc)}),t},rt=Pu("FORCESEEK",!0),tt=Pu("SPATIAL_WINDOW_MAX_CELLS",!0),et=Pu("NOEXPAND",!0),nt=Pu("FORCESCAN",!0),st=Pu("HOLDLOCK",!0),ut=Pu("NOLOCK",!0),ot=Pu("NOWAIT",!0),at=Pu("PAGLOCK",!0),it=Pu("READCOMMITTED",!0),lt=Pu("READCOMMITTEDLOCK",!0),ct=Pu("READPAST",!0),ft=Pu("READUNCOMMITTED",!0),bt=Pu("REPEATABLEREAD ",!0),vt=Pu("ROWLOCK",!0),Lt=Pu("SERIALIZABLE",!0),Ct=Pu("SNAPSHOT",!0),dt=Pu("TABLOCK",!0),pt=Pu("TABLOCKX",!0),wt=Pu("UPDLOCK",!0),Et=Pu("XLOCK",!0),At=Pu("=",!1),ht=function(r,t){return Jl(r,t)},yt=Pu("!",!1),Tt=function(r){return r[0]+" "+r[2]},mt=Pu(">=",!1),It=Pu(">",!1),Nt=Pu("<=",!1),Rt=Pu("<>",!1),St=Pu("<",!1),_t=Pu("!=",!1),Ot=Pu("+",!1),gt=Pu("-",!1),xt=Pu("*",!1),Ut=Pu("/",!1),Mt=Pu("%",!1),kt=function(r){return!0===Kl[r.toUpperCase()]},Dt=Pu('"',!1),$t=/^[^"]/,Pt=Fu(['"'],!0,!1),Ft=function(r){return r.join("")},Gt=/^[^']/,Ht=Fu(["'"],!0,!1),jt=Pu("`",!1),Yt=/^[^`]/,Bt=Fu(["`"],!0,!1),Wt=Pu("[",!1),Xt=/^[^\]]/,Vt=Fu(["]"],!0,!1),Kt=Pu("]",!1),qt=function(r,t){return r+t.join("")},Zt=/^[A-Za-z_]/,zt=Fu([["A","Z"],["a","z"],"_"],!1,!1),Qt=/^[A-Za-z0-9_]/,Jt=Fu([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),re=/^[A-Za-z0-9_:]/,te=Fu([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),ee=Pu(":",!1),ne=Pu("OVER",!0),se=(Pu("WINDOW",!0),Pu("FOLLOWING",!0)),ue=Pu("PRECEDING",!0),oe=Pu("CURRENT",!0),ae=Pu("UNBOUNDED",!0),ie=Pu("N",!0),le=function(r,t){return{type:r.toLowerCase(),value:t[1].join("")}},ce=/^[^"\\\0-\x1F\x7F]/,fe=Fu(['"',"\\",["\0",""],""],!0,!1),be=/^[^'\\]/,ve=Fu(["'","\\"],!0,!1),Le=Pu("\\'",!1),Ce=Pu('\\"',!1),de=Pu("\\\\",!1),pe=Pu("\\/",!1),we=Pu("\\b",!1),Ee=Pu("\\f",!1),Ae=Pu("\\n",!1),he=Pu("\\r",!1),ye=Pu("\\t",!1),Te=Pu("\\u",!1),me=Pu("\\",!1),Ie=Pu("''",!1),Ne=Pu('""',!1),Re=Pu("``",!1),Se=/^[\n\r]/,_e=Fu(["\n","\r"],!1,!1),Oe=Pu(".",!1),ge=/^[0-9]/,xe=Fu([["0","9"]],!1,!1),Ue=/^[0-9a-fA-F]/,Me=Fu([["0","9"],["a","f"],["A","F"]],!1,!1),ke=/^[eE]/,De=Fu(["e","E"],!1,!1),$e=/^[+\-]/,Pe=Fu(["+","-"],!1,!1),Fe=Pu("NULL",!0),Ge=Pu("NOT NULL",!0),He=Pu("TRUE",!0),je=Pu("TO",!0),Ye=Pu("TOP",!0),Be=Pu("FALSE",!0),We=(Pu("SHOW",!0),Pu("DROP",!0)),Xe=Pu("DECLARE",!0),Ve=Pu("USE",!0),Ke=Pu("ALTER",!0),qe=Pu("SELECT",!0),Ze=Pu("CREATE",!0),ze=Pu("TEMPORARY",!0),Qe=Pu("INSERT",!0),Je=Pu("RECURSIVE",!1),rn=Pu("REPLACE",!0),tn=Pu("RENAME",!0),en=Pu("IGNORE",!0),nn=(Pu("EXPLAIN",!0),Pu("PARTITION",!0)),sn=Pu("INTO",!0),un=Pu("FROM",!0),on=Pu("UNLOCK",!0),an=Pu("AS",!0),ln=Pu("TABLE",!0),cn=Pu("DATABASE",!0),fn=Pu("SCHEME",!0),bn=Pu("TABLES",!0),vn=Pu("OFF",!0),Ln=Pu("LEFT",!0),Cn=Pu("RIGHT",!0),dn=Pu("FULL",!0),pn=Pu("INNER",!0),wn=Pu("JOIN",!0),En=Pu("OUTER",!0),An=Pu("UNION",!0),hn=Pu("VALUES",!0),yn=Pu("USING",!0),Tn=Pu("WHERE",!0),mn=Pu("GO",!0),In=Pu("GROUP",!0),Nn=Pu("BY",!0),Rn=Pu("ORDER",!0),Sn=Pu("HAVING",!0),_n=Pu("LIMIT",!0),On=Pu("OFFSET",!0),gn=Pu("ASC",!0),xn=Pu("DESC",!0),Un=Pu("ALL",!0),Mn=Pu("DISTINCT",!0),kn=Pu("BETWEEN",!0),Dn=Pu("IN",!0),$n=Pu("IS",!0),Pn=Pu("LIKE",!0),Fn=Pu("EXISTS",!0),Gn=Pu("AND",!0),Hn=Pu("OR",!0),jn=Pu("COUNT",!0),Yn=Pu("MAX",!0),Bn=Pu("MIN",!0),Wn=Pu("SUM",!0),Xn=Pu("AVG",!0),Vn=Pu("CALL",!0),Kn=Pu("CASE",!0),qn=Pu("WHEN",!0),Zn=Pu("THEN",!0),zn=Pu("ELSE",!0),Qn=Pu("END",!0),Jn=Pu("CAST",!0),rs=Pu("BIT",!0),ts=Pu("MONEY",!0),es=Pu("SMALLMONEY",!0),ns=Pu("CHAR",!0),ss=Pu("VARCHAR",!0),us=Pu("NCHAR",!0),os=Pu("NVARCHAR",!0),as=Pu("NUMERIC",!0),is=Pu("DECIMAL",!0),ls=Pu("SIGNED",!0),cs=Pu("UNSIGNED",!0),fs=Pu("INT",!0),bs=Pu("ZEROFILL",!0),vs=Pu("INTEGER",!0),Ls=Pu("JSON",!0),Cs=Pu("SMALLINT",!0),ds=Pu("TINYINT",!0),ps=Pu("TINYTEXT",!0),ws=Pu("TEXT",!0),Es=Pu("MEDIUMTEXT",!0),As=Pu("LONGTEXT",!0),hs=Pu("BIGINT",!0),ys=Pu("FLOAT",!0),Ts=Pu("REAL",!0),ms=Pu("DOUBLE",!0),Is=Pu("DATE",!0),Ns=Pu("SMALLDATETIME",!0),Rs=Pu("DATETIME",!0),Ss=Pu("DATETIME2",!0),_s=Pu("DATETIMEOFFSET",!0),Os=Pu("ROWS",!0),gs=Pu("TIME",!0),xs=Pu("TIMESTAMP",!0),Us=Pu("TRUNCATE",!0),Ms=Pu("UNIQUEIDENTIFIER",!0),ks=Pu("USER",!0),Ds=Pu("CURRENT_DATE",!0),$s=(Pu("ADDDATE",!0),Pu("INTERVAL",!0)),Ps=Pu("YEAR",!0),Fs=Pu("MONTH",!0),Gs=Pu("DAY",!0),Hs=Pu("HOUR",!0),js=Pu("MINUTE",!0),Ys=Pu("SECOND",!0),Bs=Pu("CURRENT_TIME",!0),Ws=Pu("CURRENT_TIMESTAMP",!0),Xs=Pu("CURRENT_USER",!0),Vs=Pu("SESSION_USER",!0),Ks=Pu("SYSTEM_USER",!0),qs=Pu("GLOBAL",!0),Zs=Pu("SESSION",!0),zs=Pu("PERSIST",!0),Qs=Pu("PERSIST_ONLY",!0),Js=Pu("@@",!1),ru=Pu("$",!1),tu=Pu("return",!0),eu=Pu(":=",!1),nu=Pu("DUAL",!0),su=Pu("ADD",!0),uu=Pu("COLUMN",!0),ou=Pu("INDEX",!0),au=Pu("FULLTEXT",!0),iu=Pu("SPATIAL",!0),lu=Pu("CLUSTERED",!0),cu=Pu("COMMENT",!0),fu=Pu("CONSTRAINT",!0),bu=Pu("REFERENCES",!0),vu=Pu("SQL_CALC_FOUND_ROWS",!0),Lu=Pu("SQL_CACHE",!0),Cu=Pu("SQL_NO_CACHE",!0),du=Pu("SQL_SMALL_RESULT",!0),pu=Pu("SQL_BIG_RESULT",!0),wu=Pu("SQL_BUFFER_RESULT",!0),Eu=Pu(",",!1),Au=Pu(";",!1),hu=Pu("||",!1),yu=Pu("&&",!1),Tu=Pu("/*",!1),mu=Pu("*/",!1),Iu=Pu("--",!1),Nu=Pu("#",!1),Ru={type:"any"},Su=/^[ \t\n\r]/,_u=Fu([" ","\t","\n","\r"],!1,!1),Ou=function(r,t,e){return r&&!e||!r&&e},gu=function(r,t,e){return{dataType:t}},xu=function(r,t,e){return{dataType:t}},Uu=0,Mu=[{line:1,column:1}],ku=0,Du=[],$u=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule]}function Pu(r,t){return{type:"literal",text:r,ignoreCase:t}}function Fu(r,t,e){return{type:"class",parts:r,inverted:t,ignoreCase:e}}function Gu(t){var e,n=Mu[t];if(n)return n;for(e=t-1;!Mu[e];)e--;for(n={line:(n=Mu[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return Mu[t]=n,n}function Hu(r,t){var e=Gu(r),n=Gu(t);return{start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function ju(r){Uu<ku||(Uu>ku&&(ku=Uu,Du=[]),Du.push(r))}function Yu(r,t,e){return new s(s.buildMessage(r,t),r,t,e)}function Bu(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=Wu())!==u)if(Sl()!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=mi())!==u&&(a=Sl())!==u&&(i=Wu())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=mi())!==u&&(a=Sl())!==u&&(i=Wu())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,r=t=function(r,t){if(!t||0===t.length)return r;delete r.tableList,delete r.columnList;let e=r;for(let r=0;r<t.length;r++)delete t[r][3].tableList,delete t[r][3].columnList,e.go_next=t[r][3],e.go="go",e=e.go_next;return{tableList:Array.from(nc),columnList:tc(sc),ast:r}}(t,e)):(Uu=r,r=u)}else Uu=r,r=u;else Uu=r,r=u;return r}function Wu(){var r,t;return r=Uu,Sl()!==u?((t=function(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=Vu())!==u){if(e=[],n=Uu,(s=Sl())!==u&&(o=Nl())!==u&&(a=Sl())!==u&&(i=Vu())!==u?n=s=[s,o,a,i]:(Uu=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Nl())!==u&&(a=Sl())!==u&&(i=Vu())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return{tableList:Array.from(nc),columnList:tc(sc),ast:e}}(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())===u&&(t=Xu())===u&&(t=Vu()),t!==u?(r,r=t):(Uu=r,r=u)):(Uu=r,r=u),r}function Xu(){var t;return(t=function(){var t,e,n,s,o,a,i;t=Uu,(e=ei())!==u&&Sl()!==u&&(n=Ci())!==u&&Sl()!==u?((s=function(){var t,e,n;t=Uu,"if"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=u,0===$u&&ju(_));e!==u&&Sl()!==u?("exists"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=u,0===$u&&ju(O)),n!==u?(t,t=e="if exists"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(s=null),s!==u&&Sl()!==u&&(o=ko())!==u?(t,l=e,c=n,b=s,(v=o)&&v.forEach(r=>nc.add(`${l}::${r.db}::${r.table}`)),e={tableList:Array.from(nc),columnList:tc(sc),ast:{type:l.toLowerCase(),keyword:c.toLowerCase(),prefix:b,name:v}},t=e):(Uu=t,t=u)):(Uu=t,t=u);var l,c,b,v;t===u&&(t=Uu,(e=ei())!==u&&Sl()!==u?("procedure"===r.substr(Uu,9).toLowerCase()?(n=r.substr(Uu,9),Uu+=9):(n=u,0===$u&&ju(g)),n!==u&&Sl()!==u&&(s=ha())!==u?(t,e=function(r,t,e){return{tableList:Array.from(nc),columnList:tc(sc),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e}}}(e,n,s),t=e):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,(e=ei())!==u&&Sl()!==u&&(n=Ll())!==u&&Sl()!==u&&(s=Ea())!==u&&Sl()!==u&&(o=pi())!==u&&Sl()!==u&&(a=Ho())!==u&&Sl()!==u?((i=function(){var r,t,e,n,s,o;r=Uu,(t=uo())===u&&(t=oo());if(t!==u){for(e=[],n=Uu,(s=Sl())!==u?((o=uo())===u&&(o=oo()),o!==u?n=s=[s,o]:(Uu=n,n=u)):(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u?((o=uo())===u&&(o=oo()),o!==u?n=s=[s,o]:(Uu=n,n=u)):(Uu=n,n=u);e!==u?(r,t=f(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())===u&&(i=null),i!==u&&Sl()!==u?(t,e=function(r,t,e,n,s){return{tableList:Array.from(nc),columnList:tc(sc),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:s}}}(e,n,s,a,i),t=e):(Uu=t,t=u)):(Uu=t,t=u)));return t}())===u&&(t=function(){var t;(t=function(){var r,t,e,n,s,o,a,l,c,f;r=Uu,(t=oi())!==u&&Sl()!==u?((e=ai())===u&&(e=null),e!==u&&Sl()!==u&&Ci()!==u&&Sl()!==u?((n=zu())===u&&(n=null),n!==u&&Sl()!==u&&(s=ko())!==u&&Sl()!==u&&(o=Qu())!==u&&Sl()!==u?((a=function(){var r,t,e,n,s,o,a,l;if(r=Uu,(t=po())!==u){for(e=[],n=Uu,(s=Sl())!==u?((o=Al())===u&&(o=null),o!==u&&(a=Sl())!==u&&(l=po())!==u?n=s=[s,o,a,l]:(Uu=n,n=u)):(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u?((o=Al())===u&&(o=null),o!==u&&(a=Sl())!==u&&(l=po())!==u?n=s=[s,o,a,l]:(Uu=n,n=u)):(Uu=n,n=u);e!==u?(r,t=i(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())===u&&(a=null),a!==u&&Sl()!==u?((l=ci())===u&&(l=ii()),l===u&&(l=null),l!==u&&Sl()!==u?((c=Li())===u&&(c=null),c!==u&&Sl()!==u?((f=qu())===u&&(f=null),f!==u?(r,b=t,v=e,L=n,d=o,p=a,w=l,E=c,A=f,(C=s)&&C.forEach(r=>nc.add(`create::${r.db}::${r.table}`)),t={tableList:Array.from(nc),columnList:tc(sc),ast:{type:b[0].toLowerCase(),keyword:"table",temporary:v&&v[0].toLowerCase(),if_not_exists:L,table:C,ignore_replace:w&&w[0].toLowerCase(),as:E&&E[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:d,table_options:p}},r=t):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u);var b,v,L,C,d,p,w,E,A;r===u&&(r=Uu,(t=oi())!==u&&Sl()!==u?((e=ai())===u&&(e=null),e!==u&&Sl()!==u&&Ci()!==u&&Sl()!==u?((n=zu())===u&&(n=null),n!==u&&Sl()!==u&&(s=ko())!==u&&Sl()!==u&&(o=function r(){var t,e;(t=function(){var r,t,e;r=Uu,(t=Ui())!==u&&Sl()!==u&&(e=ko())!==u?(r,t=function(r){return{type:"like",table:r}}(e),r=t):(Uu=r,r=u);return r}())===u&&(t=Uu,yl()!==u&&Sl()!==u&&(e=r())!==u&&Sl()!==u&&Tl()!==u?(t,(n=e).parentheses=!0,t=n):(Uu=t,t=u));var n;return t}())!==u?(r,t=function(r,t,e,n,s){return n&&n.forEach(r=>nc.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(nc),columnList:tc(sc),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e,table:n,like:s}}}(t,e,n,s,o),r=t):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u));return r}())===u&&(t=function(){var t,e,n,s,o,a,f,b,v,L,C,d,p,w,E,A,h,y;t=Uu,(e=oi())!==u&&Sl()!==u?((n=dl())===u&&(n=function(){var t,e,n,s;t=Uu,"clustered"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=u,0===$u&&ju(lu));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="CLUSTERED"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Uu,"nonclustered"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=u,0===$u&&ju(_r));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="NONCLUSTERED"):(Uu=t,t=u)):(Uu=t,t=u);return t}()),n===u&&(n=null),n!==u&&Sl()!==u&&(s=Ll())!==u&&Sl()!==u&&(o=ha())!==u&&Sl()!==u&&(a=pi())!==u&&Sl()!==u&&(f=Ho())!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(b=function(){var r,t,e,n,s,o,a,l;if(r=Uu,(t=Zu())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(l=Zu())!==u?n=s=[s,o,a,l]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(l=Zu())!==u?n=s=[s,o,a,l]:(Uu=n,n=u);e!==u?(r,t=i(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())!==u&&Sl()!==u&&Tl()!==u&&Sl()!==u?((v=function(){var t,e,n;t=Uu,"include"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(l));e!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(n=Aa())!==u&&Sl()!==u&&Tl()!==u?(t,o=n,e={type:(s=e).toLowerCase(),keyword:s.toLowerCase(),columns:o},t=e):(Uu=t,t=u);var s,o;return t}())===u&&(v=null),v!==u&&Sl()!==u?((L=Yo())===u&&(L=null),L!==u&&Sl()!==u?(C=Uu,(d=Ti())!==u&&(p=Sl())!==u&&(w=yl())!==u&&(E=Sl())!==u&&(A=function(){var r,t,e,n,s,o,a,l;if(r=Uu,(t=Mo())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(l=Mo())!==u?n=s=[s,o,a,l]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(l=Mo())!==u?n=s=[s,o,a,l]:(Uu=n,n=u);e!==u?(r,t=i(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())!==u&&(h=Sl())!==u&&(y=Tl())!==u?C=d=[d,p,w,E,A,h,y]:(Uu=C,C=u),C===u&&(C=null),C!==u&&(d=Sl())!==u?((p=jo())===u&&(p=null),p!==u&&(w=Sl())!==u?(E=Uu,"filestream_on"===r.substr(Uu,13).toLowerCase()?(A=r.substr(Uu,13),Uu+=13):(A=u,0===$u&&ju(c)),A!==u&&(h=Sl())!==u&&(y=ha())!==u?E=A=[A,h,y]:(Uu=E,E=u),E===u&&(E=null),E!==u?(t,T=e,m=n,I=s,N=o,R=a,S=f,_=b,O=v,g=L,x=C,U=p,M=E,e={tableList:Array.from(nc),columnList:tc(sc),ast:{type:T[0].toLowerCase(),index_type:m&&m.toLowerCase(),keyword:I.toLowerCase(),index:N,on_kw:R[0].toLowerCase(),table:S,index_columns:_,include:O,where:g,with:x&&x[4],on:U,filestream_on:M&&{value:M[2]}}},t=e):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u);var T,m,I,N,R,S,_,O,g,x,U,M;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=Uu,(e=oi())!==u&&Sl()!==u?((n=function(){var t,e,n,s;t=Uu,"database"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(cn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="DATABASE"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Uu,"scheme"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(fn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="SCHEME"):(Uu=t,t=u)):(Uu=t,t=u);return t}()),n!==u&&Sl()!==u?((s=zu())===u&&(s=null),s!==u&&Sl()!==u&&(o=ma())!==u&&Sl()!==u?((a=function(){var r,t,e,n,s,o;if(r=Uu,(t=Co())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Co())!==u?n=s=[s,o]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Co())!==u?n=s=[s,o]:(Uu=n,n=u);e!==u?(r,t=f(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())===u&&(a=null),a!==u?(t,i=e,l=s,c=o,b=a,e={tableList:Array.from(nc),columnList:tc(sc),ast:{type:i[0].toLowerCase(),keyword:"database",if_not_exists:l,database:c,create_definitions:b}},t=e):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u);var i,l,c,b;return t}());return t}())===u&&(t=function(){var t,e,n,s;t=Uu,(e=function(){var t,e,n,s;t=Uu,"truncate"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(Us));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="TRUNCATE"):(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&Sl()!==u?((n=Ci())===u&&(n=null),n!==u&&Sl()!==u&&(s=ko())!==u?(t,o=e,a=n,(i=s)&&i.forEach(r=>nc.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(nc),columnList:tc(sc),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(Uu=t,t=u)):(Uu=t,t=u);var o,a,i;return t}())===u&&(t=function(){var r,t,e;r=Uu,(t=li())!==u&&Sl()!==u&&Ci()!==u&&Sl()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=_o())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=_o())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=_o())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,t=v(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())!==u?(r,(n=e).forEach(r=>r.forEach(r=>r.table&&nc.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(nc),columnList:tc(sc),ast:{type:"rename",table:n}},r=t):(Uu=r,r=u);var n;return r}())===u&&(t=function(){var t,e,n;t=Uu,(e=function(){var t,e,n,s;t=Uu,"call"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(Vn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="CALL"):(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&Sl()!==u&&(n=jl())!==u?(t,s=n,e={tableList:Array.from(nc),columnList:tc(sc),ast:{type:"call",expr:s}},t=e):(Uu=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n;t=Uu,(e=function(){var t,e,n,s;t=Uu,"use"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(Ve));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&Sl()!==u&&(n=ha())!==u?(t,s=n,nc.add(`use::${s}::null`),e={tableList:Array.from(nc),columnList:tc(sc),ast:{type:"use",db:s}},t=e):(Uu=t,t=u);var s;return t}())===u&&(t=function(){var r,t,e,n;r=Uu,(t=si())!==u&&Sl()!==u&&Ci()!==u&&Sl()!==u&&(e=ko())!==u&&Sl()!==u&&(n=function(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=so())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=so())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=so())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,t=v(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())!==u?(r,o=n,(s=e)&&s.length>0&&s.forEach(r=>nc.add(`alter::${r.db}::${r.table}`)),t={tableList:Array.from(nc),columnList:tc(sc),ast:{type:"alter",table:s,expr:o}},r=t):(Uu=r,r=u);var s,o;return r}())===u&&(t=function(){var t,e,n,s;t=Uu,(e=vi())!==u&&Sl()!==u?((n=function(){var t,e,n,s;t=Uu,"global"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(qs));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="GLOBAL"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Uu,"session"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(Zs));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="SESSION"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Uu,"local"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(hr));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="LOCAL"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Uu,"persist"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(zs));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="PERSIST"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Uu,"persist_only"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=u,0===$u&&ju(Qs));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="PERSIST_ONLY"):(Uu=t,t=u)):(Uu=t,t=u);return t}()),n===u&&(n=null),n!==u&&Sl()!==u&&(s=Dl())!==u?(t,o=n,(a=s).keyword=o,e={tableList:Array.from(nc),columnList:tc(sc),ast:{type:"set",expr:a}},t=e):(Uu=t,t=u)):(Uu=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n;t=Uu,(e=function(){var t,e,n,s;t=Uu,"lock"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(D));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&Sl()!==u&&di()!==u&&Sl()!==u&&(n=function(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=wo())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=wo())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=wo())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,t=Ql(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())!==u?(t,s=n,e={tableList:Array.from(nc),columnList:tc(sc),ast:{type:"lock",keyword:"tables",tables:s}},t=e):(Uu=t,t=u);var s;return t}())===u&&(t=function(){var t,e;t=Uu,(e=function(){var t,e,n,s;t=Uu,"unlock"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(on));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&Sl()!==u&&di()!==u?(t,e={tableList:Array.from(nc),columnList:tc(sc),ast:{type:"unlock",keyword:"tables"}},t=e):(Uu=t,t=u);return t}())===u&&(t=function(){var r,t,e,n,s,o;r=Uu,(t=ni())!==u&&Sl()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=eo())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=eo())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=eo())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,t=v(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())!==u?(r,a=e,t={tableList:Array.from(nc),columnList:tc(sc),ast:{type:"declare",declare:a}},r=t):(Uu=r,r=u);var a;r===u&&(r=Uu,(t=ni())!==u&&Sl()!==u&&(e=ll())!==u&&Sl()!==u&&(n=ma())!==u&&Sl()!==u?((s=Li())===u&&(s=null),s!==u&&Sl()!==u&&Ci()!==u&&Sl()!==u&&(o=Qu())!==u?(r,i=n,l=s,c=o,t={tableList:Array.from(nc),columnList:tc(sc),ast:{type:"declare",declare:[{at:"@",name:i,as:l&&l[0].toLowerCase(),keyword:"table",prefix:"table",definition:c}]}},r=t):(Uu=r,r=u)):(Uu=r,r=u));var i,l,c;return r}())===u&&(t=function(){var t,e,n,s;t=Uu,"exec"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(N));e===u&&("execute"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(R)));e!==u&&Sl()!==u&&(n=Ho())!==u&&Sl()!==u&&(s=function(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=no())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=no())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=no())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,t=Ql(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())!==u?(t,o=e,a=n,i=s,e={tableList:Array.from(nc),columnList:tc(sc),ast:{type:"exec",keyword:o,module:a,parameters:i}},t=e):(Uu=t,t=u);var o,a,i;return t}()),t}function Vu(){var t;return(t=qu())===u&&(t=function(){var r,t,e,n,s;r=Uu,(t=ui())!==u&&Sl()!==u&&(e=ko())!==u&&Sl()!==u&&vi()!==u&&Sl()!==u&&(n=function(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=Zo())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=Zo())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=Zo())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,t=v(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())!==u&&Sl()!==u?((s=Yo())===u&&(s=null),s!==u?(r,t=function(r,t,e){const n={};return r&&r.forEach(r=>{const{db:t,as:e,table:s,join:u}=r,o=u?"select":"update";t&&(n[s]=t),s&&nc.add(`${o}::${t}::${s}`)}),t&&t.forEach(r=>{if(r.table){const t=rc(r.table);nc.add(`update::${n[t]||null}::${t}`)}sc.add(`update::${r.table}::${r.column}`)}),{tableList:Array.from(nc),columnList:tc(sc),ast:{type:"update",table:r,set:t,where:e}}}(e,n,s),r=t):(Uu=r,r=u)):(Uu=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a;r=Uu,(t=Jo())!==u&&Sl()!==u?((e=bi())===u&&(e=null),e!==u&&Sl()!==u&&(n=Ho())!==u&&Sl()!==u?((s=Qo())===u&&(s=null),s!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(o=Aa())!==u&&Sl()!==u&&Tl()!==u&&Sl()!==u&&(a=zo())!==u?(r,t=function(r,t,e,n,s){if(t&&(nc.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(s)&&s.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>sc.add(`insert::${r}::${t}`))}return{tableList:Array.from(nc),columnList:tc(sc),ast:{type:r,table:[t],columns:n,values:s,partition:e}}}(t,n,s,o,a),r=t):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a;r=Uu,(t=Jo())!==u&&Sl()!==u?((e=ci())===u&&(e=null),e!==u&&Sl()!==u?((n=bi())===u&&(n=null),n!==u&&Sl()!==u&&(s=Ho())!==u&&Sl()!==u?((o=Qo())===u&&(o=null),o!==u&&Sl()!==u&&(a=zo())!==u?(r,t=function(r,t,e,n,s,u){n&&(nc.add(`insert::${n.db}::${n.table}`),sc.add(`insert::${n.table}::(.*)`),n.as=null);const o=[t,e].filter(r=>r).map(r=>r[0]&&r[0].toLowerCase()).join(" ");return{tableList:Array.from(nc),columnList:tc(sc),ast:{type:r,table:[n],columns:null,values:u,partition:s,prefix:o}}}(t,e,n,s,o,a),r=t):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u);return r}())===u&&(t=function(){var t,e,n,s,o;t=Uu,(e=function(){var t,e,n,s;t=Uu,"delete"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(z));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&Sl()!==u?((n=ko())===u&&(n=null),n!==u&&Sl()!==u&&(s=So())!==u&&Sl()!==u?((o=Yo())===u&&(o=null),o!==u?(t,e=function(r,t,e){if(t&&t.forEach(r=>{const{db:t,as:e,table:n,join:s}=r,u=s?"select":"delete";n&&nc.add(`${u}::${t}::${n}`),s||sc.add(`delete::${n}::(.*)`)}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}]}return{tableList:Array.from(nc),columnList:tc(sc),ast:{type:"delete",table:r,from:t,where:e}}}(n,s,o),t=e):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=Xu())===u&&(t=function(){var r,t;r=[],t=kl();for(;t!==u;)r.push(t),t=kl();return r}()),t}function Ku(){var r,t;return r=Uu,(t=Ai())!==u&&Sl()!==u&&Si()!==u?(r,r=t="union all"):(Uu=r,r=u),r===u&&(r=Uu,(t=Ai())!==u&&(r,t="union"),r=t),r}function qu(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=Eo())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Ku())!==u&&(a=Sl())!==u&&(i=Eo())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Ku())!==u&&(a=Sl())!==u&&(i=Eo())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u&&(n=Sl())!==u?((s=Xo())===u&&(s=null),s!==u&&(o=Sl())!==u?((a=qo())===u&&(a=null),a!==u?(r,r=t=function(r,t,e,n){let s=r;for(let r=0;r<t.length;r++)s._next=t[r][3],s.set_op=t[r][1],s=s._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(nc),columnList:tc(sc),ast:r}}(t,e,s,a)):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u)}else Uu=r,r=u;return r}function Zu(){var r,t,e,n;return r=Uu,ml()!==u&&Sl()!==u&&(t=Ea())!==u&&Sl()!==u&&Il()!==u&&Sl()!==u?((e=Ni())===u&&(e=Ri()),e===u&&(e=null),e!==u?(r,r={column:t,order:(n=e)&&n.toLowerCase()||"asc"}):(Uu=r,r=u)):(Uu=r,r=u),r===u&&(r=function(){var r,t,e;r=Uu,(t=Ea())!==u&&Sl()!==u?((e=Ni())===u&&(e=Ri()),e===u&&(e=null),e!==u?(r,t=function(r,t){return{column:r,order:t&&t.toLowerCase()||"asc"}}(t,e),r=t):(Uu=r,r=u)):(Uu=r,r=u);return r}()),r}function zu(){var t,e;return t=Uu,"if"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=u,0===$u&&ju(b)),e!==u&&Sl()!==u&&ki()!==u&&Sl()!==u&&Mi()!==u?(t,t=e="IF NOT EXISTS"):(Uu=t,t=u),t}function Qu(){var r,t,e,n,s,o,a,i;if(r=Uu,yl()!==u)if(Sl()!==u)if((t=Ju())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=Ju())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=Ju())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u&&(n=Sl())!==u?((s=Al())===u&&(s=null),s!==u&&(o=Sl())!==u&&(a=Tl())!==u?(r,r=v(t,e)):(Uu=r,r=u)):(Uu=r,r=u)}else Uu=r,r=u;else Uu=r,r=u;else Uu=r,r=u;return r}function Ju(){var r;return(r=lo())===u&&(r=to())===u&&(r=ao())===u&&(r=io()),r}function ro(){var t,e,n,s,o,a,i;return t=Uu,(e=function(){var t,e;t=Uu,(e=function(){var t,e,n,s;t=Uu,"not null"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(Ge));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&(t,e={type:"not null",value:"not null"});return t=e}())===u&&(e=Ga()),e!==u&&(t,(i=e)&&!i.value&&(i.value="null"),e={nullable:i}),(t=e)===u&&(t=Uu,(e=function(){var r,t;r=Uu,Ja()!==u&&Sl()!==u?((t=Fa())===u&&(t=oa()),t!==u?(r,r={type:"default",value:t}):(Uu=r,r=u)):(Uu=r,r=u);return r}())!==u&&(t,e={default_val:e}),(t=e)===u&&(t=Uu,(e=fo())!==u&&(t,e={check:e}),(t=e)===u&&(t=Uu,"unique"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(L)),e===u&&(e=Uu,"primary"===r.substr(Uu,7).toLowerCase()?(n=r.substr(Uu,7),Uu+=7):(n=u,0===$u&&ju(C)),n!==u&&(s=Sl())!==u?("key"===r.substr(Uu,3).toLowerCase()?(o=r.substr(Uu,3),Uu+=3):(o=u,0===$u&&ju(d)),o!==u?e=n=[n,s,o]:(Uu=e,e=u)):(Uu=e,e=u)),e!==u&&(t,e=function(r){let t=[r];return Array.isArray(r)&&(t=[r[0],r[2]]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===u&&(t=Uu,(e=function(){var t,e,n,s,o,a,i,l,c,f,b,v;t=Uu,"identity"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(p));e!==u&&Sl()!==u?(n=Uu,(s=yl())!==u&&(o=Sl())!==u&&(a=Wa())!==u&&(i=Sl())!==u&&(l=Al())!==u&&(c=Sl())!==u&&(f=Wa())!==u&&(b=Sl())!==u&&(v=Tl())!==u?n=s=[s,o,a,i,l,c,f,b,v]:(Uu=n,n=u),n===u&&(n=null),n!==u?(t,e={keyword:"identity",seed:(L=n)&&L[2],increment:L&&L[6],parentheses:!!L},t=e):(Uu=t,t=u)):(Uu=t,t=u);var L;return t}())!==u&&(t,e={auto_increment:e}),(t=e)===u&&(t=Uu,(e=gl())!==u&&(t,e={comment:e}),(t=e)===u&&(t=Uu,(e=function(){var t,e,n;t=Uu,function(){var t,e,n,s;t=Uu,"collate"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(ar));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="COLLATE"):(Uu=t,t=u)):(Uu=t,t=u);return t}()!==u&&Sl()!==u?((e=fl())===u&&(e=null),e!==u&&Sl()!==u&&(n=ma())!==u?(t,t={type:"collate",symbol:e,value:n}):(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&(t,e={collate:e}),(t=e)===u&&(t=Uu,(e=function(){var t,e,n;t=Uu,"column_format"===r.substr(Uu,13).toLowerCase()?(e=r.substr(Uu,13),Uu+=13):(e=u,0===$u&&ju(w));e!==u&&Sl()!==u?("fixed"===r.substr(Uu,5).toLowerCase()?(n=r.substr(Uu,5),Uu+=5):(n=u,0===$u&&ju(E)),n===u&&("dynamic"===r.substr(Uu,7).toLowerCase()?(n=r.substr(Uu,7),Uu+=7):(n=u,0===$u&&ju(A)),n===u&&("default"===r.substr(Uu,7).toLowerCase()?(n=r.substr(Uu,7),Uu+=7):(n=u,0===$u&&ju(h)))),n!==u?(t,e={type:"column_format",value:n.toLowerCase()},t=e):(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&(t,e={column_format:e}),(t=e)===u&&(t=Uu,(e=function(){var t,e,n;t=Uu,"storage"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(y));e!==u&&Sl()!==u?("disk"===r.substr(Uu,4).toLowerCase()?(n=r.substr(Uu,4),Uu+=4):(n=u,0===$u&&ju(T)),n===u&&("memory"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=u,0===$u&&ju(m))),n!==u?(t,e={type:"storage",value:n.toLowerCase()},t=e):(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&(t,e={storage:e}),(t=e)===u&&(t=Uu,(e=bo())!==u&&(t,e={reference_definition:e}),(t=e)===u&&(t=Uu,(e=Lo())!==u&&(n=Sl())!==u?((s=fl())===u&&(s=null),s!==u&&(o=Sl())!==u&&(a=ma())!==u?(t,t=e=function(r,t,e){return{character_set:{type:r,value:e,symbol:t}}}(e,s,a)):(Uu=t,t=u)):(Uu=t,t=u))))))))))),t}function to(){var r,t,e,n,s,o,a,i,l;return r=Uu,(t=Ea())!==u&&Sl()!==u&&(e=Xl())!==u&&(n=Sl())!==u?((s=function(){var r,t,e,n,s,o;if(r=Uu,(t=ro())!==u)if(Sl()!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=ro())!==u?n=s=[s,o]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=ro())!==u?n=s=[s,o]:(Uu=n,n=u);e!==u?(r,r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(Uu=r,r=u)}else Uu=r,r=u;else Uu=r,r=u;return r}())===u&&(s=null),s!==u?(r,a=t,i=e,l=s,sc.add(`create::${a.table}::${a.column}`),r=t={column:a,definition:i,resource:"column",...l||{}}):(Uu=r,r=u)):(Uu=r,r=u),r===u&&(r=Uu,(t=Ea())!==u&&Sl()!==u?(e=Uu,(n=Li())!==u&&(s=Sl())!==u&&(o=oa())!==u?e=n=[n,s,o]:(Uu=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){return t&&(r.as=t[2]),{column:r,resource:"column"}}(t,e)):(Uu=r,r=u)):(Uu=r,r=u)),r}function eo(){var t,e,n,s,o,a,i,l,c,f,b;return t=Uu,ll()!==u&&Sl()!==u&&(e=ma())!==u&&Sl()!==u?((n=Li())===u&&(n=null),n!==u&&Sl()!==u&&(s=Xl())!==u&&Sl()!==u?(o=Uu,(a=fl())!==u&&(i=Sl())!==u&&(l=oa())!==u?o=a=[a,i,l]:(Uu=o,o=u),o===u&&(o=null),o!==u?(t,f=s,b=o,t={at:"@",name:e,as:(c=n)&&c[0].toLowerCase(),prefix:f,keyword:"variable",definition:b&&b[2]}):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,ll()!==u&&Sl()!==u&&(e=ma())!==u&&Sl()!==u?("cursor"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=u,0===$u&&ju(I)),n!==u?(t,t=function(r,t){return{at:"@",name:t,keyword:"cursor",prefix:"cursor"}}(0,e)):(Uu=t,t=u)):(Uu=t,t=u)),t}function no(){var t,e,n,s;return t=Uu,64===r.charCodeAt(Uu)?(e="@",Uu++):(e=u,0===$u&&ju(S)),e!==u&&(n=ha())!==u&&Sl()!==u&&fl()!==u&&Sl()!==u&&(s=oa())!==u?(t,t=e={type:"variable",name:n,value:s}):(Uu=t,t=u),t}function so(){var t;return(t=function(){var r,t;r=Uu,bl()!==u&&Sl()!==u&&(t=lo())!==u?(r,r={action:"add",create_definitions:t,resource:"constraint",type:"alter"}):(Uu=r,r=u);return r}())===u&&(t=function(){var r,t,e,n;r=Uu,(t=ei())!==u&&Sl()!==u&&(e=wl())!==u&&Sl()!==u&&(n=ma())!==u?(r,t={action:"drop",constraint:n,keyword:e.toLowerCase(),resource:"constraint",type:"alter"},r=t):(Uu=r,r=u);return r}())===u&&(t=function(){var t,e,n,s;t=Uu,Ti()!==u&&Sl()!==u?("check"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(G)),e!==u&&Sl()!==u?("check"===r.substr(Uu,5).toLowerCase()?(n=r.substr(Uu,5),Uu+=5):(n=u,0===$u&&ju(G)),n!==u&&Sl()!==u&&wl()!==u&&Sl()!==u&&(s=ma())!==u?(t,t={action:"with",constraint:s,keyword:"check check constraint",resource:"constraint",type:"alter"}):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n;t=Uu,"nocheck"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(H));e!==u&&Sl()!==u&&wl()!==u&&Sl()!==u&&(n=ma())!==u?(t,t=e={action:"nocheck",keyword:"constraint",constraint:n,resource:"constraint",type:"alter"}):(Uu=t,t=u);return t}())===u&&(t=function(){var r,t,e,n;r=Uu,(t=bl())===u&&(t=si());t!==u&&Sl()!==u?((e=vl())===u&&(e=null),e!==u&&Sl()!==u&&(n=to())!==u?(r,s=e,o=n,t={action:t.toLowerCase(),...o,keyword:s,resource:"column",type:"alter"},r=t):(Uu=r,r=u)):(Uu=r,r=u);var s,o;return r}())===u&&(t=function(){var r,t,e;r=Uu,ei()!==u&&Sl()!==u?((t=vl())===u&&(t=null),t!==u&&Sl()!==u&&(e=Ea())!==u?(r,r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(Uu=r,r=u)):(Uu=r,r=u);return r}())===u&&(t=function(){var r,t,e;r=Uu,(t=bl())!==u&&Sl()!==u&&(e=ao())!==u?(r,n=e,t={action:"add",type:"alter",...n},r=t):(Uu=r,r=u);var n;return r}())===u&&(t=function(){var r,t,e;r=Uu,(t=bl())!==u&&Sl()!==u&&(e=io())!==u?(r,n=e,t={action:"add",type:"alter",...n},r=t):(Uu=r,r=u);var n;return r}())===u&&(t=function(){var r,t,e,n;r=Uu,(t=li())!==u&&Sl()!==u?((e=ri())===u&&(e=Li()),e===u&&(e=null),e!==u&&Sl()!==u&&(n=ha())!==u?(r,o=n,t={action:"rename",type:"alter",resource:"table",keyword:(s=e)&&s[0].toLowerCase(),table:o},r=t):(Uu=r,r=u)):(Uu=r,r=u);var s,o;return r}())===u&&(t=uo())===u&&(t=oo()),t}function uo(){var t,e,n,s;return t=Uu,"algorithm"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=u,0===$u&&ju(x)),e!==u&&Sl()!==u?((n=fl())===u&&(n=null),n!==u&&Sl()!==u?("default"===r.substr(Uu,7).toLowerCase()?(s=r.substr(Uu,7),Uu+=7):(s=u,0===$u&&ju(h)),s===u&&("instant"===r.substr(Uu,7).toLowerCase()?(s=r.substr(Uu,7),Uu+=7):(s=u,0===$u&&ju(U)),s===u&&("inplace"===r.substr(Uu,7).toLowerCase()?(s=r.substr(Uu,7),Uu+=7):(s=u,0===$u&&ju(M)),s===u&&("copy"===r.substr(Uu,4).toLowerCase()?(s=r.substr(Uu,4),Uu+=4):(s=u,0===$u&&ju(k))))),s!==u?(t,t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:s}):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u),t}function oo(){var t,e,n,s;return t=Uu,"lock"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(D)),e!==u&&Sl()!==u?((n=fl())===u&&(n=null),n!==u&&Sl()!==u?("default"===r.substr(Uu,7).toLowerCase()?(s=r.substr(Uu,7),Uu+=7):(s=u,0===$u&&ju(h)),s===u&&("none"===r.substr(Uu,4).toLowerCase()?(s=r.substr(Uu,4),Uu+=4):(s=u,0===$u&&ju($)),s===u&&("shared"===r.substr(Uu,6).toLowerCase()?(s=r.substr(Uu,6),Uu+=6):(s=u,0===$u&&ju(P)),s===u&&("exclusive"===r.substr(Uu,9).toLowerCase()?(s=r.substr(Uu,9),Uu+=9):(s=u,0===$u&&ju(F))))),s!==u?(t,t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:s}):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u),t}function ao(){var r,t,e,n,s,o,a,i;return r=Uu,(t=Ll())===u&&(t=Cl()),t!==u&&Sl()!==u?((e=Ta())===u&&(e=null),e!==u&&Sl()!==u?((n=Oo())===u&&(n=null),n!==u&&Sl()!==u&&(s=yo())!==u&&Sl()!==u?((o=go())===u&&(o=null),o!==u&&Sl()!==u?(r,a=n,i=o,r=t={index:e,definition:s,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u),r}function io(){var t,e,n,s,o,a,i,l,c;return t=Uu,(e=function(){var t,e,n,s;t=Uu,"fulltext"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(au));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="FULLTEXT"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(e=function(){var t,e,n,s;t=Uu,"spatial"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(iu));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="SPATIAL"):(Uu=t,t=u)):(Uu=t,t=u);return t}()),e!==u&&Sl()!==u?((n=Ll())===u&&(n=Cl()),n===u&&(n=null),n!==u&&Sl()!==u?((s=Ta())===u&&(s=null),s!==u&&Sl()!==u&&(o=yo())!==u&&Sl()!==u?((a=go())===u&&(a=null),a!==u&&Sl()!==u?(t,i=e,c=a,t=e={index:s,definition:o,keyword:(l=n)&&`${i.toLowerCase()} ${l.toLowerCase()}`||i.toLowerCase(),index_options:c,resource:"index"}):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u),t}function lo(){var t;return(t=function(){var t,e,n,s,o,a;t=Uu,(e=co())===u&&(e=null);e!==u&&Sl()!==u?("primary key"===r.substr(Uu,11).toLowerCase()?(n=r.substr(Uu,11),Uu+=11):(n=u,0===$u&&ju(j)),n!==u&&Sl()!==u?((s=Oo())===u&&(s=null),s!==u&&Sl()!==u&&(o=yo())!==u&&Sl()!==u?((a=go())===u&&(a=null),a!==u?(t,l=n,c=s,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:l.toLowerCase(),keyword:i&&i.keyword,index_type:c,resource:"constraint",index_options:b},t=e):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u);var i,l,c,f,b;return t}())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=Uu,(t=co())===u&&(t=null);t!==u&&Sl()!==u&&(e=dl())!==u&&Sl()!==u?((n=Ll())===u&&(n=Cl()),n===u&&(n=null),n!==u&&Sl()!==u?((s=Ta())===u&&(s=null),s!==u&&Sl()!==u?((o=Oo())===u&&(o=null),o!==u&&Sl()!==u&&(a=yo())!==u&&Sl()!==u?((i=go())===u&&(i=null),i!==u?(r,c=e,f=n,b=s,v=o,L=a,C=i,t={constraint:(l=t)&&l.constraint,definition:L,constraint_type:f&&`${c.toLowerCase()} ${f.toLowerCase()}`||c.toLowerCase(),keyword:l&&l.keyword,index_type:v,index:b,resource:"constraint",index_options:C},r=t):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u);var l,c,f,b,v,L,C;return r}())===u&&(t=function(){var t,e,n,s,o,a;t=Uu,(e=co())===u&&(e=null);e!==u&&Sl()!==u?("foreign key"===r.substr(Uu,11).toLowerCase()?(n=r.substr(Uu,11),Uu+=11):(n=u,0===$u&&ju(X)),n!==u&&Sl()!==u?((s=Ta())===u&&(s=null),s!==u&&Sl()!==u&&(o=yo())!==u&&Sl()!==u?((a=bo())===u&&(a=null),a!==u?(t,l=n,c=s,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:l,keyword:i&&i.keyword,index:c,resource:"constraint",reference_definition:b},t=e):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u);var i,l,c,f,b;return t}())===u&&(t=fo()),t}function co(){var r,t,e,n;return r=Uu,(t=wl())!==u&&Sl()!==u?((e=ha())===u&&(e=null),e!==u?(r,n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(Uu=r,r=u)):(Uu=r,r=u),r}function fo(){var t,e,n,s,o,a,i,l,c,f,b,v,L;return t=Uu,(e=co())===u&&(e=null),e!==u&&Sl()!==u?("check"===r.substr(Uu,5).toLowerCase()?(n=r.substr(Uu,5),Uu+=5):(n=u,0===$u&&ju(G)),n!==u&&Sl()!==u?(s=Uu,"not"===r.substr(Uu,3).toLowerCase()?(o=r.substr(Uu,3),Uu+=3):(o=u,0===$u&&ju(Y)),o!==u&&(a=Sl())!==u?("for"===r.substr(Uu,3).toLowerCase()?(i=r.substr(Uu,3),Uu+=3):(i=u,0===$u&&ju(B)),i!==u&&(l=Sl())!==u?("replication"===r.substr(Uu,11).toLowerCase()?(c=r.substr(Uu,11),Uu+=11):(c=u,0===$u&&ju(W)),c!==u&&(f=Sl())!==u?s=o=[o,a,i,l,c,f]:(Uu=s,s=u)):(Uu=s,s=u)):(Uu=s,s=u),s===u&&(s=null),s!==u&&(o=yl())!==u&&(a=Sl())!==u&&(i=oa())!==u&&(l=Sl())!==u&&(c=Tl())!==u?(t,b=e,v=s,L=i,t=e={constraint_type:n.toLowerCase(),keyword:b&&b.keyword,constraint:b&&b.constraint,index_type:v&&{keyword:"not for replication",type:""},definition:[L],resource:"constraint"}):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u),t}function bo(){var t,e,n,s,o,a,i,l,c,f;return t=Uu,(e=function(){var t,e,n,s;t=Uu,"references"===r.substr(Uu,10).toLowerCase()?(e=r.substr(Uu,10),Uu+=10):(e=u,0===$u&&ju(bu));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="REFERENCES"):(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&Sl()!==u&&(n=ko())!==u&&Sl()!==u&&(s=yo())!==u&&Sl()!==u?("match full"===r.substr(Uu,10).toLowerCase()?(o=r.substr(Uu,10),Uu+=10):(o=u,0===$u&&ju(V)),o===u&&("match partial"===r.substr(Uu,13).toLowerCase()?(o=r.substr(Uu,13),Uu+=13):(o=u,0===$u&&ju(K)),o===u&&("match simple"===r.substr(Uu,12).toLowerCase()?(o=r.substr(Uu,12),Uu+=12):(o=u,0===$u&&ju(q)))),o===u&&(o=null),o!==u&&Sl()!==u?((a=vo())===u&&(a=null),a!==u&&Sl()!==u?((i=vo())===u&&(i=null),i!==u?(t,l=o,c=a,f=i,t=e={definition:s,table:n,keyword:e.toLowerCase(),match:l&&l.toLowerCase(),on_delete:c,on_update:f}):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u),t}function vo(){var t,e,n,s,o,a;return t=Uu,"on"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=u,0===$u&&ju(Z)),e!==u&&_l()!==u?("delete"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=u,0===$u&&ju(z)),n===u&&("update"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=u,0===$u&&ju(Q))),n!==u&&_l()!==u&&(s=function(){var t,e;t=Uu,"restrict"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(J));e===u&&("cascade"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(rr)),e===u&&("set null"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(tr)),e===u&&("no action"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=u,0===$u&&ju(er)),e===u&&("set default"===r.substr(Uu,11).toLowerCase()?(e=r.substr(Uu,11),Uu+=11):(e=u,0===$u&&ju(nr))))));e!==u&&(t,e=e.toLowerCase());return t=e}())!==u?(t,o=n,a=s,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(Uu=t,t=u)):(Uu=t,t=u),t}function Lo(){var t,e,n;return t=Uu,"character"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=u,0===$u&&ju(sr)),e!==u&&Sl()!==u?("set"===r.substr(Uu,3).toLowerCase()?(n=r.substr(Uu,3),Uu+=3):(n=u,0===$u&&ju(ur)),n!==u?(t,t=e="CHARACTER SET"):(Uu=t,t=u)):(Uu=t,t=u),t}function Co(){var t,e,n,s,o,a,i,l,c;return t=Uu,(e=Ja())===u&&(e=null),e!==u&&Sl()!==u?((n=Lo())===u&&("charset"===r.substr(Uu,7).toLowerCase()?(n=r.substr(Uu,7),Uu+=7):(n=u,0===$u&&ju(or)),n===u&&("collate"===r.substr(Uu,7).toLowerCase()?(n=r.substr(Uu,7),Uu+=7):(n=u,0===$u&&ju(ar)))),n!==u&&Sl()!==u?((s=fl())===u&&(s=null),s!==u&&Sl()!==u&&(o=ma())!==u?(t,i=n,l=s,c=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:l,value:c}):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u),t}function po(){var t,e,n,s,o,a,i,l,c;return t=Uu,"auto_increment"===r.substr(Uu,14).toLowerCase()?(e=r.substr(Uu,14),Uu+=14):(e=u,0===$u&&ju(ir)),e===u&&("avg_row_length"===r.substr(Uu,14).toLowerCase()?(e=r.substr(Uu,14),Uu+=14):(e=u,0===$u&&ju(lr)),e===u&&("key_block_size"===r.substr(Uu,14).toLowerCase()?(e=r.substr(Uu,14),Uu+=14):(e=u,0===$u&&ju(cr)),e===u&&("max_rows"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(fr)),e===u&&("min_rows"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(br)),e===u&&("stats_sample_pages"===r.substr(Uu,18).toLowerCase()?(e=r.substr(Uu,18),Uu+=18):(e=u,0===$u&&ju(vr))))))),e!==u&&Sl()!==u?((n=fl())===u&&(n=null),n!==u&&Sl()!==u&&(s=Wa())!==u?(t,l=n,c=s,t=e={keyword:e.toLowerCase(),symbol:l,value:c.value}):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Co())===u&&(t=Uu,(e=pl())===u&&("connection"===r.substr(Uu,10).toLowerCase()?(e=r.substr(Uu,10),Uu+=10):(e=u,0===$u&&ju(Lr))),e!==u&&Sl()!==u?((n=fl())===u&&(n=null),n!==u&&Sl()!==u&&(s=Ha())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,s)):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,"compression"===r.substr(Uu,11).toLowerCase()?(e=r.substr(Uu,11),Uu+=11):(e=u,0===$u&&ju(Cr)),e!==u&&Sl()!==u?((n=fl())===u&&(n=null),n!==u&&Sl()!==u?(s=Uu,39===r.charCodeAt(Uu)?(o="'",Uu++):(o=u,0===$u&&ju(dr)),o!==u?("zlib"===r.substr(Uu,4).toLowerCase()?(a=r.substr(Uu,4),Uu+=4):(a=u,0===$u&&ju(pr)),a===u&&("lz4"===r.substr(Uu,3).toLowerCase()?(a=r.substr(Uu,3),Uu+=3):(a=u,0===$u&&ju(wr)),a===u&&("none"===r.substr(Uu,4).toLowerCase()?(a=r.substr(Uu,4),Uu+=4):(a=u,0===$u&&ju($)))),a!==u?(39===r.charCodeAt(Uu)?(i="'",Uu++):(i=u,0===$u&&ju(dr)),i!==u?s=o=[o,a,i]:(Uu=s,s=u)):(Uu=s,s=u)):(Uu=s,s=u),s!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,s)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,"engine"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(Er)),e!==u&&Sl()!==u?((n=fl())===u&&(n=null),n!==u&&Sl()!==u&&(s=ma())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,s)):(Uu=t,t=u)):(Uu=t,t=u)))),t}function wo(){var t,e,n,s,o;return t=Uu,(e=Fo())!==u&&Sl()!==u&&(n=function(){var t,e,n;return t=Uu,"read"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(Ar)),e!==u&&Sl()!==u?("local"===r.substr(Uu,5).toLowerCase()?(n=r.substr(Uu,5),Uu+=5):(n=u,0===$u&&ju(hr)),n===u&&(n=null),n!==u?(t,t=e={type:"read",suffix:n&&"local"}):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,"low_priority"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=u,0===$u&&ju(yr)),e===u&&(e=null),e!==u&&Sl()!==u?("write"===r.substr(Uu,5).toLowerCase()?(n=r.substr(Uu,5),Uu+=5):(n=u,0===$u&&ju(Tr)),n!==u?(t,t=e={type:"write",prefix:e&&"low_priority"}):(Uu=t,t=u)):(Uu=t,t=u)),t}())!==u?(t,s=e,o=n,nc.add(`lock::${s.db}::${s.table}`),t=e={table:s,lock_type:o}):(Uu=t,t=u),t}function Eo(){var t,e,n,s,o,a,i;return(t=To())===u&&(t=Uu,e=Uu,40===r.charCodeAt(Uu)?(n="(",Uu++):(n=u,0===$u&&ju(mr)),n!==u&&(s=Sl())!==u&&(o=Eo())!==u&&(a=Sl())!==u?(41===r.charCodeAt(Uu)?(i=")",Uu++):(i=u,0===$u&&ju(Ir)),i!==u?e=n=[n,s,o,a,i]:(Uu=e,e=u)):(Uu=e,e=u),e!==u&&(t,e={...e[2],parentheses_symbol:!0}),t=e),t}function Ao(){var t,e,n,s,o,a,i,l,c;if(t=Uu,Ti()!==u)if(Sl()!==u)if((e=ho())!==u){for(n=[],s=Uu,(o=Sl())!==u&&(a=Al())!==u&&(i=Sl())!==u&&(l=ho())!==u?s=o=[o,a,i,l]:(Uu=s,s=u);s!==u;)n.push(s),s=Uu,(o=Sl())!==u&&(a=Al())!==u&&(i=Sl())!==u&&(l=ho())!==u?s=o=[o,a,i,l]:(Uu=s,s=u);n!==u?(t,t=v(e,n)):(Uu=t,t=u)}else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;return t===u&&(t=Uu,Sl()!==u&&Ti()!==u&&(e=Sl())!==u&&(n=function(){var t,e,n,s;t=Uu,"RECURSIVE"===r.substr(Uu,9)?(e="RECURSIVE",Uu+=9):(e=u,0===$u&&ju(Je));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&(s=Sl())!==u&&(o=ho())!==u?(t,(c=o).recursive=!0,t=[c]):(Uu=t,t=u)),t}function ho(){var r,t,e,n,s;return r=Uu,(t=Ha())===u&&(t=ma()),t!==u&&Sl()!==u?((e=yo())===u&&(e=null),e!==u&&Sl()!==u&&Li()!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(n=qu())!==u&&Sl()!==u&&Tl()!==u?(r,"string"==typeof(s=t)&&(s={type:"default",value:s}),r=t={name:s,stmt:n,columns:e}):(Uu=r,r=u)):(Uu=r,r=u),r}function yo(){var r,t;return r=Uu,yl()!==u&&Sl()!==u&&(t=Bo())!==u&&Sl()!==u&&Tl()!==u?(r,r=t):(Uu=r,r=u),r}function To(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C,d,p,w,E,A,h,y,T,m;return t=Uu,Sl()!==u?((e=Ao())===u&&(e=null),e!==u&&Sl()!==u&&function(){var t,e,n,s;t=Uu,"select"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(qe));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}()!==u&&_l()!==u?((n=function(){var r,t,e,n,s,o;if(r=Uu,(t=mo())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=mo())!==u?n=s=[s,o]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=mo())!==u?n=s=[s,o]:(Uu=n,n=u);e!==u?(r,t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())===u&&(n=null),n!==u&&Sl()!==u?((s=function(){var t,e,n,s,o;t=Uu,(e=ti())!==u&&Sl()!==u&&(n=yl())!==u&&Sl()!==u&&(s=Xa())!==u&&Sl()!==u&&Tl()!==u&&Sl()!==u?("percent"===r.substr(Uu,7).toLowerCase()?(o=r.substr(Uu,7),Uu+=7):(o=u,0===$u&&ju(Nr)),o===u&&(o=null),o!==u?(t,e={value:s,percent:(a=o)&&a.toLowerCase(),parentheses:!0},t=e):(Uu=t,t=u)):(Uu=t,t=u);var a;t===u&&(t=Uu,(e=ti())!==u&&Sl()!==u&&(n=Xa())!==u&&Sl()!==u?("percent"===r.substr(Uu,7).toLowerCase()?(s=r.substr(Uu,7),Uu+=7):(s=u,0===$u&&ju(Nr)),s===u&&(s=null),s!==u?(t,e=function(r,t){return{value:r,percent:t&&t.toLowerCase()}}(n,s),t=e):(Uu=t,t=u)):(Uu=t,t=u));return t}())===u&&(s=null),s!==u&&Sl()!==u?((o=_i())===u&&(o=null),o!==u&&Sl()!==u&&(a=Io())!==u&&Sl()!==u?((i=So())===u&&(i=null),i!==u&&Sl()!==u?((l=Yo())===u&&(l=null),l!==u&&Sl()!==u?((c=function(){var t,e,n;t=Uu,(e=function(){var t,e,n,s;t=Uu,"group"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(In));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&Sl()!==u&&Ii()!==u&&Sl()!==u&&(n=ta())!==u?(t,e=n.value,t=e):(Uu=t,t=u);return t}())===u&&(c=null),c!==u&&Sl()!==u?((f=function(){var t,e;t=Uu,function(){var t,e,n,s;t=Uu,"having"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(Sn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}()!==u&&Sl()!==u&&(e=aa())!==u?(t,t=e):(Uu=t,t=u);return t}())===u&&(f=null),f!==u&&Sl()!==u?((b=Xo())===u&&(b=null),b!==u&&Sl()!==u?((v=qo())===u&&(v=null),v!==u?(t,L=e,C=n,d=s,p=o,w=a,A=l,h=c,y=f,T=b,m=v,(E=i)&&E.forEach(r=>r.table&&nc.add(`select::${r.db}::${r.table}`)),t={with:L,type:"select",options:C,distinct:p,columns:w,from:E,where:A,groupby:h,having:y,top:d,orderby:T,limit:m}):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u),t}function mo(){var t,e;return t=Uu,(e=function(){var t;"sql_calc_found_rows"===r.substr(Uu,19).toLowerCase()?(t=r.substr(Uu,19),Uu+=19):(t=u,0===$u&&ju(vu));return t}())===u&&((e=function(){var t;"sql_cache"===r.substr(Uu,9).toLowerCase()?(t=r.substr(Uu,9),Uu+=9):(t=u,0===$u&&ju(Lu));return t}())===u&&(e=function(){var t;"sql_no_cache"===r.substr(Uu,12).toLowerCase()?(t=r.substr(Uu,12),Uu+=12):(t=u,0===$u&&ju(Cu));return t}()),e===u&&(e=function(){var t;"sql_big_result"===r.substr(Uu,14).toLowerCase()?(t=r.substr(Uu,14),Uu+=14):(t=u,0===$u&&ju(pu));return t}())===u&&(e=function(){var t;"sql_small_result"===r.substr(Uu,16).toLowerCase()?(t=r.substr(Uu,16),Uu+=16):(t=u,0===$u&&ju(du));return t}())===u&&(e=function(){var t;"sql_buffer_result"===r.substr(Uu,17).toLowerCase()?(t=r.substr(Uu,17),Uu+=17):(t=u,0===$u&&ju(wu));return t}())),e!==u&&(t,e=e),t=e}function Io(){var r,t,e,n,s,o,a,i,l,c;if(r=Uu,(t=Si())===u&&(t=Uu,(e=hl())!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=hl())),t!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=No())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=No())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,l=t,c=e,sc.add("select::null::(.*)"),r=t=c&&c.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},Ql(l[0],c)):l[0]):(Uu=r,r=u)}else Uu=r,r=u;if(r===u)if(r=Uu,(t=No())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=No())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=No())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,r=t=v(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}function No(){var r,t,e,n,s;return r=Uu,t=Uu,(e=ha())!==u&&(n=Sl())!==u&&(s=El())!==u?t=e=[e,n,s]:(Uu=t,t=u),t===u&&(t=null),t!==u&&(e=Sl())!==u&&(n=hl())!==u?(r,r=t=function(r){const t=r&&r[0]||null;return sc.add(`select::${t}::(.*)`),{expr:{type:"column_ref",table:t,column:"*"},as:null}}(t)):(Uu=r,r=u),r===u&&(r=Uu,(t=function(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=oa())!==u){if(e=[],n=Uu,(s=Sl())!==u?((o=Di())===u&&(o=$i())===u&&(o=Rl()),o!==u&&(a=Sl())!==u&&(i=oa())!==u?n=s=[s,o,a,i]:(Uu=n,n=u)):(Uu=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Uu,(s=Sl())!==u?((o=Di())===u&&(o=$i())===u&&(o=Rl()),o!==u&&(a=Sl())!==u&&(i=oa())!==u?n=s=[s,o,a,i]:(Uu=n,n=u)):(Uu=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=t.length;let n=t[e-1][3];for(let s=e-1;s>=0;s--){const e=0===s?r:t[s-1][3];n=Zl(t[s][1],e,n)}return n}(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())===u&&(t=oa()),t!==u&&(e=Sl())!==u?((n=Ro())===u&&(n=null),n!==u?(r,r=t={expr:t,as:n}):(Uu=r,r=u)):(Uu=r,r=u)),r}function Ro(){var r,t,e;return r=Uu,(t=Li())!==u&&Sl()!==u&&(e=function(){var r,t;r=Uu,(t=ma())!==u?(Uu,(function(r){if(!0===Kl[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return!1}(t)?u:void 0)!==u?(r,r=t=t):(Uu=r,r=u)):(Uu=r,r=u);r===u&&(r=Uu,(t=ya())!==u&&(r,t=t),r=t);return r}())!==u?(r,r=t=e):(Uu=r,r=u),r===u&&(r=Uu,(t=Li())===u&&(t=null),t!==u&&Sl()!==u&&(e=ha())!==u?(r,r=t=e):(Uu=r,r=u)),r}function So(){var t,e;return t=Uu,function(){var t,e,n,s;t=Uu,"from"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(un));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}()!==u&&Sl()!==u&&(e=ko())!==u?(t,t=e):(Uu=t,t=u),t}function _o(){var r,t,e;return r=Uu,(t=Ho())!==u&&Sl()!==u&&ri()!==u&&Sl()!==u&&(e=Ho())!==u?(r,r=t=[t,e]):(Uu=r,r=u),r}function Oo(){var t,e,n;return t=Uu,(e=yi())!==u&&Sl()!==u?("btree"===r.substr(Uu,5).toLowerCase()?(n=r.substr(Uu,5),Uu+=5):(n=u,0===$u&&ju(Rr)),n===u&&("hash"===r.substr(Uu,4).toLowerCase()?(n=r.substr(Uu,4),Uu+=4):(n=u,0===$u&&ju(Sr))),n!==u?(t,t=e={keyword:"using",type:n.toLowerCase()}):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,"nonclustered"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=u,0===$u&&ju(_r)),e!==u&&(t,e={keyword:e.toLowerCase()}),t=e),t}function go(){var r,t,e,n,s,o;if(r=Uu,(t=Mo())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Mo())!==u?n=s=[s,o]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Mo())!==u?n=s=[s,o]:(Uu=n,n=u);e!==u?(r,r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}function xo(){var r,t,e,n;return r=Uu,(t=Wa())!==u&&Sl()!==u&&(e=ri())!==u&&Sl()!==u&&Wa()!==u?(r,n=t,r=t={type:"range",symbol:e[0],start:n,end:n}):(Uu=r,r=u),r===u&&(r=Wa()),r}function Uo(){var t,e,n;return t=Uu,pi()!==u&&Sl()!==u?("partitions"===r.substr(Uu,10).toLowerCase()?(e=r.substr(Uu,10),Uu+=10):(e=u,0===$u&&ju(Or)),e!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(n=function(){var r,t,e,n,s,o,a,l;if(r=Uu,(t=xo())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(l=xo())!==u?n=s=[s,o,a,l]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(l=xo())!==u?n=s=[s,o,a,l]:(Uu=n,n=u);e!==u?(r,r=t=i(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}())!==u&&Sl()!==u&&Tl()!==u?(t,t={type:"on partitions",partitions:n}):(Uu=t,t=u)):(Uu=t,t=u),t}function Mo(){var t,e,n,s,o,a;return t=Uu,(e=function(){var t,e,n,s;t=Uu,"key_block_size"===r.substr(Uu,14).toLowerCase()?(e=r.substr(Uu,14),Uu+=14):(e=u,0===$u&&ju(cr));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="KEY_BLOCK_SIZE"):(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&Sl()!==u?((n=fl())===u&&(n=null),n!==u&&Sl()!==u&&(s=Wa())!==u?(t,t=e=gr(e,n,s)):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,"fillfactor"===r.substr(Uu,10).toLowerCase()?(e=r.substr(Uu,10),Uu+=10):(e=u,0===$u&&ju(xr)),e===u&&("max_duration"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=u,0===$u&&ju(Ur)),e===u&&("maxdop"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(Mr)))),e!==u&&Sl()!==u&&(n=fl())!==u&&Sl()!==u&&(s=Wa())!==u?(t,t=e=gr(e,n,s)):(Uu=t,t=u),t===u&&(t=Oo())===u&&(t=Uu,"with"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(kr)),e!==u&&Sl()!==u?("parser"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=u,0===$u&&ju(Dr)),n!==u&&Sl()!==u&&(s=ma())!==u?(t,t=e={type:"with parser",expr:s}):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,"visible"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju($r)),e===u&&("invisible"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=u,0===$u&&ju(Pr))),e!==u&&(t,e={type:(a=e).toLowerCase(),expr:a.toLowerCase()}),(t=e)===u&&(t=Uu,"pad_index"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=u,0===$u&&ju(Fr)),e===u&&("sort_in_tempdb"===r.substr(Uu,14).toLowerCase()?(e=r.substr(Uu,14),Uu+=14):(e=u,0===$u&&ju(Gr)),e===u&&("ignore_dup_key"===r.substr(Uu,14).toLowerCase()?(e=r.substr(Uu,14),Uu+=14):(e=u,0===$u&&ju(Hr)),e===u&&("statistics_norecompute"===r.substr(Uu,22).toLowerCase()?(e=r.substr(Uu,22),Uu+=22):(e=u,0===$u&&ju(jr)),e===u&&("statistics_incremental"===r.substr(Uu,22).toLowerCase()?(e=r.substr(Uu,22),Uu+=22):(e=u,0===$u&&ju(Yr)),e===u&&("drop_existing"===r.substr(Uu,13).toLowerCase()?(e=r.substr(Uu,13),Uu+=13):(e=u,0===$u&&ju(Br)),e===u&&("online"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(Wr)),e===u&&("resumable"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=u,0===$u&&ju(Xr)),e===u&&("allow_row_locks"===r.substr(Uu,15).toLowerCase()?(e=r.substr(Uu,15),Uu+=15):(e=u,0===$u&&ju(Vr)),e===u&&("allow_page_locks"===r.substr(Uu,16).toLowerCase()?(e=r.substr(Uu,16),Uu+=16):(e=u,0===$u&&ju(Kr)),e===u&&("optimize_for_sequential_key"===r.substr(Uu,27).toLowerCase()?(e=r.substr(Uu,27),Uu+=27):(e=u,0===$u&&ju(qr)))))))))))),e!==u&&Sl()!==u&&(n=fl())!==u&&Sl()!==u?((s=pi())===u&&(s=function(){var t,e,n,s;t=Uu,"off"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(vn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}()),s!==u?(t,t=e=function(r,t,e){return{type:r.toLowerCase(),symbol:t,expr:{type:"origin",value:e[0]}}}(e,n,s)):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,"data_compression"===r.substr(Uu,16).toLowerCase()?(e=r.substr(Uu,16),Uu+=16):(e=u,0===$u&&ju(Zr)),e!==u&&Sl()!==u&&(n=fl())!==u&&Sl()!==u?("none"===r.substr(Uu,4).toLowerCase()?(s=r.substr(Uu,4),Uu+=4):(s=u,0===$u&&ju($)),s===u&&("row"===r.substr(Uu,3).toLowerCase()?(s=r.substr(Uu,3),Uu+=3):(s=u,0===$u&&ju(zr)),s===u&&("PAGE"===r.substr(Uu,4)?(s="PAGE",Uu+=4):(s=u,0===$u&&ju(Qr)))),s!==u&&Sl()!==u?((o=Uo())===u&&(o=null),o!==u?(t,t=e=function(r,t,e,n){return{type:r.toLowerCase(),symbol:t,expr:{value:e,on:n}}}(e,n,s,o)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=gl())))))),t}function ko(){var r,t,e,n;if(r=Uu,(t=Fo())!==u){for(e=[],n=Do();n!==u;)e.push(n),n=Do();e!==u?(r,r=t=Jr(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}function Do(){var r,t,e;return r=Uu,Sl()!==u&&(t=Al())!==u&&Sl()!==u&&(e=Fo())!==u?(r,r=e):(Uu=r,r=u),r===u&&(r=Uu,Sl()!==u&&(t=function(){var r,t,e,n,s,o;r=Uu,(t=Go())!==u&&Sl()!==u&&(e=Fo())!==u&&Sl()!==u&&(n=yi())!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(s=Ia())!==u&&Sl()!==u&&(o=Tl())!==u?(r,a=t,l=s,(i=e).join=a,i.using=l,r=t=i):(Uu=r,r=u);var a,i,l;r===u&&(r=Uu,(t=Go())!==u&&Sl()!==u&&(e=Fo())!==u&&Sl()!==u?((n=jo())===u&&(n=null),n!==u?(r,t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(Uu=r,r=u)):(Uu=r,r=u),r===u&&(r=Uu,(t=Go())!==u&&Sl()!==u&&(e=yl())!==u&&Sl()!==u&&(n=qu())!==u&&Sl()!==u&&Tl()!==u&&Sl()!==u?((s=Ro())===u&&(s=null),s!==u&&Sl()!==u?((o=jo())===u&&(o=null),o!==u?(r,t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,s,o),r=t):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u)));return r}())!==u?(r,r=t):(Uu=r,r=u)),r}function $o(){var t,e,n,s,o,a;return t=Uu,"forceseek"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=u,0===$u&&ju(rt)),e!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(n=ha())!==u&&Sl()!==u&&(s=yl())!==u&&Sl()!==u&&(o=Bo())!==u&&Sl()!==u&&Tl()!==u&&Sl()!==u&&Tl()!==u?(t,t=e={keyword:"forceseek",index:n,index_columns:o,parentheses:!0}):(Uu=t,t=u),t===u&&(t=Uu,"spatial_window_max_cells"===r.substr(Uu,24).toLowerCase()?(e=r.substr(Uu,24),Uu+=24):(e=u,0===$u&&ju(tt)),e!==u&&Sl()!==u&&fl()!==u&&Sl()!==u&&(n=Wa())!==u?(t,t=e={keyword:"spatial_window_max_cells",expr:n}):(Uu=t,t=u),t===u&&(t=Uu,"noexpand"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(et)),e===u&&(e=null),e!==u&&Sl()!==u&&Ll()!==u&&Sl()!==u&&(n=yl())!==u&&Sl()!==u&&(s=Ia())!==u&&Sl()!==u&&(o=Tl())!==u?(t,t=e={keyword:"index",expr:s,parentheses:!0,prefix:(a=e)&&a.toLowerCase()}):(Uu=t,t=u),t===u&&(t=Uu,"noexpand"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(et)),e===u&&(e=null),e!==u&&Sl()!==u&&Ll()!==u&&Sl()!==u&&(n=fl())!==u&&Sl()!==u&&(s=ha())!==u?(t,t=e=function(r,t){return{keyword:"index",expr:t,prefix:r&&r.toLowerCase()}}(e,s)):(Uu=t,t=u),t===u&&(t=Uu,"noexpand"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(et)),e===u&&("forcescan"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=u,0===$u&&ju(nt)),e===u&&("forceseek"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=u,0===$u&&ju(rt)),e===u&&("holdlock"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(st)),e===u&&("nolock"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(ut)),e===u&&("nowait"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(ot)),e===u&&("paglock"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(at)),e===u&&("readcommitted"===r.substr(Uu,13).toLowerCase()?(e=r.substr(Uu,13),Uu+=13):(e=u,0===$u&&ju(it)),e===u&&("readcommittedlock"===r.substr(Uu,17).toLowerCase()?(e=r.substr(Uu,17),Uu+=17):(e=u,0===$u&&ju(lt)),e===u&&("readpast"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(ct)),e===u&&("readuncommitted"===r.substr(Uu,15).toLowerCase()?(e=r.substr(Uu,15),Uu+=15):(e=u,0===$u&&ju(ft)),e===u&&("repeatableread "===r.substr(Uu,15).toLowerCase()?(e=r.substr(Uu,15),Uu+=15):(e=u,0===$u&&ju(bt)),e===u&&("rowlock"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(vt)),e===u&&("serializable"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=u,0===$u&&ju(Lt)),e===u&&("snapshot"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(Ct)),e===u&&("tablock"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(dt)),e===u&&("tablockx"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(pt)),e===u&&("updlock"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(wt)),e===u&&("xlock"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(Et)))))))))))))))))))),e!==u&&(t,e=function(r){return{keyword:"literal_string",expr:{type:"origin",value:r}}}(e)),t=e)))),t}function Po(){var r,t;return r=Uu,Ti()!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(t=function(){var r,t,e,n,s,o,a,l;if(r=Uu,(t=$o())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(l=$o())!==u?n=s=[s,o,a,l]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(l=$o())!==u?n=s=[s,o,a,l]:(Uu=n,n=u);e!==u?(r,r=t=i(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}())!==u&&Sl()!==u&&Tl()!==u?(r,r={keyword:"with",expr:t,parentheses:!0}):(Uu=r,r=u),r}function Fo(){var t,e,n,s,o,a,i,l;return t=Uu,(e=function(){var t;"dual"===r.substr(Uu,4).toLowerCase()?(t=r.substr(Uu,4),Uu+=4):(t=u,0===$u&&ju(nu));return t}())!==u&&(t,e={type:"dual"}),(t=e)===u&&(t=Uu,(e=Ho())!==u&&Sl()!==u?((n=Ro())===u&&(n=null),n!==u&&Sl()!==u?((s=Po())===u&&(s=null),s!==u?(t,i=n,l=s,(a=e).as=i,a.table_hint=l,t=e=a):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,(e=yl())!==u&&Sl()!==u&&(n=qu())!==u&&Sl()!==u&&(s=Tl())!==u&&Sl()!==u?((o=Ro())===u&&(o=null),o!==u?(t,t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,o)):(Uu=t,t=u)):(Uu=t,t=u))),t}function Go(){var t,e,n,s;return t=Uu,(e=function(){var t,e,n,s;t=Uu,"left"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(Ln));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&(n=Sl())!==u?((s=Ei())===u&&(s=null),s!==u&&Sl()!==u&&wi()!==u?(t,t=e="LEFT JOIN"):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,(e=function(){var t,e,n,s;t=Uu,"right"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(Cn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&(n=Sl())!==u?((s=Ei())===u&&(s=null),s!==u&&Sl()!==u&&wi()!==u?(t,t=e="RIGHT JOIN"):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,(e=function(){var t,e,n,s;t=Uu,"full"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(dn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&(n=Sl())!==u?((s=Ei())===u&&(s=null),s!==u&&Sl()!==u&&wi()!==u?(t,t=e="FULL JOIN"):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,e=Uu,(n=function(){var t,e,n,s;t=Uu,"inner"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(pn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&(s=Sl())!==u?e=n=[n,s]:(Uu=e,e=u),e===u&&(e=null),e!==u&&(n=wi())!==u?(t,t=e="INNER JOIN"):(Uu=t,t=u)))),t}function Ho(){var r,t,e,n,s,o,a,i,l;return r=Uu,(t=ha())!==u?(e=Uu,(n=Sl())!==u&&(s=El())!==u&&(o=Sl())!==u&&(a=ha())!==u?e=n=[n,s,o,a]:(Uu=e,e=u),e!==u?(n=Uu,(s=Sl())!==u&&(o=El())!==u&&(a=Sl())!==u&&(i=ha())!==u?n=s=[s,o,a,i]:(Uu=n,n=u),n!==u?(r,r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=r,n.schema=t[3],n.table=e[3]),n}(t,e,n)):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u),r===u&&(r=Uu,(t=ha())!==u?(e=Uu,(n=Sl())!==u&&(s=El())!==u&&(o=Sl())!==u&&(a=ha())!==u?e=n=[n,s,o,a]:(Uu=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Uu=r,r=u)):(Uu=r,r=u),r===u&&(r=Uu,(t=Bl())!==u&&(r,(l=t).db=null,l.table=l.name,t=l),r=t)),r}function jo(){var r,t;return r=Uu,pi()!==u&&Sl()!==u&&(t=aa())!==u?(r,r=t):(Uu=r,r=u),r}function Yo(){var t,e;return t=Uu,function(){var t,e,n,s;t=Uu,"where"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(Tn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}()!==u&&Sl()!==u&&(e=aa())!==u?(t,t=e):(Uu=t,t=u),t}function Bo(){var r;return(r=function(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=Ea())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=Ea())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=Ea())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,t=v(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=Fa())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=Fa())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=Fa())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,t=v(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}()),r}function Wo(){var r,t;return r=Uu,fi()!==u&&Sl()!==u&&Ii()!==u&&Sl()!==u&&(t=Io())!==u?(r,r=t):(Uu=r,r=u),r}function Xo(){var t,e;return t=Uu,function(){var t,e,n,s;t=Uu,"order"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(Rn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}()!==u&&Sl()!==u&&Ii()!==u&&Sl()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=Vo())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=Vo())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=Vo())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,t=v(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())!==u?(t,t=e):(Uu=t,t=u),t}function Vo(){var r,t,e;return r=Uu,(t=oa())!==u&&Sl()!==u?((e=Ri())===u&&(e=Ni()),e===u&&(e=null),e!==u?(r,r=t=function(r,t){const e={expr:r,type:"ASC"};return"DESC"===t&&(e.type="DESC"),e}(t,e)):(Uu=r,r=u)):(Uu=r,r=u),r}function Ko(){var r;return(r=Wa())===u&&(r=_a()),r}function qo(){var t,e,n,s,o,a;return t=Uu,function(){var t,e,n,s;t=Uu,"limit"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(_n));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}()!==u&&Sl()!==u&&(e=Ko())!==u&&Sl()!==u?(n=Uu,(s=Al())===u&&(s=function(){var t,e,n,s;t=Uu,"offset"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(On));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="OFFSET"):(Uu=t,t=u)):(Uu=t,t=u);return t}()),s!==u&&(o=Sl())!==u&&(a=Ko())!==u?n=s=[s,o,a]:(Uu=n,n=u),n===u&&(n=null),n!==u?(t,t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(Uu=t,t=u)):(Uu=t,t=u),t}function Zo(){var t,e,n,s,o,a,i,l,c;return t=Uu,e=Uu,(n=ha())!==u&&(s=Sl())!==u&&(o=El())!==u?e=n=[n,s,o]:(Uu=e,e=u),e===u&&(e=null),e!==u&&(n=Sl())!==u&&(s=Ta())!==u&&(o=Sl())!==u?(61===r.charCodeAt(Uu)?(a="=",Uu++):(a=u,0===$u&&ju(At)),a!==u&&Sl()!==u&&(i=La())!==u?(t,t=e={column:s,value:i,table:(c=e)&&c[0]}):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,e=Uu,(n=ha())!==u&&(s=Sl())!==u&&(o=El())!==u?e=n=[n,s,o]:(Uu=e,e=u),e===u&&(e=null),e!==u&&(n=Sl())!==u&&(s=Ta())!==u&&(o=Sl())!==u?(61===r.charCodeAt(Uu)?(a="=",Uu++):(a=u,0===$u&&ju(At)),a!==u&&Sl()!==u&&(i=hi())!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(l=Ea())!==u&&Sl()!==u&&Tl()!==u?(t,t=e=function(r,t,e){return{column:t,value:e,table:r&&r[0],keyword:"values"}}(e,s,l)):(Uu=t,t=u)):(Uu=t,t=u)),t}function zo(){var r;return(r=function(){var r,t;r=Uu,hi()!==u&&Sl()!==u&&(t=function(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=ra())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=ra())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=ra())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,t=v(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())!==u?(r,r=t):(Uu=r,r=u);return r}())===u&&(r=To()),r}function Qo(){var r,t,e;return r=Uu,fi()!==u&&Sl()!==u&&(t=yl())!==u&&Sl()!==u&&(e=Ia())!==u&&Sl()!==u&&Tl()!==u?(r,r=e):(Uu=r,r=u),r===u&&(r=Uu,fi()!==u&&Sl()!==u&&(t=ra())!==u?(r,r=t):(Uu=r,r=u)),r}function Jo(){var t,e;return t=Uu,(e=function(){var t,e,n,s;t=Uu,"insert"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(Qe));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&(t,e="insert"),(t=e)===u&&(t=Uu,(e=ii())!==u&&(t,e="replace"),t=e),t}function ra(){var r,t;return r=Uu,yl()!==u&&Sl()!==u&&(t=ta())!==u&&Sl()!==u&&Tl()!==u?(r,r=t):(Uu=r,r=u),r}function ta(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=oa())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=oa())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=oa())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,r=t=function(r,t){const e={type:"expr_list"};return e.value=Ql(r,t),e}(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}function ea(){var t,e,n;return t=Uu,function(){var t,e,n,s;t=Uu,"interval"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju($s));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="INTERVAL"):(Uu=t,t=u)):(Uu=t,t=u);return t}()!==u&&Sl()!==u&&(e=oa())!==u&&Sl()!==u&&(n=function(){var t;(t=function(){var t,e,n,s;t=Uu,"year"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(Ps));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="YEAR"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Uu,"month"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(Fs));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="MONTH"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Uu,"day"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(Gs));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="DAY"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Uu,"hour"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(Hs));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="HOUR"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Uu,"minute"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(js));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="MINUTE"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Uu,"second"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(Ys));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="SECOND"):(Uu=t,t=u)):(Uu=t,t=u);return t}());return t}())!==u?(t,t={type:"interval",expr:e,unit:n.toLowerCase()}):(Uu=t,t=u),t}function na(){var r,t,e,n,s,o;if(r=Uu,(t=sa())!==u)if(Sl()!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=sa())!==u?n=s=[s,o]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=sa())!==u?n=s=[s,o]:(Uu=n,n=u);e!==u?(r,r=t=f(t,e)):(Uu=r,r=u)}else Uu=r,r=u;else Uu=r,r=u;return r}function sa(){var t,e,n;return t=Uu,function(){var t,e,n,s;t=Uu,"when"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(qn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}()!==u&&Sl()!==u&&(e=aa())!==u&&Sl()!==u&&function(){var t,e,n,s;t=Uu,"then"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(Zn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}()!==u&&Sl()!==u&&(n=oa())!==u?(t,t={type:"when",cond:e,result:n}):(Uu=t,t=u),t}function ua(){var t,e;return t=Uu,function(){var t,e,n,s;t=Uu,"else"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(zn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}()!==u&&Sl()!==u&&(e=oa())!==u?(t,t={type:"else",result:e}):(Uu=t,t=u),t}function oa(){var r;return(r=function(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=wa())!==u){if(e=[],n=Uu,(s=Sl())!==u&&(o=Rl())!==u&&(a=Sl())!==u&&(i=wa())!==u?n=s=[s,o,a,i]:(Uu=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Rl())!==u&&(a=Sl())!==u&&(i=wa())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);else e=u;e!==u&&(n=Sl())!==u?((s=fa())===u&&(s=null),s!==u?(r,t=function(r,t,e){const n=Jl(r,t);return null===e?n:"arithmetic"===e.type?Jl(n,e.tail):Zl(e.op,n,e.right)}(t,e,s),r=t):(Uu=r,r=u)):(Uu=r,r=u)}else Uu=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=ia())!==u){for(e=[],n=Uu,(s=_l())!==u&&(o=$i())!==u&&(a=Sl())!==u&&(i=ia())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=_l())!==u&&(o=$i())!==u&&(a=Sl())!==u&&(i=ia())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,t=ht(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o;if(r=Uu,(t=Ca())!==u){if(e=[],n=Uu,(s=Sl())!==u&&(o=wa())!==u?n=s=[s,o]:(Uu=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=wa())!==u?n=s=[s,o]:(Uu=n,n=u);else e=u;e!==u?(r,t=ql(t,e[0][1]),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())===u&&(r=qu()),r}function aa(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=oa())!==u){for(e=[],n=Uu,(s=Sl())!==u?((o=Di())===u&&(o=$i())===u&&(o=Al()),o!==u&&(a=Sl())!==u&&(i=oa())!==u?n=s=[s,o,a,i]:(Uu=n,n=u)):(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u?((o=Di())===u&&(o=$i())===u&&(o=Al()),o!==u&&(a=Sl())!==u&&(i=oa())!==u?n=s=[s,o,a,i]:(Uu=n,n=u)):(Uu=n,n=u);e!==u?(r,r=t=function(r,t){const e=t.length;let n=r,s="";for(let r=0;r<e;++r)","===t[r][1]?(s=",",Array.isArray(n)||(n=[n]),n.push(t[r][3])):n=Zl(t[r][1],n,t[r][3]);if(","===s){const r={type:"expr_list"};return r.value=n,r}return n}(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}function ia(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=la())!==u){for(e=[],n=Uu,(s=_l())!==u&&(o=Di())!==u&&(a=Sl())!==u&&(i=la())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=_l())!==u&&(o=Di())!==u&&(a=Sl())!==u&&(i=la())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,r=t=ht(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}function la(){var t,e,n,s,o;return(t=ca())===u&&(t=function(){var r,t,e;r=Uu,(t=function(){var r,t,e,n,s;r=Uu,t=Uu,(e=ki())!==u&&(n=Sl())!==u&&(s=Mi())!==u?t=e=[e,n,s]:(Uu=t,t=u);t!==u&&(r,t=Tt(t));(r=t)===u&&(r=Mi());return r}())!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(e=qu())!==u&&Sl()!==u&&Tl()!==u?(r,n=t,(s=e).parentheses=!0,t=ql(n,s),r=t):(Uu=r,r=u);var n,s;return r}())===u&&(t=Uu,(e=ki())===u&&(e=Uu,33===r.charCodeAt(Uu)?(n="!",Uu++):(n=u,0===$u&&ju(yt)),n!==u?(s=Uu,$u++,61===r.charCodeAt(Uu)?(o="=",Uu++):(o=u,0===$u&&ju(At)),$u--,o===u?s=void 0:(Uu=s,s=u),s!==u?e=n=[n,s]:(Uu=e,e=u)):(Uu=e,e=u)),e!==u&&(n=Sl())!==u&&(s=la())!==u?(t,t=e=ql("NOT",s)):(Uu=t,t=u)),t}function ca(){var r,t,e,n,s;return r=Uu,(t=La())!==u&&Sl()!==u?((e=fa())===u&&(e=null),e!==u?(r,n=t,r=t=null===(s=e)?n:"arithmetic"===s.type?Jl(n,s.tail):Zl(s.op,n,s.right)):(Uu=r,r=u)):(Uu=r,r=u),r===u&&(r=Ha())===u&&(r=Ea()),r}function fa(){var r;return(r=function(){var r,t,e,n,s,o,a;r=Uu,t=[],e=Uu,(n=Sl())!==u&&(s=ba())!==u&&(o=Sl())!==u&&(a=La())!==u?e=n=[n,s,o,a]:(Uu=e,e=u);if(e!==u)for(;e!==u;)t.push(e),e=Uu,(n=Sl())!==u&&(s=ba())!==u&&(o=Sl())!==u&&(a=La())!==u?e=n=[n,s,o,a]:(Uu=e,e=u);else t=u;t!==u&&(r,t={type:"arithmetic",tail:t});return r=t}())===u&&(r=function(){var r,t,e,n;r=Uu,(t=va())!==u&&Sl()!==u&&(e=yl())!==u&&Sl()!==u&&(n=ta())!==u&&Sl()!==u&&Tl()!==u?(r,r=t={op:t,right:n}):(Uu=r,r=u);r===u&&(r=Uu,(t=va())!==u&&Sl()!==u?((e=Bl())===u&&(e=Ha()),e!==u?(r,t=function(r,t){return{op:r,right:t}}(t,e),r=t):(Uu=r,r=u)):(Uu=r,r=u));return r}())===u&&(r=function(){var r,t,e,n;r=Uu,(t=function(){var r,t,e,n,s;r=Uu,t=Uu,(e=ki())!==u&&(n=Sl())!==u&&(s=Oi())!==u?t=e=[e,n,s]:(Uu=t,t=u);t!==u&&(r,t=Tt(t));(r=t)===u&&(r=Oi());return r}())!==u&&Sl()!==u&&(e=La())!==u&&Sl()!==u&&Di()!==u&&Sl()!==u&&(n=La())!==u?(r,r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Uu=r,r=u);return r}())===u&&(r=function(){var r,t,e,n,s;r=Uu,(t=xi())!==u&&(e=Sl())!==u&&(n=La())!==u?(r,r=t={op:"IS",right:n}):(Uu=r,r=u);r===u&&(r=Uu,t=Uu,(e=xi())!==u&&(n=Sl())!==u&&(s=ki())!==u?t=e=[e,n,s]:(Uu=t,t=u),t!==u&&(e=Sl())!==u&&(n=La())!==u?(r,t=function(r){return{op:"IS NOT",right:r}}(n),r=t):(Uu=r,r=u));return r}())===u&&(r=function(){var r,t,e;r=Uu,(t=function(){var r,t,e,n,s;r=Uu,t=Uu,(e=ki())!==u&&(n=Sl())!==u&&(s=Ui())!==u?t=e=[e,n,s]:(Uu=t,t=u);t!==u&&(r,t=Tt(t));(r=t)===u&&(r=Ui());return r}())!==u&&Sl()!==u?((e=Fa())===u&&(e=ca()),e!==u?(r,r=t={op:t,right:e}):(Uu=r,r=u)):(Uu=r,r=u);return r}()),r}function ba(){var t;return">="===r.substr(Uu,2)?(t=">=",Uu+=2):(t=u,0===$u&&ju(mt)),t===u&&(62===r.charCodeAt(Uu)?(t=">",Uu++):(t=u,0===$u&&ju(It)),t===u&&("<="===r.substr(Uu,2)?(t="<=",Uu+=2):(t=u,0===$u&&ju(Nt)),t===u&&("<>"===r.substr(Uu,2)?(t="<>",Uu+=2):(t=u,0===$u&&ju(Rt)),t===u&&(60===r.charCodeAt(Uu)?(t="<",Uu++):(t=u,0===$u&&ju(St)),t===u&&(61===r.charCodeAt(Uu)?(t="=",Uu++):(t=u,0===$u&&ju(At)),t===u&&("!="===r.substr(Uu,2)?(t="!=",Uu+=2):(t=u,0===$u&&ju(_t)))))))),t}function va(){var r,t,e,n,s;return r=Uu,t=Uu,(e=ki())!==u&&(n=Sl())!==u&&(s=gi())!==u?t=e=[e,n,s]:(Uu=t,t=u),t!==u&&(r,t=Tt(t)),(r=t)===u&&(r=gi()),r}function La(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=da())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Ca())!==u&&(a=Sl())!==u&&(i=da())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Ca())!==u&&(a=Sl())!==u&&(i=da())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,r=t=ht(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}function Ca(){var t;return 43===r.charCodeAt(Uu)?(t="+",Uu++):(t=u,0===$u&&ju(Ot)),t===u&&(45===r.charCodeAt(Uu)?(t="-",Uu++):(t=u,0===$u&&ju(gt))),t}function da(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=wa())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=pa())!==u&&(a=Sl())!==u&&(i=wa())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=pa())!==u&&(a=Sl())!==u&&(i=wa())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,r=t=Jl(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}function pa(){var t;return 42===r.charCodeAt(Uu)?(t="*",Uu++):(t=u,0===$u&&ju(xt)),t===u&&(47===r.charCodeAt(Uu)?(t="/",Uu++):(t=u,0===$u&&ju(Ut)),t===u&&(37===r.charCodeAt(Uu)?(t="%",Uu++):(t=u,0===$u&&ju(Mt)))),t}function wa(){var t,e,n;return(t=function(){var t,e,n,s,o,a,i;t=Uu,(e=Gi())!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(n=oa())!==u&&Sl()!==u&&Li()!==u&&Sl()!==u&&(s=Xl())!==u&&Sl()!==u&&(o=Tl())!==u?(t,l=n,c=s,e={type:"cast",keyword:e.toLowerCase(),expr:l,symbol:"as",target:c},t=e):(Uu=t,t=u);var l,c;t===u&&(t=Uu,(e=Gi())!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(n=oa())!==u&&Sl()!==u&&Li()!==u&&Sl()!==u&&(s=Wi())!==u&&Sl()!==u&&(o=yl())!==u&&Sl()!==u&&(a=Va())!==u&&Sl()!==u&&Tl()!==u&&Sl()!==u&&(i=Tl())!==u?(t,e=function(r,t,e){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+")"}}}(e,n,a),t=e):(Uu=t,t=u),t===u&&(t=Uu,(e=Gi())!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(n=oa())!==u&&Sl()!==u&&Li()!==u&&Sl()!==u&&(s=Wi())!==u&&Sl()!==u&&(o=yl())!==u&&Sl()!==u&&(a=Va())!==u&&Sl()!==u&&Al()!==u&&Sl()!==u&&(i=Va())!==u&&Sl()!==u&&Tl()!==u&&Sl()!==u&&Tl()!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+", "+n+")"}}}(e,n,a,i),t=e):(Uu=t,t=u),t===u&&(t=Uu,(e=Gi())!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(n=oa())!==u&&Sl()!==u&&Li()!==u&&Sl()!==u&&(s=function(){var t;(t=function(){var t,e,n,s;t=Uu,"signed"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(ls));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="SIGNED"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=Xi());return t}())!==u&&Sl()!==u?((o=Ki())===u&&(o=null),o!==u&&Sl()!==u&&(a=Tl())!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:e+(n?" "+n:"")}}}(e,n,s,o),t=e):(Uu=t,t=u)):(Uu=t,t=u))));return t}())===u&&(t=Fa())===u&&(t=function(){var t;(t=function(){var t,e,n,s;t=Uu,(e=function(){var t,e,n,s;t=Uu,"count"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(jn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="COUNT"):(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(n=function(){var t,e,n,s,o;t=Uu,(e=function(){var t,e;t=Uu,42===r.charCodeAt(Uu)?(e="*",Uu++):(e=u,0===$u&&ju(xt));e!==u&&(t,e={type:"star",value:"*"});return t=e}())!==u&&(t,e={expr:e});(t=e)===u&&(t=Uu,(e=_i())===u&&(e=null),e!==u&&Sl()!==u&&(n=yl())!==u&&Sl()!==u&&(s=oa())!==u&&Sl()!==u&&Tl()!==u&&Sl()!==u?((o=Xo())===u&&(o=null),o!==u?(t,t=e={distinct:e,expr:s,orderby:o,parentheses:!0}):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,(e=_i())===u&&(e=null),e!==u&&Sl()!==u&&(n=oa())!==u&&Sl()!==u?((s=Xo())===u&&(s=null),s!==u?(t,e=function(r,t,e){return{distinct:r,expr:t,orderby:e}}(e,n,s),t=e):(Uu=t,t=u)):(Uu=t,t=u)));return t}())!==u&&Sl()!==u&&Tl()!==u&&Sl()!==u?((s=ga())===u&&(s=null),s!==u?(t,t=e={type:"aggr_func",name:e,args:n,over:s}):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Uu,(e=function(){var t;(t=function(){var t,e,n,s;t=Uu,"sum"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(Wn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="SUM"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Uu,"max"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(Yn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="MAX"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Uu,"min"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(Bn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="MIN"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Uu,"avg"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(Xn));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="AVG"):(Uu=t,t=u)):(Uu=t,t=u);return t}());return t}())!==u&&Sl()!==u&&yl()!==u&&Sl()!==u&&(n=La())!==u&&Sl()!==u&&Tl()!==u&&Sl()!==u?((s=ga())===u&&(s=null),s!==u?(t,t=e={type:"aggr_func",name:e,args:{expr:n},over:s}):(Uu=t,t=u)):(Uu=t,t=u);return t}());return t}())===u&&(t=function(){var t,e,n,s,o;t=Uu,(e=Hl())!==u&&Sl()!==u&&(n=yl())!==u&&Sl()!==u?((s=aa())===u&&(s=null),s!==u&&Sl()!==u&&Tl()!==u&&Sl()!==u?((o=ga())===u&&(o=null),o!==u?(t,a=e,l=o,(i=s)&&"expr_list"!==i.type&&(i={type:"expr_list",value:[i]}),t=e={type:"function",name:a,args:i||{type:"expr_list",value:[]},over:l}):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u);var a,i,l;t===u&&(t=Uu,(e=function(){var t;(t=Pa())===u&&(t=function(){var t,e,n,s;t=Uu,"current_user"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=u,0===$u&&ju(Xs));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="CURRENT_USER"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Uu,"user"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(ks));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="USER"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Uu,"session_user"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=u,0===$u&&ju(Vs));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="SESSION_USER"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Uu,"system_user"===r.substr(Uu,11).toLowerCase()?(e=r.substr(Uu,11),Uu+=11):(e=u,0===$u&&ju(Ks));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="SYSTEM_USER"):(Uu=t,t=u)):(Uu=t,t=u);return t}());return t}())!==u&&Sl()!==u&&(n=yl())!==u&&Sl()!==u?((s=ta())===u&&(s=null),s!==u&&Sl()!==u&&Tl()!==u&&Sl()!==u?((o=ga())===u&&(o=null),o!==u?(t,e=function(r,t,e){return{type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,s,o),t=e):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,(e=Pa())!==u&&Sl()!==u?((n=Oa())===u&&(n=null),n!==u?(t,t=e={type:"function",name:e,over:n}):(Uu=t,t=u)):(Uu=t,t=u)));return t}())===u&&(t=function(){var r,t,e,n,s,o,a,i;return r=Uu,Pi()!==u&&Sl()!==u&&(t=na())!==u&&Sl()!==u?((e=ua())===u&&(e=null),e!==u&&Sl()!==u&&(n=Fi())!==u&&Sl()!==u?((s=Pi())===u&&(s=null),s!==u?(r,a=t,(i=e)&&a.push(i),r={type:"case",expr:null,args:a}):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u),r===u&&(r=Uu,Pi()!==u&&Sl()!==u&&(t=oa())!==u&&Sl()!==u&&(e=na())!==u&&Sl()!==u?((n=ua())===u&&(n=null),n!==u&&Sl()!==u&&(s=Fi())!==u&&Sl()!==u?((o=Pi())===u&&(o=null),o!==u?(r,r=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(t,e,n)):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u)),r}())===u&&(t=ea())===u&&(t=Ea())===u&&(t=_a())===u&&(t=Uu,yl()!==u&&Sl()!==u&&(e=aa())!==u&&Sl()!==u&&Tl()!==u?(t,(n=e).parentheses=!0,t=n):(Uu=t,t=u),t===u&&(t=Bl())),t}function Ea(){var r,t,e,n,s;return r=Uu,(t=ha())!==u&&Sl()!==u&&El()!==u&&Sl()!==u&&(e=Ta())!==u?(r,n=t,s=e,sc.add(`select::${n}::${s}`),r=t={type:"column_ref",table:n,column:s}):(Uu=r,r=u),r===u&&(r=Uu,(t=Ta())!==u&&(r,t=function(r){return sc.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t),r}function Aa(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=Ta())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=Ta())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=Ta())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,r=t=v(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}function ha(){var r,t;return r=Uu,(t=ma())!==u?(Uu,(kt(t)?u:void 0)!==u?(r,r=t=t):(Uu=r,r=u)):(Uu=r,r=u),r===u&&(r=Uu,(t=ya())!==u&&(r,t=t),r=t),r}function ya(){var t;return(t=function(){var t,e,n,s;t=Uu,34===r.charCodeAt(Uu)?(e='"',Uu++):(e=u,0===$u&&ju(Dt));if(e!==u){if(n=[],$t.test(r.charAt(Uu))?(s=r.charAt(Uu),Uu++):(s=u,0===$u&&ju(Pt)),s!==u)for(;s!==u;)n.push(s),$t.test(r.charAt(Uu))?(s=r.charAt(Uu),Uu++):(s=u,0===$u&&ju(Pt));else n=u;n!==u?(34===r.charCodeAt(Uu)?(s='"',Uu++):(s=u,0===$u&&ju(Dt)),s!==u?(t,e=Ft(n),t=e):(Uu=t,t=u)):(Uu=t,t=u)}else Uu=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=Uu,39===r.charCodeAt(Uu)?(e="'",Uu++):(e=u,0===$u&&ju(dr));if(e!==u){if(n=[],Gt.test(r.charAt(Uu))?(s=r.charAt(Uu),Uu++):(s=u,0===$u&&ju(Ht)),s!==u)for(;s!==u;)n.push(s),Gt.test(r.charAt(Uu))?(s=r.charAt(Uu),Uu++):(s=u,0===$u&&ju(Ht));else n=u;n!==u?(39===r.charCodeAt(Uu)?(s="'",Uu++):(s=u,0===$u&&ju(dr)),s!==u?(t,e=Ft(n),t=e):(Uu=t,t=u)):(Uu=t,t=u)}else Uu=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=Uu,96===r.charCodeAt(Uu)?(e="`",Uu++):(e=u,0===$u&&ju(jt));if(e!==u){if(n=[],Yt.test(r.charAt(Uu))?(s=r.charAt(Uu),Uu++):(s=u,0===$u&&ju(Bt)),s!==u)for(;s!==u;)n.push(s),Yt.test(r.charAt(Uu))?(s=r.charAt(Uu),Uu++):(s=u,0===$u&&ju(Bt));else n=u;n!==u?(96===r.charCodeAt(Uu)?(s="`",Uu++):(s=u,0===$u&&ju(jt)),s!==u?(t,e=Ft(n),t=e):(Uu=t,t=u)):(Uu=t,t=u)}else Uu=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=Uu,91===r.charCodeAt(Uu)?(e="[",Uu++):(e=u,0===$u&&ju(Wt));if(e!==u){if(n=[],Xt.test(r.charAt(Uu))?(s=r.charAt(Uu),Uu++):(s=u,0===$u&&ju(Vt)),s!==u)for(;s!==u;)n.push(s),Xt.test(r.charAt(Uu))?(s=r.charAt(Uu),Uu++):(s=u,0===$u&&ju(Vt));else n=u;n!==u?(93===r.charCodeAt(Uu)?(s="]",Uu++):(s=u,0===$u&&ju(Kt)),s!==u?(t,e=Ft(n),t=e):(Uu=t,t=u)):(Uu=t,t=u)}else Uu=t,t=u;return t}()),t}function Ta(){var r,t;return r=Uu,(t=function(){var r,t,e,n;if(r=Uu,(t=Na())!==u){for(e=[],n=Sa();n!==u;)e.push(n),n=Sa();e!==u?(r,t=qt(t,e),r=t):(Uu=r,r=u)}else Uu=r,r=u;return r}())!==u?(Uu,(kt(t)?u:void 0)!==u?(r,r=t=t):(Uu=r,r=u)):(Uu=r,r=u),r===u&&(r=ya()),r}function ma(){var r,t,e,n;if(r=Uu,(t=Na())!==u){for(e=[],n=Ra();n!==u;)e.push(n),n=Ra();e!==u?(r,r=t=qt(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}function Ia(){var r,t,e,n,s,o,a,l;if(r=Uu,(t=ma())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(l=ma())!==u?n=s=[s,o,a,l]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(l=ma())!==u?n=s=[s,o,a,l]:(Uu=n,n=u);e!==u?(r,r=t=i(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}function Na(){var t;return Zt.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=u,0===$u&&ju(zt)),t}function Ra(){var t;return Qt.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=u,0===$u&&ju(Jt)),t}function Sa(){var t;return re.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=u,0===$u&&ju(te)),t}function _a(){var t,e,n,s;return t=Uu,e=Uu,58===r.charCodeAt(Uu)?(n=":",Uu++):(n=u,0===$u&&ju(ee)),n!==u&&(s=ma())!==u?e=n=[n,s]:(Uu=e,e=u),e!==u&&(t,e={type:"param",value:e[1]}),t=e}function Oa(){var r,t,e;return r=Uu,pi()!==u&&Sl()!==u&&ui()!==u&&Sl()!==u&&(t=il())!==u&&Sl()!==u&&yl()!==u&&Sl()!==u?((e=ta())===u&&(e=null),e!==u&&Sl()!==u&&Tl()!==u?(r,r={type:"on update",keyword:t,parentheses:!0,expr:e}):(Uu=r,r=u)):(Uu=r,r=u),r===u&&(r=Uu,pi()!==u&&Sl()!==u&&ui()!==u&&Sl()!==u&&(t=il())!==u?(r,r=function(r){return{type:"on update",keyword:r}}(t)):(Uu=r,r=u)),r}function ga(){var t,e,n;return t=Uu,"over"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(ne)),e!==u&&Sl()!==u&&(n=xa())!==u?(t,t=e={type:"window",as_window_specification:n}):(Uu=t,t=u),t===u&&(t=Oa()),t}function xa(){var r,t;return(r=ma())===u&&(r=Uu,yl()!==u&&Sl()!==u?((t=function(){var r,t,e,n;r=Uu,(t=Wo())===u&&(t=null);t!==u&&Sl()!==u?((e=Xo())===u&&(e=null),e!==u&&Sl()!==u?((n=function(){var r,t,e,n,s;r=Uu,(t=ul())!==u&&Sl()!==u?((e=Ma())===u&&(e=ka()),e!==u?(r,t="rows "+e.value,r=t):(Uu=r,r=u)):(Uu=r,r=u);r===u&&(r=Uu,(t=ul())!==u&&Sl()!==u&&(e=Oi())!==u&&Sl()!==u&&(n=Ua())!==u&&Sl()!==u&&Di()!==u&&Sl()!==u&&(s=Ua())!==u?(r,o=s,t=`rows between ${n.value} and ${o.value}`,r=t):(Uu=r,r=u));var o;return r}())===u&&(n=null),n!==u?(r,r=t={name:null,partitionby:t,orderby:e,window_frame_clause:n}):(Uu=r,r=u)):(Uu=r,r=u)):(Uu=r,r=u);return r}())===u&&(t=null),t!==u&&Sl()!==u&&Tl()!==u?(r,r={window_specification:t||{},parentheses:!0}):(Uu=r,r=u)):(Uu=r,r=u)),r}function Ua(){var r;return(r=ka())===u&&(r=Ma()),r}function Ma(){var t,e,n,s;return t=Uu,(e=$a())!==u&&Sl()!==u?("following"===r.substr(Uu,9).toLowerCase()?(n=r.substr(Uu,9),Uu+=9):(n=u,0===$u&&ju(se)),n!==u?(t,(s=e).value+=" FOLLOWING",t=e=s):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Da()),t}function ka(){var t,e,n,s;return t=Uu,(e=$a())!==u&&Sl()!==u?("preceding"===r.substr(Uu,9).toLowerCase()?(n=r.substr(Uu,9),Uu+=9):(n=u,0===$u&&ju(ue)),n!==u?(t,(s=e).value+=" PRECEDING",t=e=s):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Da()),t}function Da(){var t,e,n;return t=Uu,"current"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(oe)),e!==u&&Sl()!==u?("row"===r.substr(Uu,3).toLowerCase()?(n=r.substr(Uu,3),Uu+=3):(n=u,0===$u&&ju(zr)),n!==u?(t,t=e={type:"single_quote_string",value:"current row"}):(Uu=t,t=u)):(Uu=t,t=u),t}function $a(){var t,e;return t=Uu,"unbounded"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=u,0===$u&&ju(ae)),e!==u&&(t,e={type:"single_quote_string",value:e.toUpperCase()}),(t=e)===u&&(t=Wa()),t}function Pa(){var t;return(t=function(){var t,e,n,s;t=Uu,"current_date"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=u,0===$u&&ju(Ds));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="CURRENT_DATE"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Uu,"current_time"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=u,0===$u&&ju(Bs));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="CURRENT_TIME"):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=il()),t}function Fa(){var t;return(t=Ha())===u&&(t=Wa())===u&&(t=function(){var t,e;t=Uu,(e=function(){var t,e,n,s;t=Uu,"true"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(He));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!0});(t=e)===u&&(t=Uu,(e=function(){var t,e,n,s;t=Uu,"false"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(Be));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!1}),t=e);return t}())===u&&(t=Ga())===u&&(t=function(){var t,e,n,s,o,a;t=Uu,(e=ol())===u&&(e=tl())===u&&(e=al())===u&&(e=el());if(e!==u)if(Sl()!==u){if(n=Uu,39===r.charCodeAt(Uu)?(s="'",Uu++):(s=u,0===$u&&ju(dr)),s!==u){for(o=[],a=Ya();a!==u;)o.push(a),a=Ya();o!==u?(39===r.charCodeAt(Uu)?(a="'",Uu++):(a=u,0===$u&&ju(dr)),a!==u?n=s=[s,o,a]:(Uu=n,n=u)):(Uu=n,n=u)}else Uu=n,n=u;n!==u?(t,e=le(e,n),t=e):(Uu=t,t=u)}else Uu=t,t=u;else Uu=t,t=u;if(t===u)if(t=Uu,(e=ol())===u&&(e=tl())===u&&(e=al())===u&&(e=el()),e!==u)if(Sl()!==u){if(n=Uu,34===r.charCodeAt(Uu)?(s='"',Uu++):(s=u,0===$u&&ju(Dt)),s!==u){for(o=[],a=ja();a!==u;)o.push(a),a=ja();o!==u?(34===r.charCodeAt(Uu)?(a='"',Uu++):(a=u,0===$u&&ju(Dt)),a!==u?n=s=[s,o,a]:(Uu=n,n=u)):(Uu=n,n=u)}else Uu=n,n=u;n!==u?(t,e=le(e,n),t=e):(Uu=t,t=u)}else Uu=t,t=u;else Uu=t,t=u;return t}()),t}function Ga(){var t,e;return t=Uu,(e=function(){var t,e,n,s;t=Uu,"null"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(Fe));e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u);return t}())!==u&&(t,e={type:"null",value:null}),t=e}function Ha(){var t,e,n,s,o,a;if(t=Uu,"n"===r.substr(Uu,1).toLowerCase()?(e=r.charAt(Uu),Uu++):(e=u,0===$u&&ju(ie)),e===u&&(e=null),e!==u){if(n=Uu,39===r.charCodeAt(Uu)?(s="'",Uu++):(s=u,0===$u&&ju(dr)),s!==u){for(o=[],a=Ya();a!==u;)o.push(a),a=Ya();o!==u?(39===r.charCodeAt(Uu)?(a="'",Uu++):(a=u,0===$u&&ju(dr)),a!==u?n=s=[s,o,a]:(Uu=n,n=u)):(Uu=n,n=u)}else Uu=n,n=u;n!==u?(t,t=e={type:e?"var_string":"string",value:n[1].join("")}):(Uu=t,t=u)}else Uu=t,t=u;if(t===u){if(t=Uu,e=Uu,34===r.charCodeAt(Uu)?(n='"',Uu++):(n=u,0===$u&&ju(Dt)),n!==u){for(s=[],o=ja();o!==u;)s.push(o),o=ja();s!==u?(34===r.charCodeAt(Uu)?(o='"',Uu++):(o=u,0===$u&&ju(Dt)),o!==u?e=n=[n,s,o]:(Uu=e,e=u)):(Uu=e,e=u)}else Uu=e,e=u;e!==u&&(t,e=function(r){return{type:"string",value:r[1].join("")}}(e)),t=e}return t}function ja(){var t;return ce.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=u,0===$u&&ju(fe)),t===u&&(t=Ba()),t}function Ya(){var t;return be.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=u,0===$u&&ju(ve)),t===u&&(t=Ba()),t}function Ba(){var t,e,n,s,o,a,i,l,c,f;return t=Uu,"\\'"===r.substr(Uu,2)?(e="\\'",Uu+=2):(e=u,0===$u&&ju(Le)),e!==u&&(t,e="\\'"),(t=e)===u&&(t=Uu,'\\"'===r.substr(Uu,2)?(e='\\"',Uu+=2):(e=u,0===$u&&ju(Ce)),e!==u&&(t,e='\\"'),(t=e)===u&&(t=Uu,"\\\\"===r.substr(Uu,2)?(e="\\\\",Uu+=2):(e=u,0===$u&&ju(de)),e!==u&&(t,e="\\\\"),(t=e)===u&&(t=Uu,"\\/"===r.substr(Uu,2)?(e="\\/",Uu+=2):(e=u,0===$u&&ju(pe)),e!==u&&(t,e="\\/"),(t=e)===u&&(t=Uu,"\\b"===r.substr(Uu,2)?(e="\\b",Uu+=2):(e=u,0===$u&&ju(we)),e!==u&&(t,e="\b"),(t=e)===u&&(t=Uu,"\\f"===r.substr(Uu,2)?(e="\\f",Uu+=2):(e=u,0===$u&&ju(Ee)),e!==u&&(t,e="\f"),(t=e)===u&&(t=Uu,"\\n"===r.substr(Uu,2)?(e="\\n",Uu+=2):(e=u,0===$u&&ju(Ae)),e!==u&&(t,e="\n"),(t=e)===u&&(t=Uu,"\\r"===r.substr(Uu,2)?(e="\\r",Uu+=2):(e=u,0===$u&&ju(he)),e!==u&&(t,e="\r"),(t=e)===u&&(t=Uu,"\\t"===r.substr(Uu,2)?(e="\\t",Uu+=2):(e=u,0===$u&&ju(ye)),e!==u&&(t,e="\t"),(t=e)===u&&(t=Uu,"\\u"===r.substr(Uu,2)?(e="\\u",Uu+=2):(e=u,0===$u&&ju(Te)),e!==u&&(n=Qa())!==u&&(s=Qa())!==u&&(o=Qa())!==u&&(a=Qa())!==u?(t,i=n,l=s,c=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+l+c+f))):(Uu=t,t=u),t===u&&(t=Uu,92===r.charCodeAt(Uu)?(e="\\",Uu++):(e=u,0===$u&&ju(me)),e!==u&&(t,e="\\"),(t=e)===u&&(t=Uu,"''"===r.substr(Uu,2)?(e="''",Uu+=2):(e=u,0===$u&&ju(Ie)),e!==u&&(t,e="''"),(t=e)===u&&(t=Uu,'""'===r.substr(Uu,2)?(e='""',Uu+=2):(e=u,0===$u&&ju(Ne)),e!==u&&(t,e='""'),(t=e)===u&&(t=Uu,"``"===r.substr(Uu,2)?(e="``",Uu+=2):(e=u,0===$u&&ju(Re)),e!==u&&(t,e="``"),t=e))))))))))))),t}function Wa(){var r,t,e;return r=Uu,(t=Xa())!==u&&(r,t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function Xa(){var r,t,e,n;return r=Uu,(t=Va())!==u&&(e=Ka())!==u&&(n=qa())!==u?(r,r=t={type:"bigint",value:t+e+n}):(Uu=r,r=u),r===u&&(r=Uu,(t=Va())!==u&&(e=Ka())!==u?(r,r=t=function(r,t){const e=r+t;return zl(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e)):(Uu=r,r=u),r===u&&(r=Uu,(t=Va())!==u&&(e=qa())!==u?(r,r=t=function(r,t){return{type:"bigint",value:r+t}}(t,e)):(Uu=r,r=u),r===u&&(r=Uu,(t=Va())!==u&&(r,t=function(r){return zl(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t))),r}function Va(){var t,e,n;return(t=Za())===u&&(t=za())===u&&(t=Uu,45===r.charCodeAt(Uu)?(e="-",Uu++):(e=u,0===$u&&ju(gt)),e===u&&(43===r.charCodeAt(Uu)?(e="+",Uu++):(e=u,0===$u&&ju(Ot))),e!==u&&(n=Za())!==u?(t,t=e=e+n):(Uu=t,t=u),t===u&&(t=Uu,45===r.charCodeAt(Uu)?(e="-",Uu++):(e=u,0===$u&&ju(gt)),e===u&&(43===r.charCodeAt(Uu)?(e="+",Uu++):(e=u,0===$u&&ju(Ot))),e!==u&&(n=za())!==u?(t,t=e=function(r,t){return r+t}(e,n)):(Uu=t,t=u))),t}function Ka(){var t,e,n;return t=Uu,46===r.charCodeAt(Uu)?(e=".",Uu++):(e=u,0===$u&&ju(Oe)),e!==u&&(n=Za())!==u?(t,t=e="."+n):(Uu=t,t=u),t}function qa(){var t,e,n;return t=Uu,(e=function(){var t,e,n;t=Uu,ke.test(r.charAt(Uu))?(e=r.charAt(Uu),Uu++):(e=u,0===$u&&ju(De));e!==u?($e.test(r.charAt(Uu))?(n=r.charAt(Uu),Uu++):(n=u,0===$u&&ju(Pe)),n===u&&(n=null),n!==u?(t,t=e=e+(null!==(s=n)?s:"")):(Uu=t,t=u)):(Uu=t,t=u);var s;return t}())!==u&&(n=Za())!==u?(t,t=e=e+n):(Uu=t,t=u),t}function Za(){var r,t,e;if(r=Uu,t=[],(e=za())!==u)for(;e!==u;)t.push(e),e=za();else t=u;return t!==u&&(r,t=t.join("")),r=t}function za(){var t;return ge.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=u,0===$u&&ju(xe)),t}function Qa(){var t;return Ue.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=u,0===$u&&ju(Me)),t}function Ja(){var t,e,n,s;return t=Uu,"default"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(h)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function ri(){var t,e,n,s;return t=Uu,"to"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=u,0===$u&&ju(je)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function ti(){var t,e,n,s;return t=Uu,"top"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(Ye)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function ei(){var t,e,n,s;return t=Uu,"drop"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(We)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="DROP"):(Uu=t,t=u)):(Uu=t,t=u),t}function ni(){var t,e,n,s;return t=Uu,"declare"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(Xe)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="DECLARE"):(Uu=t,t=u)):(Uu=t,t=u),t}function si(){var t,e,n,s;return t=Uu,"alter"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(Ke)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="ALTER"):(Uu=t,t=u)):(Uu=t,t=u),t}function ui(){var t,e,n,s;return t=Uu,"update"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(Q)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function oi(){var t,e,n,s;return t=Uu,"create"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(Ze)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function ai(){var t,e,n,s;return t=Uu,"temporary"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=u,0===$u&&ju(ze)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function ii(){var t,e,n,s;return t=Uu,"replace"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(rn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function li(){var t,e,n,s;return t=Uu,"rename"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(tn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function ci(){var t,e,n,s;return t=Uu,"ignore"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(en)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function fi(){var t,e,n,s;return t=Uu,"partition"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=u,0===$u&&ju(nn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="PARTITION"):(Uu=t,t=u)):(Uu=t,t=u),t}function bi(){var t,e,n,s;return t=Uu,"into"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(sn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function vi(){var t,e,n,s;return t=Uu,"set"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(ur)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function Li(){var t,e,n,s;return t=Uu,"as"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=u,0===$u&&ju(an)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function Ci(){var t,e,n,s;return t=Uu,"table"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(ln)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="TABLE"):(Uu=t,t=u)):(Uu=t,t=u),t}function di(){var t,e,n,s;return t=Uu,"tables"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(bn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="TABLES"):(Uu=t,t=u)):(Uu=t,t=u),t}function pi(){var t,e,n,s;return t=Uu,"on"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=u,0===$u&&ju(Z)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function wi(){var t,e,n,s;return t=Uu,"join"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(wn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function Ei(){var t,e,n,s;return t=Uu,"outer"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(En)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function Ai(){var t,e,n,s;return t=Uu,"union"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(An)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function hi(){var t,e,n,s;return t=Uu,"values"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(hn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function yi(){var t,e,n,s;return t=Uu,"using"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(yn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function Ti(){var t,e,n,s;return t=Uu,"with"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(kr)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function mi(){var t,e,n,s;return t=Uu,"go"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=u,0===$u&&ju(mn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="GO"):(Uu=t,t=u)):(Uu=t,t=u),t}function Ii(){var t,e,n,s;return t=Uu,"by"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=u,0===$u&&ju(Nn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function Ni(){var t,e,n,s;return t=Uu,"asc"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(gn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="ASC"):(Uu=t,t=u)):(Uu=t,t=u),t}function Ri(){var t,e,n,s;return t=Uu,"desc"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(xn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="DESC"):(Uu=t,t=u)):(Uu=t,t=u),t}function Si(){var t,e,n,s;return t=Uu,"all"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(Un)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="ALL"):(Uu=t,t=u)):(Uu=t,t=u),t}function _i(){var t,e,n,s;return t=Uu,"distinct"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(Mn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="DISTINCT"):(Uu=t,t=u)):(Uu=t,t=u),t}function Oi(){var t,e,n,s;return t=Uu,"between"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(kn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="BETWEEN"):(Uu=t,t=u)):(Uu=t,t=u),t}function gi(){var t,e,n,s;return t=Uu,"in"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=u,0===$u&&ju(Dn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="IN"):(Uu=t,t=u)):(Uu=t,t=u),t}function xi(){var t,e,n,s;return t=Uu,"is"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=u,0===$u&&ju($n)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="IS"):(Uu=t,t=u)):(Uu=t,t=u),t}function Ui(){var t,e,n,s;return t=Uu,"like"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(Pn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="LIKE"):(Uu=t,t=u)):(Uu=t,t=u),t}function Mi(){var t,e,n,s;return t=Uu,"exists"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(Fn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="EXISTS"):(Uu=t,t=u)):(Uu=t,t=u),t}function ki(){var t,e,n,s;return t=Uu,"not"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(Y)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="NOT"):(Uu=t,t=u)):(Uu=t,t=u),t}function Di(){var t,e,n,s;return t=Uu,"and"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(Gn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="AND"):(Uu=t,t=u)):(Uu=t,t=u),t}function $i(){var t,e,n,s;return t=Uu,"or"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=u,0===$u&&ju(Hn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="OR"):(Uu=t,t=u)):(Uu=t,t=u),t}function Pi(){var t,e,n,s;return t=Uu,"case"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(Kn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function Fi(){var t,e,n,s;return t=Uu,"end"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(Qn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?t=e=[e,n]:(Uu=t,t=u)):(Uu=t,t=u),t}function Gi(){var t,e,n,s;return t=Uu,"cast"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(Jn)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="CAST"):(Uu=t,t=u)):(Uu=t,t=u),t}function Hi(){var t,e,n,s;return t=Uu,"char"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(ns)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="CHAR"):(Uu=t,t=u)):(Uu=t,t=u),t}function ji(){var t,e,n,s;return t=Uu,"varchar"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(ss)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="VARCHAR"):(Uu=t,t=u)):(Uu=t,t=u),t}function Yi(){var t,e,n,s;return t=Uu,"nvarchar"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(os)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="NVARCHAR"):(Uu=t,t=u)):(Uu=t,t=u),t}function Bi(){var t,e,n,s;return t=Uu,"numeric"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(as)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="NUMERIC"):(Uu=t,t=u)):(Uu=t,t=u),t}function Wi(){var t,e,n,s;return t=Uu,"decimal"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(is)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="DECIMAL"):(Uu=t,t=u)):(Uu=t,t=u),t}function Xi(){var t,e,n,s;return t=Uu,"unsigned"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(cs)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="UNSIGNED"):(Uu=t,t=u)):(Uu=t,t=u),t}function Vi(){var t,e,n,s;return t=Uu,"int"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(fs)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="INT"):(Uu=t,t=u)):(Uu=t,t=u),t}function Ki(){var t,e,n,s;return t=Uu,"integer"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(vs)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="INTEGER"):(Uu=t,t=u)):(Uu=t,t=u),t}function qi(){var t,e,n,s;return t=Uu,"smallint"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(Cs)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="SMALLINT"):(Uu=t,t=u)):(Uu=t,t=u),t}function Zi(){var t,e,n,s;return t=Uu,"tinyint"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(ds)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="TINYINT"):(Uu=t,t=u)):(Uu=t,t=u),t}function zi(){var t,e,n,s;return t=Uu,"bigint"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(hs)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="BIGINT"):(Uu=t,t=u)):(Uu=t,t=u),t}function Qi(){var t,e,n,s;return t=Uu,"float"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(ys)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="FLOAT"):(Uu=t,t=u)):(Uu=t,t=u),t}function Ji(){var t,e,n,s;return t=Uu,"real"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(Ts)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="REAL"):(Uu=t,t=u)):(Uu=t,t=u),t}function rl(){var t,e,n,s;return t=Uu,"double"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(ms)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="DOUBLE"):(Uu=t,t=u)):(Uu=t,t=u),t}function tl(){var t,e,n,s;return t=Uu,"date"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(Is)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="DATE"):(Uu=t,t=u)):(Uu=t,t=u),t}function el(){var t,e,n,s;return t=Uu,"datetime"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(Rs)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="DATETIME"):(Uu=t,t=u)):(Uu=t,t=u),t}function nl(){var t,e,n,s;return t=Uu,"datetime2"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=u,0===$u&&ju(Ss)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="DATETIME2"):(Uu=t,t=u)):(Uu=t,t=u),t}function sl(){var t,e,n,s;return t=Uu,"datetimeoffset"===r.substr(Uu,14).toLowerCase()?(e=r.substr(Uu,14),Uu+=14):(e=u,0===$u&&ju(_s)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="DATETIMEOFFSET"):(Uu=t,t=u)):(Uu=t,t=u),t}function ul(){var t,e,n,s;return t=Uu,"rows"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(Os)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="ROWS"):(Uu=t,t=u)):(Uu=t,t=u),t}function ol(){var t,e,n,s;return t=Uu,"time"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(gs)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="TIME"):(Uu=t,t=u)):(Uu=t,t=u),t}function al(){var t,e,n,s;return t=Uu,"timestamp"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=u,0===$u&&ju(xs)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="TIMESTAMP"):(Uu=t,t=u)):(Uu=t,t=u),t}function il(){var t,e,n,s;return t=Uu,"current_timestamp"===r.substr(Uu,17).toLowerCase()?(e=r.substr(Uu,17),Uu+=17):(e=u,0===$u&&ju(Ws)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="CURRENT_TIMESTAMP"):(Uu=t,t=u)):(Uu=t,t=u),t}function ll(){var t;return 64===r.charCodeAt(Uu)?(t="@",Uu++):(t=u,0===$u&&ju(S)),t}function cl(){var t;return(t=function(){var t;return"@@"===r.substr(Uu,2)?(t="@@",Uu+=2):(t=u,0===$u&&ju(Js)),t}())===u&&(t=ll())===u&&(t=function(){var t;return 36===r.charCodeAt(Uu)?(t="$",Uu++):(t=u,0===$u&&ju(ru)),t}()),t}function fl(){var t;return 61===r.charCodeAt(Uu)?(t="=",Uu++):(t=u,0===$u&&ju(At)),t}function bl(){var t,e,n,s;return t=Uu,"add"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(su)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="ADD"):(Uu=t,t=u)):(Uu=t,t=u),t}function vl(){var t,e,n,s;return t=Uu,"column"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(uu)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="COLUMN"):(Uu=t,t=u)):(Uu=t,t=u),t}function Ll(){var t,e,n,s;return t=Uu,"index"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(ou)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="INDEX"):(Uu=t,t=u)):(Uu=t,t=u),t}function Cl(){var t,e,n,s;return t=Uu,"key"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(d)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="KEY"):(Uu=t,t=u)):(Uu=t,t=u),t}function dl(){var t,e,n,s;return t=Uu,"unique"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=u,0===$u&&ju(L)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="UNIQUE"):(Uu=t,t=u)):(Uu=t,t=u),t}function pl(){var t,e,n,s;return t=Uu,"comment"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=u,0===$u&&ju(cu)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="COMMENT"):(Uu=t,t=u)):(Uu=t,t=u),t}function wl(){var t,e,n,s;return t=Uu,"constraint"===r.substr(Uu,10).toLowerCase()?(e=r.substr(Uu,10),Uu+=10):(e=u,0===$u&&ju(fu)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="CONSTRAINT"):(Uu=t,t=u)):(Uu=t,t=u),t}function El(){var t;return 46===r.charCodeAt(Uu)?(t=".",Uu++):(t=u,0===$u&&ju(Oe)),t}function Al(){var t;return 44===r.charCodeAt(Uu)?(t=",",Uu++):(t=u,0===$u&&ju(Eu)),t}function hl(){var t;return 42===r.charCodeAt(Uu)?(t="*",Uu++):(t=u,0===$u&&ju(xt)),t}function yl(){var t;return 40===r.charCodeAt(Uu)?(t="(",Uu++):(t=u,0===$u&&ju(mr)),t}function Tl(){var t;return 41===r.charCodeAt(Uu)?(t=")",Uu++):(t=u,0===$u&&ju(Ir)),t}function ml(){var t;return 91===r.charCodeAt(Uu)?(t="[",Uu++):(t=u,0===$u&&ju(Wt)),t}function Il(){var t;return 93===r.charCodeAt(Uu)?(t="]",Uu++):(t=u,0===$u&&ju(Kt)),t}function Nl(){var t;return 59===r.charCodeAt(Uu)?(t=";",Uu++):(t=u,0===$u&&ju(Au)),t}function Rl(){var t;return(t=function(){var t;return"||"===r.substr(Uu,2)?(t="||",Uu+=2):(t=u,0===$u&&ju(hu)),t}())===u&&(t=function(){var t;return"&&"===r.substr(Uu,2)?(t="&&",Uu+=2):(t=u,0===$u&&ju(yu)),t}()),t}function Sl(){var r,t;for(r=[],(t=Ul())===u&&(t=Ol());t!==u;)r.push(t),(t=Ul())===u&&(t=Ol());return r}function _l(){var r,t;if(r=[],(t=Ul())===u&&(t=Ol()),t!==u)for(;t!==u;)r.push(t),(t=Ul())===u&&(t=Ol());else r=u;return r}function Ol(){var t;return(t=function t(){var e,n,s,o,a,i,l;e=Uu,"/*"===r.substr(Uu,2)?(n="/*",Uu+=2):(n=u,0===$u&&ju(Tu));if(n!==u){for(s=[],o=Uu,a=Uu,$u++,"*/"===r.substr(Uu,2)?(i="*/",Uu+=2):(i=u,0===$u&&ju(mu)),$u--,i===u?a=void 0:(Uu=a,a=u),a!==u?(i=Uu,$u++,"/*"===r.substr(Uu,2)?(l="/*",Uu+=2):(l=u,0===$u&&ju(Tu)),$u--,l===u?i=void 0:(Uu=i,i=u),i!==u&&(l=xl())!==u?o=a=[a,i,l]:(Uu=o,o=u)):(Uu=o,o=u),o===u&&(o=t());o!==u;)s.push(o),o=Uu,a=Uu,$u++,"*/"===r.substr(Uu,2)?(i="*/",Uu+=2):(i=u,0===$u&&ju(mu)),$u--,i===u?a=void 0:(Uu=a,a=u),a!==u?(i=Uu,$u++,"/*"===r.substr(Uu,2)?(l="/*",Uu+=2):(l=u,0===$u&&ju(Tu)),$u--,l===u?i=void 0:(Uu=i,i=u),i!==u&&(l=xl())!==u?o=a=[a,i,l]:(Uu=o,o=u)):(Uu=o,o=u),o===u&&(o=t());s!==u?("*/"===r.substr(Uu,2)?(o="*/",Uu+=2):(o=u,0===$u&&ju(mu)),o!==u?e=n=[n,s,o]:(Uu=e,e=u)):(Uu=e,e=u)}else Uu=e,e=u;return e}())===u&&(t=function(){var t,e,n,s,o,a;t=Uu,"--"===r.substr(Uu,2)?(e="--",Uu+=2):(e=u,0===$u&&ju(Iu));if(e!==u){for(n=[],s=Uu,o=Uu,$u++,a=Ml(),$u--,a===u?o=void 0:(Uu=o,o=u),o!==u&&(a=xl())!==u?s=o=[o,a]:(Uu=s,s=u);s!==u;)n.push(s),s=Uu,o=Uu,$u++,a=Ml(),$u--,a===u?o=void 0:(Uu=o,o=u),o!==u&&(a=xl())!==u?s=o=[o,a]:(Uu=s,s=u);n!==u?t=e=[e,n]:(Uu=t,t=u)}else Uu=t,t=u;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=Uu,35===r.charCodeAt(Uu)?(e="#",Uu++):(e=u,0===$u&&ju(Nu));if(e!==u){for(n=[],s=Uu,o=Uu,$u++,a=Ml(),$u--,a===u?o=void 0:(Uu=o,o=u),o!==u&&(a=xl())!==u?s=o=[o,a]:(Uu=s,s=u);s!==u;)n.push(s),s=Uu,o=Uu,$u++,a=Ml(),$u--,a===u?o=void 0:(Uu=o,o=u),o!==u&&(a=xl())!==u?s=o=[o,a]:(Uu=s,s=u);n!==u?t=e=[e,n]:(Uu=t,t=u)}else Uu=t,t=u;return t}()),t}function gl(){var r,t,e,n,s,o,a;return r=Uu,(t=pl())!==u&&Sl()!==u?((e=fl())===u&&(e=null),e!==u&&Sl()!==u&&(n=Ha())!==u?(r,o=e,a=n,r=t={type:(s=t).toLowerCase(),keyword:s.toLowerCase(),symbol:o,value:a}):(Uu=r,r=u)):(Uu=r,r=u),r}function xl(){var t;return r.length>Uu?(t=r.charAt(Uu),Uu++):(t=u,0===$u&&ju(Ru)),t}function Ul(){var t;return Su.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=u,0===$u&&ju(_u)),t}function Ml(){var t,e;if((t=function(){var t,e;t=Uu,$u++,r.length>Uu?(e=r.charAt(Uu),Uu++):(e=u,0===$u&&ju(Ru));$u--,e===u?t=void 0:(Uu=t,t=u);return t}())===u)if(t=[],Se.test(r.charAt(Uu))?(e=r.charAt(Uu),Uu++):(e=u,0===$u&&ju(_e)),e!==u)for(;e!==u;)t.push(e),Se.test(r.charAt(Uu))?(e=r.charAt(Uu),Uu++):(e=u,0===$u&&ju(_e));else t=u;return t}function kl(){var t,e;return t=Uu,Uu,ec=[],( true?void 0:0)!==u&&Sl()!==u?((e=Dl())===u&&(e=function(){var t,e;t=Uu,function(){var t;return"return"===r.substr(Uu,6).toLowerCase()?(t=r.substr(Uu,6),Uu+=6):(t=u,0===$u&&ju(tu)),t}()!==u&&Sl()!==u&&(e=$l())!==u?(t,t={type:"return",expr:e}):(Uu=t,t=u);return t}()),e!==u?(t,t={stmt:e,vars:ec}):(Uu=t,t=u)):(Uu=t,t=u),t}function Dl(){var t,e,n,s;return t=Uu,(e=Bl())===u&&(e=Wl()),e!==u&&Sl()!==u?((n=function(){var t;return":="===r.substr(Uu,2)?(t=":=",Uu+=2):(t=u,0===$u&&ju(eu)),t}())===u&&(n=fl()),n!==u&&Sl()!==u&&(s=$l())!==u?(t,t=e={type:"assign",left:e,symbol:n,right:s}):(Uu=t,t=u)):(Uu=t,t=u),t}function $l(){var r;return(r=Eo())===u&&(r=function(){var r,t,e,n,s;r=Uu,(t=Bl())!==u&&Sl()!==u&&(e=Go())!==u&&Sl()!==u&&(n=Bl())!==u&&Sl()!==u&&(s=jo())!==u?(r,r=t={type:"join",ltable:t,rtable:n,op:e,on:s}):(Uu=r,r=u);return r}())===u&&(r=Pl())===u&&(r=function(){var r,t;r=Uu,ml()!==u&&Sl()!==u&&(t=Yl())!==u&&Sl()!==u&&Il()!==u?(r,r={type:"array",value:t}):(Uu=r,r=u);return r}()),r}function Pl(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=Fl())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Ca())!==u&&(a=Sl())!==u&&(i=Fl())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Ca())!==u&&(a=Sl())!==u&&(i=Fl())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,r=t=ht(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}function Fl(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=Gl())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=pa())!==u&&(a=Sl())!==u&&(i=Gl())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=pa())!==u&&(a=Sl())!==u&&(i=Gl())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,r=t=ht(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}function Gl(){var r,t,e;return(r=Fa())===u&&(r=Bl())===u&&(r=jl())===u&&(r=_a())===u&&(r=Uu,yl()!==u&&Sl()!==u&&(t=Pl())!==u&&Sl()!==u&&Tl()!==u?(r,(e=t).parentheses=!0,r=e):(Uu=r,r=u)),r}function Hl(){var r,t,e,n,s,o,a;return r=Uu,(t=ma())!==u?(e=Uu,(n=Sl())!==u&&(s=El())!==u&&(o=Sl())!==u&&(a=ma())!==u?e=n=[n,s,o,a]:(Uu=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(Uu=r,r=u)):(Uu=r,r=u),r}function jl(){var r,t,e;return r=Uu,(t=Hl())!==u&&Sl()!==u&&yl()!==u&&Sl()!==u?((e=Yl())===u&&(e=null),e!==u&&Sl()!==u&&Tl()!==u?(r,r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(Uu=r,r=u)):(Uu=r,r=u),r===u&&(r=Uu,(t=Hl())!==u&&(r,t=function(r){return{type:"function",name:r,args:null}}(t)),r=t),r}function Yl(){var r,t,e,n,s,o,a,i;if(r=Uu,(t=Gl())!==u){for(e=[],n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=Gl())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);n!==u;)e.push(n),n=Uu,(s=Sl())!==u&&(o=Al())!==u&&(a=Sl())!==u&&(i=Gl())!==u?n=s=[s,o,a,i]:(Uu=n,n=u);e!==u?(r,r=t=v(t,e)):(Uu=r,r=u)}else Uu=r,r=u;return r}function Bl(){var r,t,e,n,s;return r=Uu,(t=cl())!==u&&(e=Wl())!==u?(r,n=t,s=e,r=t={type:"var",...s,prefix:n}):(Uu=r,r=u),r}function Wl(){var t,e,n,s,o;return t=Uu,(e=ma())!==u&&(n=function(){var t,e,n,s,o;t=Uu,e=[],n=Uu,46===r.charCodeAt(Uu)?(s=".",Uu++):(s=u,0===$u&&ju(Oe));s!==u&&(o=ma())!==u?n=s=[s,o]:(Uu=n,n=u);for(;n!==u;)e.push(n),n=Uu,46===r.charCodeAt(Uu)?(s=".",Uu++):(s=u,0===$u&&ju(Oe)),s!==u&&(o=ma())!==u?n=s=[s,o]:(Uu=n,n=u);e!==u&&(t,e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==u?(t,s=e,o=n,ec.push(s),t=e={type:"var",name:s,members:o,prefix:null}):(Uu=t,t=u),t===u&&(t=Uu,(e=Wa())!==u&&(t,e={type:"var",name:e.value,members:[],quoted:null,prefix:null}),t=e),t}function Xl(){var t;return(t=function(){var t,e,n,s,o,a;t=Uu,(e=ml())===u&&(e=null);if(e!==u)if(Sl()!==u)if((n=Hi())===u&&(n=ji())===u&&(n=function(){var t,e,n,s;return t=Uu,"nchar"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(us)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="NCHAR"):(Uu=t,t=u)):(Uu=t,t=u),t}())===u&&(n=Yi()),n!==u)if(Sl()!==u)if((s=Il())===u&&(s=null),s!==u)if(Uu,(Ou(e,0,s)?u:void 0)!==u)if(Sl()!==u)if(yl()!==u)if(Sl()!==u){if(o=[],ge.test(r.charAt(Uu))?(a=r.charAt(Uu),Uu++):(a=u,0===$u&&ju(xe)),a!==u)for(;a!==u;)o.push(a),ge.test(r.charAt(Uu))?(a=r.charAt(Uu),Uu++):(a=u,0===$u&&ju(xe));else o=u;o!==u&&(a=Sl())!==u&&Tl()!==u?(t,e={dataType:n,length:parseInt(o.join(""),10)},t=e):(Uu=t,t=u)}else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;t===u&&(t=Uu,(e=ml())===u&&(e=null),e!==u&&Sl()!==u?((n=Hi())===u&&(n=ji()),n!==u&&Sl()!==u?((s=Il())===u&&(s=null),s!==u?(Uu,(Ou(e,0,s)?u:void 0)!==u?(t,e=gu(0,n),t=e):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u),t===u&&(t=Uu,(e=ml())===u&&(e=null),e!==u&&Sl()!==u&&(n=Yi())!==u&&Sl()!==u?((s=Il())===u&&(s=null),s!==u?(Uu,(Ou(e,0,s)?u:void 0)!==u&&Sl()!==u&&yl()!==u&&Sl()!==u?("max"===r.substr(Uu,3).toLowerCase()?(o=r.substr(Uu,3),Uu+=3):(o=u,0===$u&&ju(Yn)),o!==u&&(a=Sl())!==u&&Tl()!==u?(t,e=function(r,t,e,n){return{dataType:t,length:"max"}}(0,n),t=e):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)));return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C,d;t=Uu,(e=ml())===u&&(e=null);if(e!==u)if(Sl()!==u)if((n=Bi())===u&&(n=Wi())===u&&(n=Vi())===u&&(n=Ki())===u&&(n=qi())===u&&(n=Zi())===u&&(n=zi())===u&&(n=Qi())===u&&(n=Ji())===u&&(n=rl()),n!==u)if((s=Sl())!==u)if((o=Il())===u&&(o=null),o!==u)if(Uu,(Ou(e,0,o)?u:void 0)!==u)if((a=Sl())!==u)if((i=yl())!==u)if((l=Sl())!==u){if(c=[],ge.test(r.charAt(Uu))?(f=r.charAt(Uu),Uu++):(f=u,0===$u&&ju(xe)),f!==u)for(;f!==u;)c.push(f),ge.test(r.charAt(Uu))?(f=r.charAt(Uu),Uu++):(f=u,0===$u&&ju(xe));else c=u;if(c!==u)if((f=Sl())!==u){if(b=Uu,(v=Al())!==u)if((L=Sl())!==u){if(C=[],ge.test(r.charAt(Uu))?(d=r.charAt(Uu),Uu++):(d=u,0===$u&&ju(xe)),d!==u)for(;d!==u;)C.push(d),ge.test(r.charAt(Uu))?(d=r.charAt(Uu),Uu++):(d=u,0===$u&&ju(xe));else C=u;C!==u?b=v=[v,L,C]:(Uu=b,b=u)}else Uu=b,b=u;else Uu=b,b=u;b===u&&(b=null),b!==u&&(v=Sl())!==u&&(L=Tl())!==u&&(C=Sl())!==u?((d=Vl())===u&&(d=null),d!==u?(t,p=b,w=d,e={dataType:n,length:parseInt(c.join(""),10),scale:p&&parseInt(p[2].join(""),10),parentheses:!0,suffix:w},t=e):(Uu=t,t=u)):(Uu=t,t=u)}else Uu=t,t=u;else Uu=t,t=u}else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;var p,w;if(t===u){if(t=Uu,(e=ml())===u&&(e=null),e!==u)if(Sl()!==u)if((n=Bi())===u&&(n=Wi())===u&&(n=Vi())===u&&(n=Ki())===u&&(n=qi())===u&&(n=Zi())===u&&(n=zi())===u&&(n=Qi())===u&&(n=Ji())===u&&(n=rl()),n!==u)if((s=Il())===u&&(s=null),s!==u)if(Uu,(o=(o=Ou(e,0,s))?u:void 0)!==u)if(Sl()!==u){if(a=[],ge.test(r.charAt(Uu))?(i=r.charAt(Uu),Uu++):(i=u,0===$u&&ju(xe)),i!==u)for(;i!==u;)a.push(i),ge.test(r.charAt(Uu))?(i=r.charAt(Uu),Uu++):(i=u,0===$u&&ju(xe));else a=u;a!==u&&(i=Sl())!==u?((l=Vl())===u&&(l=null),l!==u?(t,e=function(r,t,e,n,s){return{dataType:t,length:parseInt(n.join(""),10),suffix:s}}(0,n,0,a,l),t=e):(Uu=t,t=u)):(Uu=t,t=u)}else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;t===u&&(t=Uu,(e=ml())===u&&(e=null),e!==u&&Sl()!==u?((n=Bi())===u&&(n=Wi())===u&&(n=Vi())===u&&(n=Ki())===u&&(n=qi())===u&&(n=Zi())===u&&(n=zi())===u&&(n=Qi())===u&&(n=Ji())===u&&(n=rl())===u&&(n=function(){var t,e,n,s;return t=Uu,"bit"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=u,0===$u&&ju(rs)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="BIT"):(Uu=t,t=u)):(Uu=t,t=u),t}())===u&&(n=function(){var t,e,n,s;return t=Uu,"money"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=u,0===$u&&ju(ts)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="MONEY"):(Uu=t,t=u)):(Uu=t,t=u),t}())===u&&(n=function(){var t,e,n,s;return t=Uu,"smallmoney"===r.substr(Uu,10).toLowerCase()?(e=r.substr(Uu,10),Uu+=10):(e=u,0===$u&&ju(es)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="SMALLMONEY"):(Uu=t,t=u)):(Uu=t,t=u),t}()),n!==u&&(s=Sl())!==u?((o=Il())===u&&(o=null),o!==u?(Uu,(Ou(e,0,o)?u:void 0)!==u&&(a=Sl())!==u?((i=Vl())===u&&(i=null),i!==u&&(l=Sl())!==u?(t,e=function(r,t,e,n){return{dataType:t,suffix:n}}(0,n,0,i),t=e):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u))}return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f,b;t=Uu,(e=ml())===u&&(e=null);if(e!==u)if(Sl()!==u)if((n=nl())===u&&(n=sl())===u&&(n=ol()),n!==u)if(Sl()!==u)if((s=Il())===u&&(s=null),s!==u)if(Uu,(Ou(e,0,s)?u:void 0)!==u)if(yl()!==u)if(Sl()!==u){if(o=[],ge.test(r.charAt(Uu))?(a=r.charAt(Uu),Uu++):(a=u,0===$u&&ju(xe)),a!==u)for(;a!==u;)o.push(a),ge.test(r.charAt(Uu))?(a=r.charAt(Uu),Uu++):(a=u,0===$u&&ju(xe));else o=u;if(o!==u)if((a=Sl())!==u){if(i=Uu,(l=Al())!==u)if((c=Sl())!==u){if(f=[],ge.test(r.charAt(Uu))?(b=r.charAt(Uu),Uu++):(b=u,0===$u&&ju(xe)),b!==u)for(;b!==u;)f.push(b),ge.test(r.charAt(Uu))?(b=r.charAt(Uu),Uu++):(b=u,0===$u&&ju(xe));else f=u;f!==u?i=l=[l,c,f]:(Uu=i,i=u)}else Uu=i,i=u;else Uu=i,i=u;i===u&&(i=null),i!==u&&(l=Sl())!==u&&(c=Tl())!==u?(t,e={dataType:n,length:parseInt(o.join(""),10),parentheses:!0},t=e):(Uu=t,t=u)}else Uu=t,t=u;else Uu=t,t=u}else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;else Uu=t,t=u;t===u&&(t=Uu,(e=ml())===u&&(e=null),e!==u&&Sl()!==u?((n=tl())===u&&(n=function(){var t,e,n,s;return t=Uu,"smalldatetime"===r.substr(Uu,13).toLowerCase()?(e=r.substr(Uu,13),Uu+=13):(e=u,0===$u&&ju(Ns)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="SMALLDATETIME"):(Uu=t,t=u)):(Uu=t,t=u),t}())===u&&(n=el())===u&&(n=nl())===u&&(n=sl())===u&&(n=ol())===u&&(n=al()),n!==u&&Sl()!==u?((s=Il())===u&&(s=null),s!==u?(Uu,(Ou(e,0,s)?u:void 0)!==u?(t,e=gu(0,n),t=e):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u));return t}())===u&&(t=function(){var t,e,n,s;t=Uu,(e=ml())===u&&(e=null);e!==u&&Sl()!==u&&(n=function(){var t,e,n,s;return t=Uu,"json"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(Ls)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="JSON"):(Uu=t,t=u)):(Uu=t,t=u),t}())!==u&&Sl()!==u?((s=Il())===u&&(s=null),s!==u?(Uu,(Ou(e,0,s)?u:void 0)!==u?(t,e=gu(0,n),t=e):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Uu,(e=ml())===u&&(e=null);e!==u&&Sl()!==u?((n=function(){var t,e,n,s;return t=Uu,"tinytext"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(ps)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="TINYTEXT"):(Uu=t,t=u)):(Uu=t,t=u),t}())===u&&(n=function(){var t,e,n,s;return t=Uu,"text"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=u,0===$u&&ju(ws)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="TEXT"):(Uu=t,t=u)):(Uu=t,t=u),t}())===u&&(n=function(){var t,e,n,s;return t=Uu,"mediumtext"===r.substr(Uu,10).toLowerCase()?(e=r.substr(Uu,10),Uu+=10):(e=u,0===$u&&ju(Es)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="MEDIUMTEXT"):(Uu=t,t=u)):(Uu=t,t=u),t}())===u&&(n=function(){var t,e,n,s;return t=Uu,"longtext"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(As)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="LONGTEXT"):(Uu=t,t=u)):(Uu=t,t=u),t}()),n!==u&&Sl()!==u?((s=Il())===u&&(s=null),s!==u?(Uu,(Ou(e,0,s)?u:void 0)!==u?(t,e=xu(0,n),t=e):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Uu,(e=ml())===u&&(e=null);e!==u&&Sl()!==u&&(n=function(){var t,e,n,s;return t=Uu,"uniqueidentifier"===r.substr(Uu,16).toLowerCase()?(e=r.substr(Uu,16),Uu+=16):(e=u,0===$u&&ju(Ms)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="UNIQUEIDENTIFIER"):(Uu=t,t=u)):(Uu=t,t=u),t}())!==u&&Sl()!==u?((s=Il())===u&&(s=null),s!==u?(Uu,(Ou(e,0,s)?u:void 0)!==u?(t,e=xu(0,n),t=e):(Uu=t,t=u)):(Uu=t,t=u)):(Uu=t,t=u);return t}()),t}function Vl(){var t,e,n;return t=Uu,(e=Xi())===u&&(e=null),e!==u&&Sl()!==u?((n=function(){var t,e,n,s;return t=Uu,"zerofill"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=u,0===$u&&ju(bs)),e!==u?(n=Uu,$u++,s=Na(),$u--,s===u?n=void 0:(Uu=n,n=u),n!==u?(t,t=e="ZEROFILL"):(Uu=t,t=u)):(Uu=t,t=u),t}())===u&&(n=null),n!==u?(t,t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(Uu=t,t=u)):(Uu=t,t=u),t}const Kl={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,NOCHECK:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function ql(r,t){return{type:"unary_expr",operator:r,expr:t}}function Zl(r,t,e){return{type:"binary_expr",operator:r,left:t,right:e}}function zl(r){const t=n(Number.MAX_SAFE_INTEGER);return!(n(r)<t)}function Ql(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)delete t[r][e].tableList,delete t[r][e].columnList,n.push(t[r][e]);return n}function Jl(r,t){let e=r;for(let r=0;r<t.length;r++)e=Zl(t[r][1],e,t[r][3]);return e}function rc(r){const t=uc[r];return t||(r||null)}function tc(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=rc(r[1])),t.add(r.join("::"))}return Array.from(t)}let ec=[];const nc=new Set,sc=new Set,uc={};if((e=a())!==u&&Uu===r.length)return e;throw e!==u&&Uu<r.length&&ju({type:"end"}),Yu(Du,ku<r.length?r.charAt(ku):null,ku<r.length?Hu(ku,ku+1):Hu(ku,ku))}}},function(r,t,e){"use strict";var n=e(0);function s(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,s)}!function(r,t){function e(){this.constructor=r}e.prototype=t.prototype,r.prototype=new e}(s,Error),s.buildMessage=function(r,t){var e={literal:function(r){return'"'+s(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?u(r.parts[t][0])+"-"+u(r.parts[t][1]):u(r.parts[t]);return"["+(r.inverted?"^":"")+e+"]"},any:function(r){return"any character"},end:function(r){return"end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function s(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}function u(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return"\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return"\\x"+n(r)}))}return"Expected "+function(r){var t,n,s,u=new Array(r.length);for(t=0;t<r.length;t++)u[t]=(s=r[t],e[s.type](s));if(u.sort(),u.length>0){for(t=1,n=1;t<u.length;t++)u[t-1]!==u[t]&&(u[n]=u[t],n++);u.length=n}switch(u.length){case 1:return u[0];case 2:return u[0]+" or "+u[1];default:return u.slice(0,-1).join(", ")+", or "+u[u.length-1]}}(r)+" but "+function(r){return r?'"'+s(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:s,parse:function(r,t){t=void 0!==t?t:{};var e,u={},o={start:Wu},a=Wu,i=Fu("IF",!0),l=Fu("EXTENSION",!0),c=Fu("SCHEMA",!0),f=Fu("VERSION",!0),b=function(r,t){return Wl(r,t,1)},v=Fu("NULLS",!0),L=Fu("FIRST",!0),C=Fu("LAST",!0),d=Fu("AUTO_INCREMENT",!0),p=Fu("UNIQUE",!0),w=Fu("PRIMARY",!0),E=Fu("KEY",!0),A=Fu("COLUMN_FORMAT",!0),h=Fu("FIXED",!0),y=Fu("DYNAMIC",!0),T=Fu("DEFAULT",!0),m=Fu("STORAGE",!0),I=Fu("DISK",!0),N=Fu("MEMORY",!0),R=Fu("ALGORITHM",!0),S=Fu("INSTANT",!0),_=Fu("INPLACE",!0),O=Fu("COPY",!0),g=Fu("LOCK",!0),x=Fu("NONE",!0),U=Fu("SHARED",!0),M=Fu("EXCLUSIVE",!0),k=Fu("PRIMARY KEY",!0),D=Fu("FOREIGN KEY",!0),$=Fu("MATCH FULL",!0),P=Fu("MATCH PARTIAL",!0),F=Fu("MATCH SIMPLE",!0),G=Fu("ON",!0),H=Fu("DELETE",!0),j=Fu("UPDATE",!0),Y=Fu("RESTRICT",!0),B=Fu("CASCADE",!0),W=Fu("SET NULL",!0),X=Fu("NO ACTION",!0),V=Fu("SET DEFAULT",!0),K=Fu("TRIGGER",!0),q=Fu("BEFORE",!0),Z=Fu("AFTER",!0),z=Fu("INSTEAD OF",!0),Q=Fu("EXECUTE",!0),J=Fu("PROCEDURE",!0),rr=Fu("OF",!0),tr=Fu("NOT",!0),er=Fu("DEFERRABLE",!0),nr=Fu("INITIALLY IMMEDIATE",!0),sr=Fu("INITIALLY DEFERRED",!0),ur=Fu("FOR",!0),or=Fu("EACH",!0),ar=Fu("ROW",!0),ir=Fu("STATEMENT",!0),lr=Fu("CHARACTER",!0),cr=Fu("SET",!0),fr=Fu("CHARSET",!0),br=Fu("COLLATE",!0),vr=Fu("AVG_ROW_LENGTH",!0),Lr=Fu("KEY_BLOCK_SIZE",!0),Cr=Fu("MAX_ROWS",!0),dr=Fu("MIN_ROWS",!0),pr=Fu("STATS_SAMPLE_PAGES",!0),wr=Fu("CONNECTION",!0),Er=Fu("COMPRESSION",!0),Ar=Fu("'",!1),hr=Fu("ZLIB",!0),yr=Fu("LZ4",!0),Tr=Fu("ENGINE",!0),mr=Fu("IN",!0),Ir=Fu("ACCESS SHARE",!0),Nr=Fu("ROW SHARE",!0),Rr=Fu("ROW EXCLUSIVE",!0),Sr=Fu("SHARE UPDATE EXCLUSIVE",!0),_r=Fu("SHARE ROW EXCLUSIVE",!0),Or=Fu("ACCESS EXCLUSIVE",!0),gr=Fu("SHARE",!0),xr=Fu("MODE",!0),Ur=Fu("NOWAIT",!0),Mr=Fu("(",!1),kr=Fu(")",!1),Dr=Fu("BTREE",!0),$r=Fu("HASH",!0),Pr=Fu("GIST",!0),Fr=Fu("GIN",!0),Gr=Fu("WITH",!0),Hr=Fu("PARSER",!0),jr=Fu("VISIBLE",!0),Yr=Fu("INVISIBLE",!0),Br=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;Jl[t]=t,e&&(Jl[e]=t),function(r){const t=Kl(r);r.clear(),t.forEach(t=>r.add(t))}(Ql)}),t},Wr=Fu("=",!1),Xr=function(r,t){return Xl(r,t)},Vr=Fu("!",!1),Kr=Fu(">=",!1),qr=Fu(">",!1),Zr=Fu("<=",!1),zr=Fu("<>",!1),Qr=Fu("<",!1),Jr=Fu("!=",!1),rt=Fu("ESCAPE",!0),tt=Fu("@>",!1),et=Fu("<@",!1),nt=Fu("?",!1),st=Fu("?|",!1),ut=Fu("?&",!1),ot=Fu("#-",!1),at=Fu("+",!1),it=Fu("-",!1),lt=Fu("*",!1),ct=Fu("/",!1),ft=Fu("%",!1),bt=Fu("$",!1),vt=function(r){return!0===Hl[r.toUpperCase()]},Lt=Fu('"',!1),Ct=/^[^"]/,dt=Gu(['"'],!0,!1),pt=function(r){return r.join("")},wt=/^[^']/,Et=Gu(["'"],!0,!1),At=Fu("`",!1),ht=/^[^`]/,yt=Gu(["`"],!0,!1),Tt=/^[A-Za-z_]/,mt=Gu([["A","Z"],["a","z"],"_"],!1,!1),It=/^[A-Za-z0-9_\-]/,Nt=Gu([["A","Z"],["a","z"],["0","9"],"_","-"],!1,!1),Rt=/^[A-Za-z0-9_]/,St=Gu([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),_t=Fu(":",!1),Ot=Fu("OVER",!0),gt=Fu("POSITION",!0),xt=Fu("BOTH",!0),Ut=Fu("LEADING",!0),Mt=Fu("TRAILING",!0),kt=Fu("trim",!0),Dt=Fu("placing",!0),$t=Fu("for",!0),Pt=Fu("overlay",!0),Ft=Fu("SUBSTRING",!0),Gt=Fu("CENTURY",!0),Ht=Fu("DAY",!0),jt=Fu("DATE",!0),Yt=Fu("DECADE",!0),Bt=Fu("DOW",!0),Wt=Fu("DOY",!0),Xt=Fu("EPOCH",!0),Vt=Fu("HOUR",!0),Kt=Fu("ISODOW",!0),qt=Fu("ISOYEAR",!0),Zt=Fu("MICROSECONDS",!0),zt=Fu("MILLENNIUM",!0),Qt=Fu("MILLISECONDS",!0),Jt=Fu("MINUTE",!0),re=Fu("MONTH",!0),te=Fu("QUARTER",!0),ee=Fu("SECOND",!0),ne=Fu("TIMEZONE",!0),se=Fu("TIMEZONE_HOUR",!0),ue=Fu("TIMEZONE_MINUTE",!0),oe=Fu("WEEK",!0),ae=Fu("YEAR",!0),ie=/^[^"\\\0-\x1F\x7F]/,le=Gu(['"',"\\",["\0",""],""],!0,!1),ce=/^[^'\\]/,fe=Gu(["'","\\"],!0,!1),be=Fu("\\'",!1),ve=Fu('\\"',!1),Le=Fu("\\\\",!1),Ce=Fu("\\/",!1),de=Fu("\\b",!1),pe=Fu("\\f",!1),we=Fu("\\n",!1),Ee=Fu("\\r",!1),Ae=Fu("\\t",!1),he=Fu("\\u",!1),ye=Fu("\\",!1),Te=Fu("''",!1),me=Fu('""',!1),Ie=Fu("``",!1),Ne=/^[\n\r]/,Re=Gu(["\n","\r"],!1,!1),Se=Fu(".",!1),_e=/^[0-9]/,Oe=Gu([["0","9"]],!1,!1),ge=/^[0-9a-fA-F]/,xe=Gu([["0","9"],["a","f"],["A","F"]],!1,!1),Ue=/^[eE]/,Me=Gu(["e","E"],!1,!1),ke=/^[+\-]/,De=Gu(["+","-"],!1,!1),$e=Fu("NULL",!0),Pe=Fu("NOT NULL",!0),Fe=Fu("TRUE",!0),Ge=Fu("TO",!0),He=Fu("FALSE",!0),je=(Fu("SHOW",!0),Fu("DROP",!0)),Ye=Fu("USE",!0),Be=Fu("ALTER",!0),We=Fu("SELECT",!0),Xe=Fu("CREATE",!0),Ve=Fu("TEMPORARY",!0),Ke=Fu("INSERT",!0),qe=Fu("RECURSIVE",!1),Ze=Fu("REPLACE",!0),ze=Fu("RETURNING",!0),Qe=Fu("RENAME",!0),Je=Fu("IGNORE",!0),rn=(Fu("EXPLAIN",!0),Fu("PARTITION",!0)),tn=Fu("INTO",!0),en=Fu("FROM",!0),nn=Fu("AS",!0),sn=Fu("TABLE",!0),un=Fu("TABLESPACE",!0),on=Fu("DATABASE",!0),an=Fu("SCHEME",!0),ln=Fu("NATURAL",!0),cn=Fu("LEFT",!0),fn=Fu("RIGHT",!0),bn=Fu("FULL",!0),vn=Fu("INNER",!0),Ln=Fu("JOIN",!0),Cn=Fu("CROSS",!0),dn=Fu("APPLY",!0),pn=Fu("OUTER",!0),wn=Fu("UNION",!0),En=Fu("INTERSECT",!0),An=Fu("EXCEPT",!0),hn=Fu("VALUES",!0),yn=Fu("USING",!0),Tn=Fu("WHERE",!0),mn=Fu("GROUP",!0),In=Fu("BY",!0),Nn=Fu("ORDER",!0),Rn=Fu("HAVING",!0),Sn=Fu("LIMIT",!0),_n=Fu("OFFSET",!0),On=Fu("ASC",!0),gn=Fu("DESC",!0),xn=Fu("ALL",!0),Un=Fu("DISTINCT",!0),Mn=Fu("BETWEEN",!0),kn=Fu("IS",!0),Dn=Fu("LIKE",!0),$n=Fu("SIMILAR",!0),Pn=Fu("EXISTS",!0),Fn=Fu("AND",!0),Gn=Fu("OR",!0),Hn=Fu("COUNT",!0),jn=Fu("MAX",!0),Yn=Fu("MIN",!0),Bn=Fu("SUM",!0),Wn=Fu("AVG",!0),Xn=Fu("COLLECT",!0),Vn=Fu("RANK",!0),Kn=Fu("DENSE_RANK",!0),qn=Fu("LISTAGG",!0),Zn=Fu("ROW_NUMBER",!0),zn=(Fu("TUMBLE_START",!0),Fu("TUMBLE_END",!0),Fu("HOP_START",!0),Fu("HOP_END",!0),Fu("SESSION_START",!0),Fu("SESSION_END",!0),Fu("TUMBLE_ROWTIME",!0),Fu("HOP_ROWTIME",!0),Fu("SESSION_ROWTIME",!0),Fu("TUMBLE_PROCTIME",!0),Fu("HOP_PROCTIME",!0),Fu("SESSION_PROCTIME",!0),Fu("EXTRACT",!0)),Qn=Fu("CALL",!0),Jn=Fu("CASE",!0),rs=Fu("WHEN",!0),ts=Fu("THEN",!0),es=Fu("ELSE",!0),ns=Fu("END",!0),ss=Fu("CAST",!0),us=Fu("TRY_CAST",!0),os=Fu("BOOL",!0),as=Fu("BOOLEAN",!0),is=Fu("CHAR",!0),ls=Fu("VARCHAR",!0),cs=Fu("STRING",!0),fs=Fu("NUMERIC",!0),bs=Fu("DECIMAL",!0),vs=Fu("SIGNED",!0),Ls=Fu("UNSIGNED",!0),Cs=Fu("INT",!0),ds=Fu("ZEROFILL",!0),ps=Fu("INTEGER",!0),ws=Fu("JSON",!0),Es=Fu("JSONB",!0),As=Fu("GEOMETRY",!0),hs=Fu("SMALLINT",!0),ys=Fu("TINYINT",!0),Ts=Fu("TINYTEXT",!0),ms=Fu("TEXT",!0),Is=Fu("MEDIUMTEXT",!0),Ns=Fu("LONGTEXT",!0),Rs=Fu("BIGINT",!0),Ss=Fu("FLOAT",!0),_s=Fu("DOUBLE",!0),Os=Fu("DATETIME",!0),gs=Fu("TIME",!0),xs=Fu("TIMESTAMP",!0),Us=Fu("TRUNCATE",!0),Ms=Fu("USER",!0),ks=Fu("UUID",!0),Ds=Fu("ARRAY",!0),$s=Fu("MAP",!0),Ps=(Fu("MULTISET",!0),Fu("CURRENT_DATE",!0)),Fs=(Fu("ADDDATE",!0),Fu("INTERVAL",!0)),Gs=Fu("CURRENT_TIME",!0),Hs=Fu("CURRENT_TIMESTAMP",!0),js=Fu("CURRENT_USER",!0),Ys=Fu("SESSION_USER",!0),Bs=Fu("SYSTEM_USER",!0),Ws=Fu("GLOBAL",!0),Xs=Fu("SESSION",!0),Vs=Fu("LOCAL",!0),Ks=Fu("PERSIST",!0),qs=Fu("PERSIST_ONLY",!0),Zs=Fu("@",!1),zs=Fu("@@",!1),Qs=Fu("return",!0),Js=Fu(":=",!1),ru=Fu("::",!1),tu=Fu("DUAL",!0),eu=Fu("ADD",!0),nu=Fu("COLUMN",!0),su=Fu("INDEX",!0),uu=Fu("FULLTEXT",!0),ou=Fu("SPATIAL",!0),au=Fu("COMMENT",!0),iu=Fu("CONSTRAINT",!0),lu=Fu("CONCURRENTLY",!0),cu=Fu("REFERENCES",!0),fu=Fu("SQL_CALC_FOUND_ROWS",!0),bu=Fu("SQL_CACHE",!0),vu=Fu("SQL_NO_CACHE",!0),Lu=Fu("SQL_SMALL_RESULT",!0),Cu=Fu("SQL_BIG_RESULT",!0),du=Fu("SQL_BUFFER_RESULT",!0),pu=Fu(",",!1),wu=Fu("[",!1),Eu=Fu("]",!1),Au=Fu(";",!1),hu=Fu("->",!1),yu=Fu("->>",!1),Tu=Fu("#>",!1),mu=Fu("#>>",!1),Iu=Fu("||",!1),Nu=Fu("&&",!1),Ru=Fu("/*",!1),Su=Fu("*/",!1),_u=Fu("--",!1),Ou=(Fu("#",!1),{type:"any"}),gu=/^[ \t\n\r]/,xu=Gu([" ","\t","\n","\r"],!1,!1),Uu=function(r){return{dataType:r}},Mu=0,ku=[{line:1,column:1}],Du=0,$u=[],Pu=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule]}function Fu(r,t){return{type:"literal",text:r,ignoreCase:t}}function Gu(r,t,e){return{type:"class",parts:r,inverted:t,ignoreCase:e}}function Hu(t){var e,n=ku[t];if(n)return n;for(e=t-1;!ku[e];)e--;for(n={line:(n=ku[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return ku[t]=n,n}function ju(r,t){var e=Hu(r),n=Hu(t);return{start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Yu(r){Mu<Du||(Mu>Du&&(Du=Mu,$u=[]),$u.push(r))}function Bu(r,t,e){return new s(s.buildMessage(r,t),r,t,e)}function Wu(){var r,t;return r=Mu,hl()!==u?((t=function(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=Vu())!==u){if(e=[],n=Mu,(s=hl())!==u&&(o=dl())!==u&&(a=hl())!==u&&(i=Vu())!==u?n=s=[s,o,a,i]:(Mu=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=dl())!==u&&(a=hl())!==u&&(i=Vu())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);else e=u;e!==u?(r,t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return{tableList:Array.from(zl),columnList:Kl(Ql),ast:e}}(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())===u&&(t=Xu())===u&&(t=Vu()),t!==u?(r,r=t):(Mu=r,r=u)):(Mu=r,r=u),r}function Xu(){var t;return(t=function(){var r,t,e,n,s,o;r=Mu,(t=Va())!==u&&hl()!==u&&(e=ai())!==u&&hl()!==u&&(n=So())!==u?(r,a=t,i=e,(l=n)&&l.forEach(r=>zl.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:a.toLowerCase(),keyword:i.toLowerCase(),name:l}},r=t):(Mu=r,r=u);var a,i,l;r===u&&(r=Mu,(t=Va())!==u&&hl()!==u&&(e=sl())!==u&&hl()!==u&&(n=ba())!==u&&hl()!==u&&ii()!==u&&hl()!==u&&(s=xo())!==u&&hl()!==u?((o=function(){var r,t,e,n,s,o;r=Mu,(t=no())===u&&(t=so());if(t!==u){for(e=[],n=Mu,(s=hl())!==u?((o=no())===u&&(o=so()),o!==u?n=s=[s,o]:(Mu=n,n=u)):(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u?((o=no())===u&&(o=so()),o!==u?n=s=[s,o]:(Mu=n,n=u)):(Mu=n,n=u);e!==u?(r,t=b(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())===u&&(o=null),o!==u&&hl()!==u?(r,t=function(r,t,e,n,s){return{tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:s}}}(t,e,n,s,o),r=t):(Mu=r,r=u)):(Mu=r,r=u));return r}())===u&&(t=function(){var t;(t=function(){var r,t,e,n,s,o,a,i,l,c;r=Mu,(t=qa())!==u&&hl()!==u?((e=Za())===u&&(e=null),e!==u&&hl()!==u&&ai()!==u&&hl()!==u?((n=Zu())===u&&(n=null),n!==u&&hl()!==u&&(s=So())!==u&&hl()!==u&&(o=function(){var r,t,e,n,s,o,a,i,l;if(r=Mu,(t=bl())!==u)if(hl()!==u)if((e=Qu())!==u){for(n=[],s=Mu,(o=hl())!==u&&(a=cl())!==u&&(i=hl())!==u&&(l=Qu())!==u?s=o=[o,a,i,l]:(Mu=s,s=u);s!==u;)n.push(s),s=Mu,(o=hl())!==u&&(a=cl())!==u&&(i=hl())!==u&&(l=Qu())!==u?s=o=[o,a,i,l]:(Mu=s,s=u);n!==u&&(s=hl())!==u&&(o=vl())!==u?(r,t=Wl(e,n),r=t):(Mu=r,r=u)}else Mu=r,r=u;else Mu=r,r=u;else Mu=r,r=u;return r}())!==u&&hl()!==u?((a=function(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=bo())!==u){for(e=[],n=Mu,(s=hl())!==u?((o=cl())===u&&(o=null),o!==u&&(a=hl())!==u&&(i=bo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u)):(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u?((o=cl())===u&&(o=null),o!==u&&(a=hl())!==u&&(i=bo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u)):(Mu=n,n=u);e!==u?(r,t=Wl(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())===u&&(a=null),a!==u&&hl()!==u?((i=ti())===u&&(i=Ja()),i===u&&(i=null),i!==u&&hl()!==u?((l=oi())===u&&(l=null),l!==u&&hl()!==u?((c=qu())===u&&(c=null),c!==u?(r,f=t,b=e,v=n,C=o,d=a,p=i,w=l,E=c,(L=s)&&L.forEach(r=>zl.add(`create::${r.db}::${r.table}`)),t={tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:f[0].toLowerCase(),keyword:"table",temporary:b&&b[0].toLowerCase(),if_not_exists:v,table:L,ignore_replace:p&&p[0].toLowerCase(),as:w&&w[0].toLowerCase(),query_expr:E&&E.ast,create_definitions:C,table_options:d}},r=t):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u);var f,b,v,L,C,d,p,w,E;r===u&&(r=Mu,(t=qa())!==u&&hl()!==u?((e=Za())===u&&(e=null),e!==u&&hl()!==u&&ai()!==u&&hl()!==u?((n=Zu())===u&&(n=null),n!==u&&hl()!==u&&(s=So())!==u&&hl()!==u&&(o=function r(){var t,e;(t=function(){var r,t;r=Mu,Ti()!==u&&hl()!==u&&(t=So())!==u?(r,r={type:"like",table:t}):(Mu=r,r=u);return r}())===u&&(t=Mu,bl()!==u&&hl()!==u&&(e=r())!==u&&hl()!==u&&vl()!==u?(t,(n=e).parentheses=!0,t=n):(Mu=t,t=u));var n;return t}())!==u?(r,t=function(r,t,e,n,s){return n&&n.forEach(r=>zl.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e,table:n,like:s}}}(t,e,n,s,o),r=t):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u));return r}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C,d,p,w,E;t=Mu,(e=qa())!==u&&hl()!==u?((n=il())===u&&(n=null),n!==u&&hl()!==u?("trigger"===r.substr(Mu,7).toLowerCase()?(s=r.substr(Mu,7),Mu+=7):(s=u,0===Pu&&Yu(K)),s!==u&&hl()!==u&&(o=da())!==u&&hl()!==u?("before"===r.substr(Mu,6).toLowerCase()?(a=r.substr(Mu,6),Mu+=6):(a=u,0===Pu&&Yu(q)),a===u&&("after"===r.substr(Mu,5).toLowerCase()?(a=r.substr(Mu,5),Mu+=5):(a=u,0===Pu&&Yu(Z)),a===u&&("instead of"===r.substr(Mu,10).toLowerCase()?(a=r.substr(Mu,10),Mu+=10):(a=u,0===Pu&&Yu(z)))),a!==u&&hl()!==u&&(i=function(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=co())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=Si())!==u&&(a=hl())!==u&&(i=co())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=Si())!==u&&(a=hl())!==u&&(i=co())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,t=Wl(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())!==u&&hl()!==u?("on"===r.substr(Mu,2).toLowerCase()?(l=r.substr(Mu,2),Mu+=2):(l=u,0===Pu&&Yu(G)),l!==u&&hl()!==u&&(c=xo())!==u&&hl()!==u?(f=Mu,(b=si())!==u&&(v=hl())!==u&&(L=xo())!==u?f=b=[b,v,L]:(Mu=f,f=u),f===u&&(f=null),f!==u&&(b=hl())!==u?((v=function(){var t,e,n,s,o;t=Mu,e=Mu,"not"===r.substr(Mu,3).toLowerCase()?(n=r.substr(Mu,3),Mu+=3):(n=u,0===Pu&&Yu(tr));n===u&&(n=null);n!==u&&(s=hl())!==u?("deferrable"===r.substr(Mu,10).toLowerCase()?(o=r.substr(Mu,10),Mu+=10):(o=u,0===Pu&&Yu(er)),o!==u?e=n=[n,s,o]:(Mu=e,e=u)):(Mu=e,e=u);e!==u&&(n=hl())!==u?("initially immediate"===r.substr(Mu,19).toLowerCase()?(s=r.substr(Mu,19),Mu+=19):(s=u,0===Pu&&Yu(nr)),s===u&&("initially deferred"===r.substr(Mu,18).toLowerCase()?(s=r.substr(Mu,18),Mu+=18):(s=u,0===Pu&&Yu(sr))),s!==u?(t,i=s,e={keyword:(a=e)&&a[0]?a[0].toLowerCase()+" deferrable":"deferrable",args:i&&i.toLowerCase()},t=e):(Mu=t,t=u)):(Mu=t,t=u);var a,i;return t}())===u&&(v=null),v!==u&&(L=hl())!==u?((C=function(){var t,e,n,s;t=Mu,"for"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(ur));e!==u&&hl()!==u?("each"===r.substr(Mu,4).toLowerCase()?(n=r.substr(Mu,4),Mu+=4):(n=u,0===Pu&&Yu(or)),n===u&&(n=null),n!==u&&hl()!==u?("row"===r.substr(Mu,3).toLowerCase()?(s=r.substr(Mu,3),Mu+=3):(s=u,0===Pu&&Yu(ar)),s===u&&("statement"===r.substr(Mu,9).toLowerCase()?(s=r.substr(Mu,9),Mu+=9):(s=u,0===Pu&&Yu(ir))),s!==u?(t,o=e,i=s,e={keyword:(a=n)?`${o.toLowerCase()} ${a.toLowerCase()}`:o.toLowerCase(),args:i.toLowerCase()},t=e):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u);var o,a,i;return t}())===u&&(C=null),C!==u&&hl()!==u?((d=function(){var r,t;r=Mu,gi()!==u&&hl()!==u&&bl()!==u&&hl()!==u&&(t=Zo())!==u&&hl()!==u&&vl()!==u?(r,r={type:"when",cond:t,parentheses:!0}):(Mu=r,r=u);return r}())===u&&(d=null),d!==u&&hl()!==u?("execute"===r.substr(Mu,7).toLowerCase()?(p=r.substr(Mu,7),Mu+=7):(p=u,0===Pu&&Yu(Q)),p!==u&&hl()!==u?("procedure"===r.substr(Mu,9).toLowerCase()?(w=r.substr(Mu,9),Mu+=9):(w=u,0===Pu&&Yu(J)),w!==u&&hl()!==u&&(E=kl())!==u?(t,A=n,h=s,T=i,m=c,I=f,N=v,R=C,S=d,_=E,e={type:"create",constraint:o,location:(y=a)&&y.toLowerCase(),events:T,table:m,from:I&&I[2],deferrable:N,for_each:R,when:S,execute:{keyword:"execute procedure",expr:_},constraint_type:h&&h.toLowerCase(),keyword:h&&h.toLowerCase(),constraint_kw:A&&A.toLowerCase(),resource:"constraint"},t=e):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u);var A,h,y,T,m,I,N,R,S,_;return t}())===u&&(t=function(){var t,e,n,s,o,a,i,b,v,L,C,d,p,w;t=Mu,(e=qa())!==u&&hl()!==u?("extension"===r.substr(Mu,9).toLowerCase()?(n=r.substr(Mu,9),Mu+=9):(n=u,0===Pu&&Yu(l)),n!==u&&hl()!==u?((s=Zu())===u&&(s=null),s!==u&&hl()!==u?((o=da())===u&&(o=Ma()),o!==u&&hl()!==u?((a=Li())===u&&(a=null),a!==u&&hl()!==u?(i=Mu,"schema"===r.substr(Mu,6).toLowerCase()?(b=r.substr(Mu,6),Mu+=6):(b=u,0===Pu&&Yu(c)),b!==u&&(v=hl())!==u&&(L=da())!==u?i=b=[b,v,L]:(Mu=i,i=u),i===u&&(i=Ma()),i===u&&(i=null),i!==u&&(b=hl())!==u?(v=Mu,"version"===r.substr(Mu,7).toLowerCase()?(L=r.substr(Mu,7),Mu+=7):(L=u,0===Pu&&Yu(f)),L!==u&&(C=hl())!==u?((d=da())===u&&(d=Ma()),d!==u?v=L=[L,C,d]:(Mu=v,v=u)):(Mu=v,v=u),v===u&&(v=null),v!==u&&(L=hl())!==u?(C=Mu,(d=si())!==u&&(p=hl())!==u?((w=da())===u&&(w=Ma()),w!==u?C=d=[d,p,w]:(Mu=C,C=u)):(Mu=C,C=u),C===u&&(C=null),C!==u?(t,E=s,A=o,h=a,y=i,T=v,m=C,e={type:"create",keyword:n.toLowerCase(),if_not_exists:E,extension:ql(A),with:h&&h[0].toLowerCase(),schema:ql(y&&y[2].toLowerCase()),version:ql(T&&T[2]),from:ql(m&&m[2])},t=e):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u);var E,A,h,y,T,m;return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C,d,p,w,E;t=Mu,(e=qa())!==u&&hl()!==u?((n=ol())===u&&(n=null),n!==u&&hl()!==u&&(s=sl())!==u&&hl()!==u?((o=function(){var t,e,n,s;t=Mu,"concurrently"===r.substr(Mu,12).toLowerCase()?(e=r.substr(Mu,12),Mu+=12):(e=u,0===Pu&&Yu(lu));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="CONCURRENTLY"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(o=null),o!==u&&hl()!==u?((a=va())===u&&(a=null),a!==u&&hl()!==u&&(i=ii())!==u&&hl()!==u&&(l=xo())!==u&&hl()!==u?((c=Io())===u&&(c=null),c!==u&&hl()!==u&&bl()!==u&&hl()!==u&&(f=function(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=zu())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=zu())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=zu())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,t=Wl(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())!==u&&hl()!==u&&vl()!==u&&hl()!==u?(b=Mu,(v=Li())!==u&&(L=hl())!==u&&(C=bl())!==u&&(d=hl())!==u&&(p=function(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=Ro())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=Ro())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=Ro())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,t=Wl(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())!==u&&(w=hl())!==u&&(E=vl())!==u?b=v=[v,L,C,d,p,w,E]:(Mu=b,b=u),b===u&&(b=null),b!==u&&(v=hl())!==u?(L=Mu,(C=function(){var t,e,n,s;t=Mu,"tablespace"===r.substr(Mu,10).toLowerCase()?(e=r.substr(Mu,10),Mu+=10):(e=u,0===Pu&&Yu(un));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="TABLESPACE"):(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&(d=hl())!==u&&(p=da())!==u?L=C=[C,d,p]:(Mu=L,L=u),L===u&&(L=null),L!==u&&(C=hl())!==u?((d=Mo())===u&&(d=null),d!==u&&(p=hl())!==u?(t,A=e,h=n,y=s,T=o,m=a,I=i,N=l,R=c,S=f,_=b,O=L,g=d,e={tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:A[0].toLowerCase(),index_type:h&&h.toLowerCase(),keyword:y.toLowerCase(),concurrently:T&&T.toLowerCase(),index:m,on_kw:I[0].toLowerCase(),table:N,index_using:R,index_columns:S,with:_&&_[4],with_before_where:!0,tablespace:O&&{type:"origin",value:O[2]},where:g}},t=e):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u);var A,h,y,T,m,I,N,R,S,_,O,g;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=Mu,(e=qa())!==u&&hl()!==u?((n=function(){var t,e,n,s;t=Mu,"database"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(on));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="DATABASE"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Mu,"scheme"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(an));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="SCHEME"):(Mu=t,t=u)):(Mu=t,t=u);return t}()),n!==u&&hl()!==u?((s=Zu())===u&&(s=null),s!==u&&hl()!==u&&(o=da())!==u&&hl()!==u?((a=function(){var r,t,e,n,s,o;if(r=Mu,(t=fo())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=fo())!==u?n=s=[s,o]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=fo())!==u?n=s=[s,o]:(Mu=n,n=u);e!==u?(r,t=b(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())===u&&(a=null),a!==u?(t,i=e,l=s,c=o,f=a,e={tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:i[0].toLowerCase(),keyword:"database",if_not_exists:l,database:c,create_definitions:f}},t=e):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u);var i,l,c,f;return t}());return t}())===u&&(t=function(){var r,t,e,n;r=Mu,(t=Zi())!==u&&hl()!==u?((e=ai())===u&&(e=null),e!==u&&hl()!==u&&(n=So())!==u?(r,s=t,o=e,(a=n)&&a.forEach(r=>zl.add(`${s}::${r.db}::${r.table}`)),t={tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:s.toLowerCase(),keyword:o&&o.toLowerCase()||"table",name:a}},r=t):(Mu=r,r=u)):(Mu=r,r=u);var s,o,a;return r}())===u&&(t=function(){var r,t,e;r=Mu,(t=ri())!==u&&hl()!==u&&ai()!==u&&hl()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=mo())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=mo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=mo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,t=Wl(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())!==u?(r,(n=e).forEach(r=>r.forEach(r=>r.table&&zl.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:"rename",table:n}},r=t):(Mu=r,r=u);var n;return r}())===u&&(t=function(){var t,e,n;t=Mu,(e=function(){var t,e,n,s;t=Mu,"call"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(Qn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="CALL"):(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&hl()!==u&&(n=kl())!==u?(t,s=n,e={tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:"call",expr:s}},t=e):(Mu=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n;t=Mu,(e=function(){var t,e,n,s;t=Mu,"use"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(Ye));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&hl()!==u&&(n=va())!==u?(t,s=n,zl.add(`use::${s}::null`),e={tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:"use",db:s}},t=e):(Mu=t,t=u);var s;return t}())===u&&(t=function(){var t,e,n,s;t=Mu,(e=function(){var t,e,n,s;t=Mu,"alter"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(Be));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&hl()!==u&&ai()!==u&&hl()!==u&&(n=So())!==u&&hl()!==u&&(s=function(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=eo())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=eo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=eo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,t=Wl(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())!==u?(t,a=s,(o=n)&&o.length>0&&o.forEach(r=>zl.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:"alter",table:o,expr:a}},t=e):(Mu=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n,s;t=Mu,(e=ui())!==u&&hl()!==u?((n=function(){var t,e,n,s;t=Mu,"global"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(Ws));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="GLOBAL"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Mu,"session"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(Xs));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="SESSION"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Mu,"local"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(Vs));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="LOCAL"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Mu,"persist"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(Ks));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="PERSIST"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(n=function(){var t,e,n,s;t=Mu,"persist_only"===r.substr(Mu,12).toLowerCase()?(e=r.substr(Mu,12),Mu+=12):(e=u,0===Pu&&Yu(qs));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="PERSIST_ONLY"):(Mu=t,t=u)):(Mu=t,t=u);return t}()),n===u&&(n=null),n!==u&&hl()!==u&&(s=_l())!==u?(t,o=n,(a=s).keyword=o,e={tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:"set",expr:a}},t=e):(Mu=t,t=u)):(Mu=t,t=u);var o,a;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=Mu,(e=function(){var t,e,n,s;t=Mu,"lock"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(g));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&hl()!==u?((n=ai())===u&&(n=null),n!==u&&hl()!==u&&(s=So())!==u&&hl()!==u?((o=function(){var t,e,n,s;t=Mu,"in"===r.substr(Mu,2).toLowerCase()?(e=r.substr(Mu,2),Mu+=2):(e=u,0===Pu&&Yu(mr));e!==u&&hl()!==u?("access share"===r.substr(Mu,12).toLowerCase()?(n=r.substr(Mu,12),Mu+=12):(n=u,0===Pu&&Yu(Ir)),n===u&&("row share"===r.substr(Mu,9).toLowerCase()?(n=r.substr(Mu,9),Mu+=9):(n=u,0===Pu&&Yu(Nr)),n===u&&("row exclusive"===r.substr(Mu,13).toLowerCase()?(n=r.substr(Mu,13),Mu+=13):(n=u,0===Pu&&Yu(Rr)),n===u&&("share update exclusive"===r.substr(Mu,22).toLowerCase()?(n=r.substr(Mu,22),Mu+=22):(n=u,0===Pu&&Yu(Sr)),n===u&&("share row exclusive"===r.substr(Mu,19).toLowerCase()?(n=r.substr(Mu,19),Mu+=19):(n=u,0===Pu&&Yu(_r)),n===u&&("exclusive"===r.substr(Mu,9).toLowerCase()?(n=r.substr(Mu,9),Mu+=9):(n=u,0===Pu&&Yu(M)),n===u&&("access exclusive"===r.substr(Mu,16).toLowerCase()?(n=r.substr(Mu,16),Mu+=16):(n=u,0===Pu&&Yu(Or)),n===u&&("share"===r.substr(Mu,5).toLowerCase()?(n=r.substr(Mu,5),Mu+=5):(n=u,0===Pu&&Yu(gr))))))))),n!==u&&hl()!==u?("mode"===r.substr(Mu,4).toLowerCase()?(s=r.substr(Mu,4),Mu+=4):(s=u,0===Pu&&Yu(xr)),s!==u?(t,e={mode:`in ${n.toLowerCase()} mode`},t=e):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(o=null),o!==u&&hl()!==u?("nowait"===r.substr(Mu,6).toLowerCase()?(a=r.substr(Mu,6),Mu+=6):(a=u,0===Pu&&Yu(Ur)),a===u&&(a=null),a!==u?(t,i=n,c=o,f=a,(l=s)&&l.forEach(r=>zl.add(`lock::${r.db}::${r.table}`)),e={tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:"lock",keyword:i&&i.toLowerCase(),tables:l.map(r=>({table:r})),lock_mode:c,nowait:f}},t=e):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u);var i,l,c,f;return t}()),t}function Vu(){var r;return(r=qu())===u&&(r=function(){var r,t,e,n,s,o;r=Mu,(t=Ka())!==u&&hl()!==u&&(e=So())!==u&&hl()!==u&&ui()!==u&&hl()!==u&&(n=function(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=Go())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=Go())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=Go())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,t=Wl(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())!==u&&hl()!==u?((s=Mo())===u&&(s=null),s!==u&&hl()!==u?((o=Ho())===u&&(o=null),o!==u?(r,t=function(r,t,e,n){const s={};return r&&r.forEach(r=>{const{db:t,as:e,table:n,join:u}=r,o=u?"select":"update";t&&(s[n]=t),n&&zl.add(`${o}::${t}::${n}`)}),t&&t.forEach(r=>{if(r.table){const t=Vl(r.table);zl.add(`update::${s[t]||null}::${t}`)}Ql.add(`update::${r.table}::${r.column}`)}),{tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:"update",table:r,set:t,where:e,returning:n}}}(e,n,s,o),r=t):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u);return r}())===u&&(r=function(){var r,t,e,n,s,o,a,i;r=Mu,(t=Bo())!==u&&hl()!==u?((e=ni())===u&&(e=null),e!==u&&hl()!==u&&(n=xo())!==u&&hl()!==u?((s=Yo())===u&&(s=null),s!==u&&hl()!==u&&bl()!==u&&hl()!==u&&(o=function(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=Ca())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=Ca())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=Ca())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,t=Wl(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())!==u&&hl()!==u&&vl()!==u&&hl()!==u&&(a=jo())!==u&&hl()!==u?((i=Ho())===u&&(i=null),i!==u?(r,t=function(r,t,e,n,s,u){if(t&&(zl.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(s)&&s.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>Ql.add(`insert::${r}::${t}`))}return{tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:r,table:[t],columns:n,values:s,partition:e,returning:u}}}(t,n,s,o,a,i),r=t):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u);return r}())===u&&(r=function(){var r,t,e,n,s,o,a,i;r=Mu,(t=Bo())!==u&&hl()!==u?((e=ti())===u&&(e=null),e!==u&&hl()!==u?((n=ni())===u&&(n=null),n!==u&&hl()!==u&&(s=xo())!==u&&hl()!==u?((o=Yo())===u&&(o=null),o!==u&&hl()!==u&&(a=jo())!==u&&hl()!==u?((i=Ho())===u&&(i=null),i!==u?(r,t=function(r,t,e,n,s,u,o){n&&(zl.add(`insert::${n.db}::${n.table}`),Ql.add(`insert::${n.table}::(.*)`),n.as=null);const a=[t,e].filter(r=>r).map(r=>r[0]&&r[0].toLowerCase()).join(" ");return{tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:r,table:[n],columns:null,values:u,partition:s,prefix:a,returning:o}}}(t,e,n,s,o,a,i),r=t):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u);return r}())===u&&(r=function(){var r,t,e,n,s;r=Mu,(t=za())!==u&&hl()!==u?((e=So())===u&&(e=null),e!==u&&hl()!==u&&(n=To())!==u&&hl()!==u?((s=Mo())===u&&(s=null),s!==u?(r,t=function(r,t,e){if(t&&t.forEach(r=>{const{db:t,as:e,table:n,join:s}=r,u=s?"select":"delete";n&&zl.add(`${u}::${t}::${n}`),s||Ql.add(`delete::${n}::(.*)`)}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}]}return{tableList:Array.from(zl),columnList:Kl(Ql),ast:{type:"delete",table:r,from:t,where:e}}}(e,n,s),r=t):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u);return r}())===u&&(r=Xu())===u&&(r=function(){var r,t;r=[],t=Sl();for(;t!==u;)r.push(t),t=Sl();return r}()),r}function Ku(){var t,e,n,s,o;return t=Mu,(e=function(){var t,e,n,s;t=Mu,"union"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(wn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="UNION"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(e=function(){var t,e,n,s;t=Mu,"intersect"===r.substr(Mu,9).toLowerCase()?(e=r.substr(Mu,9),Mu+=9):(e=u,0===Pu&&Yu(En));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="INTERSECT"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(e=function(){var t,e,n,s;t=Mu,"except"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(An));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="EXCEPT"):(Mu=t,t=u)):(Mu=t,t=u);return t}()),e!==u&&hl()!==u?((n=wi())===u&&(n=null),n!==u?(t,s=e,t=e=(o=n)?`${s.toLowerCase()} ${o.toLowerCase()}`:""+s.toLowerCase()):(Mu=t,t=u)):(Mu=t,t=u),t}function qu(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=vo())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=Ku())!==u&&(a=hl())!==u&&(i=vo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=Ku())!==u&&(a=hl())!==u&&(i=vo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u&&(n=hl())!==u?((s=Do())===u&&(s=null),s!==u&&(o=hl())!==u?((a=Fo())===u&&(a=null),a!==u?(r,r=t=function(r,t,e,n){let s=r;for(let r=0;r<t.length;r++)s._next=t[r][3],s.set_op=t[r][1],s=s._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(zl),columnList:Kl(Ql),ast:r}}(t,e,s,a)):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u)}else Mu=r,r=u;return r}function Zu(){var t,e;return t=Mu,"if"===r.substr(Mu,2).toLowerCase()?(e=r.substr(Mu,2),Mu+=2):(e=u,0===Pu&&Yu(i)),e!==u&&hl()!==u&&Ni()!==u&&hl()!==u&&Ii()!==u?(t,t=e="IF NOT EXISTS"):(Mu=t,t=u),t}function zu(){var t,e,n,s,o,a,i,l,c,f,b;return t=Mu,(e=Zo())!==u&&hl()!==u?((n=ro())===u&&(n=null),n!==u&&hl()!==u?((s=va())===u&&(s=null),s!==u&&hl()!==u?((o=di())===u&&(o=pi()),o===u&&(o=null),o!==u&&hl()!==u?(a=Mu,"nulls"===r.substr(Mu,5).toLowerCase()?(i=r.substr(Mu,5),Mu+=5):(i=u,0===Pu&&Yu(v)),i!==u&&(l=hl())!==u?("first"===r.substr(Mu,5).toLowerCase()?(c=r.substr(Mu,5),Mu+=5):(c=u,0===Pu&&Yu(L)),c===u&&("last"===r.substr(Mu,4).toLowerCase()?(c=r.substr(Mu,4),Mu+=4):(c=u,0===Pu&&Yu(C))),c!==u?a=i=[i,l,c]:(Mu=a,a=u)):(Mu=a,a=u),a===u&&(a=null),a!==u?(t,b=a,t=e={column:e,collate:n,opclass:s,order:(f=o)&&f.toLowerCase()||"asc",nulls:b&&`${b[0].toLowerCase()} ${b[2].toLowerCase()}`}):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u),t}function Qu(){var t;return(t=Ju())===u&&(t=uo())===u&&(t=oo())===u&&(t=function(){var t;(t=function(){var t,e,n,s,o,a;t=Mu,(e=ao())===u&&(e=null);e!==u&&hl()!==u?("primary key"===r.substr(Mu,11).toLowerCase()?(n=r.substr(Mu,11),Mu+=11):(n=u,0===Pu&&Yu(k)),n!==u&&hl()!==u?((s=Io())===u&&(s=null),s!==u&&hl()!==u&&(o=po())!==u&&hl()!==u?((a=No())===u&&(a=null),a!==u?(t,l=n,c=s,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:l.toLowerCase(),keyword:i&&i.keyword,index_type:c,resource:"constraint",index_options:b},t=e):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u);var i,l,c,f,b;return t}())===u&&(t=function(){var r,t,e,n,s,o,a,i;r=Mu,(t=ao())===u&&(t=null);t!==u&&hl()!==u&&(e=ol())!==u&&hl()!==u?((n=sl())===u&&(n=ul()),n===u&&(n=null),n!==u&&hl()!==u?((s=Ca())===u&&(s=null),s!==u&&hl()!==u?((o=Io())===u&&(o=null),o!==u&&hl()!==u&&(a=po())!==u&&hl()!==u?((i=No())===u&&(i=null),i!==u?(r,c=e,f=n,b=s,v=o,L=a,C=i,t={constraint:(l=t)&&l.constraint,definition:L,constraint_type:f&&`${c.toLowerCase()} ${f.toLowerCase()}`||c.toLowerCase(),keyword:l&&l.keyword,index_type:v,index:b,resource:"constraint",index_options:C},r=t):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u);var l,c,f,b,v,L,C;return r}())===u&&(t=function(){var t,e,n,s,o,a;t=Mu,(e=ao())===u&&(e=null);e!==u&&hl()!==u?("foreign key"===r.substr(Mu,11).toLowerCase()?(n=r.substr(Mu,11),Mu+=11):(n=u,0===Pu&&Yu(D)),n!==u&&hl()!==u?((s=Ca())===u&&(s=null),s!==u&&hl()!==u&&(o=po())!==u&&hl()!==u?((a=io())===u&&(a=null),a!==u?(t,l=n,c=s,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:l,keyword:i&&i.keyword,index:c,resource:"constraint",reference_definition:b},t=e):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u);var i,l,c,f,b;return t}());return t}()),t}function Ju(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C,R,S,_,O,g,x,U,M,k;return t=Mu,(e=ba())!==u&&hl()!==u&&(n=Fl())!==u&&hl()!==u?((s=function(){var r,t,e;r=Mu,(t=Ua())===u&&(t=xa());t!==u&&hl()!==u?((e=to())===u&&(e=null),e!==u?(r,s=e,(n=t)&&!n.value&&(n.value="null"),r=t={default_val:s,nullable:n}):(Mu=r,r=u)):(Mu=r,r=u);var n,s;r===u&&(r=Mu,(t=to())!==u&&hl()!==u?((e=Ua())===u&&(e=xa()),e===u&&(e=null),e!==u?(r,t=function(r,t){return t&&!t.value&&(t.value="null"),{default_val:r,nullable:t}}(t,e),r=t):(Mu=r,r=u)):(Mu=r,r=u));return r}())===u&&(s=null),s!==u&&hl()!==u?("auto_increment"===r.substr(Mu,14).toLowerCase()?(o=r.substr(Mu,14),Mu+=14):(o=u,0===Pu&&Yu(d)),o===u&&(o=null),o!==u&&hl()!==u?("unique"===r.substr(Mu,6).toLowerCase()?(a=r.substr(Mu,6),Mu+=6):(a=u,0===Pu&&Yu(p)),a===u&&(a=Mu,"primary"===r.substr(Mu,7).toLowerCase()?(i=r.substr(Mu,7),Mu+=7):(i=u,0===Pu&&Yu(w)),i!==u&&(l=hl())!==u?("key"===r.substr(Mu,3).toLowerCase()?(c=r.substr(Mu,3),Mu+=3):(c=u,0===Pu&&Yu(E)),c!==u?a=i=[i,l,c]:(Mu=a,a=u)):(Mu=a,a=u)),a===u&&(a=null),a!==u&&(i=hl())!==u?((l=ml())===u&&(l=null),l!==u&&(c=hl())!==u?((f=ro())===u&&(f=null),f!==u&&hl()!==u?((b=function(){var t,e,n;t=Mu,"column_format"===r.substr(Mu,13).toLowerCase()?(e=r.substr(Mu,13),Mu+=13):(e=u,0===Pu&&Yu(A));e!==u&&hl()!==u?("fixed"===r.substr(Mu,5).toLowerCase()?(n=r.substr(Mu,5),Mu+=5):(n=u,0===Pu&&Yu(h)),n===u&&("dynamic"===r.substr(Mu,7).toLowerCase()?(n=r.substr(Mu,7),Mu+=7):(n=u,0===Pu&&Yu(y)),n===u&&("default"===r.substr(Mu,7).toLowerCase()?(n=r.substr(Mu,7),Mu+=7):(n=u,0===Pu&&Yu(T)))),n!==u?(t,e={type:"column_format",value:n.toLowerCase()},t=e):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(b=null),b!==u&&hl()!==u?((v=function(){var t,e,n;t=Mu,"storage"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(m));e!==u&&hl()!==u?("disk"===r.substr(Mu,4).toLowerCase()?(n=r.substr(Mu,4),Mu+=4):(n=u,0===Pu&&Yu(I)),n===u&&("memory"===r.substr(Mu,6).toLowerCase()?(n=r.substr(Mu,6),Mu+=6):(n=u,0===Pu&&Yu(N))),n!==u?(t,e={type:"storage",value:n.toLowerCase()},t=e):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(v=null),v!==u&&hl()!==u?((L=io())===u&&(L=null),L!==u?(t,C=e,R=n,S=s,_=o,O=a,g=l,x=f,U=b,M=v,k=L,Ql.add(`create::${C.table}::${C.column}`),t=e={column:C,definition:R,nullable:S&&S.nullable,default_val:S&&S.default_val,auto_increment:_&&_.toLowerCase(),unique_or_primary:Array.isArray(O)?`${O[0].toLowerCase()} ${O[2].toLowerCase()}`:O,comment:g,collate:x,column_format:U,storage:M,reference_definition:k,resource:"column"}):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u),t}function ro(){var t,e;return t=Mu,function(){var t,e,n,s;t=Mu,"collate"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(br));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="COLLATE"):(Mu=t,t=u)):(Mu=t,t=u);return t}()!==u&&hl()!==u&&(e=va())!==u?(t,t={type:"collate",value:e}):(Mu=t,t=u),t}function to(){var r,t;return r=Mu,Wa()!==u&&hl()!==u?((t=ga())===u&&(t=Zo()),t!==u?(r,r={type:"default",value:t}):(Mu=r,r=u)):(Mu=r,r=u),r}function eo(){var r;return(r=function(){var r,t,e,n;r=Mu,(t=el())!==u&&hl()!==u?((e=nl())===u&&(e=null),e!==u&&hl()!==u&&(n=Ju())!==u?(r,s=e,o=n,t={action:"add",...o,keyword:s,resource:"column",type:"alter"},r=t):(Mu=r,r=u)):(Mu=r,r=u);var s,o;return r}())===u&&(r=function(){var r,t,e;r=Mu,Va()!==u&&hl()!==u?((t=nl())===u&&(t=null),t!==u&&hl()!==u&&(e=ba())!==u?(r,r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(Mu=r,r=u)):(Mu=r,r=u);return r}())===u&&(r=function(){var r,t,e;r=Mu,(t=el())!==u&&hl()!==u&&(e=uo())!==u?(r,n=e,t={action:"add",type:"alter",...n},r=t):(Mu=r,r=u);var n;return r}())===u&&(r=function(){var r,t,e;r=Mu,(t=el())!==u&&hl()!==u&&(e=oo())!==u?(r,n=e,t={action:"add",type:"alter",...n},r=t):(Mu=r,r=u);var n;return r}())===u&&(r=function(){var r,t,e,n;r=Mu,(t=ri())!==u&&hl()!==u?((e=Xa())===u&&(e=oi()),e===u&&(e=null),e!==u&&hl()!==u&&(n=va())!==u?(r,o=n,t={action:"rename",type:"alter",resource:"table",keyword:(s=e)&&s[0].toLowerCase(),table:o},r=t):(Mu=r,r=u)):(Mu=r,r=u);var s,o;return r}())===u&&(r=no())===u&&(r=so()),r}function no(){var t,e,n,s;return t=Mu,"algorithm"===r.substr(Mu,9).toLowerCase()?(e=r.substr(Mu,9),Mu+=9):(e=u,0===Pu&&Yu(R)),e!==u&&hl()!==u?((n=tl())===u&&(n=null),n!==u&&hl()!==u?("default"===r.substr(Mu,7).toLowerCase()?(s=r.substr(Mu,7),Mu+=7):(s=u,0===Pu&&Yu(T)),s===u&&("instant"===r.substr(Mu,7).toLowerCase()?(s=r.substr(Mu,7),Mu+=7):(s=u,0===Pu&&Yu(S)),s===u&&("inplace"===r.substr(Mu,7).toLowerCase()?(s=r.substr(Mu,7),Mu+=7):(s=u,0===Pu&&Yu(_)),s===u&&("copy"===r.substr(Mu,4).toLowerCase()?(s=r.substr(Mu,4),Mu+=4):(s=u,0===Pu&&Yu(O))))),s!==u?(t,t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:s}):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u),t}function so(){var t,e,n,s;return t=Mu,"lock"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(g)),e!==u&&hl()!==u?((n=tl())===u&&(n=null),n!==u&&hl()!==u?("default"===r.substr(Mu,7).toLowerCase()?(s=r.substr(Mu,7),Mu+=7):(s=u,0===Pu&&Yu(T)),s===u&&("none"===r.substr(Mu,4).toLowerCase()?(s=r.substr(Mu,4),Mu+=4):(s=u,0===Pu&&Yu(x)),s===u&&("shared"===r.substr(Mu,6).toLowerCase()?(s=r.substr(Mu,6),Mu+=6):(s=u,0===Pu&&Yu(U)),s===u&&("exclusive"===r.substr(Mu,9).toLowerCase()?(s=r.substr(Mu,9),Mu+=9):(s=u,0===Pu&&Yu(M))))),s!==u?(t,t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:s}):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u),t}function uo(){var r,t,e,n,s,o,a,i;return r=Mu,(t=sl())===u&&(t=ul()),t!==u&&hl()!==u?((e=Ca())===u&&(e=null),e!==u&&hl()!==u?((n=Io())===u&&(n=null),n!==u&&hl()!==u&&(s=po())!==u&&hl()!==u?((o=No())===u&&(o=null),o!==u&&hl()!==u?(r,a=n,i=o,r=t={index:e,definition:s,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u),r}function oo(){var t,e,n,s,o,a,i,l,c;return t=Mu,(e=function(){var t,e,n,s;t=Mu,"fulltext"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(uu));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="FULLTEXT"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(e=function(){var t,e,n,s;t=Mu,"spatial"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(ou));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="SPATIAL"):(Mu=t,t=u)):(Mu=t,t=u);return t}()),e!==u&&hl()!==u?((n=sl())===u&&(n=ul()),n===u&&(n=null),n!==u&&hl()!==u?((s=Ca())===u&&(s=null),s!==u&&hl()!==u&&(o=po())!==u&&hl()!==u?((a=No())===u&&(a=null),a!==u&&hl()!==u?(t,i=e,c=a,t=e={index:s,definition:o,keyword:(l=n)&&`${i.toLowerCase()} ${l.toLowerCase()}`||i.toLowerCase(),index_options:c,resource:"index"}):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u),t}function ao(){var r,t,e,n;return r=Mu,(t=il())!==u&&hl()!==u?((e=va())===u&&(e=null),e!==u?(r,n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(Mu=r,r=u)):(Mu=r,r=u),r}function io(){var t,e,n,s,o,a,i,l,c,f;return t=Mu,(e=function(){var t,e,n,s;t=Mu,"references"===r.substr(Mu,10).toLowerCase()?(e=r.substr(Mu,10),Mu+=10):(e=u,0===Pu&&Yu(cu));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="REFERENCES"):(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&hl()!==u&&(n=So())!==u&&hl()!==u&&(s=po())!==u&&hl()!==u?("match full"===r.substr(Mu,10).toLowerCase()?(o=r.substr(Mu,10),Mu+=10):(o=u,0===Pu&&Yu($)),o===u&&("match partial"===r.substr(Mu,13).toLowerCase()?(o=r.substr(Mu,13),Mu+=13):(o=u,0===Pu&&Yu(P)),o===u&&("match simple"===r.substr(Mu,12).toLowerCase()?(o=r.substr(Mu,12),Mu+=12):(o=u,0===Pu&&Yu(F)))),o===u&&(o=null),o!==u&&hl()!==u?((a=lo())===u&&(a=null),a!==u&&hl()!==u?((i=lo())===u&&(i=null),i!==u?(t,l=o,c=a,f=i,t=e={definition:s,table:n,keyword:e.toLowerCase(),match:l&&l.toLowerCase(),on_delete:c,on_update:f}):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u),t}function lo(){var t,e,n,s,o,a;return t=Mu,"on"===r.substr(Mu,2).toLowerCase()?(e=r.substr(Mu,2),Mu+=2):(e=u,0===Pu&&Yu(G)),e!==u&&yl()!==u?("delete"===r.substr(Mu,6).toLowerCase()?(n=r.substr(Mu,6),Mu+=6):(n=u,0===Pu&&Yu(H)),n===u&&("update"===r.substr(Mu,6).toLowerCase()?(n=r.substr(Mu,6),Mu+=6):(n=u,0===Pu&&Yu(j))),n!==u&&yl()!==u&&(s=function(){var t,e;t=Mu,"restrict"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(Y));e===u&&("cascade"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(B)),e===u&&("set null"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(W)),e===u&&("no action"===r.substr(Mu,9).toLowerCase()?(e=r.substr(Mu,9),Mu+=9):(e=u,0===Pu&&Yu(X)),e===u&&("set default"===r.substr(Mu,11).toLowerCase()?(e=r.substr(Mu,11),Mu+=11):(e=u,0===Pu&&Yu(V))))));e!==u&&(t,e=e.toLowerCase());return t=e}())!==u?(t,o=n,a=s,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(Mu=t,t=u)):(Mu=t,t=u),t}function co(){var t,e,n,s,o,a,i;return t=Mu,(e=Qa())===u&&(e=za())===u&&(e=Zi()),e!==u&&(t,i=e,e={keyword:Array.isArray(i)?i[0].toLowerCase():i.toLowerCase()}),(t=e)===u&&(t=Mu,(e=Ka())!==u&&hl()!==u?(n=Mu,"of"===r.substr(Mu,2).toLowerCase()?(s=r.substr(Mu,2),Mu+=2):(s=u,0===Pu&&Yu(rr)),s!==u&&(o=hl())!==u&&(a=ko())!==u?n=s=[s,o,a]:(Mu=n,n=u),n===u&&(n=null),n!==u?(t,t=e=function(r,t){return{keyword:r&&r[0]&&r[0].toLowerCase(),args:t&&{keyword:t[0],columns:t[2]}||null}}(e,n)):(Mu=t,t=u)):(Mu=t,t=u)),t}function fo(){var t,e,n,s,o,a,i,l,c;return t=Mu,(e=Wa())===u&&(e=null),e!==u&&hl()!==u?((n=function(){var t,e,n;return t=Mu,"character"===r.substr(Mu,9).toLowerCase()?(e=r.substr(Mu,9),Mu+=9):(e=u,0===Pu&&Yu(lr)),e!==u&&hl()!==u?("set"===r.substr(Mu,3).toLowerCase()?(n=r.substr(Mu,3),Mu+=3):(n=u,0===Pu&&Yu(cr)),n!==u?(t,t=e="CHARACTER SET"):(Mu=t,t=u)):(Mu=t,t=u),t}())===u&&("charset"===r.substr(Mu,7).toLowerCase()?(n=r.substr(Mu,7),Mu+=7):(n=u,0===Pu&&Yu(fr)),n===u&&("collate"===r.substr(Mu,7).toLowerCase()?(n=r.substr(Mu,7),Mu+=7):(n=u,0===Pu&&Yu(br)))),n!==u&&hl()!==u?((s=tl())===u&&(s=null),s!==u&&hl()!==u&&(o=da())!==u?(t,i=n,l=s,c=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:l,value:c}):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u),t}function bo(){var t,e,n,s,o,a,i,l,c;return t=Mu,"auto_increment"===r.substr(Mu,14).toLowerCase()?(e=r.substr(Mu,14),Mu+=14):(e=u,0===Pu&&Yu(d)),e===u&&("avg_row_length"===r.substr(Mu,14).toLowerCase()?(e=r.substr(Mu,14),Mu+=14):(e=u,0===Pu&&Yu(vr)),e===u&&("key_block_size"===r.substr(Mu,14).toLowerCase()?(e=r.substr(Mu,14),Mu+=14):(e=u,0===Pu&&Yu(Lr)),e===u&&("max_rows"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(Cr)),e===u&&("min_rows"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(dr)),e===u&&("stats_sample_pages"===r.substr(Mu,18).toLowerCase()?(e=r.substr(Mu,18),Mu+=18):(e=u,0===Pu&&Yu(pr))))))),e!==u&&hl()!==u?((n=tl())===u&&(n=null),n!==u&&hl()!==u&&(s=Pa())!==u?(t,l=n,c=s,t=e={keyword:e.toLowerCase(),symbol:l,value:c.value}):(Mu=t,t=u)):(Mu=t,t=u),t===u&&(t=fo())===u&&(t=Mu,(e=al())===u&&("connection"===r.substr(Mu,10).toLowerCase()?(e=r.substr(Mu,10),Mu+=10):(e=u,0===Pu&&Yu(wr))),e!==u&&hl()!==u?((n=tl())===u&&(n=null),n!==u&&hl()!==u&&(s=Ma())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,s)):(Mu=t,t=u)):(Mu=t,t=u),t===u&&(t=Mu,"compression"===r.substr(Mu,11).toLowerCase()?(e=r.substr(Mu,11),Mu+=11):(e=u,0===Pu&&Yu(Er)),e!==u&&hl()!==u?((n=tl())===u&&(n=null),n!==u&&hl()!==u?(s=Mu,39===r.charCodeAt(Mu)?(o="'",Mu++):(o=u,0===Pu&&Yu(Ar)),o!==u?("zlib"===r.substr(Mu,4).toLowerCase()?(a=r.substr(Mu,4),Mu+=4):(a=u,0===Pu&&Yu(hr)),a===u&&("lz4"===r.substr(Mu,3).toLowerCase()?(a=r.substr(Mu,3),Mu+=3):(a=u,0===Pu&&Yu(yr)),a===u&&("none"===r.substr(Mu,4).toLowerCase()?(a=r.substr(Mu,4),Mu+=4):(a=u,0===Pu&&Yu(x)))),a!==u?(39===r.charCodeAt(Mu)?(i="'",Mu++):(i=u,0===Pu&&Yu(Ar)),i!==u?s=o=[o,a,i]:(Mu=s,s=u)):(Mu=s,s=u)):(Mu=s,s=u),s!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,s)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u),t===u&&(t=Mu,"engine"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(Tr)),e!==u&&hl()!==u?((n=tl())===u&&(n=null),n!==u&&hl()!==u&&(s=da())!==u?(t,t=e=function(r,t,e){return{keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,s)):(Mu=t,t=u)):(Mu=t,t=u)))),t}function vo(){var t,e,n,s,o,a,i;return(t=wo())===u&&(t=Mu,e=Mu,40===r.charCodeAt(Mu)?(n="(",Mu++):(n=u,0===Pu&&Yu(Mr)),n!==u&&(s=hl())!==u&&(o=vo())!==u&&(a=hl())!==u?(41===r.charCodeAt(Mu)?(i=")",Mu++):(i=u,0===Pu&&Yu(kr)),i!==u?e=n=[n,s,o,a,i]:(Mu=e,e=u)):(Mu=e,e=u),e!==u&&(t,e={...e[2],parentheses_symbol:!0}),t=e),t}function Lo(){var t,e,n,s,o,a,i,l,c;if(t=Mu,Li()!==u)if(hl()!==u)if((e=Co())!==u){for(n=[],s=Mu,(o=hl())!==u&&(a=cl())!==u&&(i=hl())!==u&&(l=Co())!==u?s=o=[o,a,i,l]:(Mu=s,s=u);s!==u;)n.push(s),s=Mu,(o=hl())!==u&&(a=cl())!==u&&(i=hl())!==u&&(l=Co())!==u?s=o=[o,a,i,l]:(Mu=s,s=u);n!==u?(t,t=Wl(e,n)):(Mu=t,t=u)}else Mu=t,t=u;else Mu=t,t=u;else Mu=t,t=u;return t===u&&(t=Mu,hl()!==u&&Li()!==u&&(e=hl())!==u&&(n=function(){var t,e,n,s;t=Mu,"RECURSIVE"===r.substr(Mu,9)?(e="RECURSIVE",Mu+=9):(e=u,0===Pu&&Yu(qe));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&(s=hl())!==u&&(o=Co())!==u?(t,(c=o).recursive=!0,t=[c]):(Mu=t,t=u)),t}function Co(){var r,t,e,n,s;return r=Mu,(t=Ma())===u&&(t=da()),t!==u&&hl()!==u?((e=po())===u&&(e=null),e!==u&&hl()!==u&&oi()!==u&&hl()!==u&&bl()!==u&&hl()!==u&&(n=qu())!==u&&hl()!==u&&vl()!==u?(r,"string"==typeof(s=t)&&(s={type:"default",value:s}),r=t={name:s,stmt:n,columns:e}):(Mu=r,r=u)):(Mu=r,r=u),r}function po(){var r,t;return r=Mu,bl()!==u&&hl()!==u&&(t=ko())!==u&&hl()!==u&&vl()!==u?(r,r=t):(Mu=r,r=u),r}function wo(){var t,e,n,s,o,a,i,l,c,f,b,v,L,C,d,p,w,E,A,h,y;return t=Mu,hl()!==u?((e=Lo())===u&&(e=null),e!==u&&hl()!==u&&function(){var t,e,n,s;t=Mu,"select"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(We));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}()!==u&&yl()!==u?((n=function(){var r,t,e,n,s,o;if(r=Mu,(t=Eo())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=Eo())!==u?n=s=[s,o]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=Eo())!==u?n=s=[s,o]:(Mu=n,n=u);e!==u?(r,t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())===u&&(n=null),n!==u&&hl()!==u?((s=Ei())===u&&(s=null),s!==u&&hl()!==u&&(o=Ao())!==u&&hl()!==u?((a=To())===u&&(a=null),a!==u&&hl()!==u?((i=Mo())===u&&(i=null),i!==u&&hl()!==u?((l=function(){var t,e,n;t=Mu,(e=function(){var t,e,n,s;t=Mu,"group"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(mn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&hl()!==u&&Ci()!==u&&hl()!==u&&(n=Xo())!==u?(t,e=n.value,t=e):(Mu=t,t=u);return t}())===u&&(l=null),l!==u&&hl()!==u?((c=function(){var t,e;t=Mu,function(){var t,e,n,s;t=Mu,"having"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(Rn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}()!==u&&hl()!==u&&(e=Qo())!==u?(t,t=e):(Mu=t,t=u);return t}())===u&&(c=null),c!==u&&hl()!==u?((f=Do())===u&&(f=null),f!==u&&hl()!==u?((b=Fo())===u&&(b=null),b!==u?(t,v=e,L=n,C=s,d=o,w=i,E=l,A=c,h=f,y=b,(p=a)&&p.forEach(r=>r.table&&zl.add(`select::${r.db}::${r.table}`)),t={with:v,type:"select",options:L,distinct:C,columns:d,from:p,where:w,groupby:E,having:A,orderby:h,limit:y}):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u),t}function Eo(){var t,e;return t=Mu,(e=function(){var t;"sql_calc_found_rows"===r.substr(Mu,19).toLowerCase()?(t=r.substr(Mu,19),Mu+=19):(t=u,0===Pu&&Yu(fu));return t}())===u&&((e=function(){var t;"sql_cache"===r.substr(Mu,9).toLowerCase()?(t=r.substr(Mu,9),Mu+=9):(t=u,0===Pu&&Yu(bu));return t}())===u&&(e=function(){var t;"sql_no_cache"===r.substr(Mu,12).toLowerCase()?(t=r.substr(Mu,12),Mu+=12):(t=u,0===Pu&&Yu(vu));return t}()),e===u&&(e=function(){var t;"sql_big_result"===r.substr(Mu,14).toLowerCase()?(t=r.substr(Mu,14),Mu+=14):(t=u,0===Pu&&Yu(Cu));return t}())===u&&(e=function(){var t;"sql_small_result"===r.substr(Mu,16).toLowerCase()?(t=r.substr(Mu,16),Mu+=16):(t=u,0===Pu&&Yu(Lu));return t}())===u&&(e=function(){var t;"sql_buffer_result"===r.substr(Mu,17).toLowerCase()?(t=r.substr(Mu,17),Mu+=17):(t=u,0===Pu&&Yu(du));return t}())),e!==u&&(t,e=e),t=e}function Ao(){var r,t,e,n,s,o,a,i,l,c;if(r=Mu,(t=wi())===u&&(t=Mu,(e=fl())!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t===u&&(t=fl())),t!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=ho())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=ho())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,l=t,c=e,Ql.add("select::null::(.*)"),r=t=c&&c.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},Wl(l[0],c)):l[0]):(Mu=r,r=u)}else Mu=r,r=u;if(r===u)if(r=Mu,(t=ho())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=ho())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=ho())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,r=t=function(r,t){return Wl(r,t)}(t,e)):(Mu=r,r=u)}else Mu=r,r=u;return r}function ho(){var r,t,e,n,s;return r=Mu,(t=zo())===u&&(t=Zo()),t!==u&&(e=rl())!==u&&(n=Fl())!==u?(r,r=t={type:"cast",expr:t,symbol:"::",target:n}):(Mu=r,r=u),r===u&&(r=Mu,t=Mu,(e=va())!==u&&(n=hl())!==u&&(s=ll())!==u?t=e=[e,n,s]:(Mu=t,t=u),t===u&&(t=null),t!==u&&(e=hl())!==u&&(n=fl())!==u?(r,r=t=function(r){const t=r&&r[0]||null;return Ql.add(`select::${t}::(.*)`),{expr:{type:"column_ref",table:t,column:"*"},as:null}}(t)):(Mu=r,r=u),r===u&&(r=Mu,(t=zo())===u&&(t=Zo()),t!==u&&(e=hl())!==u?((n=yo())===u&&(n=null),n!==u?(r,r=t=function(r,t){return{type:"expr",expr:r,as:t}}(t,n)):(Mu=r,r=u)):(Mu=r,r=u))),r}function yo(){var r,t,e;return r=Mu,(t=oi())!==u&&hl()!==u&&(e=function(){var r,t;r=Mu,(t=da())!==u?(Mu,(function(r){if(!0===Hl[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return!1}(t)?u:void 0)!==u?(r,r=t=t):(Mu=r,r=u)):(Mu=r,r=u);r===u&&(r=Mu,(t=La())!==u&&(r,t=t),r=t);return r}())!==u?(r,r=t=e):(Mu=r,r=u),r===u&&(r=Mu,(t=oi())===u&&(t=null),t!==u&&hl()!==u&&(e=va())!==u?(r,r=t=e):(Mu=r,r=u)),r}function To(){var r,t;return r=Mu,si()!==u&&hl()!==u&&(t=So())!==u?(r,r=t):(Mu=r,r=u),r}function mo(){var r,t,e;return r=Mu,(t=xo())!==u&&hl()!==u&&Xa()!==u&&hl()!==u&&(e=xo())!==u?(r,r=t=[t,e]):(Mu=r,r=u),r}function Io(){var t,e;return t=Mu,vi()!==u&&hl()!==u?("btree"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(Dr)),e===u&&("hash"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu($r)),e===u&&("gist"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(Pr)),e===u&&("gin"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(Fr))))),e!==u?(t,t={keyword:"using",type:e.toLowerCase()}):(Mu=t,t=u)):(Mu=t,t=u),t}function No(){var r,t,e,n,s,o;if(r=Mu,(t=Ro())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=Ro())!==u?n=s=[s,o]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=Ro())!==u?n=s=[s,o]:(Mu=n,n=u);e!==u?(r,r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(Mu=r,r=u)}else Mu=r,r=u;return r}function Ro(){var t,e,n,s,o,a;return t=Mu,(e=function(){var t,e,n,s;t=Mu,"key_block_size"===r.substr(Mu,14).toLowerCase()?(e=r.substr(Mu,14),Mu+=14):(e=u,0===Pu&&Yu(Lr));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="KEY_BLOCK_SIZE"):(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&hl()!==u?((n=tl())===u&&(n=null),n!==u&&hl()!==u&&(s=Pa())!==u?(t,o=n,a=s,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(Mu=t,t=u)):(Mu=t,t=u),t===u&&(t=Mu,(e=da())!==u&&hl()!==u&&(n=tl())!==u&&hl()!==u?((s=Pa())===u&&(s=va()),s!==u?(t,t=e=function(r,t,e){return{type:r.toLowerCase(),symbol:t,expr:"string"==typeof e&&{type:"origin",value:e}||e}}(e,n,s)):(Mu=t,t=u)):(Mu=t,t=u),t===u&&(t=Io())===u&&(t=Mu,"with"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(Gr)),e!==u&&hl()!==u?("parser"===r.substr(Mu,6).toLowerCase()?(n=r.substr(Mu,6),Mu+=6):(n=u,0===Pu&&Yu(Hr)),n!==u&&hl()!==u&&(s=da())!==u?(t,t=e={type:"with parser",expr:s}):(Mu=t,t=u)):(Mu=t,t=u),t===u&&(t=Mu,"visible"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(jr)),e===u&&("invisible"===r.substr(Mu,9).toLowerCase()?(e=r.substr(Mu,9),Mu+=9):(e=u,0===Pu&&Yu(Yr))),e!==u&&(t,e=function(r){return{type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===u&&(t=ml())))),t}function So(){var r,t,e,n;if(r=Mu,(t=Oo())!==u){for(e=[],n=_o();n!==u;)e.push(n),n=_o();e!==u?(r,r=t=Br(t,e)):(Mu=r,r=u)}else Mu=r,r=u;return r}function _o(){var r,t,e;return r=Mu,hl()!==u&&(t=cl())!==u&&hl()!==u&&(e=Oo())!==u?(r,r=e):(Mu=r,r=u),r===u&&(r=Mu,hl()!==u&&(t=function(){var r,t,e,n,s,o,a,i,l,c,f;if(r=Mu,(t=go())!==u)if(hl()!==u)if((e=Oo())!==u)if(hl()!==u)if((n=vi())!==u)if(hl()!==u)if(bl()!==u)if(hl()!==u)if((s=da())!==u){for(o=[],a=Mu,(i=hl())!==u&&(l=cl())!==u&&(c=hl())!==u&&(f=da())!==u?a=i=[i,l,c,f]:(Mu=a,a=u);a!==u;)o.push(a),a=Mu,(i=hl())!==u&&(l=cl())!==u&&(c=hl())!==u&&(f=da())!==u?a=i=[i,l,c,f]:(Mu=a,a=u);o!==u&&(a=hl())!==u&&(i=vl())!==u?(r,b=t,L=s,C=o,(v=e).join=b,v.using=Wl(L,C),r=t=v):(Mu=r,r=u)}else Mu=r,r=u;else Mu=r,r=u;else Mu=r,r=u;else Mu=r,r=u;else Mu=r,r=u;else Mu=r,r=u;else Mu=r,r=u;else Mu=r,r=u;else Mu=r,r=u;var b,v,L,C;r===u&&(r=Mu,(t=go())!==u&&hl()!==u&&(e=Oo())!==u&&hl()!==u?((n=Uo())===u&&(n=null),n!==u?(r,t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(Mu=r,r=u)):(Mu=r,r=u),r===u&&(r=Mu,(t=go())!==u&&hl()!==u&&(e=bl())!==u&&hl()!==u&&(n=qu())!==u&&hl()!==u&&vl()!==u&&hl()!==u?((s=yo())===u&&(s=null),s!==u&&(o=hl())!==u?((a=Uo())===u&&(a=null),a!==u?(r,t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,s,a),r=t):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u)));return r}())!==u?(r,r=t):(Mu=r,r=u)),r}function Oo(){var t,e,n,s,o,a;return t=Mu,(e=function(){var t;"dual"===r.substr(Mu,4).toLowerCase()?(t=r.substr(Mu,4),Mu+=4):(t=u,0===Pu&&Yu(tu));return t}())!==u&&(t,e={type:"dual"}),(t=e)===u&&(t=Mu,(e=xo())!==u&&hl()!==u?((n=yo())===u&&(n=null),n!==u?(t,a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(Mu=t,t=u)):(Mu=t,t=u),t===u&&(t=Mu,(e=bl())!==u&&hl()!==u&&(n=qu())!==u&&hl()!==u&&vl()!==u&&hl()!==u?((s=yo())===u&&(s=null),s!==u?(t,t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,s)):(Mu=t,t=u)):(Mu=t,t=u))),t}function go(){var t,e,n,s,o,a;return t=Mu,(e=function(){var t,e,n,s;t=Mu,"natural"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(ln));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="NATURAL"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(e=null),e!==u&&(n=hl())!==u?((s=function(){var t,e,n,s;t=Mu,"left"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(cn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="LEFT"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(s=function(){var t,e,n,s;t=Mu,"right"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(fn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="RIGHT"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(s=function(){var t,e,n,s;t=Mu,"full"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(bn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="FULL"):(Mu=t,t=u)):(Mu=t,t=u);return t}()),s===u&&(s=null),s!==u&&hl()!==u?((o=fi())===u&&(o=null),o!==u&&hl()!==u&&li()!==u?(t,t=e=`${e?"NATURAL ":""}${(a=s)?a+" ":""}${o?"OUTER ":""}JOIN`):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u),t===u&&(t=Mu,e=Mu,(n=function(){var t,e,n,s;t=Mu,"inner"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(vn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="INNER"):(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&(s=hl())!==u?e=n=[n,s]:(Mu=e,e=u),e===u&&(e=null),e!==u&&(n=li())!==u?(t,t=e=e?"INNER JOIN":"JOIN"):(Mu=t,t=u),t===u&&(t=Mu,(e=ci())!==u&&(n=hl())!==u&&(s=li())!==u?(t,t=e="CROSS JOIN"):(Mu=t,t=u),t===u&&(t=Mu,(e=ci())===u&&(e=fi()),e!==u&&(n=hl())!==u&&(s=function(){var t,e,n,s;t=Mu,"apply"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(dn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u?(t,t=e=e[0].toUpperCase()+" APPLY"):(Mu=t,t=u)))),t}function xo(){var r,t,e,n,s,o,a,i,l,c;return r=Mu,(t=va())!==u?(e=Mu,(n=hl())!==u&&(s=ll())!==u&&(o=hl())!==u&&(a=va())!==u?e=n=[n,s,o,a]:(Mu=e,e=u),e!==u?(n=Mu,(s=hl())!==u&&(o=ll())!==u&&(a=hl())!==u&&(i=va())!==u?n=s=[s,o,a,i]:(Mu=n,n=u),n!==u?(r,r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=`${r}.${t[3]}`,n.table=e[3]),n}(t,e,n)):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u),r===u&&(r=Mu,(t=va())!==u&&(e=hl())!==u&&(n=ll())!==u&&(s=hl())!==u&&(o=fl())!==u?(r,c=t,zl.add(`select::${c}::(.*)`),r=t={db:c,table:"*"}):(Mu=r,r=u),r===u&&(r=Mu,(t=va())!==u?(e=Mu,(n=hl())!==u&&(s=ll())!==u&&(o=hl())!==u&&(a=va())!==u?e=n=[n,s,o,a]:(Mu=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Mu=r,r=u)):(Mu=r,r=u),r===u&&(r=Mu,(t=$l())!==u&&(r,(l=t).db=null,l.table=l.name,t=l),r=t))),r}function Uo(){var r,t;return r=Mu,ii()!==u&&hl()!==u&&(t=Qo())!==u?(r,r=t):(Mu=r,r=u),r}function Mo(){var t,e;return t=Mu,function(){var t,e,n,s;t=Mu,"where"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(Tn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}()!==u&&hl()!==u?((e=Qo())===u&&(e=Zo()),e!==u?(t,t=e):(Mu=t,t=u)):(Mu=t,t=u),t}function ko(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=ba())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=ba())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=ba())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,r=t=Wl(t,e)):(Mu=r,r=u)}else Mu=r,r=u;return r}function Do(){var t,e;return t=Mu,function(){var t,e,n,s;t=Mu,"order"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(Nn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}()!==u&&hl()!==u&&Ci()!==u&&hl()!==u&&(e=function(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=$o())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=$o())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=$o())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,t=Wl(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())!==u?(t,t=e):(Mu=t,t=u),t}function $o(){var r,t,e;return r=Mu,(t=Zo())!==u&&hl()!==u?((e=pi())===u&&(e=di()),e===u&&(e=null),e!==u?(r,r=t=function(r,t){const e={expr:r,type:"ASC"};return"DESC"===t&&(e.type="DESC"),e}(t,e)):(Mu=r,r=u)):(Mu=r,r=u),r}function Po(){var r;return(r=Pa())===u&&(r=Aa()),r}function Fo(){var t,e,n,s,o,a;return t=Mu,function(){var t,e,n,s;t=Mu,"limit"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(Sn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}()!==u&&hl()!==u?((e=Po())===u&&(e=wi()),e!==u&&hl()!==u?(n=Mu,(s=function(){var t,e,n,s;t=Mu,"offset"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(_n));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="OFFSET"):(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&(o=hl())!==u&&(a=Po())!==u?n=s=[s,o,a]:(Mu=n,n=u),n===u&&(n=null),n!==u?(t,t=function(r,t){const e=[];return"string"==typeof r?e.push({type:"origin",value:"all"}):e.push(r),t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u),t}function Go(){var t,e,n,s,o,a,i,l,c;return t=Mu,e=Mu,(n=va())!==u&&(s=hl())!==u&&(o=ll())!==u?e=n=[n,s,o]:(Mu=e,e=u),e===u&&(e=null),e!==u&&(n=hl())!==u&&(s=Ca())!==u&&(o=hl())!==u?(61===r.charCodeAt(Mu)?(a="=",Mu++):(a=u,0===Pu&&Yu(Wr)),a!==u&&hl()!==u&&(i=aa())!==u?(t,t=e={column:s,value:i,table:(c=e)&&c[0]}):(Mu=t,t=u)):(Mu=t,t=u),t===u&&(t=Mu,e=Mu,(n=va())!==u&&(s=hl())!==u&&(o=ll())!==u?e=n=[n,s,o]:(Mu=e,e=u),e===u&&(e=null),e!==u&&(n=hl())!==u&&(s=Ca())!==u&&(o=hl())!==u?(61===r.charCodeAt(Mu)?(a="=",Mu++):(a=u,0===Pu&&Yu(Wr)),a!==u&&hl()!==u&&(i=bi())!==u&&hl()!==u&&bl()!==u&&hl()!==u&&(l=ba())!==u&&hl()!==u&&vl()!==u?(t,t=e=function(r,t,e){return{column:t,value:e,table:r&&r[0],keyword:"values"}}(e,s,l)):(Mu=t,t=u)):(Mu=t,t=u)),t}function Ho(){var t,e,n,s,o;return t=Mu,(e=function(){var t,e,n,s;t=Mu,"returning"===r.substr(Mu,9).toLowerCase()?(e=r.substr(Mu,9),Mu+=9):(e=u,0===Pu&&Yu(ze));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="RETURNING"):(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&hl()!==u?((n=fl())===u&&(n=ko()),n!==u?(t,o=n,t=e={type:(s=e)&&s.toLowerCase()||"returning",columns:"*"===o&&[{type:"columne_ref",table:null,column:"*"}]||o}):(Mu=t,t=u)):(Mu=t,t=u),t}function jo(){var r;return(r=function(){var r,t;r=Mu,bi()!==u&&hl()!==u&&(t=function(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=Wo())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=Wo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=Wo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,t=Wl(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())!==u?(r,r=t):(Mu=r,r=u);return r}())===u&&(r=wo()),r}function Yo(){var r,t,e,n,s,o,a,i,l;if(r=Mu,ei()!==u)if(hl()!==u)if((t=bl())!==u)if(hl()!==u)if((e=da())!==u){for(n=[],s=Mu,(o=hl())!==u&&(a=cl())!==u&&(i=hl())!==u&&(l=da())!==u?s=o=[o,a,i,l]:(Mu=s,s=u);s!==u;)n.push(s),s=Mu,(o=hl())!==u&&(a=cl())!==u&&(i=hl())!==u&&(l=da())!==u?s=o=[o,a,i,l]:(Mu=s,s=u);n!==u&&(s=hl())!==u&&(o=vl())!==u?(r,r=Wl(e,n)):(Mu=r,r=u)}else Mu=r,r=u;else Mu=r,r=u;else Mu=r,r=u;else Mu=r,r=u;else Mu=r,r=u;return r===u&&(r=Mu,ei()!==u&&hl()!==u&&(t=Wo())!==u?(r,r=t):(Mu=r,r=u)),r}function Bo(){var r,t;return r=Mu,(t=Qa())!==u&&(r,t="insert"),(r=t)===u&&(r=Mu,(t=Ja())!==u&&(r,t="replace"),r=t),r}function Wo(){var r,t;return r=Mu,bl()!==u&&hl()!==u&&(t=Xo())!==u&&hl()!==u&&vl()!==u?(r,r=t):(Mu=r,r=u),r}function Xo(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=Zo())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=Zo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=Zo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,r=t=function(r,t){const e={type:"expr_list"};return e.value=Wl(r,t),e}(t,e)):(Mu=r,r=u)}else Mu=r,r=u;return r}function Vo(){var t,e,n;return t=Mu,zi()!==u&&hl()!==u&&(e=Zo())!==u&&hl()!==u&&(n=function(){var t;(t=function(){var t,e,n,s;t=Mu,"year"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(ae));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="YEAR"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Mu,"month"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(re));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="MONTH"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Mu,"day"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(Ht));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="DAY"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Mu,"hour"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(Vt));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="HOUR"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Mu,"minute"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(Jt));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="MINUTE"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Mu,"second"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(ee));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="SECOND"):(Mu=t,t=u)):(Mu=t,t=u);return t}());return t}())!==u?(t,t={type:"interval",expr:e,unit:n.toLowerCase()}):(Mu=t,t=u),t===u&&(t=Mu,zi()!==u&&hl()!==u&&(e=Ma())!==u?(t,t=function(r){return{type:"interval",expr:r,unit:""}}(e)):(Mu=t,t=u)),t}function Ko(){var t,e,n,s,o,a,i,l;return t=Mu,Oi()!==u&&hl()!==u?((e=Zo())===u&&(e=null),e!==u&&hl()!==u&&(n=function(){var r,t,e,n,s,o;if(r=Mu,(t=qo())!==u)if(hl()!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=qo())!==u?n=s=[s,o]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=qo())!==u?n=s=[s,o]:(Mu=n,n=u);e!==u?(r,t=b(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;else Mu=r,r=u;return r}())!==u&&hl()!==u?((s=function(){var t,e;t=Mu,function(){var t,e,n,s;t=Mu,"else"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(es));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}()!==u&&hl()!==u&&(e=Zo())!==u?(t,t={type:"else",result:e}):(Mu=t,t=u);return t}())===u&&(s=null),s!==u&&hl()!==u&&function(){var t,e,n,s;t=Mu,"end"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(ns));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}()!==u&&hl()!==u?((o=Oi())===u&&(o=null),o!==u?(t,a=e,i=n,(l=s)&&i.push(l),t={type:"case",expr:a||null,args:i}):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u),t}function qo(){var t,e,n;return t=Mu,gi()!==u&&hl()!==u&&(e=Qo())!==u&&hl()!==u&&function(){var t,e,n,s;t=Mu,"then"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(ts));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}()!==u&&hl()!==u&&(n=Zo())!==u?(t,t={type:"when",cond:e,result:n}):(Mu=t,t=u),t}function Zo(){var r;return(r=function(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=fa())!==u){if(e=[],n=Mu,(s=hl())!==u&&(o=Al())!==u&&(a=hl())!==u&&(i=fa())!==u?n=s=[s,o,a,i]:(Mu=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=Al())!==u&&(a=hl())!==u&&(i=fa())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);else e=u;e!==u&&(n=hl())!==u?((s=na())===u&&(s=null),s!==u?(r,t=function(r,t,e){const n=Xl(r,t);return null===e?n:"arithmetic"===e.type?Xl(n,e.tail):Yl(e.op,n,e.right)}(t,e,s),r=t):(Mu=r,r=u)):(Mu=r,r=u)}else Mu=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=Jo())!==u){for(e=[],n=Mu,(s=yl())!==u&&(o=Si())!==u&&(a=hl())!==u&&(i=Jo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=yl())!==u&&(o=Si())!==u&&(a=hl())!==u&&(i=Jo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,t=Xr(t,e),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())===u&&(r=function(){var r,t,e,n,s,o;if(r=Mu,(t=ia())!==u){if(e=[],n=Mu,(s=hl())!==u&&(o=fa())!==u?n=s=[s,o]:(Mu=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=fa())!==u?n=s=[s,o]:(Mu=n,n=u);else e=u;e!==u?(r,t=jl(t,e[0][1]),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())===u&&(r=qu()),r}function zo(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=Zo())!==u){if(e=[],n=Mu,(s=hl())!==u?((o=Ri())===u&&(o=Si())===u&&(o=Al()),o!==u&&(a=hl())!==u&&(i=Zo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u)):(Mu=n,n=u),n!==u)for(;n!==u;)e.push(n),n=Mu,(s=hl())!==u?((o=Ri())===u&&(o=Si())===u&&(o=Al()),o!==u&&(a=hl())!==u&&(i=Zo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u)):(Mu=n,n=u);else e=u;e!==u?(r,r=t=function(r,t){const e=t.length;let n=t[e-1][3];for(let s=e-1;s>=0;s--){const e=0===s?r:t[s-1][3];n=Yl(t[s][1],e,n)}return n}(t,e)):(Mu=r,r=u)}else Mu=r,r=u;return r}function Qo(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=Zo())!==u){for(e=[],n=Mu,(s=hl())!==u?((o=Ri())===u&&(o=Si())===u&&(o=cl()),o!==u&&(a=hl())!==u&&(i=Zo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u)):(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u?((o=Ri())===u&&(o=Si())===u&&(o=cl()),o!==u&&(a=hl())!==u&&(i=Zo())!==u?n=s=[s,o,a,i]:(Mu=n,n=u)):(Mu=n,n=u);e!==u?(r,r=t=function(r,t){const e=t.length;let n=r,s="";for(let r=0;r<e;++r)","===t[r][1]?(s=",",Array.isArray(n)||(n=[n]),n.push(t[r][3])):n=Yl(t[r][1],n,t[r][3]);if(","===s){const r={type:"expr_list"};return r.value=n,r}return n}(t,e)):(Mu=r,r=u)}else Mu=r,r=u;return r}function Jo(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=ra())!==u){for(e=[],n=Mu,(s=yl())!==u&&(o=Ri())!==u&&(a=hl())!==u&&(i=ra())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=yl())!==u&&(o=Ri())!==u&&(a=hl())!==u&&(i=ra())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,r=t=Xr(t,e)):(Mu=r,r=u)}else Mu=r,r=u;return r}function ra(){var t,e,n,s,o;return(t=ta())===u&&(t=function(){var r,t,e;r=Mu,(t=ea())!==u&&hl()!==u&&bl()!==u&&hl()!==u&&(e=qu())!==u&&hl()!==u&&vl()!==u?(r,n=t,(s=e).parentheses=!0,t=jl(n,s),r=t):(Mu=r,r=u);var n,s;return r}())===u&&(t=Mu,(e=Ni())===u&&(e=Mu,33===r.charCodeAt(Mu)?(n="!",Mu++):(n=u,0===Pu&&Yu(Vr)),n!==u?(s=Mu,Pu++,61===r.charCodeAt(Mu)?(o="=",Mu++):(o=u,0===Pu&&Yu(Wr)),Pu--,o===u?s=void 0:(Mu=s,s=u),s!==u?e=n=[n,s]:(Mu=e,e=u)):(Mu=e,e=u)),e!==u&&(n=hl())!==u&&(s=ra())!==u?(t,t=e=jl("NOT",s)):(Mu=t,t=u)),t}function ta(){var r,t,e,n,s;return r=Mu,(t=aa())!==u&&hl()!==u?((e=na())===u&&(e=null),e!==u?(r,n=t,r=t=null===(s=e)?n:"arithmetic"===s.type?Xl(n,s.tail):Yl(s.op,n,s.right)):(Mu=r,r=u)):(Mu=r,r=u),r===u&&(r=Ma())===u&&(r=ba()),r}function ea(){var r,t,e,n,s,o;return r=Mu,t=Mu,(e=Ni())!==u&&(n=hl())!==u&&(s=Ii())!==u?t=e=[e,n,s]:(Mu=t,t=u),t!==u&&(r,t=(o=t)[0]+" "+o[2]),(r=t)===u&&(r=Ii()),r}function na(){var t;return(t=function(){var r,t,e,n,s,o,a;r=Mu,t=[],e=Mu,(n=hl())!==u&&(s=sa())!==u&&(o=hl())!==u&&(a=aa())!==u?e=n=[n,s,o,a]:(Mu=e,e=u);if(e!==u)for(;e!==u;)t.push(e),e=Mu,(n=hl())!==u&&(s=sa())!==u&&(o=hl())!==u&&(a=aa())!==u?e=n=[n,s,o,a]:(Mu=e,e=u);else t=u;t!==u&&(r,t={type:"arithmetic",tail:t});return r=t}())===u&&(t=function(){var r,t,e,n;r=Mu,(t=oa())!==u&&hl()!==u&&(e=bl())!==u&&hl()!==u&&(n=Xo())!==u&&hl()!==u&&vl()!==u?(r,r=t={op:t,right:n}):(Mu=r,r=u);r===u&&(r=Mu,(t=oa())!==u&&hl()!==u?((e=$l())===u&&(e=Ma()),e!==u?(r,t=function(r,t){return{op:r,right:t}}(t,e),r=t):(Mu=r,r=u)):(Mu=r,r=u));return r}())===u&&(t=function(){var r,t,e;r=Mu,(t=ea())!==u&&hl()!==u&&bl()!==u&&hl()!==u&&(e=Xo())!==u&&hl()!==u&&vl()!==u?(r,r=t={op:t,right:e}):(Mu=r,r=u);return r}())===u&&(t=function(){var r,t,e,n;r=Mu,(t=function(){var r,t,e,n,s;r=Mu,t=Mu,(e=Ni())!==u&&(n=hl())!==u&&(s=Ai())!==u?t=e=[e,n,s]:(Mu=t,t=u);t!==u&&(r,t=(o=t)[0]+" "+o[2]);var o;(r=t)===u&&(r=Ai());return r}())!==u&&hl()!==u&&(e=aa())!==u&&hl()!==u&&Ri()!==u&&hl()!==u&&(n=aa())!==u?(r,r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Mu=r,r=u);return r}())===u&&(t=function(){var r,t,e;r=Mu,(t=function(){var r;r=Mu,yi()!==u&&hl()!==u&&Ni()!==u&&hl()!==u&&Ei()!==u&&hl()!==u&&si()!==u?(r,r="IS NOT DISTINCT FROM"):(Mu=r,r=u);r===u&&(r=Mu,yi()!==u&&hl()!==u&&Ei()!==u&&hl()!==u&&si()!==u?(r,r="IS DISTINCT FROM"):(Mu=r,r=u));return r}())!==u&&hl()!==u&&(e=Zo())!==u?(r,r=t={op:t,right:e}):(Mu=r,r=u);return r}())===u&&(t=function(){var r,t,e,n,s,o,a,i,l;r=Mu,(t=yi())!==u&&(e=hl())!==u&&(n=aa())!==u?(r,r=t={op:"IS",right:n}):(Mu=r,r=u);r===u&&(r=Mu,(t=yi())!==u&&(e=hl())!==u?(n=Mu,(s=Ei())!==u&&(o=hl())!==u&&(a=si())!==u&&(i=hl())!==u&&(l=xo())!==u?n=s=[s,o,a,i,l]:(Mu=n,n=u),n!==u?(r,t=function(r){const{db:t,table:e}=r.pop(),n="*"===e?"*":`"${e}"`;return{op:"IS",right:{type:"origin",value:"DISTINCT FROM "+(t?`"${t}".${n}`:n)}}}(n),r=t):(Mu=r,r=u)):(Mu=r,r=u),r===u&&(r=Mu,t=Mu,(e=yi())!==u&&(n=hl())!==u&&(s=Ni())!==u?t=e=[e,n,s]:(Mu=t,t=u),t!==u&&(e=hl())!==u&&(n=aa())!==u?(r,t=function(r){return{op:"IS NOT",right:r}}(n),r=t):(Mu=r,r=u)));return r}())===u&&(t=function(){var r,t,e,n;r=Mu,(t=function(){var r,t,e,n,s;r=Mu,t=Mu,(e=Ni())!==u&&(n=hl())!==u&&(s=Ti())!==u?t=e=[e,n,s]:(Mu=t,t=u);t!==u&&(r,t=(o=t)[0]+" "+o[2]);var o;(r=t)===u&&(r=Ti());return r}())!==u&&hl()!==u?((e=ga())===u&&(e=ta()),e!==u&&hl()!==u?((n=ua())===u&&(n=null),n!==u?(r,s=t,o=e,(a=n)&&(o.escape=a),r=t={op:s,right:o}):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u);var s,o,a;return r}())===u&&(t=function(){var r,t,e,n;r=Mu,(t=function(){var r,t,e,n,s,o,a;r=Mu,t=Mu,(e=Ni())!==u&&(n=hl())!==u&&(s=mi())!==u&&(o=hl())!==u&&(a=Xa())!==u?t=e=[e,n,s,o,a]:(Mu=t,t=u);t!==u&&(r,t="NOT SIMILAR TO");(r=t)===u&&(r=Mu,(t=mi())!==u&&(e=hl())!==u&&(n=Xa())!==u?(r,r=t="SIMILAR TO"):(Mu=r,r=u));return r}())!==u&&hl()!==u?((e=ga())===u&&(e=ta()),e!==u&&hl()!==u?((n=ua())===u&&(n=null),n!==u?(r,s=t,o=e,(a=n)&&(o.escape=a),r=t={op:s,right:o}):(Mu=r,r=u)):(Mu=r,r=u)):(Mu=r,r=u);var s,o,a;return r}())===u&&(t=function(){var t,e,n;t=Mu,"@>"===r.substr(Mu,2)?(e="@>",Mu+=2):(e=u,0===Pu&&Yu(tt));e===u&&("<@"===r.substr(Mu,2)?(e="<@",Mu+=2):(e=u,0===Pu&&Yu(et)),e===u&&(e=El())===u&&(e=function(){var t;"#>>"===r.substr(Mu,3)?(t="#>>",Mu+=3):(t=u,0===Pu&&Yu(mu));return t}())===u&&(e=function(){var t;"#>"===r.substr(Mu,2)?(t="#>",Mu+=2):(t=u,0===Pu&&Yu(Tu));return t}())===u&&(63===r.charCodeAt(Mu)?(e="?",Mu++):(e=u,0===Pu&&Yu(nt)),e===u&&("?|"===r.substr(Mu,2)?(e="?|",Mu+=2):(e=u,0===Pu&&Yu(st)),e===u&&("?&"===r.substr(Mu,2)?(e="?&",Mu+=2):(e=u,0===Pu&&Yu(ut)),e===u&&("#-"===r.substr(Mu,2)?(e="#-",Mu+=2):(e=u,0===Pu&&Yu(ot)))))));e!==u&&hl()!==u&&(n=ho())!==u?(t,e={op:e,right:(s=n)&&s.expr||s},t=e):(Mu=t,t=u);var s;return t}()),t}function sa(){var t;return">="===r.substr(Mu,2)?(t=">=",Mu+=2):(t=u,0===Pu&&Yu(Kr)),t===u&&(62===r.charCodeAt(Mu)?(t=">",Mu++):(t=u,0===Pu&&Yu(qr)),t===u&&("<="===r.substr(Mu,2)?(t="<=",Mu+=2):(t=u,0===Pu&&Yu(Zr)),t===u&&("<>"===r.substr(Mu,2)?(t="<>",Mu+=2):(t=u,0===Pu&&Yu(zr)),t===u&&(60===r.charCodeAt(Mu)?(t="<",Mu++):(t=u,0===Pu&&Yu(Qr)),t===u&&(61===r.charCodeAt(Mu)?(t="=",Mu++):(t=u,0===Pu&&Yu(Wr)),t===u&&("!="===r.substr(Mu,2)?(t="!=",Mu+=2):(t=u,0===Pu&&Yu(Jr)))))))),t}function ua(){var t,e,n;return t=Mu,"escape"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(rt)),e!==u&&hl()!==u&&(n=Ma())!==u?(t,t=e={type:"ESCAPE",value:n}):(Mu=t,t=u),t}function oa(){var r,t,e,n,s,o;return r=Mu,t=Mu,(e=Ni())!==u&&(n=hl())!==u&&(s=hi())!==u?t=e=[e,n,s]:(Mu=t,t=u),t!==u&&(r,t=(o=t)[0]+" "+o[2]),(r=t)===u&&(r=hi()),r}function aa(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=la())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=ia())!==u&&(a=hl())!==u&&(i=la())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=ia())!==u&&(a=hl())!==u&&(i=la())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,r=t=Xr(t,e)):(Mu=r,r=u)}else Mu=r,r=u;return r}function ia(){var t;return 43===r.charCodeAt(Mu)?(t="+",Mu++):(t=u,0===Pu&&Yu(at)),t===u&&(45===r.charCodeAt(Mu)?(t="-",Mu++):(t=u,0===Pu&&Yu(it))),t}function la(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=fa())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=ca())!==u&&(a=hl())!==u&&(i=fa())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=ca())!==u&&(a=hl())!==u&&(i=fa())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,r=t=Xl(t,e)):(Mu=r,r=u)}else Mu=r,r=u;return r}function ca(){var t;return 42===r.charCodeAt(Mu)?(t="*",Mu++):(t=u,0===Pu&&Yu(lt)),t===u&&(47===r.charCodeAt(Mu)?(t="/",Mu++):(t=u,0===Pu&&Yu(ct)),t===u&&(37===r.charCodeAt(Mu)?(t="%",Mu++):(t=u,0===Pu&&Yu(ft)))),t}function fa(){var t,e,n,s;return(t=function(){var t,e,n,s,o,a,i,l;t=Mu,(e=ga())===u&&(e=ha())===u&&(e=Sa())===u&&(e=Ko())===u&&(e=Vo())===u&&(e=ba())===u&&(e=Aa());e!==u&&rl()!==u&&(n=Fl())!==u?(t,t=e={type:"cast",keyword:"cast",expr:e,symbol:"::",target:n}):(Mu=t,t=u);t===u&&(t=Mu,(e=xi())===u&&(e=Ui()),e!==u&&hl()!==u&&(n=bl())!==u&&hl()!==u&&(s=Zo())!==u&&hl()!==u&&oi()!==u&&hl()!==u&&(o=Fl())!==u&&hl()!==u&&(a=vl())!==u?(t,e=function(r,t,e){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:e}}(e,s,o),t=e):(Mu=t,t=u),t===u&&(t=Mu,(e=xi())===u&&(e=Ui()),e!==u&&hl()!==u&&(n=bl())!==u&&hl()!==u&&(s=Zo())!==u&&hl()!==u&&oi()!==u&&hl()!==u&&(o=$i())!==u&&hl()!==u&&(a=bl())!==u&&hl()!==u&&(i=Fa())!==u&&hl()!==u&&vl()!==u&&hl()!==u&&(l=vl())!==u?(t,e=function(r,t,e){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+")"}}}(e,s,i),t=e):(Mu=t,t=u),t===u&&(t=Mu,(e=xi())===u&&(e=Ui()),e!==u&&hl()!==u&&(n=bl())!==u&&hl()!==u&&(s=Zo())!==u&&hl()!==u&&oi()!==u&&hl()!==u&&(o=$i())!==u&&hl()!==u&&(a=bl())!==u&&hl()!==u&&(i=Fa())!==u&&hl()!==u&&cl()!==u&&hl()!==u&&(l=Fa())!==u&&hl()!==u&&vl()!==u&&hl()!==u&&vl()!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:"DECIMAL("+e+", "+n+")"}}}(e,s,i,l),t=e):(Mu=t,t=u),t===u&&(t=Mu,(e=xi())===u&&(e=Ui()),e!==u&&hl()!==u&&(n=bl())!==u&&hl()!==u&&(s=Zo())!==u&&hl()!==u&&oi()!==u&&hl()!==u&&(o=function(){var t;(t=function(){var t,e,n,s;t=Mu,"signed"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(vs));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="SIGNED"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=Pi());return t}())!==u&&hl()!==u?((a=Gi())===u&&(a=null),a!==u&&hl()!==u&&(i=vl())!==u?(t,e=function(r,t,e,n){return{type:"cast",keyword:r.toLowerCase(),expr:t,symbol:"as",target:{dataType:e+(n?" "+n:"")}}}(e,s,o,a),t=e):(Mu=t,t=u)):(Mu=t,t=u)))));return t}())===u&&(t=ga())===u&&(t=ha())===u&&(t=Sa())===u&&(t=Ko())===u&&(t=Vo())===u&&(t=ba())===u&&(t=Aa())===u&&(t=Mu,bl()!==u&&(e=hl())!==u&&(n=Qo())!==u&&hl()!==u&&vl()!==u?(t,(s=n).parentheses=!0,t=s):(Mu=t,t=u),t===u&&(t=$l())===u&&(t=Mu,hl()!==u?(36===r.charCodeAt(Mu)?(e="$",Mu++):(e=u,0===Pu&&Yu(bt)),e!==u&&(n=Pa())!==u?(t,t={type:"origin",value:"$"+n.value}):(Mu=t,t=u)):(Mu=t,t=u))),t}function ba(){var r,t,e,n,s,o,a,i,l,c,f,b;if(r=Mu,t=Mu,(e=va())!==u&&(n=hl())!==u&&(s=ll())!==u?t=e=[e,n,s]:(Mu=t,t=u),t===u&&(t=null),t!==u&&(e=hl())!==u&&(n=fl())!==u?(r,r=t=function(r){const t=r&&r[0]||null;return Ql.add(`select::${t}::(.*)`),{type:"column_ref",table:t,column:"*"}}(t)):(Mu=r,r=u),r===u){if(r=Mu,t=Mu,(e=va())!==u&&(n=hl())!==u&&(s=ll())!==u?t=e=[e,n,s]:(Mu=t,t=u),t===u&&(t=null),t!==u)if((e=hl())!==u)if((n=Ca())!==u)if((s=hl())!==u){if(o=[],a=Mu,(i=wl())===u&&(i=pl()),i!==u&&(l=hl())!==u?((c=Ma())===u&&(c=Pa()),c!==u?a=i=[i,l,c]:(Mu=a,a=u)):(Mu=a,a=u),a!==u)for(;a!==u;)o.push(a),a=Mu,(i=wl())===u&&(i=pl()),i!==u&&(l=hl())!==u?((c=Ma())===u&&(c=Pa()),c!==u?a=i=[i,l,c]:(Mu=a,a=u)):(Mu=a,a=u);else o=u;o!==u?(r,r=t=function(r,t,e){const n=r&&r[0]||null;return Ql.add(`select::${n}::${t}`),{type:"column_ref",table:n,column:t,arrows:e.map(r=>r[0]),properties:e.map(r=>r[2])}}(t,n,o)):(Mu=r,r=u)}else Mu=r,r=u;else Mu=r,r=u;else Mu=r,r=u;else Mu=r,r=u;r===u&&(r=Mu,(t=va())!==u&&(e=hl())!==u&&(n=ll())!==u&&(s=hl())!==u&&(o=Ca())!==u?(r,f=t,b=o,Ql.add(`select::${f}::${b}`),r=t={type:"column_ref",table:f,column:b}):(Mu=r,r=u),r===u&&(r=Mu,(t=Ca())!==u&&(r,t=function(r){return Ql.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t))}return r}function va(){var r,t;return r=Mu,(t=da())!==u?(Mu,(vt(t)?u:void 0)!==u?(r,r=t=t):(Mu=r,r=u)):(Mu=r,r=u),r===u&&(r=Mu,(t=La())!==u&&(r,t=t),r=t),r}function La(){var t;return(t=function(){var t,e,n,s;t=Mu,34===r.charCodeAt(Mu)?(e='"',Mu++):(e=u,0===Pu&&Yu(Lt));if(e!==u){if(n=[],Ct.test(r.charAt(Mu))?(s=r.charAt(Mu),Mu++):(s=u,0===Pu&&Yu(dt)),s!==u)for(;s!==u;)n.push(s),Ct.test(r.charAt(Mu))?(s=r.charAt(Mu),Mu++):(s=u,0===Pu&&Yu(dt));else n=u;n!==u?(34===r.charCodeAt(Mu)?(s='"',Mu++):(s=u,0===Pu&&Yu(Lt)),s!==u?(t,e=pt(n),t=e):(Mu=t,t=u)):(Mu=t,t=u)}else Mu=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=Mu,39===r.charCodeAt(Mu)?(e="'",Mu++):(e=u,0===Pu&&Yu(Ar));if(e!==u){if(n=[],wt.test(r.charAt(Mu))?(s=r.charAt(Mu),Mu++):(s=u,0===Pu&&Yu(Et)),s!==u)for(;s!==u;)n.push(s),wt.test(r.charAt(Mu))?(s=r.charAt(Mu),Mu++):(s=u,0===Pu&&Yu(Et));else n=u;n!==u?(39===r.charCodeAt(Mu)?(s="'",Mu++):(s=u,0===Pu&&Yu(Ar)),s!==u?(t,e=pt(n),t=e):(Mu=t,t=u)):(Mu=t,t=u)}else Mu=t,t=u;return t}())===u&&(t=function(){var t,e,n,s;t=Mu,96===r.charCodeAt(Mu)?(e="`",Mu++):(e=u,0===Pu&&Yu(At));if(e!==u){if(n=[],ht.test(r.charAt(Mu))?(s=r.charAt(Mu),Mu++):(s=u,0===Pu&&Yu(yt)),s!==u)for(;s!==u;)n.push(s),ht.test(r.charAt(Mu))?(s=r.charAt(Mu),Mu++):(s=u,0===Pu&&Yu(yt));else n=u;n!==u?(96===r.charCodeAt(Mu)?(s="`",Mu++):(s=u,0===Pu&&Yu(At)),s!==u?(t,e=pt(n),t=e):(Mu=t,t=u)):(Mu=t,t=u)}else Mu=t,t=u;return t}()),t}function Ca(){var r,t;return r=Mu,(t=function(){var r,t,e,n;if(r=Mu,(t=pa())!==u){for(e=[],n=Ea();n!==u;)e.push(n),n=Ea();e!==u?(r,t=t+e.join(""),r=t):(Mu=r,r=u)}else Mu=r,r=u;return r}())!==u?(Mu,(vt(t)?u:void 0)!==u?(r,r=t=t):(Mu=r,r=u)):(Mu=r,r=u),r===u&&(r=La()),r}function da(){var r,t,e,n;if(r=Mu,(t=pa())!==u){for(e=[],n=wa();n!==u;)e.push(n),n=wa();e!==u?(r,r=t=t+e.join("")):(Mu=r,r=u)}else Mu=r,r=u;return r}function pa(){var t;return Tt.test(r.charAt(Mu))?(t=r.charAt(Mu),Mu++):(t=u,0===Pu&&Yu(mt)),t}function wa(){var t;return It.test(r.charAt(Mu))?(t=r.charAt(Mu),Mu++):(t=u,0===Pu&&Yu(Nt)),t}function Ea(){var t;return Rt.test(r.charAt(Mu))?(t=r.charAt(Mu),Mu++):(t=u,0===Pu&&Yu(St)),t}function Aa(){var t,e,n,s;return t=Mu,e=Mu,58===r.charCodeAt(Mu)?(n=":",Mu++):(n=u,0===Pu&&Yu(_t)),n!==u&&(s=da())!==u?e=n=[n,s]:(Mu=e,e=u),e!==u&&(t,e={type:"param",value:e[1]}),t=e}function ha(){var t;return(t=function(){var t,e,n;t=Mu,(e=function(){var t,e,n,s;t=Mu,"count"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(Hn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="COUNT"):(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&hl()!==u&&bl()!==u&&hl()!==u&&(n=function(){var t,e,n,s,o;t=Mu,(e=function(){var t,e;t=Mu,42===r.charCodeAt(Mu)?(e="*",Mu++):(e=u,0===Pu&&Yu(lt));e!==u&&(t,e={type:"star",value:"*"});return t=e}())!==u&&(t,e={expr:e});(t=e)===u&&(t=Mu,(e=Ei())===u&&(e=null),e!==u&&hl()!==u&&(n=bl())!==u&&hl()!==u&&(s=Zo())!==u&&hl()!==u&&vl()!==u&&hl()!==u?((o=Do())===u&&(o=null),o!==u?(t,t=e={distinct:e,expr:s,orderby:o,parentheses:!0}):(Mu=t,t=u)):(Mu=t,t=u),t===u&&(t=Mu,(e=Ei())===u&&(e=null),e!==u&&hl()!==u&&(n=Zo())!==u&&hl()!==u?((s=Do())===u&&(s=null),s!==u?(t,e=function(r,t,e){return{distinct:r,expr:t,orderby:e,parentheses:!1}}(e,n,s),t=e):(Mu=t,t=u)):(Mu=t,t=u)));return t}())!==u&&hl()!==u&&vl()!==u?(t,t=e={type:"aggr_func",name:e,args:n}):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l;t=Mu,(e=function(){var t;(t=function(){var t,e,n,s;t=Mu,"sum"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(Bn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="SUM"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Mu,"max"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(jn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="MAX"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Mu,"min"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(Yn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="MIN"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Mu,"avg"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(Wn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="AVG"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Mu,"collect"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(Xn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="COLLECT"):(Mu=t,t=u)):(Mu=t,t=u);return t}());return t}())!==u&&hl()!==u&&bl()!==u&&hl()!==u?((n=Ei())===u&&(n=null),n!==u&&(s=hl())!==u&&(o=aa())!==u&&(a=hl())!==u&&(i=vl())!==u?(t,t=e={type:"aggr_func",name:e,args:{expr:o,distinct:n}}):(Mu=t,t=u)):(Mu=t,t=u);t===u&&(t=Mu,(e=function(){var t;(t=function(){var t,e,n,s;t=Mu,"rank"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(Vn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="RANK"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Mu,"dense_rank"===r.substr(Mu,10).toLowerCase()?(e=r.substr(Mu,10),Mu+=10):(e=u,0===Pu&&Yu(Kn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="DENSE_RANK"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Mu,"row_number"===r.substr(Mu,10).toLowerCase()?(e=r.substr(Mu,10),Mu+=10):(e=u,0===Pu&&Yu(Zn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="ROW_NUMBER"):(Mu=t,t=u)):(Mu=t,t=u);return t}());return t}())!==u&&hl()!==u&&bl()!==u&&hl()!==u&&(n=vl())!==u?(t,e=function(r){return{type:"aggr_func",name:r}}(e),t=e):(Mu=t,t=u),t===u&&(t=Mu,(e=function(){var t,e,n,s;t=Mu,"listagg"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(qn));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="LISTAGG"):(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&hl()!==u&&bl()!==u&&hl()!==u&&(n=aa())!==u?(s=Mu,(o=hl())!==u&&(a=cl())!==u&&(i=hl())!==u&&(l=Ma())!==u?s=o=[o,a,i,l]:(Mu=s,s=u),s===u&&(s=null),s!==u&&(o=hl())!==u&&(a=vl())!==u?(t,e=function(r,t,e){return{type:"aggr_func",name:r,args:{expr:t,separator:e}}}(e,n,s),t=e):(Mu=t,t=u)):(Mu=t,t=u)));return t}()),t}function ya(){var r,t,e;return r=Mu,ii()!==u&&hl()!==u&&Ka()!==u&&hl()!==u&&(t=Qi())!==u&&hl()!==u&&bl()!==u&&hl()!==u?((e=Xo())===u&&(e=null),e!==u&&hl()!==u&&vl()!==u?(r,r={type:"on update",keyword:t,parentheses:!0,expr:e}):(Mu=r,r=u)):(Mu=r,r=u),r===u&&(r=Mu,ii()!==u&&hl()!==u&&Ka()!==u&&hl()!==u&&(t=Qi())!==u?(r,r=function(r){return{type:"on update",keyword:r}}(t)):(Mu=r,r=u)),r}function Ta(){var t,e,n,s;return t=Mu,"over"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(Ot)),e!==u&&hl()!==u&&bl()!==u&&hl()!==u&&ei()!==u&&hl()!==u&&Ci()!==u&&hl()!==u&&(n=Ao())!==u&&hl()!==u?((s=Do())===u&&(s=null),s!==u&&hl()!==u&&vl()!==u?(t,t=e={partitionby:n,orderby:s}):(Mu=t,t=u)):(Mu=t,t=u),t===u&&(t=ya()),t}function ma(){var t,e,n;return t=Mu,"position"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(gt)),e!==u&&hl()!==u&&bl()!==u&&hl()!==u&&(n=function(){var r,t,e,n,s,o,a,i;return r=Mu,(t=Ma())!==u&&hl()!==u&&hi()!==u&&hl()!==u&&(e=Zo())!==u?(n=Mu,(s=hl())!==u&&(o=si())!==u&&(a=hl())!==u&&(i=Pa())!==u?n=s=[s,o,a,i]:(Mu=n,n=u),n===u&&(n=null),n!==u?(r,r=t=function(r,t,e){let n=[r,{type:"origin",value:"in"},t];return e&&(n.push({type:"origin",value:"from"}),n.push(e[3])),{type:"expr_list",value:n}}(t,e,n)):(Mu=r,r=u)):(Mu=r,r=u),r}())!==u&&hl()!==u&&vl()!==u?(t,t=e={type:"function",name:"POSITION",separator:" ",args:n}):(Mu=t,t=u),t}function Ia(){var t,e,n;return t=Mu,(e=function(){var t;return"both"===r.substr(Mu,4).toLowerCase()?(t=r.substr(Mu,4),Mu+=4):(t=u,0===Pu&&Yu(xt)),t===u&&("leading"===r.substr(Mu,7).toLowerCase()?(t=r.substr(Mu,7),Mu+=7):(t=u,0===Pu&&Yu(Ut)),t===u&&("trailing"===r.substr(Mu,8).toLowerCase()?(t=r.substr(Mu,8),Mu+=8):(t=u,0===Pu&&Yu(Mt)))),t}())===u&&(e=null),e!==u&&hl()!==u?((n=Ma())===u&&(n=null),n!==u&&hl()!==u&&si()!==u?(t,t=e=function(r,t,e){let n=[];return r&&n.push({type:"origin",value:r}),t&&n.push(t),n.push({type:"origin",value:"from"}),{type:"expr_list",value:n}}(e,n)):(Mu=t,t=u)):(Mu=t,t=u),t}function Na(){var t,e,n;return t=Mu,"overlay"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(Pt)),e!==u&&hl()!==u&&bl()!==u&&hl()!==u&&(n=function(){var t,e,n,s,o,a,i,l,c,f;return t=Mu,(e=Zo())!==u&&hl()!==u?("placing"===r.substr(Mu,7).toLowerCase()?(n=r.substr(Mu,7),Mu+=7):(n=u,0===Pu&&Yu(Dt)),n!==u&&hl()!==u&&(s=Zo())!==u&&hl()!==u&&si()!==u&&hl()!==u&&(o=Pa())!==u?(a=Mu,(i=hl())!==u?("for"===r.substr(Mu,3).toLowerCase()?(l=r.substr(Mu,3),Mu+=3):(l=u,0===Pu&&Yu($t)),l!==u&&(c=hl())!==u&&(f=Pa())!==u?a=i=[i,l,c,f]:(Mu=a,a=u)):(Mu=a,a=u),a===u&&(a=null),a!==u?(t,t=e=function(r,t,e,n){let s=[r,{type:"origin",value:"placing"},t,{type:"origin",value:"from"},e];return n&&(s.push({type:"origin",value:"for"}),s.push(n[3])),{type:"expr_list",value:s}}(e,s,o,a)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u),t}())!==u&&hl()!==u&&vl()!==u?(t,t=e={type:"function",name:"OVERLAY",separator:" ",args:n}):(Mu=t,t=u),t}function Ra(){var t,e,n;return t=Mu,"substring"===r.substr(Mu,9).toLowerCase()?(e=r.substr(Mu,9),Mu+=9):(e=u,0===Pu&&Yu(Ft)),e!==u&&hl()!==u&&bl()!==u&&hl()!==u&&(n=function(){var t,e,n,s,o,a,i,l;return t=Mu,(e=Zo())!==u&&hl()!==u&&si()!==u&&hl()!==u&&(n=Pa())!==u?(s=Mu,(o=hl())!==u?("for"===r.substr(Mu,3).toLowerCase()?(a=r.substr(Mu,3),Mu+=3):(a=u,0===Pu&&Yu($t)),a!==u&&(i=hl())!==u&&(l=Pa())!==u?s=o=[o,a,i,l]:(Mu=s,s=u)):(Mu=s,s=u),s===u&&(s=null),s!==u?(t,t=e=function(r,t,e){let n=[r,{type:"origin",value:"from"},t];return e&&(n.push({type:"origin",value:"for"}),n.push(e[3])),{type:"expr_list",value:n}}(e,n,s)):(Mu=t,t=u)):(Mu=t,t=u),t}())!==u&&hl()!==u&&vl()!==u?(t,t=e={type:"function",name:"SUBSTRING",separator:" ",args:n}):(Mu=t,t=u),t}function Sa(){var t,e,n,s,o,a,i,l;return(t=ma())===u&&(t=function(){var t,e,n,s;return t=Mu,"trim"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(kt)),e!==u&&hl()!==u&&bl()!==u&&hl()!==u?((n=Ia())===u&&(n=null),n!==u&&hl()!==u&&(s=Zo())!==u&&hl()!==u&&vl()!==u?(t,t=e=function(r,t){let e=r||{type:"expr_list",value:[]};return e.value.push(t),{type:"function",name:"TRIM",args:e}}(n,s)):(Mu=t,t=u)):(Mu=t,t=u),t}())===u&&(t=Ra())===u&&(t=Na())===u&&(t=Mu,(e=Ml())!==u&&hl()!==u&&(n=bl())!==u&&hl()!==u?((s=Qo())===u&&(s=null),s!==u&&hl()!==u&&vl()!==u&&hl()!==u?((o=Ta())===u&&(o=null),o!==u?(t,a=e,l=o,(i=s)&&"expr_list"!==i.type&&(i={type:"expr_list",value:[i]}),t=e={type:"function",name:a,args:i||{type:"expr_list",value:[]},over:l}):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u),t===u&&(t=Mu,(e=function(){var t;(t=Oa())===u&&(t=function(){var t,e,n,s;t=Mu,"current_user"===r.substr(Mu,12).toLowerCase()?(e=r.substr(Mu,12),Mu+=12):(e=u,0===Pu&&Yu(js));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="CURRENT_USER"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Mu,"user"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(Ms));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="USER"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Mu,"session_user"===r.substr(Mu,12).toLowerCase()?(e=r.substr(Mu,12),Mu+=12):(e=u,0===Pu&&Yu(Ys));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="SESSION_USER"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Mu,"system_user"===r.substr(Mu,11).toLowerCase()?(e=r.substr(Mu,11),Mu+=11):(e=u,0===Pu&&Yu(Bs));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="SYSTEM_USER"):(Mu=t,t=u)):(Mu=t,t=u);return t}());return t}())!==u&&hl()!==u&&(n=bl())!==u&&hl()!==u?((s=Xo())===u&&(s=null),s!==u&&hl()!==u&&vl()!==u&&hl()!==u?((o=Ta())===u&&(o=null),o!==u?(t,t=e=function(r,t,e){return{type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,s,o)):(Mu=t,t=u)):(Mu=t,t=u)):(Mu=t,t=u),t===u&&(t=function(){var r,t,e,n,s;r=Mu,(t=_i())!==u&&hl()!==u&&bl()!==u&&hl()!==u&&(e=_a())!==u&&hl()!==u&&si()!==u&&hl()!==u?((n=qi())===u&&(n=zi())===u&&(n=Ki())===u&&(n=Xi()),n!==u&&hl()!==u&&(s=Zo())!==u&&hl()!==u&&vl()!==u?(r,o=e,a=n,i=s,t={type:t.toLowerCase(),args:{field:o,cast_type:a,source:i}},r=t):(Mu=r,r=u)):(Mu=r,r=u);var o,a,i;r===u&&(r=Mu,(t=_i())!==u&&hl()!==u&&bl()!==u&&hl()!==u&&(e=_a())!==u&&hl()!==u&&si()!==u&&hl()!==u&&(n=Zo())!==u&&hl()!==u&&(s=vl())!==u?(r,t=function(r,t,e){return{type:r.toLowerCase(),args:{field:t,source:e}}}(t,e,n),r=t):(Mu=r,r=u));return r}())===u&&(t=Mu,(e=Oa())!==u&&hl()!==u?((n=ya())===u&&(n=null),n!==u?(t,t=e={type:"function",name:e,over:n}):(Mu=t,t=u)):(Mu=t,t=u)))),t}function _a(){var t,e;return t=Mu,"century"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(Gt)),e===u&&("day"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(Ht)),e===u&&("date"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(jt)),e===u&&("decade"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(Yt)),e===u&&("dow"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(Bt)),e===u&&("doy"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(Wt)),e===u&&("epoch"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(Xt)),e===u&&("hour"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(Vt)),e===u&&("isodow"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(Kt)),e===u&&("isoyear"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(qt)),e===u&&("microseconds"===r.substr(Mu,12).toLowerCase()?(e=r.substr(Mu,12),Mu+=12):(e=u,0===Pu&&Yu(Zt)),e===u&&("millennium"===r.substr(Mu,10).toLowerCase()?(e=r.substr(Mu,10),Mu+=10):(e=u,0===Pu&&Yu(zt)),e===u&&("milliseconds"===r.substr(Mu,12).toLowerCase()?(e=r.substr(Mu,12),Mu+=12):(e=u,0===Pu&&Yu(Qt)),e===u&&("minute"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(Jt)),e===u&&("month"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(re)),e===u&&("quarter"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(te)),e===u&&("second"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(ee)),e===u&&("timezone"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(ne)),e===u&&("timezone_hour"===r.substr(Mu,13).toLowerCase()?(e=r.substr(Mu,13),Mu+=13):(e=u,0===Pu&&Yu(se)),e===u&&("timezone_minute"===r.substr(Mu,15).toLowerCase()?(e=r.substr(Mu,15),Mu+=15):(e=u,0===Pu&&Yu(ue)),e===u&&("week"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(oe)),e===u&&("year"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(ae))))))))))))))))))))))),e!==u&&(t,e=e),t=e}function Oa(){var t;return(t=function(){var t,e,n,s;t=Mu,"current_date"===r.substr(Mu,12).toLowerCase()?(e=r.substr(Mu,12),Mu+=12):(e=u,0===Pu&&Yu(Ps));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="CURRENT_DATE"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n,s;t=Mu,"current_time"===r.substr(Mu,12).toLowerCase()?(e=r.substr(Mu,12),Mu+=12):(e=u,0===Pu&&Yu(Gs));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="CURRENT_TIME"):(Mu=t,t=u)):(Mu=t,t=u);return t}())===u&&(t=Qi()),t}function ga(){var t;return(t=Ma())===u&&(t=Pa())===u&&(t=function(){var t,e;t=Mu,(e=function(){var t,e,n,s;t=Mu,"true"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(Fe));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!0});(t=e)===u&&(t=Mu,(e=function(){var t,e,n,s;t=Mu,"false"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(He));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&(t,e={type:"bool",value:!1}),t=e);return t}())===u&&(t=xa())===u&&(t=function(){var t,e,n,s,o,a;t=Mu,(e=Ki())===u&&(e=Xi())===u&&(e=qi())===u&&(e=Vi());if(e!==u)if(hl()!==u){if(n=Mu,39===r.charCodeAt(Mu)?(s="'",Mu++):(s=u,0===Pu&&Yu(Ar)),s!==u){for(o=[],a=Da();a!==u;)o.push(a),a=Da();o!==u?(39===r.charCodeAt(Mu)?(a="'",Mu++):(a=u,0===Pu&&Yu(Ar)),a!==u?n=s=[s,o,a]:(Mu=n,n=u)):(Mu=n,n=u)}else Mu=n,n=u;n!==u?(t,i=n,e={type:e.toLowerCase(),value:i[1].join("")},t=e):(Mu=t,t=u)}else Mu=t,t=u;else Mu=t,t=u;var i;if(t===u)if(t=Mu,(e=Ki())===u&&(e=Xi())===u&&(e=qi())===u&&(e=Vi()),e!==u)if(hl()!==u){if(n=Mu,34===r.charCodeAt(Mu)?(s='"',Mu++):(s=u,0===Pu&&Yu(Lt)),s!==u){for(o=[],a=ka();a!==u;)o.push(a),a=ka();o!==u?(34===r.charCodeAt(Mu)?(a='"',Mu++):(a=u,0===Pu&&Yu(Lt)),a!==u?n=s=[s,o,a]:(Mu=n,n=u)):(Mu=n,n=u)}else Mu=n,n=u;n!==u?(t,e=function(r,t){return{type:r.toLowerCase(),value:t[1].join("")}}(e,n),t=e):(Mu=t,t=u)}else Mu=t,t=u;else Mu=t,t=u;return t}()),t}function xa(){var t,e;return t=Mu,(e=function(){var t,e,n,s;t=Mu,"null"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu($e));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&(t,e={type:"null",value:null}),t=e}function Ua(){var t,e;return t=Mu,(e=function(){var t,e,n,s;t=Mu,"not null"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(Pe));e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u);return t}())!==u&&(t,e={type:"not null",value:"not null"}),t=e}function Ma(){var t,e,n,s,o;if(t=Mu,e=Mu,39===r.charCodeAt(Mu)?(n="'",Mu++):(n=u,0===Pu&&Yu(Ar)),n!==u){for(s=[],o=Da();o!==u;)s.push(o),o=Da();s!==u?(39===r.charCodeAt(Mu)?(o="'",Mu++):(o=u,0===Pu&&Yu(Ar)),o!==u?e=n=[n,s,o]:(Mu=e,e=u)):(Mu=e,e=u)}else Mu=e,e=u;if(e!==u&&(t,e={type:"single_quote_string",value:e[1].join("")}),(t=e)===u){if(t=Mu,e=Mu,34===r.charCodeAt(Mu)?(n='"',Mu++):(n=u,0===Pu&&Yu(Lt)),n!==u){for(s=[],o=ka();o!==u;)s.push(o),o=ka();s!==u?(34===r.charCodeAt(Mu)?(o='"',Mu++):(o=u,0===Pu&&Yu(Lt)),o!==u?e=n=[n,s,o]:(Mu=e,e=u)):(Mu=e,e=u)}else Mu=e,e=u;e!==u?(n=Mu,Pu++,s=ll(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e=function(r){return{type:"string",value:r[1].join("")}}(e)):(Mu=t,t=u)):(Mu=t,t=u)}return t}function ka(){var t;return ie.test(r.charAt(Mu))?(t=r.charAt(Mu),Mu++):(t=u,0===Pu&&Yu(le)),t===u&&(t=$a()),t}function Da(){var t;return ce.test(r.charAt(Mu))?(t=r.charAt(Mu),Mu++):(t=u,0===Pu&&Yu(fe)),t===u&&(t=$a()),t}function $a(){var t,e,n,s,o,a,i,l,c,f;return t=Mu,"\\'"===r.substr(Mu,2)?(e="\\'",Mu+=2):(e=u,0===Pu&&Yu(be)),e!==u&&(t,e="\\'"),(t=e)===u&&(t=Mu,'\\"'===r.substr(Mu,2)?(e='\\"',Mu+=2):(e=u,0===Pu&&Yu(ve)),e!==u&&(t,e='\\"'),(t=e)===u&&(t=Mu,"\\\\"===r.substr(Mu,2)?(e="\\\\",Mu+=2):(e=u,0===Pu&&Yu(Le)),e!==u&&(t,e="\\\\"),(t=e)===u&&(t=Mu,"\\/"===r.substr(Mu,2)?(e="\\/",Mu+=2):(e=u,0===Pu&&Yu(Ce)),e!==u&&(t,e="\\/"),(t=e)===u&&(t=Mu,"\\b"===r.substr(Mu,2)?(e="\\b",Mu+=2):(e=u,0===Pu&&Yu(de)),e!==u&&(t,e="\b"),(t=e)===u&&(t=Mu,"\\f"===r.substr(Mu,2)?(e="\\f",Mu+=2):(e=u,0===Pu&&Yu(pe)),e!==u&&(t,e="\f"),(t=e)===u&&(t=Mu,"\\n"===r.substr(Mu,2)?(e="\\n",Mu+=2):(e=u,0===Pu&&Yu(we)),e!==u&&(t,e="\n"),(t=e)===u&&(t=Mu,"\\r"===r.substr(Mu,2)?(e="\\r",Mu+=2):(e=u,0===Pu&&Yu(Ee)),e!==u&&(t,e="\r"),(t=e)===u&&(t=Mu,"\\t"===r.substr(Mu,2)?(e="\\t",Mu+=2):(e=u,0===Pu&&Yu(Ae)),e!==u&&(t,e="\t"),(t=e)===u&&(t=Mu,"\\u"===r.substr(Mu,2)?(e="\\u",Mu+=2):(e=u,0===Pu&&Yu(he)),e!==u&&(n=Ba())!==u&&(s=Ba())!==u&&(o=Ba())!==u&&(a=Ba())!==u?(t,i=n,l=s,c=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+l+c+f))):(Mu=t,t=u),t===u&&(t=Mu,92===r.charCodeAt(Mu)?(e="\\",Mu++):(e=u,0===Pu&&Yu(ye)),e!==u&&(t,e="\\"),(t=e)===u&&(t=Mu,"''"===r.substr(Mu,2)?(e="''",Mu+=2):(e=u,0===Pu&&Yu(Te)),e!==u&&(t,e="''"),(t=e)===u&&(t=Mu,'""'===r.substr(Mu,2)?(e='""',Mu+=2):(e=u,0===Pu&&Yu(me)),e!==u&&(t,e='""'),(t=e)===u&&(t=Mu,"``"===r.substr(Mu,2)?(e="``",Mu+=2):(e=u,0===Pu&&Yu(Ie)),e!==u&&(t,e="``"),t=e))))))))))))),t}function Pa(){var r,t,e;return r=Mu,(t=function(){var r,t,e,n;r=Mu,(t=Fa())!==u&&(e=Ga())!==u&&(n=Ha())!==u?(r,r=t={type:"bigint",value:t+e+n}):(Mu=r,r=u);r===u&&(r=Mu,(t=Fa())!==u&&(e=Ga())!==u?(r,t=function(r,t){const e=r+t;return Bl(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(Mu=r,r=u),r===u&&(r=Mu,(t=Fa())!==u&&(e=Ha())!==u?(r,t=function(r,t){return{type:"bigint",value:r+t}}(t,e),r=t):(Mu=r,r=u),r===u&&(r=Mu,(t=Fa())!==u&&(r,t=function(r){return Bl(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==u&&(r,t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function Fa(){var t,e,n;return(t=ja())===u&&(t=Ya())===u&&(t=Mu,45===r.charCodeAt(Mu)?(e="-",Mu++):(e=u,0===Pu&&Yu(it)),e===u&&(43===r.charCodeAt(Mu)?(e="+",Mu++):(e=u,0===Pu&&Yu(at))),e!==u&&(n=ja())!==u?(t,t=e=e+n):(Mu=t,t=u),t===u&&(t=Mu,45===r.charCodeAt(Mu)?(e="-",Mu++):(e=u,0===Pu&&Yu(it)),e===u&&(43===r.charCodeAt(Mu)?(e="+",Mu++):(e=u,0===Pu&&Yu(at))),e!==u&&(n=Ya())!==u?(t,t=e=function(r,t){return r+t}(e,n)):(Mu=t,t=u))),t}function Ga(){var t,e,n;return t=Mu,46===r.charCodeAt(Mu)?(e=".",Mu++):(e=u,0===Pu&&Yu(Se)),e!==u&&(n=ja())!==u?(t,t=e="."+n):(Mu=t,t=u),t}function Ha(){var t,e,n;return t=Mu,(e=function(){var t,e,n;t=Mu,Ue.test(r.charAt(Mu))?(e=r.charAt(Mu),Mu++):(e=u,0===Pu&&Yu(Me));e!==u?(ke.test(r.charAt(Mu))?(n=r.charAt(Mu),Mu++):(n=u,0===Pu&&Yu(De)),n===u&&(n=null),n!==u?(t,t=e=e+(null!==(s=n)?s:"")):(Mu=t,t=u)):(Mu=t,t=u);var s;return t}())!==u&&(n=ja())!==u?(t,t=e=e+n):(Mu=t,t=u),t}function ja(){var r,t,e;if(r=Mu,t=[],(e=Ya())!==u)for(;e!==u;)t.push(e),e=Ya();else t=u;return t!==u&&(r,t=t.join("")),r=t}function Ya(){var t;return _e.test(r.charAt(Mu))?(t=r.charAt(Mu),Mu++):(t=u,0===Pu&&Yu(Oe)),t}function Ba(){var t;return ge.test(r.charAt(Mu))?(t=r.charAt(Mu),Mu++):(t=u,0===Pu&&Yu(xe)),t}function Wa(){var t,e,n,s;return t=Mu,"default"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(T)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function Xa(){var t,e,n,s;return t=Mu,"to"===r.substr(Mu,2).toLowerCase()?(e=r.substr(Mu,2),Mu+=2):(e=u,0===Pu&&Yu(Ge)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function Va(){var t,e,n,s;return t=Mu,"drop"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(je)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="DROP"):(Mu=t,t=u)):(Mu=t,t=u),t}function Ka(){var t,e,n,s;return t=Mu,"update"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(j)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function qa(){var t,e,n,s;return t=Mu,"create"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(Xe)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function Za(){var t,e,n,s;return t=Mu,"temporary"===r.substr(Mu,9).toLowerCase()?(e=r.substr(Mu,9),Mu+=9):(e=u,0===Pu&&Yu(Ve)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function za(){var t,e,n,s;return t=Mu,"delete"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(H)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function Qa(){var t,e,n,s;return t=Mu,"insert"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(Ke)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function Ja(){var t,e,n,s;return t=Mu,"replace"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(Ze)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function ri(){var t,e,n,s;return t=Mu,"rename"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(Qe)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function ti(){var t,e,n,s;return t=Mu,"ignore"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(Je)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function ei(){var t,e,n,s;return t=Mu,"partition"===r.substr(Mu,9).toLowerCase()?(e=r.substr(Mu,9),Mu+=9):(e=u,0===Pu&&Yu(rn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="PARTITION"):(Mu=t,t=u)):(Mu=t,t=u),t}function ni(){var t,e,n,s;return t=Mu,"into"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(tn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function si(){var t,e,n,s;return t=Mu,"from"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(en)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function ui(){var t,e,n,s;return t=Mu,"set"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(cr)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function oi(){var t,e,n,s;return t=Mu,"as"===r.substr(Mu,2).toLowerCase()?(e=r.substr(Mu,2),Mu+=2):(e=u,0===Pu&&Yu(nn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function ai(){var t,e,n,s;return t=Mu,"table"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(sn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="TABLE"):(Mu=t,t=u)):(Mu=t,t=u),t}function ii(){var t,e,n,s;return t=Mu,"on"===r.substr(Mu,2).toLowerCase()?(e=r.substr(Mu,2),Mu+=2):(e=u,0===Pu&&Yu(G)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function li(){var t,e,n,s;return t=Mu,"join"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(Ln)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function ci(){var t,e,n,s;return t=Mu,"cross"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(Cn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function fi(){var t,e,n,s;return t=Mu,"outer"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(pn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function bi(){var t,e,n,s;return t=Mu,"values"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(hn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function vi(){var t,e,n,s;return t=Mu,"using"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(yn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function Li(){var t,e,n,s;return t=Mu,"with"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(Gr)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function Ci(){var t,e,n,s;return t=Mu,"by"===r.substr(Mu,2).toLowerCase()?(e=r.substr(Mu,2),Mu+=2):(e=u,0===Pu&&Yu(In)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function di(){var t,e,n,s;return t=Mu,"asc"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(On)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="ASC"):(Mu=t,t=u)):(Mu=t,t=u),t}function pi(){var t,e,n,s;return t=Mu,"desc"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(gn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="DESC"):(Mu=t,t=u)):(Mu=t,t=u),t}function wi(){var t,e,n,s;return t=Mu,"all"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(xn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="ALL"):(Mu=t,t=u)):(Mu=t,t=u),t}function Ei(){var t,e,n,s;return t=Mu,"distinct"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(Un)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="DISTINCT"):(Mu=t,t=u)):(Mu=t,t=u),t}function Ai(){var t,e,n,s;return t=Mu,"between"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(Mn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="BETWEEN"):(Mu=t,t=u)):(Mu=t,t=u),t}function hi(){var t,e,n,s;return t=Mu,"in"===r.substr(Mu,2).toLowerCase()?(e=r.substr(Mu,2),Mu+=2):(e=u,0===Pu&&Yu(mr)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="IN"):(Mu=t,t=u)):(Mu=t,t=u),t}function yi(){var t,e,n,s;return t=Mu,"is"===r.substr(Mu,2).toLowerCase()?(e=r.substr(Mu,2),Mu+=2):(e=u,0===Pu&&Yu(kn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="IS"):(Mu=t,t=u)):(Mu=t,t=u),t}function Ti(){var t,e,n,s;return t=Mu,"like"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(Dn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="LIKE"):(Mu=t,t=u)):(Mu=t,t=u),t}function mi(){var t,e,n,s;return t=Mu,"similar"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu($n)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="SIMILAR"):(Mu=t,t=u)):(Mu=t,t=u),t}function Ii(){var t,e,n,s;return t=Mu,"exists"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(Pn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="EXISTS"):(Mu=t,t=u)):(Mu=t,t=u),t}function Ni(){var t,e,n,s;return t=Mu,"not"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(tr)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="NOT"):(Mu=t,t=u)):(Mu=t,t=u),t}function Ri(){var t,e,n,s;return t=Mu,"and"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(Fn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="AND"):(Mu=t,t=u)):(Mu=t,t=u),t}function Si(){var t,e,n,s;return t=Mu,"or"===r.substr(Mu,2).toLowerCase()?(e=r.substr(Mu,2),Mu+=2):(e=u,0===Pu&&Yu(Gn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="OR"):(Mu=t,t=u)):(Mu=t,t=u),t}function _i(){var t,e,n,s;return t=Mu,"extract"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(zn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="EXTRACT"):(Mu=t,t=u)):(Mu=t,t=u),t}function Oi(){var t,e,n,s;return t=Mu,"case"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(Jn)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function gi(){var t,e,n,s;return t=Mu,"when"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(rs)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?t=e=[e,n]:(Mu=t,t=u)):(Mu=t,t=u),t}function xi(){var t,e,n,s;return t=Mu,"cast"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(ss)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="CAST"):(Mu=t,t=u)):(Mu=t,t=u),t}function Ui(){var t,e,n,s;return t=Mu,"try_cast"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(us)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="TRY_CAST"):(Mu=t,t=u)):(Mu=t,t=u),t}function Mi(){var t,e,n,s;return t=Mu,"char"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(is)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="CHAR"):(Mu=t,t=u)):(Mu=t,t=u),t}function ki(){var t,e,n,s;return t=Mu,"varchar"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(ls)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="VARCHAR"):(Mu=t,t=u)):(Mu=t,t=u),t}function Di(){var t,e,n,s;return t=Mu,"numeric"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(fs)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="NUMERIC"):(Mu=t,t=u)):(Mu=t,t=u),t}function $i(){var t,e,n,s;return t=Mu,"decimal"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(bs)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="DECIMAL"):(Mu=t,t=u)):(Mu=t,t=u),t}function Pi(){var t,e,n,s;return t=Mu,"unsigned"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(Ls)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="UNSIGNED"):(Mu=t,t=u)):(Mu=t,t=u),t}function Fi(){var t,e,n,s;return t=Mu,"int"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(Cs)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="INT"):(Mu=t,t=u)):(Mu=t,t=u),t}function Gi(){var t,e,n,s;return t=Mu,"integer"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(ps)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="INTEGER"):(Mu=t,t=u)):(Mu=t,t=u),t}function Hi(){var t,e,n,s;return t=Mu,"smallint"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(hs)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="SMALLINT"):(Mu=t,t=u)):(Mu=t,t=u),t}function ji(){var t,e,n,s;return t=Mu,"tinyint"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(ys)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="TINYINT"):(Mu=t,t=u)):(Mu=t,t=u),t}function Yi(){var t,e,n,s;return t=Mu,"bigint"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(Rs)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="BIGINT"):(Mu=t,t=u)):(Mu=t,t=u),t}function Bi(){var t,e,n,s;return t=Mu,"float"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(Ss)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="FLOAT"):(Mu=t,t=u)):(Mu=t,t=u),t}function Wi(){var t,e,n,s;return t=Mu,"double"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(_s)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="DOUBLE"):(Mu=t,t=u)):(Mu=t,t=u),t}function Xi(){var t,e,n,s;return t=Mu,"date"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(jt)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="DATE"):(Mu=t,t=u)):(Mu=t,t=u),t}function Vi(){var t,e,n,s;return t=Mu,"datetime"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(Os)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="DATETIME"):(Mu=t,t=u)):(Mu=t,t=u),t}function Ki(){var t,e,n,s;return t=Mu,"time"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(gs)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="TIME"):(Mu=t,t=u)):(Mu=t,t=u),t}function qi(){var t,e,n,s;return t=Mu,"timestamp"===r.substr(Mu,9).toLowerCase()?(e=r.substr(Mu,9),Mu+=9):(e=u,0===Pu&&Yu(xs)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="TIMESTAMP"):(Mu=t,t=u)):(Mu=t,t=u),t}function Zi(){var t,e,n,s;return t=Mu,"truncate"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(Us)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="TRUNCATE"):(Mu=t,t=u)):(Mu=t,t=u),t}function zi(){var t,e,n,s;return t=Mu,"interval"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(Fs)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="INTERVAL"):(Mu=t,t=u)):(Mu=t,t=u),t}function Qi(){var t,e,n,s;return t=Mu,"current_timestamp"===r.substr(Mu,17).toLowerCase()?(e=r.substr(Mu,17),Mu+=17):(e=u,0===Pu&&Yu(Hs)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="CURRENT_TIMESTAMP"):(Mu=t,t=u)):(Mu=t,t=u),t}function Ji(){var t;return(t=function(){var t;return"@@"===r.substr(Mu,2)?(t="@@",Mu+=2):(t=u,0===Pu&&Yu(zs)),t}())===u&&(t=function(){var t;return 64===r.charCodeAt(Mu)?(t="@",Mu++):(t=u,0===Pu&&Yu(Zs)),t}())===u&&(t=function(){var t;return 36===r.charCodeAt(Mu)?(t="$",Mu++):(t=u,0===Pu&&Yu(bt)),t}()),t}function rl(){var t;return"::"===r.substr(Mu,2)?(t="::",Mu+=2):(t=u,0===Pu&&Yu(ru)),t}function tl(){var t;return 61===r.charCodeAt(Mu)?(t="=",Mu++):(t=u,0===Pu&&Yu(Wr)),t}function el(){var t,e,n,s;return t=Mu,"add"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(eu)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="ADD"):(Mu=t,t=u)):(Mu=t,t=u),t}function nl(){var t,e,n,s;return t=Mu,"column"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(nu)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="COLUMN"):(Mu=t,t=u)):(Mu=t,t=u),t}function sl(){var t,e,n,s;return t=Mu,"index"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(su)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="INDEX"):(Mu=t,t=u)):(Mu=t,t=u),t}function ul(){var t,e,n,s;return t=Mu,"key"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(E)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="KEY"):(Mu=t,t=u)):(Mu=t,t=u),t}function ol(){var t,e,n,s;return t=Mu,"unique"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(p)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="UNIQUE"):(Mu=t,t=u)):(Mu=t,t=u),t}function al(){var t,e,n,s;return t=Mu,"comment"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(au)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="COMMENT"):(Mu=t,t=u)):(Mu=t,t=u),t}function il(){var t,e,n,s;return t=Mu,"constraint"===r.substr(Mu,10).toLowerCase()?(e=r.substr(Mu,10),Mu+=10):(e=u,0===Pu&&Yu(iu)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="CONSTRAINT"):(Mu=t,t=u)):(Mu=t,t=u),t}function ll(){var t;return 46===r.charCodeAt(Mu)?(t=".",Mu++):(t=u,0===Pu&&Yu(Se)),t}function cl(){var t;return 44===r.charCodeAt(Mu)?(t=",",Mu++):(t=u,0===Pu&&Yu(pu)),t}function fl(){var t;return 42===r.charCodeAt(Mu)?(t="*",Mu++):(t=u,0===Pu&&Yu(lt)),t}function bl(){var t;return 40===r.charCodeAt(Mu)?(t="(",Mu++):(t=u,0===Pu&&Yu(Mr)),t}function vl(){var t;return 41===r.charCodeAt(Mu)?(t=")",Mu++):(t=u,0===Pu&&Yu(kr)),t}function Ll(){var t;return 60===r.charCodeAt(Mu)?(t="<",Mu++):(t=u,0===Pu&&Yu(Qr)),t}function Cl(){var t;return 62===r.charCodeAt(Mu)?(t=">",Mu++):(t=u,0===Pu&&Yu(qr)),t}function dl(){var t;return 59===r.charCodeAt(Mu)?(t=";",Mu++):(t=u,0===Pu&&Yu(Au)),t}function pl(){var t;return"->"===r.substr(Mu,2)?(t="->",Mu+=2):(t=u,0===Pu&&Yu(hu)),t}function wl(){var t;return"->>"===r.substr(Mu,3)?(t="->>",Mu+=3):(t=u,0===Pu&&Yu(yu)),t}function El(){var t;return"||"===r.substr(Mu,2)?(t="||",Mu+=2):(t=u,0===Pu&&Yu(Iu)),t}function Al(){var t;return(t=El())===u&&(t=function(){var t;return"&&"===r.substr(Mu,2)?(t="&&",Mu+=2):(t=u,0===Pu&&Yu(Nu)),t}()),t}function hl(){var r,t;for(r=[],(t=Nl())===u&&(t=Tl());t!==u;)r.push(t),(t=Nl())===u&&(t=Tl());return r}function yl(){var r,t;if(r=[],(t=Nl())===u&&(t=Tl()),t!==u)for(;t!==u;)r.push(t),(t=Nl())===u&&(t=Tl());else r=u;return r}function Tl(){var t;return(t=function(){var t,e,n,s,o,a;t=Mu,"/*"===r.substr(Mu,2)?(e="/*",Mu+=2):(e=u,0===Pu&&Yu(Ru));if(e!==u){for(n=[],s=Mu,o=Mu,Pu++,"*/"===r.substr(Mu,2)?(a="*/",Mu+=2):(a=u,0===Pu&&Yu(Su)),Pu--,a===u?o=void 0:(Mu=o,o=u),o!==u&&(a=Il())!==u?s=o=[o,a]:(Mu=s,s=u);s!==u;)n.push(s),s=Mu,o=Mu,Pu++,"*/"===r.substr(Mu,2)?(a="*/",Mu+=2):(a=u,0===Pu&&Yu(Su)),Pu--,a===u?o=void 0:(Mu=o,o=u),o!==u&&(a=Il())!==u?s=o=[o,a]:(Mu=s,s=u);n!==u?("*/"===r.substr(Mu,2)?(s="*/",Mu+=2):(s=u,0===Pu&&Yu(Su)),s!==u?t=e=[e,n,s]:(Mu=t,t=u)):(Mu=t,t=u)}else Mu=t,t=u;return t}())===u&&(t=function(){var t,e,n,s,o,a;t=Mu,"--"===r.substr(Mu,2)?(e="--",Mu+=2):(e=u,0===Pu&&Yu(_u));if(e!==u){for(n=[],s=Mu,o=Mu,Pu++,a=Rl(),Pu--,a===u?o=void 0:(Mu=o,o=u),o!==u&&(a=Il())!==u?s=o=[o,a]:(Mu=s,s=u);s!==u;)n.push(s),s=Mu,o=Mu,Pu++,a=Rl(),Pu--,a===u?o=void 0:(Mu=o,o=u),o!==u&&(a=Il())!==u?s=o=[o,a]:(Mu=s,s=u);n!==u?t=e=[e,n]:(Mu=t,t=u)}else Mu=t,t=u;return t}()),t}function ml(){var r,t,e,n,s,o,a;return r=Mu,(t=al())!==u&&hl()!==u?((e=tl())===u&&(e=null),e!==u&&hl()!==u&&(n=Ma())!==u?(r,o=e,a=n,r=t={type:(s=t).toLowerCase(),keyword:s.toLowerCase(),symbol:o,value:a}):(Mu=r,r=u)):(Mu=r,r=u),r}function Il(){var t;return r.length>Mu?(t=r.charAt(Mu),Mu++):(t=u,0===Pu&&Yu(Ou)),t}function Nl(){var t;return gu.test(r.charAt(Mu))?(t=r.charAt(Mu),Mu++):(t=u,0===Pu&&Yu(xu)),t}function Rl(){var t,e;if((t=function(){var t,e;t=Mu,Pu++,r.length>Mu?(e=r.charAt(Mu),Mu++):(e=u,0===Pu&&Yu(Ou));Pu--,e===u?t=void 0:(Mu=t,t=u);return t}())===u)if(t=[],Ne.test(r.charAt(Mu))?(e=r.charAt(Mu),Mu++):(e=u,0===Pu&&Yu(Re)),e!==u)for(;e!==u;)t.push(e),Ne.test(r.charAt(Mu))?(e=r.charAt(Mu),Mu++):(e=u,0===Pu&&Yu(Re));else t=u;return t}function Sl(){var t,e;return t=Mu,Mu,Zl=[],( true?void 0:0)!==u&&hl()!==u?((e=_l())===u&&(e=function(){var t,e;t=Mu,function(){var t;return"return"===r.substr(Mu,6).toLowerCase()?(t=r.substr(Mu,6),Mu+=6):(t=u,0===Pu&&Yu(Qs)),t}()!==u&&hl()!==u&&(e=Ol())!==u?(t,t={type:"return",expr:e}):(Mu=t,t=u);return t}()),e!==u?(t,t={type:"proc",stmt:e,vars:Zl}):(Mu=t,t=u)):(Mu=t,t=u),t}function _l(){var t,e,n,s;return t=Mu,(e=$l())===u&&(e=Pl()),e!==u&&hl()!==u?((n=function(){var t;return":="===r.substr(Mu,2)?(t=":=",Mu+=2):(t=u,0===Pu&&Yu(Js)),t}())===u&&(n=tl()),n!==u&&hl()!==u&&(s=Ol())!==u?(t,t=e={type:"assign",left:e,symbol:n,right:s}):(Mu=t,t=u)):(Mu=t,t=u),t}function Ol(){var t;return(t=vo())===u&&(t=function(){var r,t,e,n,s;r=Mu,(t=$l())!==u&&hl()!==u&&(e=go())!==u&&hl()!==u&&(n=$l())!==u&&hl()!==u&&(s=Uo())!==u?(r,r=t={type:"join",ltable:t,rtable:n,op:e,on:s}):(Mu=r,r=u);return r}())===u&&(t=gl())===u&&(t=function(){var t,e;t=Mu,function(){var t;return 91===r.charCodeAt(Mu)?(t="[",Mu++):(t=u,0===Pu&&Yu(wu)),t}()!==u&&hl()!==u&&(e=Dl())!==u&&hl()!==u&&function(){var t;return 93===r.charCodeAt(Mu)?(t="]",Mu++):(t=u,0===Pu&&Yu(Eu)),t}()!==u?(t,t={type:"array",value:e}):(Mu=t,t=u);return t}()),t}function gl(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=xl())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=ia())!==u&&(a=hl())!==u&&(i=xl())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=ia())!==u&&(a=hl())!==u&&(i=xl())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,r=t=Xr(t,e)):(Mu=r,r=u)}else Mu=r,r=u;return r}function xl(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=Ul())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=ca())!==u&&(a=hl())!==u&&(i=Ul())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=ca())!==u&&(a=hl())!==u&&(i=Ul())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,r=t=Xr(t,e)):(Mu=r,r=u)}else Mu=r,r=u;return r}function Ul(){var r,t,e;return(r=ga())===u&&(r=$l())===u&&(r=kl())===u&&(r=Aa())===u&&(r=Mu,bl()!==u&&hl()!==u&&(t=gl())!==u&&hl()!==u&&vl()!==u?(r,(e=t).parentheses=!0,r=e):(Mu=r,r=u)),r}function Ml(){var r,t,e,n,s,o,a;return r=Mu,(t=da())!==u?(e=Mu,(n=hl())!==u&&(s=ll())!==u&&(o=hl())!==u&&(a=da())!==u?e=n=[n,s,o,a]:(Mu=e,e=u),e===u&&(e=null),e!==u?(r,r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(Mu=r,r=u)):(Mu=r,r=u),r}function kl(){var r,t,e;return r=Mu,(t=Ml())!==u&&hl()!==u&&bl()!==u&&hl()!==u?((e=Dl())===u&&(e=null),e!==u&&hl()!==u&&vl()!==u?(r,r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(Mu=r,r=u)):(Mu=r,r=u),r===u&&(r=Mu,(t=Ml())!==u&&(r,t=function(r){return{type:"function",name:r,args:null}}(t)),r=t),r}function Dl(){var r,t,e,n,s,o,a,i;if(r=Mu,(t=Ul())!==u){for(e=[],n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=Ul())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);n!==u;)e.push(n),n=Mu,(s=hl())!==u&&(o=cl())!==u&&(a=hl())!==u&&(i=Ul())!==u?n=s=[s,o,a,i]:(Mu=n,n=u);e!==u?(r,r=t=Wl(t,e)):(Mu=r,r=u)}else Mu=r,r=u;return r}function $l(){var r,t,e,n,s;return r=Mu,(t=Ji())!==u&&(e=Pl())!==u?(r,n=t,s=e,r=t={type:"var",...s,prefix:n}):(Mu=r,r=u),r}function Pl(){var t,e,n,s,o;return t=Mu,(e=da())!==u&&(n=function(){var t,e,n,s,o;t=Mu,e=[],n=Mu,46===r.charCodeAt(Mu)?(s=".",Mu++):(s=u,0===Pu&&Yu(Se));s!==u&&(o=da())!==u?n=s=[s,o]:(Mu=n,n=u);for(;n!==u;)e.push(n),n=Mu,46===r.charCodeAt(Mu)?(s=".",Mu++):(s=u,0===Pu&&Yu(Se)),s!==u&&(o=da())!==u?n=s=[s,o]:(Mu=n,n=u);e!==u&&(t,e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==u?(t,s=e,o=n,Zl.push(s),t=e={type:"var",name:s,members:o,prefix:null}):(Mu=t,t=u),t===u&&(t=Mu,(e=Pa())!==u&&(t,e={type:"var",name:e.value,members:[],quoted:null,prefix:null}),t=e),t}function Fl(){var t;return(t=function(){var t,e,n,s;t=Mu,(e=Mi())===u&&(e=ki());if(e!==u)if(hl()!==u)if(bl()!==u)if(hl()!==u){if(n=[],_e.test(r.charAt(Mu))?(s=r.charAt(Mu),Mu++):(s=u,0===Pu&&Yu(Oe)),s!==u)for(;s!==u;)n.push(s),_e.test(r.charAt(Mu))?(s=r.charAt(Mu),Mu++):(s=u,0===Pu&&Yu(Oe));else n=u;n!==u&&(s=hl())!==u&&vl()!==u?(t,e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Mu=t,t=u)}else Mu=t,t=u;else Mu=t,t=u;else Mu=t,t=u;else Mu=t,t=u;t===u&&(t=Mu,(e=Mi())!==u&&(t,e=function(r){return{dataType:r}}(e)),(t=e)===u&&(t=Mu,(e=ki())!==u&&(t,e=Uu(e)),(t=e)===u&&(t=Mu,(e=function(){var t,e,n,s;return t=Mu,"string"===r.substr(Mu,6).toLowerCase()?(e=r.substr(Mu,6),Mu+=6):(e=u,0===Pu&&Yu(cs)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="STRING"):(Mu=t,t=u)):(Mu=t,t=u),t}())!==u&&(t,e=function(r){return{dataType:r}}(e)),t=e)));return t}())===u&&(t=function(){var t,e,n,s,o,a,i,l,c,f,b,v;t=Mu,(e=Di())===u&&(e=$i())===u&&(e=Fi())===u&&(e=Gi())===u&&(e=Hi())===u&&(e=ji())===u&&(e=Yi())===u&&(e=Bi())===u&&(e=Wi());if(e!==u)if((n=hl())!==u)if((s=bl())!==u)if((o=hl())!==u){if(a=[],_e.test(r.charAt(Mu))?(i=r.charAt(Mu),Mu++):(i=u,0===Pu&&Yu(Oe)),i!==u)for(;i!==u;)a.push(i),_e.test(r.charAt(Mu))?(i=r.charAt(Mu),Mu++):(i=u,0===Pu&&Yu(Oe));else a=u;if(a!==u)if((i=hl())!==u){if(l=Mu,(c=cl())!==u)if((f=hl())!==u){if(b=[],_e.test(r.charAt(Mu))?(v=r.charAt(Mu),Mu++):(v=u,0===Pu&&Yu(Oe)),v!==u)for(;v!==u;)b.push(v),_e.test(r.charAt(Mu))?(v=r.charAt(Mu),Mu++):(v=u,0===Pu&&Yu(Oe));else b=u;b!==u?l=c=[c,f,b]:(Mu=l,l=u)}else Mu=l,l=u;else Mu=l,l=u;l===u&&(l=null),l!==u&&(c=hl())!==u&&(f=vl())!==u&&(b=hl())!==u?((v=Gl())===u&&(v=null),v!==u?(t,L=l,C=v,e={dataType:e,length:parseInt(a.join(""),10),scale:L&&parseInt(L[2].join(""),10),parentheses:!0,suffix:C},t=e):(Mu=t,t=u)):(Mu=t,t=u)}else Mu=t,t=u;else Mu=t,t=u}else Mu=t,t=u;else Mu=t,t=u;else Mu=t,t=u;else Mu=t,t=u;var L,C;if(t===u){if(t=Mu,(e=Di())===u&&(e=$i())===u&&(e=Fi())===u&&(e=Gi())===u&&(e=Hi())===u&&(e=ji())===u&&(e=Yi())===u&&(e=Bi())===u&&(e=Wi()),e!==u){if(n=[],_e.test(r.charAt(Mu))?(s=r.charAt(Mu),Mu++):(s=u,0===Pu&&Yu(Oe)),s!==u)for(;s!==u;)n.push(s),_e.test(r.charAt(Mu))?(s=r.charAt(Mu),Mu++):(s=u,0===Pu&&Yu(Oe));else n=u;n!==u&&(s=hl())!==u?((o=Gl())===u&&(o=null),o!==u?(t,e=function(r,t,e){return{dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(Mu=t,t=u)):(Mu=t,t=u)}else Mu=t,t=u;t===u&&(t=Mu,(e=Di())===u&&(e=$i())===u&&(e=Fi())===u&&(e=Gi())===u&&(e=Hi())===u&&(e=ji())===u&&(e=Yi())===u&&(e=Bi())===u&&(e=Wi()),e!==u&&(n=hl())!==u?((s=Gl())===u&&(s=null),s!==u&&(o=hl())!==u?(t,e=function(r,t){return{dataType:r,suffix:t}}(e,s),t=e):(Mu=t,t=u)):(Mu=t,t=u))}return t}())===u&&(t=function(){var t,e,n,s;t=Mu,(e=Xi())===u&&(e=Vi())===u&&(e=Ki())===u&&(e=qi());if(e!==u)if(hl()!==u)if(bl()!==u)if(hl()!==u){if(n=[],_e.test(r.charAt(Mu))?(s=r.charAt(Mu),Mu++):(s=u,0===Pu&&Yu(Oe)),s!==u)for(;s!==u;)n.push(s),_e.test(r.charAt(Mu))?(s=r.charAt(Mu),Mu++):(s=u,0===Pu&&Yu(Oe));else n=u;n!==u&&(s=hl())!==u&&vl()!==u?(t,e={dataType:e,length:parseInt(n.join(""),10),parentheses:!0},t=e):(Mu=t,t=u)}else Mu=t,t=u;else Mu=t,t=u;else Mu=t,t=u;else Mu=t,t=u;t===u&&(t=Mu,(e=Xi())===u&&(e=Vi())===u&&(e=Ki())===u&&(e=qi()),e!==u&&(t,e=Uu(e)),t=e);return t}())===u&&(t=function(){var t,e;t=Mu,(e=function(){var t,e,n,s;return t=Mu,"json"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(ws)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="JSON"):(Mu=t,t=u)):(Mu=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=Mu,"jsonb"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(Es)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="JSONB"):(Mu=t,t=u)):(Mu=t,t=u),t}());e!==u&&(t,e=Uu(e));return t=e}())===u&&(t=function(){var t,e;t=Mu,(e=function(){var t,e,n,s;return t=Mu,"geometry"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(As)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="GEOMETRY"):(Mu=t,t=u)):(Mu=t,t=u),t}())!==u&&(t,e={dataType:e});return t=e}())===u&&(t=function(){var t,e;t=Mu,(e=function(){var t,e,n,s;return t=Mu,"tinytext"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(Ts)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="TINYTEXT"):(Mu=t,t=u)):(Mu=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=Mu,"text"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(ms)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="TEXT"):(Mu=t,t=u)):(Mu=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=Mu,"mediumtext"===r.substr(Mu,10).toLowerCase()?(e=r.substr(Mu,10),Mu+=10):(e=u,0===Pu&&Yu(Is)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="MEDIUMTEXT"):(Mu=t,t=u)):(Mu=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=Mu,"longtext"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(Ns)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="LONGTEXT"):(Mu=t,t=u)):(Mu=t,t=u),t}());e!==u&&(t,e={dataType:e});return t=e}())===u&&(t=function(){var t,e;t=Mu,(e=function(){var t,e,n,s;return t=Mu,"uuid"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(ks)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="UUID"):(Mu=t,t=u)):(Mu=t,t=u),t}())!==u&&(t,e={dataType:e});return t=e}())===u&&(t=function(){var t,e;t=Mu,(e=function(){var t,e,n,s;return t=Mu,"bool"===r.substr(Mu,4).toLowerCase()?(e=r.substr(Mu,4),Mu+=4):(e=u,0===Pu&&Yu(os)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="BOOL"):(Mu=t,t=u)):(Mu=t,t=u),t}())===u&&(e=function(){var t,e,n,s;return t=Mu,"boolean"===r.substr(Mu,7).toLowerCase()?(e=r.substr(Mu,7),Mu+=7):(e=u,0===Pu&&Yu(as)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="BOOLEAN"):(Mu=t,t=u)):(Mu=t,t=u),t}());e!==u&&(t,e={dataType:e});return t=e}())===u&&(t=function(){var t,e,n;t=Mu,(e=function(){var t,e,n,s;return t=Mu,"array"===r.substr(Mu,5).toLowerCase()?(e=r.substr(Mu,5),Mu+=5):(e=u,0===Pu&&Yu(Ds)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="ARRAY"):(Mu=t,t=u)):(Mu=t,t=u),t}())!==u&&Ll()!==u&&(n=Fl())!==u&&Cl()!==u?(t,t=e={dataType:e,subType:n}):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e,n;t=Mu,(e=function(){var t,e,n,s;return t=Mu,"map"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu($s)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="MAP"):(Mu=t,t=u)):(Mu=t,t=u),t}())!==u&&Ll()!==u&&Fl()!==u&&cl()!==u&&(n=Fl())!==u&&Cl()!==u?(t,t=e={dataType:e,subType:n}):(Mu=t,t=u);return t}())===u&&(t=function(){var t,e;t=Mu,(e=function(){var t,e,n,s;return t=Mu,"row"===r.substr(Mu,3).toLowerCase()?(e=r.substr(Mu,3),Mu+=3):(e=u,0===Pu&&Yu(ar)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="ROW"):(Mu=t,t=u)):(Mu=t,t=u),t}())!==u&&(t,e={dataType:e});return t=e}()),t}function Gl(){var t,e,n;return t=Mu,(e=Pi())===u&&(e=null),e!==u&&hl()!==u?((n=function(){var t,e,n,s;return t=Mu,"zerofill"===r.substr(Mu,8).toLowerCase()?(e=r.substr(Mu,8),Mu+=8):(e=u,0===Pu&&Yu(ds)),e!==u?(n=Mu,Pu++,s=pa(),Pu--,s===u?n=void 0:(Mu=n,n=u),n!==u?(t,t=e="ZEROFILL"):(Mu=t,t=u)):(Mu=t,t=u),t}())===u&&(n=null),n!==u?(t,t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(Mu=t,t=u)):(Mu=t,t=u),t}const Hl={ABS:!0,ALL:!0,ALLOCATE:!0,ALLOW:!0,ALTER:!0,AND:!0,ANY:!0,ARE:!0,ARRAY:!0,ARRAY_MAX_CARDINALITY:!0,AS:!0,ASENSITIVE:!0,ASYMMETRIC:!0,AT:!0,ATOMIC:!0,AUTHORIZATION:!0,AVG:!0,BEGIN:!0,BEGIN_FRAME:!0,BEGIN_PARTITION:!0,BETWEEN:!0,BIGINT:!0,BINARY:!0,BIT:!0,BLOB:!0,BOOLEAN:!0,BOTH:!0,BY:!0,CALL:!0,CALLED:!0,CARDINALITY:!0,CASCADED:!0,CASE:!0,CAST:!0,CEIL:!0,CEILING:!0,CHAR:!0,CHARACTER:!0,CHARACTER_LENGTH:!0,CHAR_LENGTH:!0,CHECK:!0,CLASSIFIER:!0,CLOB:!0,CLOSE:!0,COALESCE:!0,COLLATE:!0,COLLECT:!0,COLUMN:!0,COMMIT:!0,CONDITION:!0,CONNECT:!0,CONSTRAINT:!0,CONTAINS:!0,CONVERT:!0,CORR:!0,CORRESPONDING:!0,COUNT:!0,COVAR_POP:!0,COVAR_SAMP:!0,CREATE:!0,CROSS:!0,CUBE:!0,CUME_DIST:!0,CURRENT:!0,CURRENT_CATALOG:!0,CURRENT_DATE:!0,CURRENT_DEFAULT_TRANSFORM_GROUP:!0,CURRENT_PATH:!0,CURRENT_ROLE:!0,CURRENT_ROW:!0,CURRENT_SCHEMA:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_TRANSFORM_GROUP_FOR_TYPE:!0,CURRENT_USER:!0,CURSOR:!0,CYCLE:!0,DATE:!0,DAY:!0,DEALLOCATE:!0,DEC:!0,DECIMAL:!0,DECLARE:!0,DEFAULT:!0,DEFINE:!0,DELETE:!0,DENSE_RANK:!0,DEREF:!0,DESCRIBE:!0,DETERMINISTIC:!0,DISALLOW:!0,DISCONNECT:!0,DISTINCT:!0,DOUBLE:!0,DROP:!0,DYNAMIC:!0,EACH:!0,ELEMENT:!0,ELSE:!0,EMPTY:!0,END:!0,"END-EXEC":!0,END_FRAME:!0,END_PARTITION:!0,EQUALS:!0,ESCAPE:!0,EVERY:!0,EXCEPT:!0,EXEC:!0,EXECUTE:!0,EXISTS:!0,EXP:!0,EXPLAIN:!0,EXTEND:!0,EXTERNAL:!0,EXTRACT:!0,FALSE:!0,FETCH:!0,FILTER:!0,FIRST_VALUE:!0,FLOAT:!0,FLOOR:!0,FOR:!0,FOREIGN:!0,FRAME_ROW:!0,FREE:!0,FROM:!0,FULL:!0,FUNCTION:!0,FUSION:!0,GET:!0,GLOBAL:!0,GRANT:!0,GROUP:!0,GROUPING:!0,GROUPS:!0,HAVING:!0,HOLD:!0,HOUR:!0,IDENTITY:!0,IMPORT:!0,IN:!0,INDICATOR:!0,INITIAL:!0,INNER:!0,INOUT:!0,INSENSITIVE:!0,INSERT:!0,INT:!0,INTEGER:!0,INTERSECT:!0,INTERSECTION:!0,INTERVAL:!0,INTO:!0,IS:!0,JOIN:!0,JSON_ARRAY:!0,JSON_ARRAYAGG:!0,JSON_EXISTS:!0,JSON_OBJECT:!0,JSON_OBJECTAGG:!0,JSON_QUERY:!0,JSON_VALUE:!0,LAG:!0,LANGUAGE:!0,LARGE:!0,LAST_VALUE:!0,LATERAL:!0,LEAD:!0,LEADING:!0,LEFT:!0,LIKE:!0,LIKE_REGEX:!0,LIMIT:!0,LN:!0,LOCAL:!0,LOCALTIME:!0,LOCALTIMESTAMP:!0,LOWER:!0,MATCH:!0,MATCHES:!0,MATCH_NUMBER:!0,MATCH_RECOGNIZE:!0,MAX:!0,MEASURES:!0,MEMBER:!0,MERGE:!0,METHOD:!0,MIN:!0,MINUS:!0,MINUTE:!0,MOD:!0,MODIFIES:!0,MODULE:!0,MONTH:!0,MULTISET:!0,NATIONAL:!0,NATURAL:!0,NCHAR:!0,NCLOB:!0,NEW:!0,NEXT:!0,NO:!0,NONE:!0,NORMALIZE:!0,NOT:!0,NTH_VALUE:!0,NTILE:!0,NULL:!0,NULLIF:!0,NUMERIC:!0,OCCURRENCES_REGEX:!0,OCTET_LENGTH:!0,OF:!0,OFFSET:!0,OLD:!0,OMIT:!0,ON:!0,ONE:!0,ONLY:!0,OPEN:!0,OR:!0,ORDER:!0,OUT:!0,OUTER:!0,OVER:!0,OVERLAPS:!0,OVERLAY:!0,PARAMETER:!0,PARTITION:!0,PATTERN:!0,PER:!0,PERCENT:!0,PERCENTILE_CONT:!0,PERCENTILE_DISC:!0,PERCENT_RANK:!0,PERIOD:!0,PERMUTE:!0,PORTION:!0,POSITION:!0,POSITION_REGEX:!0,POWER:!0,PRECEDES:!0,PRECISION:!0,PREPARE:!0,PREV:!0,PRIMARY:!0,PROCEDURE:!0,RANGE:!0,RANK:!0,READS:!0,REAL:!0,RECURSIVE:!0,REF:!0,REFERENCES:!0,REFERENCING:!0,REGR_AVGX:!0,REGR_AVGY:!0,REGR_COUNT:!0,REGR_INTERCEPT:!0,REGR_R2:!0,REGR_SLOPE:!0,REGR_SXX:!0,REGR_SXY:!0,REGR_SYY:!0,RELEASE:!0,RESET:!0,RESULT:!0,RETURN:!0,RETURNS:!0,REVOKE:!0,RIGHT:!0,ROLLBACK:!0,ROLLUP:!0,ROW:!0,ROWS:!0,ROW_NUMBER:!0,RUNNING:!0,SAVEPOINT:!0,SCOPE:!0,SCROLL:!0,SEARCH:!0,SECOND:!0,SEEK:!0,SELECT:!0,SENSITIVE:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SIMILAR:!0,SIMILAR:!0,SKIP:!0,SMALLINT:!0,SOME:!0,SPECIFIC:!0,SPECIFICTYPE:!0,SQL:!0,SQLEXCEPTION:!0,SQLSTATE:!0,SQLWARNING:!0,SQRT:!0,START:!0,STATIC:!0,STDDEV_POP:!0,STDDEV_SAMP:!0,STREAM:!0,SUBMULTISET:!0,SUBSET:!0,SUBSTRING:!0,SUBSTRING_REGEX:!0,SUCCEEDS:!0,SUM:!0,SYMMETRIC:!0,SYSTEM:!0,SYSTEM_TIME:!0,SYSTEM_USER:!0,TABLE:!0,TABLESAMPLE:!0,THEN:!0,TO:!0,TIME:!0,TIMESTAMP:!0,TIMEZONE_HOUR:!0,TIMEZONE_MINUTE:!0,TINYINT:!0,TO:!0,TRAILING:!0,TRANSLATE:!0,TRANSLATE_REGEX:!0,TRANSLATION:!0,TREAT:!0,TRIGGER:!0,TRIM:!0,TRIM_ARRAY:!0,TRUE:!0,TRUNCATE:!0,UESCAPE:!0,UNION:!0,UNIQUE:!0,UNKNOWN:!0,UNNEST:!0,UPDATE:!0,UPPER:!0,UPSERT:!0,USER:!0,USING:!0,VALUE:!0,VALUES:!0,VALUE_OF:!0,VARBINARY:!0,VARCHAR:!0,VARYING:!0,VAR_POP:!0,VAR_SAMP:!0,VERSIONING:!0,WHEN:!0,WHENEVER:!0,WHERE:!0,WIDTH_BUCKET:!0,WINDOW:!0,WITH:!0,WITHIN:!0,WITHOUT:!0,YEAR:!0};function jl(r,t){return{type:"unary_expr",operator:r,expr:t}}function Yl(r,t,e){return{type:"binary_expr",operator:r,left:t,right:e}}function Bl(r){const t=n(Number.MAX_SAFE_INTEGER);return!(n(r)<t)}function Wl(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)delete t[r][e].tableList,delete t[r][e].columnList,n.push(t[r][e]);return n}function Xl(r,t){let e=r;for(let r=0;r<t.length;r++)e=Yl(t[r][1],e,t[r][3]);return e}function Vl(r){const t=Jl[r];return t||(r||null)}function Kl(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=Vl(r[1])),t.add(r.join("::"))}return Array.from(t)}function ql(r){return"string"==typeof r?{type:"same",value:r}:r}let Zl=[];const zl=new Set,Ql=new Set,Jl={};if((e=a())!==u&&Mu===r.length)return e;throw e!==u&&Mu<r.length&&Yu({type:"end"}),Bu($u,Du<r.length?r.charAt(Du):null,Du<r.length?ju(Du,Du+1):ju(Du,Du))}}},function(r,t,e){r.exports=e(11)},function(r,t,e){"use strict";e.r(t),e.d(t,"Parser",(function(){return lt})),e.d(t,"util",(function(){return n}));var n={};function s(r){return function(r){if(Array.isArray(r))return u(r)}(r)||function(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return u(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return u(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function o(r){if(!r)return[];var t=r.keyword,e=r.type;return[t.toUpperCase(),e.toUpperCase()]}function a(r){if(r){var t=r.type,e=r.expr,n=r.symbol,u=t.toUpperCase(),a=[];switch(a.push(u),u){case"KEY_BLOCK_SIZE":n&&a.push(n),a.push(fr(e));break;case"BTREE":case"HASH":a.length=0,a.push.apply(a,s(o(r)));break;case"WITH PARSER":a.push(e);break;case"VISIBLE":case"INVISIBLE":break;case"COMMENT":a.shift(),a.push(dr(r));break;case"DATA_COMPRESSION":a.push(n,lr(e.value),vr(e.on));break;default:a.push(n,fr(e))}return a.filter(cr).join(" ")}}function i(r){return r?r.map(a):[]}function l(r){var t=r.constraint_type,e=r.index_type,n=r.index_options,u=void 0===n?[]:n,a=r.definition,l=[];if(l.push.apply(l,s(o(e))),a&&a.length){var c="CHECK"===lr(t)?"(".concat(Yr(a[0]),")"):"(".concat(a.map((function(r){return Yr(r)})).join(", "),")");l.push(c)}return l.push(i(u).join(" ")),l}function c(r){return function(r){if(Array.isArray(r))return f(r)}(r)||function(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return f(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return f(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function f(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function b(r){if(r){var t=r.constraint,e=r.constraint_type,n=r.enforced,s=r.index,u=r.keyword,o=r.reference_definition,a=[];return a.push(lr(u)),a.push(ar(t)),a.push(lr(e)),a.push(ar(s)),a.push.apply(a,c(l(r))),a.push.apply(a,c(Y(o))),a.push(lr(n)),a.filter(cr).join(" ")}}function v(r){if("string"==typeof r)return r;var t=r.window_specification;return"(".concat(function(r){var t=r.name,e=r.partitionby,n=r.orderby,s=r.window_frame_clause;return[t,Wr(e,"partition by"),Wr(n,"order by"),lr(s)].filter(cr).join(" ")}(t),")")}function L(r){var t=r.name,e=r.as_window_specification;return"".concat(t," AS ").concat(v(e))}function C(r){var t=r.args,e=r.name,n=r.consider_nulls,s=void 0===n?"":n,u=t?Yr(t).join(", "):"",o=function(r){switch(lr(r)){case"NTH_VALUE":case"LEAD":case"LAG":return!1;default:return!0}}(e);return[e,"(",u,!o&&")",s&&" ",s,o&&")"].filter(cr).join("")}function d(r){if(r){var t=r.as_window_specification,e=r.expr,n=r.keyword,s=r.type,u=lr(s);if("WINDOW"===u)return"OVER ".concat(v(t));if("ON UPDATE"===u){var o="".concat(lr(s)," ").concat(lr(n)),a=Yr(e);return a&&(o="".concat(o,"(").concat(a.join(", "),")")),o}throw new Error("unknown over type")}}function p(r){var t=r.collate,e=r.target,n=r.expr,s=r.keyword,u=r.symbol,o=r.as,a=r.tail,i=e.length,l=e.dataType,c=e.parentheses,f=e.quoted,b=e.scale,v=e.suffix,L="";null!=i&&(L=b?"".concat(i,", ").concat(b):i),c&&(L="(".concat(L,")")),v&&v.length&&(L+=" ".concat(v.join(" ")));var C=Yr(n),d="::",p="";return"as"===u&&(C="".concat(lr(s),"(").concat(C),p=")",d=" ".concat(u.toUpperCase()," ")),a&&(p+=" ".concat(a.operator," ").concat(Yr(a.expr))),o&&(p+=" AS ".concat(ar(o))),t&&(p+=" ".concat(ir(t).join(" "))),[C,d,f,l,f,function(r){if(!r||!r.array)return"";switch(r.array){case"one":return"[]";case"two":return"[][]"}}(e),L,p].filter(cr).join("")}function w(r){var t=r.args,e=r.name,n=r.args_parentheses,s=r.parentheses,u=r.over,o=r.collate,a=r.suffix,i=ir(o).join(" "),l=d(u),c=Yr(a);if(!t)return[e,l].filter(cr).join(" ");var f=r.separator||", ";"TRIM"===lr(e)&&(f=" ");var b=[e];return b.push(!1===n?" ":"("),b.push(Yr(t).join(f)),!1!==n&&b.push(")"),b=[b.join(""),c].filter(cr).join(" "),[s?"(".concat(b,")"):b,i,l].filter(cr).join(" ")}function E(r){var t=r.operator,e=Yr(r.right),n=!1;if(Array.isArray(e)){switch(t){case"=":t="IN";break;case"!=":t="NOT IN";break;case"BETWEEN":case"NOT BETWEEN":n=!0,e="".concat(e[0]," AND ").concat(e[1])}n||(e="(".concat(e.join(", "),")"))}var s=r.right.escape||{},u=[Yr(r.left),t,e,lr(s.type),Yr(s.value)].filter(cr).join(" ");return r.parentheses?"(".concat(u,")"):u}function A(r){return function(r){if(Array.isArray(r))return h(r)}(r)||function(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return h(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return h(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function h(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function y(r){return r?[lr(r.prefix),Yr(r.value),lr(r.suffix)]:[]}function T(r){return r?r.fetch?(e=(t=r).fetch,n=t.offset,[].concat(A(y(n)),A(y(e))).filter(cr).join(" ")):function(r){var t=r.seperator,e=r.value;return 1===e.length&&"offset"===t?J("OFFSET",Yr(e[0])):J("LIMIT",e.map(Yr).join("".concat("offset"===t?" ":"").concat(lr(t)," ")))}(r):"";var t,e,n}function m(r){if(r&&0!==r.length){var t=r[0].recursive?"RECURSIVE ":"",e=r.map((function(r){var t=r.name,e=r.stmt,n=r.columns,s=Array.isArray(n)?"(".concat(n.map(H).join(", "),")"):"";return"".concat("default"===t.type?ar(t.value):fr(t)).concat(s," AS (").concat(Yr(e),")")})).join(", ");return"WITH ".concat(t).concat(e)}}function I(r){if(r&&r.position){var t=r.keyword,e=r.expr,n=[],s=lr(t);switch(s){case"VAR":n.push(e.map(jr).join(", "));break;default:n.push(s,"string"==typeof e?ar(e):Yr(e))}return n.filter(cr).join(" ")}}function N(r){var t=r.as_struct_val,e=r.columns,n=r.distinct,s=r.from,u=r.for_sys_time_as_of,o=void 0===u?{}:u,a=r.locking_read,i=r.groupby,l=r.having,c=r.into,f=void 0===c?{}:c,b=r.limit,v=r.options,L=r.orderby,C=r.parentheses_symbol,d=r.qualify,p=r.top,w=r.window,E=r.with,A=r.where,h=[m(E),"SELECT",lr(t)];h.push(ur(p)),Array.isArray(v)&&h.push(v.join(" ")),h.push(function(r){if(r){if("string"==typeof r)return r;var t=r.type,e=r.columns,n=[lr(t)];return e&&n.push("(".concat(e.map(H).join(", "),")")),n.filter(cr).join(" ")}}(n),K(e,s));var y=f.position,N="";y&&(N=Q("INTO",I,f)),"column"===y&&h.push(N),h.push(Q("FROM",$,s)),"from"===y&&h.push(N);var R=o||{},S=R.keyword,_=R.expr;h.push(Q(S,Yr,_)),h.push(Q("WHERE",Yr,A)),h.push(J("GROUP BY",Br(i).join(", "))),h.push(Q("HAVING",Yr,l)),h.push(Q("QUALIFY",Yr,d)),h.push(Q("WINDOW",Yr,w)),h.push(Wr(L,"order by")),h.push(T(b)),h.push(lr(a)),"end"===y&&h.push(N);var O=h.filter(cr).join(" ");return C?"(".concat(O,")"):O}function R(r,t){var e="undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(!e){if(Array.isArray(r)||(e=function(r,t){if(!r)return;if("string"==typeof r)return S(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return S(r,t)}(r))||t&&r&&"number"==typeof r.length){e&&(r=e);var n=0,s=function(){};return{s:s,n:function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}},e:function(r){throw r},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var u,o=!0,a=!1;return{s:function(){e=e.call(r)},n:function(){var r=e.next();return o=r.done,r},e:function(r){a=!0,u=r},f:function(){try{o||null==e.return||e.return()}finally{if(a)throw u}}}}function S(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function _(r){if(!r||0===r.length)return"";var t,e=[],n=R(r);try{for(n.s();!(t=n.n()).done;){var s=t.value,u=s.table,o=s.column,a=s.value,i=[[u,o].filter(cr).map((function(r){return ar(r)})).join(".")],l="";a&&(l=Yr(a),i.push("=",l)),e.push(i.filter(cr).join(" "))}}catch(r){n.e(r)}finally{n.f()}return e.join(", ")}function O(r){if("select"===r.type)return N(r);var t=r.map(Yr);return"(".concat(t.join("), ("),")")}function g(r){if(!r)return"";var t=["PARTITION","("];if(Array.isArray(r))t.push(r.map(ar).join(", "));else{var e=r.value;t.push(e.map(Yr).join(", "))}return t.push(")"),t.filter(cr).join("")}function x(r){var t=r.table,e=r.type,n=r.prefix,s=void 0===n?"into":n,u=r.columns,o=r.values,a=r.where,i=r.on_duplicate_update,l=r.partition,c=r.returning,f=r.set,b=i||{},v=b.keyword,L=b.set,C=[lr(e),lr(s),$(t),g(l)];return Array.isArray(u)&&C.push("(".concat(u.map(ar).join(", "),")")),C.push(Q(Array.isArray(o)?"VALUES":"",O,o)),C.push(Q("SET",_,f)),C.push(Q("WHERE",Yr,a)),C.push(wr(c)),C.push(Q(v,_,L)),C.filter(cr).join(" ")}function U(r){var t=r.type,e=r.as,n=r.expr,s=r.with_offset;return["".concat(lr(t),"(").concat(n&&Yr(n)||"",")"),Q("AS",ar,e),Q(lr(s&&s.keyword),ar,s&&s.as)].filter(cr).join(" ")}function M(r){if(r)switch(r.type){case"pivot":return function(r){var t=r.as,e=r.column,n=r.expr,s=r.in_expr,u=r.type,o=[Yr(n),"FOR",H(e),E(s)],a=["".concat(lr(u),"(").concat(o.join(" "),")")];return t&&a.push("AS",ar(t)),a.join(" ")}(r);default:return""}}function k(r){if(r){var t=r.keyword,e=r.expr,n=r.index,s=r.index_columns,u=r.parentheses,o=r.prefix,a=[];switch(t.toLowerCase()){case"forceseek":a.push(lr(t),"(".concat(ar(n)),"(".concat(s.map(Yr).filter(cr).join(", "),"))"));break;case"spatial_window_max_cells":a.push(lr(t),"=",Yr(e));break;case"index":a.push(lr(o),lr(t),u?"(".concat(e.map(ar).join(", "),")"):"= ".concat(ar(e)));break;default:a.push(Yr(e))}return a.filter(cr).join(" ")}}function D(r){if("UNNEST"===lr(r.type))return U(r);var t=r.table,e=r.db,n=r.as,s=r.expr,u=r.operator,o=r.prefix,a=r.schema,i=r.tablesample,l=r.table_hint,c=ar(e),f=ar(a),b=t&&ar(t);if(s&&"values"===s.type){var v=s.parentheses,L=s.values,C=s.prefix,d=[v&&"(","",v&&")"],p=O(L);C&&(p=p.split("(").slice(1).map((function(r){return"".concat(lr(C),"(").concat(r)})).join("")),d[1]="VALUES ".concat(p),b=d.filter(cr).join("")}s&&"values"!==s.type&&(b=Yr(s));var w=[c,f,b=[lr(o),b].filter(cr).join(" ")].filter(cr).join(".");r.parentheses&&(w="(".concat(w,")"));var E=[w,M(u)];if(i){var A=["TABLESAMPLE",Yr(i.expr),fr(i.repeatable)].filter(cr).join(" ");E.push(A)}return n&&E.push("AS",ar(n)),l&&E.push("".concat(lr(l.keyword)),"(".concat(l.expr.map(k).filter(cr).join(", "),")")),E.filter(cr).join(" ")}function $(r){if(!r)return"";var t=r[0],e=[];if("dual"===t.type)return"DUAL";e.push(D(t));for(var n=1;n<r.length;++n){var s=r[n],u=s.on,o=s.using,a=s.join,i=[];i.push(a?" ".concat(a):","),i.push(D(s)),i.push(Q("ON",Yr,u)),o&&i.push("USING (".concat(o.map(ar).join(", "),")")),e.push(i.filter(cr).join(" "))}return e.filter(cr).join("")}function P(r){var t=r.keyword,e=r.symbol,n=r.value,s=[t.toUpperCase()];return e&&s.push(e),s.push(n),s.join(" ")}function F(r){return function(r){if(Array.isArray(r))return G(r)}(r)||function(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return G(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return G(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function G(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function H(r){var t=r.array_index,e=r.arrows,n=void 0===e?[]:e,s=r.as,u=r.collate,o=r.column,a=r.isDual,i=r.schema,l=r.table,c=r.parentheses,f=r.properties,b=r.suffix,v=r.order_by,L="*"===o?"*":function(r,t){if("string"==typeof r)return ar(r,t);var e=r.expr,n=r.offset,s=r.suffix;return[Yr(e),n,s].filter(cr).join("")}(o,a);l&&(L="".concat(ar(l),".").concat(L)),i&&(L="".concat(ar(i),".").concat(L)),t&&(L="".concat(L,"[").concat(t.number,"]"),t.property&&(L="".concat(L,".").concat(t.property.value)));var C=[L,Q("AS",Yr,s),n.map((function(r,t){return Q(r,fr,f[t])})).join(" ")];u&&C.push(ir(u).join(" ")),C.push(lr(b)),C.push(lr(v));var d=C.filter(cr).join(" ");return c?"(".concat(d,")"):d}function j(r){var t=r||{},e=t.dataType,n=t.length,s=t.suffix,u=t.scale,o=t.expr,a=e;return null!=n&&(a+="(".concat([n,u].filter((function(r){return null!=r})).join(", "),")")),s&&s.length&&(a+=" ".concat(s.join(" "))),o&&(a+=Yr(o)),a}function Y(r){var t=[];if(!r)return t;var e=r.definition,n=r.keyword,s=r.match,u=r.table,o=r.on_delete,a=r.on_update;return t.push(lr(n)),t.push($(u)),t.push(e&&"(".concat(e.map((function(r){return Yr(r)})).join(", "),")")),t.push(lr(s)),t.push.apply(t,F(ir(o))),t.push.apply(t,F(ir(a))),t.filter(cr)}function B(r){var t=r.column,e=r.collate,n=r.nulls,s=r.opclass,u=r.order;return[Yr(t),Q(e&&e.type,ar,e&&e.value),s,lr(u),lr(n)].filter(cr).join(" ")}function W(r){var t=[],e=H(r.column),n=j(r.definition);t.push(e),t.push(n);var s=function(r){var t=[],e=r.nullable,n=r.character_set,s=r.check,u=r.comment,o=r.collate,a=r.storage,i=r.default_val,l=r.auto_increment,c=r.unique_or_primary,f=r.column_format,v=r.reference_definition;if(t.push(lr(e&&e.value)),i){var L=i.type,C=i.value;t.push(L.toUpperCase(),Yr(C))}return t.push(b(s)),t.push(Ar(l),lr(c),dr(u)),t.push.apply(t,F(ir(n))),t.push.apply(t,F(ir(o))),t.push.apply(t,F(ir(f))),t.push.apply(t,F(ir(a))),t.push.apply(t,F(Y(v))),t.filter(cr).join(" ")}(r);t.push(s);var u=function(r){if(r)return[lr(r.value),"(".concat(Yr(r.expr),")"),lr(r.storage_type)].filter(cr).join(" ")}(r.generated);return t.push(u),t.filter(cr).join(" ")}function X(r){return r?["AS",/^(`?)[a-z_][0-9a-z_]*(`?)$/i.test(r)?ar(r):or(r)].join(" "):""}function V(r,t){var e=r.expr;if("cast"===r.type)return p(r);t&&(e.isDual=t);var n=Yr(e);return e.parentheses&&Reflect.has(e,"array_index")&&(n="(".concat(n,")")),e.array_index&&"column_ref"!==e.type&&(n="".concat(n,"[").concat(e.array_index.number,"]")),[n,X(r.as)].filter(cr).join(" ")}function K(r,t){if(!r||"*"===r)return r;var e=function(r){var t=Array.isArray(r)&&r[0];return!(!t||"dual"!==t.type)}(t),n=[],s=r.expr_list,u=r.star,o=r.type;n.push(u,lr(o));var a=(s||r).map((function(r){return V(r,e)})).join(", ");return n.push([o&&"(",a,o&&")"].filter(cr).join("")),n.filter(cr).join(" ")}function q(r){return(q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}e.r(n),e.d(n,"arrayStructTypeToSQL",(function(){return Cr})),e.d(n,"autoIncreatementToSQL",(function(){return Ar})),e.d(n,"columnOrderListToSQL",(function(){return hr})),e.d(n,"commonKeywordArgsToSQL",(function(){return Er})),e.d(n,"commonOptionConnector",(function(){return Q})),e.d(n,"connector",(function(){return J})),e.d(n,"commonTypeValue",(function(){return ir})),e.d(n,"commentToSQL",(function(){return dr})),e.d(n,"createBinaryExpr",(function(){return tr})),e.d(n,"createValueExpr",(function(){return rr})),e.d(n,"dataTypeToSQL",(function(){return Lr})),e.d(n,"DEFAULT_OPT",(function(){return Z})),e.d(n,"escape",(function(){return er})),e.d(n,"literalToSQL",(function(){return fr})),e.d(n,"columnIdentifierToSql",(function(){return or})),e.d(n,"identifierToSql",(function(){return ar})),e.d(n,"onPartitionsToSQL",(function(){return vr})),e.d(n,"replaceParams",(function(){return br})),e.d(n,"returningToSQL",(function(){return wr})),e.d(n,"hasVal",(function(){return cr})),e.d(n,"setParserOpt",(function(){return sr})),e.d(n,"toUpper",(function(){return lr})),e.d(n,"topToSQL",(function(){return ur})),e.d(n,"triggerEventToSQL",(function(){return pr}));var Z={database:"mysql",type:"table"},z=Z;function Q(r,t,e){if(e)return r?"".concat(r.toUpperCase()," ").concat(t(e)):t(e)}function J(r,t){if(t)return"".concat(r.toUpperCase()," ").concat(t)}function rr(r){var t=q(r);if(Array.isArray(r))return{type:"expr_list",value:r.map(rr)};if(null===r)return{type:"null",value:null};switch(t){case"boolean":return{type:"bool",value:r};case"string":return{type:"string",value:r};case"number":return{type:"number",value:r};default:throw new Error('Cannot convert value "'.concat(t,'" to SQL'))}}function tr(r,t,e){var n={operator:r,type:"binary_expr"};return n.left=t.type?t:rr(t),"BETWEEN"===r||"NOT BETWEEN"===r?(n.right={type:"expr_list",value:[rr(e[0]),rr(e[1])]},n):(n.right=e.type?e:rr(e),n)}function er(r){return r}function nr(){return z}function sr(r){z=r}function ur(r){if(r){var t=r.value,e=r.percent,n=r.parentheses?"(".concat(t,")"):t,s="TOP ".concat(n);return e?"".concat(s," ").concat(e.toUpperCase()):s}}function or(r){var t=nr().database;if(r)switch(t&&t.toLowerCase()){case"postgresql":case"db2":return'"'.concat(r,'"');case"transactsql":return"[".concat(r,"]");case"mysql":case"mariadb":case"bigquery":default:return"`".concat(r,"`")}}function ar(r,t){var e=nr().database;if(!0===t)return"'".concat(r,"'");if(r)switch(e&&e.toLowerCase()){case"mysql":case"mariadb":case"sqlite":return"`".concat(r,"`");case"postgresql":return'"'.concat(r,'"');case"transactsql":return"[".concat(r,"]");case"bigquery":case"db2":return r;default:return"`".concat(r,"`")}}function ir(r){var t=[];if(!r)return t;var e=r.type,n=r.symbol,s=r.value;return t.push(e.toUpperCase()),n&&t.push(n),t.push(s.toUpperCase()),t}function lr(r){if(r)return r.toUpperCase()}function cr(r){return r}function fr(r){if(r){var t=r.prefix,e=r.type,n=r.parentheses,s=r.suffix,u=r.value,o=u;switch(e){case"backticks_quote_string":o="`".concat(u,"`");break;case"string":o="'".concat(u,"'");break;case"regex_string":o='r"'.concat(u,'"');break;case"hex_string":o="X'".concat(u,"'");break;case"full_hex_string":o="0x".concat(u);break;case"natural_string":o="N'".concat(u,"'");break;case"bit_string":o="b'".concat(u,"'");break;case"double_quote_string":o='"'.concat(u,'"');break;case"single_quote_string":o="'".concat(u,"'");break;case"boolean":case"bool":o=u?"TRUE":"FALSE";break;case"null":o="NULL";break;case"star":o="*";break;case"param":o="".concat(t||":").concat(u),t=null;break;case"origin":o=u.toUpperCase();break;case"date":case"datetime":case"time":case"timestamp":o="".concat(e.toUpperCase()," '").concat(u,"'");break;case"var_string":o="N'".concat(u,"'")}var a=[];return t&&a.push(lr(t)),a.push(o),s&&a.push("object"===q(s)&&s.collate?ir(s.collate).join(" "):lr(s)),o=a.join(" "),n?"(".concat(o,")"):o}}function br(r,t){return function r(t,e){return Object.keys(t).filter((function(r){var e=t[r];return Array.isArray(e)||"object"===q(e)&&null!==e})).forEach((function(n){var s=t[n];if("object"!==q(s)||"param"!==s.type)return r(s,e);if(void 0===e[s.value])throw new Error("no value for parameter :".concat(s.value," found"));return t[n]=rr(e[s.value]),null})),t}(JSON.parse(JSON.stringify(r)),t)}function vr(r){var t=r.type,e=r.partitions;return[lr(t),"(".concat(e.map((function(r){if("range"!==r.type)return fr(r);var t=r.start,e=r.end,n=r.symbol;return"".concat(fr(t)," ").concat(lr(n)," ").concat(fr(e))})).join(", "),")")].join(" ")}function Lr(r){var t=r.dataType,e=r.length,n=r.parentheses,s=r.scale,u=r.suffix,o="";return null!=e&&(o=s?"".concat(e,", ").concat(s):e),n&&(o="(".concat(o,")")),u&&u.length&&(o+=" ".concat(u.join(" "))),"".concat(t).concat(o)}function Cr(r){if(r){var t=r.dataType,e=r.definition,n=r.anglebracket,s=lr(t);if("ARRAY"!==s&&"STRUCT"!==s)return s;var u=e&&e.map((function(r){return[r.field_name,Cr(r.field_type)].filter(cr).join(" ")})).join(", ");return n?"".concat(s,"<").concat(u,">"):"".concat(s," ").concat(u)}}function dr(r){if(r){var t=[],e=r.keyword,n=r.symbol,s=r.value;return t.push(e.toUpperCase()),n&&t.push(n),t.push(fr(s)),t.join(" ")}}function pr(r){return r.map((function(r){var t=r.keyword,e=r.args,n=[lr(t)];if(e){var s=e.keyword,u=e.columns;n.push(lr(s),u.map(H).join(", "))}return n.join(" ")})).join(" OR ")}function wr(r){return r?["RETURNING",r.columns.map(V).filter(cr).join(", ")].join(" "):""}function Er(r){return r?[lr(r.keyword),lr(r.args)]:[]}function Ar(r){if(!r||"string"==typeof r)return lr(r);var t=r.keyword,e=r.seed,n=r.increment,s=r.parentheses,u=lr(t);return s&&(u+="(".concat(fr(e),", ").concat(fr(n),")")),u}function hr(r){if(r)return r.map(B).filter(cr).join(", ")}function yr(r){return function(r){if(Array.isArray(r))return Ir(r)}(r)||function(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||mr(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Tr(r,t){var e="undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(!e){if(Array.isArray(r)||(e=mr(r))||t&&r&&"number"==typeof r.length){e&&(r=e);var n=0,s=function(){};return{s:s,n:function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}},e:function(r){throw r},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var u,o=!0,a=!1;return{s:function(){e=e.call(r)},n:function(){var r=e.next();return o=r.done,r},e:function(r){a=!0,u=r},f:function(){try{o||null==e.return||e.return()}finally{if(a)throw u}}}}function mr(r,t){if(r){if("string"==typeof r)return Ir(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);return"Object"===e&&r.constructor&&(e=r.constructor.name),"Map"===e||"Set"===e?Array.from(r):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?Ir(r,t):void 0}}function Ir(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function Nr(r){var t=r.type,e=r.keyword,n=r.name,s=r.prefix,u=[lr(t),lr(e),lr(s)];switch(e){case"table":u.push($(n));break;case"procedure":u.push(ar(n));break;case"index":u.push(H(n),"ON",D(r.table),r.options&&r.options.map(Dr).filter(cr).join(" "))}return u.filter(cr).join(" ")}function Rr(r){var t=r.type,e=r.keyword,n=r.tables,s=[t.toUpperCase(),lr(e)];if("UNLOCK"===t.toUpperCase())return s.join(" ");var u,o=[],a=Tr(n);try{var i=function(){var r=u.value,t=r.table,e=r.lock_type,n=[D(t)];if(e){n.push(["prefix","type","suffix"].map((function(r){return lr(e[r])})).filter(cr).join(" "))}o.push(n.join(" "))};for(a.s();!(u=a.n()).done;)i()}catch(r){a.e(r)}finally{a.f()}return s.push.apply(s,[o.join(", ")].concat(yr(function(r){var t=r.lock_mode,e=r.nowait,n=[];if(t){var s=t.mode;n.push(s.toUpperCase())}return e&&n.push(e.toUpperCase()),n}(r)))),s.filter(cr).join(" ")}function Sr(r){var t=r.name,e=r.value;return["@".concat(t),"=",Yr(e)].filter(cr).join(" ")}function _r(r){var t,e,n,s,u=r.keyword,o=r.suffix,a="";switch(lr(u)){case"BINLOG":e=(t=r).in,n=t.from,s=t.limit,a=[Q("IN",fr,e&&e.right),Q("FROM",$,n),T(s)].filter(cr).join(" ");break;case"CHARACTER":case"COLLATION":a=function(r){var t=r.expr;if(t)return"LIKE"===lr(t.op)?Q("LIKE",fr,t.right):Q("WHERE",Yr,t)}(r);break;case"GRANTS":a=function(r){var t=r.for;if(t){var e=t.user,n=t.host,s=t.role_list,u="'".concat(e,"'");return n&&(u+="@'".concat(n,"'")),["FOR",u,s&&"USING",s&&s.map((function(r){return"'".concat(r,"'")})).join(", ")].filter(cr).join(" ")}}(r);break;case"CREATE":a=Q("",D,r.view);break;case"VAR":a=jr(r.var),u=""}return["SHOW",lr(u),lr(o),a].filter(cr).join(" ")}var Or={alter:function(r){var t=r.type,e=r.table,n=r.expr,s=void 0===n?[]:n,u=lr(t),o=$(e),a=s.map(Yr);return[u,"TABLE",o,a.join(", ")].filter(cr).join(" ")},analyze:function(r){var t=r.type,e=r.table;return[lr(t),D(e)].join(" ")},attach:function(r){var t=r.type,e=r.database,n=r.expr,s=r.as,u=r.schema;return[lr(t),lr(e),Yr(n),lr(s),ar(u)].filter(cr).join(" ")},create:function(r){var t=r.keyword,e="";switch(t.toLowerCase()){case"table":e=function(r){var t=r.type,e=r.keyword,n=r.table,s=r.like,u=r.as,o=r.temporary,a=r.if_not_exists,i=r.create_definitions,l=r.table_options,c=r.ignore_replace,f=r.query_expr,b=[lr(t),lr(o),lr(e),lr(a),$(n)];if(s){var v=s.type,L=$(s.table);return b.push(lr(v),L),b.filter(cr).join(" ")}i&&b.push("(".concat(i.map(kr).join(", "),")"));l&&b.push(l.map(P).join(" "));b.push(lr(c),lr(u)),f&&b.push(gr(f));return b.filter(cr).join(" ")}(r);break;case"trigger":e=function(r){var t=r.constraint,e=r.constraint_kw,n=r.deferrable,s=r.events,u=r.execute,o=r.for_each,a=r.from,i=r.location,l=r.keyword,c=r.type,f=r.table,b=r.when,v=[lr(c),lr(e),lr(l),ar(t),lr(i)],L=pr(s);v.push(L,"ON",D(f)),a&&v.push("FROM",D(a));v.push.apply(v,Ur(Er(n)).concat(Ur(Er(o)))),b&&v.push(lr(b.type),Yr(b.cond));return v.push(lr(u.keyword),w(u.expr)),v.filter(cr).join(" ")}(r);break;case"extension":e=function(r){var t=r.extension,e=r.from,n=r.if_not_exists,s=r.keyword,u=r.schema,o=r.type,a=r.with,i=r.version;return[lr(o),lr(s),lr(n),fr(t),lr(a),Q("SCHEMA",fr,u),Q("VERSION",fr,i),Q("FROM",fr,e)].filter(cr).join(" ")}(r);break;case"index":e=function(r){var t=r.concurrently,e=r.filestream_on,n=r.keyword,s=r.include,u=r.index_columns,a=r.index_type,l=r.index_using,c=r.index,f=r.on,b=r.index_options,v=r.algorithm_option,L=r.lock_option,C=r.on_kw,d=r.table,p=r.tablespace,w=r.type,E=r.where,A=r.with,h=r.with_before_where,y=A&&"WITH (".concat(i(A).join(", "),")"),T=s&&"".concat(lr(s.keyword)," (").concat(s.columns.map((function(r){return ar(r)})).join(", "),")"),m=[lr(w),lr(a),lr(n),lr(t),ar(c),lr(C),D(d)].concat(Ur(o(l)),["(".concat(hr(u),")"),T,i(b).join(" "),Dr(v),Dr(L),Q("TABLESPACE",fr,p)]);h?m.push(y,Q("WHERE",Yr,E)):m.push(Q("WHERE",Yr,E),y);return m.push(Q("ON",Yr,f),Q("FILESTREAM_ON",fr,e)),m.filter(cr).join(" ")}(r);break;case"sequence":e=function(r){var t=r.type,e=r.keyword,n=r.sequence,s=r.temporary,u=r.if_not_exists,o=r.create_definitions,a=[lr(t),lr(s),lr(e),lr(u),$(n)];o&&a.push(o.map(kr).join(" "));return a.filter(cr).join(" ")}(r);break;case"database":e=function(r){var t=r.type,e=r.keyword,n=r.database,s=r.if_not_exists,u=r.create_definitions,o=[lr(t),lr(e),lr(s),or(n)];u&&o.push(u.map(P).join(" "));return o.filter(cr).join(" ")}(r);break;case"view":e=function(r){var t=r.algorithm,e=r.columns,n=r.definer,s=r.keyword,u=r.replace,o=r.select,a=r.sql_security,i=r.type,l=r.view,c=r.with,f=l.db,b=l.view,v=[ar(f),ar(b)].filter(cr).join(".");return[lr(i),lr(u),t&&"ALGORITHM = ".concat(lr(t)),n&&"DEFINER = ".concat(n),a&&"SQL SECURITY ".concat(lr(a)),lr(s),v,e&&"(".concat(e.map(or).join(", "),")"),"AS",gr(o),lr(c)].filter(cr).join(" ")}(r);break;default:throw new Error("unknown create resource ".concat(t))}return e},select:N,deallocate:function(r){var t=r.type,e=r.keyword,n=r.expr;return[lr(t),lr(e),Yr(n)].filter(cr).join(" ")},delete:function(r){var t=r.columns,e=r.from,n=r.table,s=r.where,u=r.orderby,o=r.with,a=r.limit,i=[m(o),"DELETE"],l=K(t,e);return i.push(l),Array.isArray(n)&&(1===n.length&&!0===n[0].addition||i.push($(n))),i.push(Q("FROM",$,e)),i.push(Q("WHERE",Yr,s)),i.push(Wr(u,"order by")),i.push(T(a)),i.filter(cr).join(" ")},exec:function(r){var t=r.keyword,e=r.module,n=r.parameters;return[lr(t),D(e),n.map(Sr).filter(cr).join(", ")].filter(cr).join(" ")},update:function(r){var t=r.table,e=r.set,n=r.where,s=r.orderby,u=r.with,o=r.limit,a=r.returning;return[m(u),"UPDATE",$(t),Q("SET",_,e),Q("WHERE",Yr,n),Wr(s,"order by"),T(o),wr(a)].filter(cr).join(" ")},insert:x,drop:Nr,truncate:Nr,replace:x,declare:function(r){var t=r.type,e=r.declare,n=[lr(t)],s=e.map((function(r){var t=r.at,e=r.name,n=r.as,s=r.prefix,u=r.definition,o=r.keyword,a=["".concat(t).concat(e),lr(n)];switch(o){case"variable":a.push(j(s)),u&&a.push("=",Yr(u));break;case"cursor":a.push(lr(s));break;case"table":a.push(lr(s),"(".concat(u.map(kr).join(", "),")"))}return a.filter(cr).join(" ")})).join(", ");return n.push(s),n.join(" ")},use:function(r){var t=r.type,e=r.db,n=lr(t),s=ar(e);return"".concat(n," ").concat(s)},rename:function(r){var t=r.type,e=r.table,n=[],s="".concat(t&&t.toUpperCase()," TABLE");if(e){var u,o=Tr(e);try{for(o.s();!(u=o.n()).done;){var a=u.value.map(D);n.push(a.join(" TO "))}}catch(r){o.e(r)}finally{o.f()}}return"".concat(s," ").concat(n.join(", "))},call:function(r){var t=Yr(r.expr);return"".concat("CALL"," ").concat(t)},desc:function(r){var t=r.type,e=r.table,n=lr(t);return"".concat(n," ").concat(ar(e))},set:function(r){var t=Yr(r.expr);return"".concat("SET"," ").concat(t)},lock:Rr,unlock:Rr,show:_r};function gr(r){for(var t=Or[r.type],e=[t(r)],n=r,s=n._orderby,u=n._limit;r._next;){var o=lr(r.set_op);e.push(o,t(r._next)),r=r._next}return e.push(Wr(s,"order by"),T(u)),e.filter(cr).join(" ")}function xr(r){var t=r.with,e=r.parentheses,n=r.select,s=r.orderby,u=r.limit,o=[m(t),e&&"(",gr(n),e&&")"];return o.push(Wr(s,"order by"),T(u)),o.filter((function(r){return r})).join(" ")}function Ur(r){return function(r){if(Array.isArray(r))return Mr(r)}(r)||function(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return Mr(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return Mr(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Mr(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function kr(r){if(!r)return[];var t,e,n,u,o=r.resource;switch(o){case"column":return W(r);case"index":return e=[],n=(t=r).keyword,u=t.index,e.push(lr(n)),e.push(u),e.push.apply(e,s(l(t))),e.filter(cr).join(" ");case"constraint":return b(r);case"sequence":return[lr(r.prefix),Yr(r.value)].filter(cr).join(" ");default:throw new Error("unknown resource = ".concat(o," type"))}}function Dr(r){if(!r)return"";var t=r.action,e=r.create_definitions,n=r.first_after,s=r.if_not_exists,u=r.keyword,o=r.old_column,a=r.prefix,i=r.resource,c=r.symbol,f="",b=[];switch(i){case"column":b=[W(r)];break;case"index":b=l(r),f=r[i];break;case"table":f=ar(r[i]);break;case"algorithm":case"lock":case"table-option":f=[c,lr(r[i])].filter(cr).join(" ");break;case"constraint":f=ar(r[i]),b=[kr(e)];break;case"key":f=ar(r[i]);break;default:f=[c,r[i]].filter((function(r){return null!==r})).join(" ")}return[lr(t),lr(u),lr(s),o&&H(o),lr(a),f&&f.trim(),b.filter(cr).join(" "),n&&"".concat(lr(n.keyword)," ").concat(H(n.column))].filter(cr).join(" ")}function $r(r){return($r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}function Pr(r){var t=r.expr_list;switch(lr(r.type)){case"STRUCT":return"(".concat(K(t),")");case"ARRAY":return function(r){var t=r.array_path,e=r.brackets,n=r.expr_list,s=r.parentheses;if(!n)return"[".concat(K(t),"]");if(Array.isArray(n))return"[".concat(n.map((function(r){return"(".concat(K(r),")")})).filter(cr).join(", "),"]");var u=Yr(n);return e?"[".concat(u,"]"):s?"(".concat(u,")"):u}(r);default:return""}}function Fr(r){var t=r.definition,e=[lr(r.keyword)];return t&&"object"===$r(t)&&(e.length=0,e.push(Cr(t))),e.push(Pr(r)),e.filter(cr).join("")}function Gr(r){return(Gr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}Or.bigquery=xr;var Hr={alter:Dr,aggr_func:function(r){var t=r.args,e=r.filter,n=r.over,s=r.within_group_orderby,u=Yr(t.expr),o=r.name,a=d(n);if(t.distinct){var i=" ",l=["DISTINCT","",u];t.parentheses&&(i="",l[1]="(",l.push(")")),u=l.filter(cr).join(i)}t.orderby&&(u="".concat(u," ").concat(Wr(t.orderby,"order by"))),t.separator&&(u=[u,lr(t.separator.keyword),fr(t.separator.value)].filter(cr).join(" "));var c=s?"WITHIN GROUP (".concat(Wr(s,"order by"),")"):"",f=e?"FILTER (WHERE ".concat(Yr(e.where),")"):"";return["".concat(o,"(").concat(u,")"),c,a,f].filter(cr).join(" ")},any_value:function(r){var t=r.args,e=r.type,n=r.over,s=t.expr,u=t.having,o="".concat(lr(e),"(").concat(Yr(s));return u&&(o="".concat(o," HAVING ").concat(lr(u.prefix)," ").concat(Yr(u.expr))),[o="".concat(o,")"),d(n)].filter(cr).join(" ")},window_func:function(r){var t=r.over;return[C(r),d(t)].filter(cr).join(" ")},array:Fr,assign:function(r){var t=r.left,e=r.right,n=r.symbol,s=r.keyword;t.keyword=s;var u=Yr(t),o=Yr(e);return"".concat(u," ").concat(n," ").concat(o)},binary_expr:E,case:function(r){var t=["CASE"],e=r.args;r.expr&&t.push(Yr(r.expr));for(var n=0,s=e.length;n<s;++n)t.push(e[n].type.toUpperCase()),e[n].cond&&(t.push(Yr(e[n].cond)),t.push("THEN")),t.push(Yr(e[n].result));return t.push("END"),t.join(" ")},cast:p,column_ref:H,datatype:Lr,extract:function(r){var t=r.args,e=r.type,n=t.field,s=t.cast_type,u=t.source,o=["".concat(lr(e),"(").concat(lr(n)),"FROM",lr(s),Yr(u)];return"".concat(o.filter(cr).join(" "),")")},fulltext_search:function(r){var t=r.against,e=r.as,n=r.columns,s=r.match,u=r.mode;return[[lr(s),"(".concat(n.map((function(r){return H(r)})).join(", "),")")].join(" "),[lr(t),["(",Yr(r.expr),u&&" ".concat(fr(u)),")"].filter(cr).join("")].join(" "),X(e)].filter(cr).join(" ")},function:w,insert:gr,interval:function(r){var t=r.expr,e=r.unit;return["INTERVAL",Yr(t),lr(e)].filter(cr).join(" ")},show:_r,struct:Fr,unnest:U,window:function(r){return r.expr.map(L).join(", ")}};function jr(r){var t=r.prefix,e=void 0===t?"@":t,n=r.name,s=r.members,u=r.keyword,o=r.quoted,a=r.suffix,i=[];u&&i.push(u);var l=s&&s.length>0?"".concat(n,".").concat(s.join(".")):n,c="".concat(e||"").concat(l);return a&&(c+=a),i.push(c),[o,i.join(" "),o].filter(cr).join("")}function Yr(r){if(r){var t=r;if(r.ast){var e=t.ast;Reflect.deleteProperty(t,e);for(var n=0,s=Object.keys(e);n<s.length;n++){var u=s[n];t[u]=e[u]}}return Hr[t.type]?Hr[t.type](t):fr(t)}}function Br(r){return r?r.map(Yr):[]}function Wr(r,t){if(!Array.isArray(r))return"";var e=[],n=lr(t);switch(n){case"ORDER BY":e=r.map((function(r){return[Yr(r.expr),r.type,lr(r.nulls)].filter(cr).join(" ")}));break;case"PARTITION BY":default:e=r.map((function(r){return Yr(r.expr)}))}return J(n,e.join(", "))}Hr.var=jr,Hr.expr_list=function(r){var t=Br(r.value);return r.parentheses?"(".concat(t.join(", "),")"):t},Hr.select=function(r){var t="object"===Gr(r._next)?gr(r):N(r);return r.parentheses?"(".concat(t,")"):t},Hr.unary_expr=function(r){var t=r.operator,e=r.parentheses,n=r.expr,s="-"===t||"+"===t?"":" ",u="".concat(t).concat(s).concat(Yr(n));return e?"(".concat(u,")"):u};var Xr=e(1),Vr=e(2),Kr=e(3),qr=e(4),Zr=e(5),zr=e(6),Qr=e(7),Jr=e(8),rt=e(9),tt={bigquery:Xr.parse,db2:Vr.parse,hive:Kr.parse,mysql:qr.parse,mariadb:Zr.parse,postgresql:zr.parse,sqlite:Qr.parse,transactsql:Jr.parse,flinksql:rt.parse},et=["analyze","attach","select","deallocate","delete","exec","update","insert","drop","rename","truncate","call","desc","use","alter","set","create","lock","unlock","bigquery","declare","show","replace"];function nt(r){var t=r&&r.ast?r.ast:r;if(!et.includes(t.type))throw new Error("".concat(t.type," statements not supported at the moment"))}function st(r){return Array.isArray(r)?(r.forEach(nt),function(r){for(var t=[],e=0,n=r.length;e<n;++e){var s=r[e]&&r[e].ast?r[e].ast:r[e];t.push(gr(s))}return t.join(" ; ")}(r)):(nt(r),"bigquery"===r.type?xr(r):gr(r))}function ut(r){return"go"===r.go?function r(t){if(!t||0===t.length)return"";var e=[st(t.ast)];return t.go_next&&e.push(t.go.toUpperCase(),r(t.go_next)),e.filter((function(r){return r})).join(" ")}(r):st(r)}function ot(r,t){var e="undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(!e){if(Array.isArray(r)||(e=function(r,t){if(!r)return;if("string"==typeof r)return at(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return at(r,t)}(r))||t&&r&&"number"==typeof r.length){e&&(r=e);var n=0,s=function(){};return{s:s,n:function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}},e:function(r){throw r},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var u,o=!0,a=!1;return{s:function(){e=e.call(r)},n:function(){var r=e.next();return o=r.done,r},e:function(r){a=!0,u=r},f:function(){try{o||null==e.return||e.return()}finally{if(a)throw u}}}}function at(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function it(r,t){for(var e=0;e<t.length;e++){var n=t[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(r,n.key,n)}}var lt=function(){function r(){!function(r,t){if(!(r instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r)}var t,e,n;return t=r,(e=[{key:"astify",value:function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Z,e=this.parse(r,t);return e&&e.ast}},{key:"sqlify",value:function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Z;return sr(t),ut(r)}},{key:"exprToSQL",value:function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Z;return sr(t),Yr(r)}},{key:"parse",value:function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Z,e=t.database,n=void 0===e?"mysql":e;sr(t);var s=n.toLowerCase();if(tt[s])return tt[s](r.trim());throw new Error("".concat(n," is not supported currently"))}},{key:"whiteListCheck",value:function(r,t){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Z;if(t&&0!==t.length){var n=e.type,s=void 0===n?"table":n;if(!this["".concat(s,"List")]||"function"!=typeof this["".concat(s,"List")])throw new Error("".concat(s," is not valid check mode"));var u,o=this["".concat(s,"List")].bind(this),a=o(r,e),i=!0,l="",c=ot(a);try{for(c.s();!(u=c.n()).done;){var f,b=u.value,v=!1,L=ot(t);try{for(L.s();!(f=L.n()).done;){var C=f.value,d=new RegExp(C,"i");if(d.test(b)){v=!0;break}}}catch(r){L.e(r)}finally{L.f()}if(!v){l=b,i=!1;break}}}catch(r){c.e(r)}finally{c.f()}if(!i)throw new Error("authority = '".concat(l,"' is required in ").concat(s," whiteList to execute SQL = '").concat(r,"'"))}}},{key:"tableList",value:function(r,t){var e=this.parse(r,t);return e&&e.tableList}},{key:"columnList",value:function(r,t){var e=this.parse(r,t);return e&&e.columnList}}])&&it(t.prototype,e),n&&it(t,n),Object.defineProperty(t,"prototype",{writable:!1}),r}();!global&&window&&(window.global=window),global&&global.window&&(global.window.NodeSQLParser={Parser:lt,util:n})}]));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 2920:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(5747)
const stripBom = __nccwpck_require__(8545)
const yaml = __nccwpck_require__(1917)

const parse = data => yaml.load(stripBom(data))

const readYamlFile = fp => fs.promises.readFile(fp, 'utf8').then(data => parse(data))

module.exports = readYamlFile
module.exports.default = readYamlFile
module.exports.sync = fp => parse(fs.readFileSync(fp, 'utf8'))


/***/ }),

/***/ 8545:
/***/ ((module) => {

"use strict";


module.exports = string => {
	if (typeof string !== 'string') {
		throw new TypeError(`Expected a string, got ${typeof string}`);
	}

	// Catches EFBBBF (UTF-8 BOM) because the buffer-to-string
	// conversion translates it to FEFF (UTF-16 BOM)
	if (string.charCodeAt(0) === 0xFEFF) {
		return string.slice(1);
	}

	return string;
};


/***/ }),

/***/ 4294:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = __nccwpck_require__(4219);


/***/ }),

/***/ 4219:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


var net = __nccwpck_require__(1631);
var tls = __nccwpck_require__(4016);
var http = __nccwpck_require__(8605);
var https = __nccwpck_require__(7211);
var events = __nccwpck_require__(8614);
var assert = __nccwpck_require__(2357);
var util = __nccwpck_require__(1669);


exports.httpOverHttp = httpOverHttp;
exports.httpsOverHttp = httpsOverHttp;
exports.httpOverHttps = httpOverHttps;
exports.httpsOverHttps = httpsOverHttps;


function httpOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  return agent;
}

function httpsOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}

function httpOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  return agent;
}

function httpsOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}


function TunnelingAgent(options) {
  var self = this;
  self.options = options || {};
  self.proxyOptions = self.options.proxy || {};
  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;
  self.requests = [];
  self.sockets = [];

  self.on('free', function onFree(socket, host, port, localAddress) {
    var options = toOptions(host, port, localAddress);
    for (var i = 0, len = self.requests.length; i < len; ++i) {
      var pending = self.requests[i];
      if (pending.host === options.host && pending.port === options.port) {
        // Detect the request to connect same origin server,
        // reuse the connection.
        self.requests.splice(i, 1);
        pending.request.onSocket(socket);
        return;
      }
    }
    socket.destroy();
    self.removeSocket(socket);
  });
}
util.inherits(TunnelingAgent, events.EventEmitter);

TunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {
  var self = this;
  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));

  if (self.sockets.length >= this.maxSockets) {
    // We are over limit so we'll add it to the queue.
    self.requests.push(options);
    return;
  }

  // If we are under maxSockets create a new one.
  self.createSocket(options, function(socket) {
    socket.on('free', onFree);
    socket.on('close', onCloseOrRemove);
    socket.on('agentRemove', onCloseOrRemove);
    req.onSocket(socket);

    function onFree() {
      self.emit('free', socket, options);
    }

    function onCloseOrRemove(err) {
      self.removeSocket(socket);
      socket.removeListener('free', onFree);
      socket.removeListener('close', onCloseOrRemove);
      socket.removeListener('agentRemove', onCloseOrRemove);
    }
  });
};

TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
  var self = this;
  var placeholder = {};
  self.sockets.push(placeholder);

  var connectOptions = mergeOptions({}, self.proxyOptions, {
    method: 'CONNECT',
    path: options.host + ':' + options.port,
    agent: false,
    headers: {
      host: options.host + ':' + options.port
    }
  });
  if (options.localAddress) {
    connectOptions.localAddress = options.localAddress;
  }
  if (connectOptions.proxyAuth) {
    connectOptions.headers = connectOptions.headers || {};
    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +
        new Buffer(connectOptions.proxyAuth).toString('base64');
  }

  debug('making CONNECT request');
  var connectReq = self.request(connectOptions);
  connectReq.useChunkedEncodingByDefault = false; // for v0.6
  connectReq.once('response', onResponse); // for v0.6
  connectReq.once('upgrade', onUpgrade);   // for v0.6
  connectReq.once('connect', onConnect);   // for v0.7 or later
  connectReq.once('error', onError);
  connectReq.end();

  function onResponse(res) {
    // Very hacky. This is necessary to avoid http-parser leaks.
    res.upgrade = true;
  }

  function onUpgrade(res, socket, head) {
    // Hacky.
    process.nextTick(function() {
      onConnect(res, socket, head);
    });
  }

  function onConnect(res, socket, head) {
    connectReq.removeAllListeners();
    socket.removeAllListeners();

    if (res.statusCode !== 200) {
      debug('tunneling socket could not be established, statusCode=%d',
        res.statusCode);
      socket.destroy();
      var error = new Error('tunneling socket could not be established, ' +
        'statusCode=' + res.statusCode);
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    if (head.length > 0) {
      debug('got illegal response body from proxy');
      socket.destroy();
      var error = new Error('got illegal response body from proxy');
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    debug('tunneling connection has established');
    self.sockets[self.sockets.indexOf(placeholder)] = socket;
    return cb(socket);
  }

  function onError(cause) {
    connectReq.removeAllListeners();

    debug('tunneling socket could not be established, cause=%s\n',
          cause.message, cause.stack);
    var error = new Error('tunneling socket could not be established, ' +
                          'cause=' + cause.message);
    error.code = 'ECONNRESET';
    options.request.emit('error', error);
    self.removeSocket(placeholder);
  }
};

TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
  var pos = this.sockets.indexOf(socket)
  if (pos === -1) {
    return;
  }
  this.sockets.splice(pos, 1);

  var pending = this.requests.shift();
  if (pending) {
    // If we have pending requests and a socket gets closed a new one
    // needs to be created to take over in the pool for the one that closed.
    this.createSocket(pending, function(socket) {
      pending.request.onSocket(socket);
    });
  }
};

function createSecureSocket(options, cb) {
  var self = this;
  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {
    var hostHeader = options.request.getHeader('host');
    var tlsOptions = mergeOptions({}, self.options, {
      socket: socket,
      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host
    });

    // 0 is dummy port for v0.6
    var secureSocket = tls.connect(0, tlsOptions);
    self.sockets[self.sockets.indexOf(socket)] = secureSocket;
    cb(secureSocket);
  });
}


function toOptions(host, port, localAddress) {
  if (typeof host === 'string') { // since v0.10
    return {
      host: host,
      port: port,
      localAddress: localAddress
    };
  }
  return host; // for v0.11 or later
}

function mergeOptions(target) {
  for (var i = 1, len = arguments.length; i < len; ++i) {
    var overrides = arguments[i];
    if (typeof overrides === 'object') {
      var keys = Object.keys(overrides);
      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
        var k = keys[j];
        if (overrides[k] !== undefined) {
          target[k] = overrides[k];
        }
      }
    }
  }
  return target;
}


var debug;
if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
  debug = function() {
    var args = Array.prototype.slice.call(arguments);
    if (typeof args[0] === 'string') {
      args[0] = 'TUNNEL: ' + args[0];
    } else {
      args.unshift('TUNNEL:');
    }
    console.error.apply(console, args);
  }
} else {
  debug = function() {};
}
exports.debug = debug; // for test


/***/ }),

/***/ 5840:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "v1", ({
  enumerable: true,
  get: function () {
    return _v.default;
  }
}));
Object.defineProperty(exports, "v3", ({
  enumerable: true,
  get: function () {
    return _v2.default;
  }
}));
Object.defineProperty(exports, "v4", ({
  enumerable: true,
  get: function () {
    return _v3.default;
  }
}));
Object.defineProperty(exports, "v5", ({
  enumerable: true,
  get: function () {
    return _v4.default;
  }
}));
Object.defineProperty(exports, "NIL", ({
  enumerable: true,
  get: function () {
    return _nil.default;
  }
}));
Object.defineProperty(exports, "version", ({
  enumerable: true,
  get: function () {
    return _version.default;
  }
}));
Object.defineProperty(exports, "validate", ({
  enumerable: true,
  get: function () {
    return _validate.default;
  }
}));
Object.defineProperty(exports, "stringify", ({
  enumerable: true,
  get: function () {
    return _stringify.default;
  }
}));
Object.defineProperty(exports, "parse", ({
  enumerable: true,
  get: function () {
    return _parse.default;
  }
}));

var _v = _interopRequireDefault(__nccwpck_require__(8628));

var _v2 = _interopRequireDefault(__nccwpck_require__(6409));

var _v3 = _interopRequireDefault(__nccwpck_require__(5122));

var _v4 = _interopRequireDefault(__nccwpck_require__(9120));

var _nil = _interopRequireDefault(__nccwpck_require__(5332));

var _version = _interopRequireDefault(__nccwpck_require__(1595));

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

var _parse = _interopRequireDefault(__nccwpck_require__(2746));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),

/***/ 4569:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _crypto = _interopRequireDefault(__nccwpck_require__(6417));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function md5(bytes) {
  if (Array.isArray(bytes)) {
    bytes = Buffer.from(bytes);
  } else if (typeof bytes === 'string') {
    bytes = Buffer.from(bytes, 'utf8');
  }

  return _crypto.default.createHash('md5').update(bytes).digest();
}

var _default = md5;
exports.default = _default;

/***/ }),

/***/ 5332:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;
var _default = '00000000-0000-0000-0000-000000000000';
exports.default = _default;

/***/ }),

/***/ 2746:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parse(uuid) {
  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Invalid UUID');
  }

  let v;
  const arr = new Uint8Array(16); // Parse ########-....-....-....-............

  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;
  arr[1] = v >>> 16 & 0xff;
  arr[2] = v >>> 8 & 0xff;
  arr[3] = v & 0xff; // Parse ........-####-....-....-............

  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;
  arr[5] = v & 0xff; // Parse ........-....-####-....-............

  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;
  arr[7] = v & 0xff; // Parse ........-....-....-####-............

  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;
  arr[9] = v & 0xff; // Parse ........-....-....-....-############
  // (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)

  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;
  arr[11] = v / 0x100000000 & 0xff;
  arr[12] = v >>> 24 & 0xff;
  arr[13] = v >>> 16 & 0xff;
  arr[14] = v >>> 8 & 0xff;
  arr[15] = v & 0xff;
  return arr;
}

var _default = parse;
exports.default = _default;

/***/ }),

/***/ 814:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;
var _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
exports.default = _default;

/***/ }),

/***/ 807:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = rng;

var _crypto = _interopRequireDefault(__nccwpck_require__(6417));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate

let poolPtr = rnds8Pool.length;

function rng() {
  if (poolPtr > rnds8Pool.length - 16) {
    _crypto.default.randomFillSync(rnds8Pool);

    poolPtr = 0;
  }

  return rnds8Pool.slice(poolPtr, poolPtr += 16);
}

/***/ }),

/***/ 5274:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _crypto = _interopRequireDefault(__nccwpck_require__(6417));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function sha1(bytes) {
  if (Array.isArray(bytes)) {
    bytes = Buffer.from(bytes);
  } else if (typeof bytes === 'string') {
    bytes = Buffer.from(bytes, 'utf8');
  }

  return _crypto.default.createHash('sha1').update(bytes).digest();
}

var _default = sha1;
exports.default = _default;

/***/ }),

/***/ 8950:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */
const byteToHex = [];

for (let i = 0; i < 256; ++i) {
  byteToHex.push((i + 0x100).toString(16).substr(1));
}

function stringify(arr, offset = 0) {
  // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
  // of the following:
  // - One or more input array values don't map to a hex octet (leading to
  // "undefined" in the uuid)
  // - Invalid input values for the RFC `version` or `variant` fields

  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Stringified UUID is invalid');
  }

  return uuid;
}

var _default = stringify;
exports.default = _default;

/***/ }),

/***/ 8628:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _rng = _interopRequireDefault(__nccwpck_require__(807));

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html
let _nodeId;

let _clockseq; // Previous uuid creation time


let _lastMSecs = 0;
let _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details

function v1(options, buf, offset) {
  let i = buf && offset || 0;
  const b = buf || new Array(16);
  options = options || {};
  let node = options.node || _nodeId;
  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189

  if (node == null || clockseq == null) {
    const seedBytes = options.random || (options.rng || _rng.default)();

    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
    }

    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.


  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock

  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval


  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  } // Per 4.2.1.2 Throw error if too many uuids are requested


  if (nsecs >= 10000) {
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

  msecs += 12219292800000; // `time_low`

  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff; // `time_mid`

  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff; // `time_high_and_version`

  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

  b[i++] = clockseq & 0xff; // `node`

  for (let n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf || (0, _stringify.default)(b);
}

var _default = v1;
exports.default = _default;

/***/ }),

/***/ 6409:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _v = _interopRequireDefault(__nccwpck_require__(5998));

var _md = _interopRequireDefault(__nccwpck_require__(4569));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const v3 = (0, _v.default)('v3', 0x30, _md.default);
var _default = v3;
exports.default = _default;

/***/ }),

/***/ 5998:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = _default;
exports.URL = exports.DNS = void 0;

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

var _parse = _interopRequireDefault(__nccwpck_require__(2746));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stringToBytes(str) {
  str = unescape(encodeURIComponent(str)); // UTF8 escape

  const bytes = [];

  for (let i = 0; i < str.length; ++i) {
    bytes.push(str.charCodeAt(i));
  }

  return bytes;
}

const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
exports.DNS = DNS;
const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
exports.URL = URL;

function _default(name, version, hashfunc) {
  function generateUUID(value, namespace, buf, offset) {
    if (typeof value === 'string') {
      value = stringToBytes(value);
    }

    if (typeof namespace === 'string') {
      namespace = (0, _parse.default)(namespace);
    }

    if (namespace.length !== 16) {
      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');
    } // Compute hash of namespace and value, Per 4.3
    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =
    // hashfunc([...namespace, ... value])`


    let bytes = new Uint8Array(16 + value.length);
    bytes.set(namespace);
    bytes.set(value, namespace.length);
    bytes = hashfunc(bytes);
    bytes[6] = bytes[6] & 0x0f | version;
    bytes[8] = bytes[8] & 0x3f | 0x80;

    if (buf) {
      offset = offset || 0;

      for (let i = 0; i < 16; ++i) {
        buf[offset + i] = bytes[i];
      }

      return buf;
    }

    return (0, _stringify.default)(bytes);
  } // Function#name is not settable on some platforms (#270)


  try {
    generateUUID.name = name; // eslint-disable-next-line no-empty
  } catch (err) {} // For CommonJS default export support


  generateUUID.DNS = DNS;
  generateUUID.URL = URL;
  return generateUUID;
}

/***/ }),

/***/ 5122:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _rng = _interopRequireDefault(__nccwpck_require__(807));

var _stringify = _interopRequireDefault(__nccwpck_require__(8950));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function v4(options, buf, offset) {
  options = options || {};

  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`


  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    offset = offset || 0;

    for (let i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }

    return buf;
  }

  return (0, _stringify.default)(rnds);
}

var _default = v4;
exports.default = _default;

/***/ }),

/***/ 9120:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _v = _interopRequireDefault(__nccwpck_require__(5998));

var _sha = _interopRequireDefault(__nccwpck_require__(5274));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const v5 = (0, _v.default)('v5', 0x50, _sha.default);
var _default = v5;
exports.default = _default;

/***/ }),

/***/ 6900:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _regex = _interopRequireDefault(__nccwpck_require__(814));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function validate(uuid) {
  return typeof uuid === 'string' && _regex.default.test(uuid);
}

var _default = validate;
exports.default = _default;

/***/ }),

/***/ 1595:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _validate = _interopRequireDefault(__nccwpck_require__(6900));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function version(uuid) {
  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Invalid UUID');
  }

  return parseInt(uuid.substr(14, 1), 16);
}

var _default = version;
exports.default = _default;

/***/ }),

/***/ 2357:
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ 6417:
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ 8614:
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ 5747:
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ 8605:
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ 7211:
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ 1631:
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ 2087:
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ 5622:
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ 4016:
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ 1669:
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nccwpck_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nccwpck_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__nccwpck_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	if (typeof __nccwpck_require__ !== 'undefined') __nccwpck_require__.ab = __dirname + "/";
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __nccwpck_require__(3109);
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;
//# sourceMappingURL=index.js.map